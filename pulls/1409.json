{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409",
    "id": 1484823514,
    "node_id": "PR_kwDOAP4Jqs5YgJva",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1409.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1409.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1409",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1409/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
    "number": 1409,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "ci: Move remained task from Cirrus to GitHub Actions",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR concludes the migration from Cirrus CI to GitHub Actions.",
    "labels": [
      {
        "id": 4975349089,
        "node_id": "LA_kwDOAP4Jqs8AAAABKI3NYQ",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/ci",
        "name": "ci",
        "description": "",
        "color": "006B75",
        "default": false
      }
    ],
    "created_at": "2023-08-22T13:58:55Z",
    "updated_at": "2023-08-22T15:24:08Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "fb0627984979fd11554285cf3193eb5c9a343717",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "hebasto:230821-gha-all",
      "ref": "230821-gha-all",
      "sha": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 434588155,
        "node_id": "R_kgDOGedJ-w",
        "name": "secp256k1",
        "full_name": "hebasto/secp256k1",
        "owner": {
          "login": "hebasto",
          "id": 32963518,
          "node_id": "MDQ6VXNlcjMyOTYzNTE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hebasto",
          "html_url": "https://github.com/hebasto",
          "followers_url": "https://api.github.com/users/hebasto/followers",
          "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
          "organizations_url": "https://api.github.com/users/hebasto/orgs",
          "repos_url": "https://api.github.com/users/hebasto/repos",
          "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hebasto/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hebasto/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/hebasto/secp256k1",
        "archive_url": "https://api.github.com/repos/hebasto/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hebasto/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hebasto/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hebasto/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hebasto/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hebasto/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hebasto/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hebasto/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hebasto/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hebasto/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/hebasto/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/hebasto/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/hebasto/secp256k1/events",
        "forks_url": "https://api.github.com/repos/hebasto/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/hebasto/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hebasto/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hebasto/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hebasto/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/hebasto/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hebasto/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hebasto/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hebasto/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hebasto/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hebasto/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/hebasto/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/hebasto/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hebasto/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hebasto/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hebasto/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:hebasto/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/hebasto/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/hebasto/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hebasto/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/hebasto/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/hebasto/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/hebasto/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/hebasto/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hebasto/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/hebasto/secp256k1/hooks",
        "svn_url": "https://github.com/hebasto/secp256k1",
        "language": "C",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 11134,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-22T14:05:41Z",
        "created_at": "2021-12-03T12:27:02Z",
        "updated_at": "2023-05-05T16:09:11Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "6ee14550c8f56a72adbaf6a203b4b63fe08ca57f",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 981,
        "stargazers_count": 1817,
        "watchers_count": 1817,
        "size": 10561,
        "default_branch": "master",
        "open_issues_count": 141,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-22T14:04:44Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-08-22T02:00:20Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 196,
    "deletions": 159,
    "changed_files": 2,
    "commits": 4,
    "review_comments": 5,
    "comments": 0
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDgxOTljZDI5ZjZlMDQ1NmNmMjJmZDYxMDI3M2NmNGNjYTEyOTNhZTI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/8199cd29f6e0456cf22fd610273cf4cca1293ae2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/8199cd29f6e0456cf22fd610273cf4cca1293ae2",
      "tree": {
        "sha": "330a652f91be94d208cce809e6218de3111f7330",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/330a652f91be94d208cce809e6218de3111f7330"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 330a652f91be94d208cce809e6218de3111f7330\nparent 6ee14550c8f56a72adbaf6a203b4b63fe08ca57f\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692710090 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692710090 +0100\n\nci: Move sanitizers task from Cirrus to GitHub Actions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmTktMoACgkQQQEIES5+\nqB/Fqw//SGnuRtNTlN6M6994HQjUi5UI4oFapAeK2O0iTjrFRgOV+NhvyXTTwO3w\nUF3TMlj5ZPQG9Ko2H7o+NCVVObwdL9vPHElgJKN1XCJPaO7/sbjydEhWPjp1vTd9\n7M/dM010Ri9j/BknBaXVh2ys9lR1k7PjyYekkDiWAKg2eZyBWurSEB6mk2fgabPI\nzCv0UCYXTU6CMBOELTP+TCtCeD3ezyMJxa05x6dcknv6gJLPfFz7R541RV1Wd/FY\njWnt6vVZDqSIUg9W2HsALe9Bz4LLGcSWx4WZmYYfIGlirw2mp66GoD1hxnZ5FAcs\nb9lGQWLIHO5d39ZXR1Gt+DjNRIbTocUeE0OiaQDc5+W+DaMDLruUb4yq/5B1//Jn\n+949gFicMHg/EZ0Ejr3Qz2dwW2Zng1NcDMzpspVb9WV7+9Vrt9lvbASAk+aa8xQt\n4oor9x6me8RWWrrqFyQT1fa4W3jnLIyGjf2JGgUHLyJ9unIxod/Cn7KfbFiLGUF3\nZc+w5gp/SrJ3FhUJaeG56ojFwuydK6RKs69ptNa/x8nh0pGGjxyT+0kVOE5Mdp2L\n+LSiyvSgoEPhiJ/rCEkn9vfRaz0Ax6TaURmS1J4kkGKy1UquYkKzzos5IgpkML6b\nLGr3XYw/sETw0LEZx82SK8LrfNeh/moJNw0YHn35SYDpRpLXoFs=\n=vvs+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/6ee14550c8f56a72adbaf6a203b4b63fe08ca57f",
          "sha": "6ee14550c8f56a72adbaf6a203b4b63fe08ca57f",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/6ee14550c8f56a72adbaf6a203b4b63fe08ca57f"
        }
      ],
      "message": "ci: Move sanitizers task from Cirrus to GitHub Actions",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-22T13:14:50Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-22T13:14:50Z"
      },
      "sha": "8199cd29f6e0456cf22fd610273cf4cca1293ae2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDkyYmU0NDZmOTRmYmYwNjEwMDk4YjE1N2RjNjY4NDNiZDNhOTVjMjI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/92be446f94fbf0610098b157dc66843bd3a95c22",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/92be446f94fbf0610098b157dc66843bd3a95c22",
      "tree": {
        "sha": "609c843dd4ba5c11890a277deced41b9ca8f66cb",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/609c843dd4ba5c11890a277deced41b9ca8f66cb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 609c843dd4ba5c11890a277deced41b9ca8f66cb\nparent 8199cd29f6e0456cf22fd610273cf4cca1293ae2\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692711502 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692711502 +0100\n\nci: Move \"MSan\" from Cirrus to GitHub Actions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmTkuk4ACgkQQQEIES5+\nqB8oGxAAui2/EsQAdv1217qU5oUY3vwDeC7e+3M/XnPxdUdpt9V93lakGEt5bTlq\nn1JWZCa395tZS4NLzPFpyGKz3pX4AgwQX+xBYtaDVdan7gTb/IQBUHLdoPiCN3o7\nNW+n1TGZ3VR3k2fSf1txfjA/GuKOrikVnyFiZQ9qANXvXWstZJMTYODwe5WGc4SV\n4QxK4WgPVLSsiU++UCk4WOEMmcw0eprQrUWWkcnXbjiazj59aUm6xbblz3EP0vfv\nUCHcsgRl7DwZgkEWi2MCy8WgMXVnxOidJDuSPm7oZ+U+Td9OsiWNoULYDCvBS5KX\n8PKng35VzLg76Pcz7hMj8Eo1C2HysPtQbH77TSU+G8g4OWJ1AaidduyPQU9JlIAS\nE1KnDmQkHtacoeFLWRuQwDvSWaCIBKkwZRDk0Hfmt6Q/iYqA/9C3RXFn2TiVwtH2\nmIG7iA7a+sGfXG9Fbr7jyepJsscHMQ6GFJnevNYTnp/hSCEsZRYxs40x08qWWpC9\n1OVJWTc9yKs/zgSyBy0InJrASGTOEI9aVtQeSoCXVbA3Vgcurp6SFz5+q/mwVdMe\nK9Y8Qj3tq5frpNjrQxsq48IFVyLcz/bPugmRjH40cxe1uN/xip12wbbykCUm0YOo\nGkBADyqsIZtMf0sti7GEG6eWoU2dt1WxAvi3D1502c9KoGKaOAE=\n=idPY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/8199cd29f6e0456cf22fd610273cf4cca1293ae2",
          "sha": "8199cd29f6e0456cf22fd610273cf4cca1293ae2",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/8199cd29f6e0456cf22fd610273cf4cca1293ae2"
        }
      ],
      "message": "ci: Move \"MSan\" from Cirrus to GitHub Actions",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-22T13:38:22Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-22T13:38:22Z"
      },
      "sha": "92be446f94fbf0610098b157dc66843bd3a95c22"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDAwYTA0NDk0ZWNkNTk4MDIwNmZhOTU2ODFhY2M1MWQyMzFiNDY1ZjE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/00a04494ecd5980206fa95681acc51d231b465f1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/00a04494ecd5980206fa95681acc51d231b465f1",
      "tree": {
        "sha": "85b7e9548110eb885e555ce2e8ba7442cfed907f",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/85b7e9548110eb885e555ce2e8ba7442cfed907f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 85b7e9548110eb885e555ce2e8ba7442cfed907f\nparent 92be446f94fbf0610098b157dc66843bd3a95c22\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692712081 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692712081 +0100\n\nci: Move \"C++ -fpermissive...\" from Cirrus to GitHub Actions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmTkvJEACgkQQQEIES5+\nqB94/BAAo707l0EbHnuu/ovJLKXlg69Hgx2Iiv7Tevrb2wf3mhanwxLVTpdeyHnM\nyFsUtTEdg6oIQ83/KOUmRcWulqdzemDFc2ibBBbOTPwfoW2WDuXCRtFBqm/eUbMu\n5nV7AbDLXQByduK2lBL/0l8ja3A7QKm66PjwwovuVc+95xalLy5EfwE7/iZA9epb\nL83/kciLPNEiryQnevsxrRxy3PaEBtjGkvvhue3UT5lW372muEnhmlQJ+hRS8yEo\nN6waKPLvVMlcdnW05IxCzuM6ely77x10GsrKQu9XfE7ZWh/QfYzS4iXvb4jAcCJi\nDD7kydJ1b1R/KScwBliPJ8LA0X3fo8qp/xv534P3xJ0h43yjfH4WgIF9Gvah5QUS\nF+GwNBXlf+qwMFJJ3j/fu3tHXOo+Z5srD5Dmmu3+zmYFiRRe6Z8YcjjO2o5Eds+r\naxLFvfYpWLRly0VoQqWdmcnmZfiD5BrqHkPQb4da91VmawdyitMeJ4os04szHhKq\nt2TK8+U1LWZd688p/PKOYUhtqoOmn7PqR018+FHkampdOLr6SyzNlx6VdoP4SSiG\nAQtVDie85IsiXW17t8Hpv3BdQOqOjuXfHVBEngzABfyAQ+rmNLoWAhvvrdeBpa/j\nB9QrW1w0ipdy89s2qXC3g8WO8lAOCQ39TEZoOqzDu/Mjm3jEC+8=\n=LOhi\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/92be446f94fbf0610098b157dc66843bd3a95c22",
          "sha": "92be446f94fbf0610098b157dc66843bd3a95c22",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/92be446f94fbf0610098b157dc66843bd3a95c22"
        }
      ],
      "message": "ci: Move \"C++ -fpermissive...\" from Cirrus to GitHub Actions",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-22T13:48:01Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-22T13:48:01Z"
      },
      "sha": "00a04494ecd5980206fa95681acc51d231b465f1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDE5NjFmMThhN2YzOTA1YzZkNzMwOGZlNWY1ZmVkZDBjZWY5ODQwYTI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "tree": {
        "sha": "781b4d68e2b3fd3b5d19ae44ed02b0bec7ec11c5",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/781b4d68e2b3fd3b5d19ae44ed02b0bec7ec11c5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 781b4d68e2b3fd3b5d19ae44ed02b0bec7ec11c5\nparent 00a04494ecd5980206fa95681acc51d231b465f1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692712522 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692712522 +0100\n\nci: Move \"C++ (public headers)\" from Cirrus to GitHub Actions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmTkvkoACgkQQQEIES5+\nqB/+Gg/+Jm/eVjPFZ78qYdLLrskgifm0k/O1i9u5RkTfByGxIhwlU2SJR14IfwtG\nq0mDMFtHADFBtVxlyzfkkYSFc/89YkzI/VWSPmMUrQfyZFYjHf1bPqM/Jdy8QwUn\nSzc+8Dnetl4ENg7DUDk27ogUf3tjoRNyqqUZdUc93UeuRKOMVik7QUXmDQLqD0KO\ndRUgKE1J7ysiQ4ee3Gu/u237HwEhaAQrWb3RLOoqMbslmmxJlEm5Qm++ZgIRAHkG\nVSeOLZBO95DWVYrv4VTiKkZq1qv6OYEr5CNQmMUwScF4wLLek92TPNEwky8hqDIN\nDL4GsCNPfeZPieOsBmUgQsrQ1wlKrSdo+b/G3RHXDXQ96i+NmBeq/oYVxdJbR8gD\nZcQSYlsBsL1VANeT8nnO2PhKeHILOhPcZeS5EcgEfRX7clN6sjooyiW1BnAu52kM\nuvdaUFntq0k5Ma9LVQBPk1hzOGYJZJxH4tNrRHGr17t1zCn6ySv9FxD26aBLNMq1\nuyhLodrudqad72rDZzT4hTwDMUPG6x7p4sTyqStBOq5KYf1dBYlj7I8DEcockUlI\n6OYuqyIO7Rja+TTvJY6e15Z1wyfc2LsWesDBVpd2jto/BeAy6g+AXipEiBWFFif+\nkmC8dCDxvXOF1ojTPU9Ikn/Um7J/byM7sYA85FlAAgFE9OuSRLo=\n=UVYa\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/00a04494ecd5980206fa95681acc51d231b465f1",
          "sha": "00a04494ecd5980206fa95681acc51d231b465f1",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/00a04494ecd5980206fa95681acc51d231b465f1"
        }
      ],
      "message": "ci: Move \"C++ (public headers)\" from Cirrus to GitHub Actions",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-22T13:55:22Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-22T13:55:22Z"
      },
      "sha": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2"
    },
    {
      "event": "labeled",
      "id": 10159677165,
      "node_id": "LE_lADOAP4Jqs5u9KjrzwAAAAJdkF7t",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/10159677165",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T14:52:10Z",
      "label": {
        "name": "ci",
        "color": "006B75"
      }
    },
    {
      "event": "reviewed",
      "id": 1589636669,
      "node_id": "PRR_kwDOAP4Jqs5ev-49",
      "url": null,
      "actor": null,
      "commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#pullrequestreview-1589636669",
      "submitted_at": "2023-08-22T15:06:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301767281",
      "pull_request_review_id": 1589636669,
      "id": 1301767281,
      "node_id": "PRRC_kwDOAP4Jqs5Nl2Rx",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          \n+\n+      - name: CI script\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&\n+            ./ci/ci.sh\n+\n+      - run: cat tests.log || true\n+        if: ${{ always() }}\n+      - run: cat noverify_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat exhaustive_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat ctime_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat bench.log || true\n+        if: ${{ always() }}\n+      - run: cat config.log || true\n+        if: ${{ always() }}\n+      - run: cat test_env.log || true\n+        if: ${{ always() }}\n+      - name: CI env\n+        run: env\n+        if: ${{ always() }}\n+\n+  msan_debian:\n+    name: \"MSan\"\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - env_vars:\n+              CFLAGS: '-fsanitize=memory -g'\n+          - env_vars:\n+              ECMULTGENPRECISION: 2\n+              ECMULTWINDOW: 2\n+              CFLAGS: '-fsanitize=memory -g -O3'\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'yes'\n+      CC: 'clang'\n+      SECP256K1_TEST_ITERS: 32\n+      ASM: 'no'\n+      WITH_VALGRIND: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: CI script\n+        env: ${{ matrix.configuration.env_vars }}\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&",
      "path": ".github/workflows/ci.yml",
      "position": 115,
      "original_position": 115,
      "commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not this PR, but now that I see this, couldn't we add this to `run-in-docker-action` to avoid duplication?\r\n\r\n(did I ask this before?)",
      "created_at": "2023-08-22T14:48:02Z",
      "updated_at": "2023-08-22T15:06:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1301767281",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301767281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 487,
      "original_line": 487,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301794501",
      "pull_request_review_id": 1589636669,
      "id": 1301794501,
      "node_id": "PRRC_kwDOAP4Jqs5Nl87F",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          ",
      "path": ".github/workflows/ci.yml",
      "position": 48,
      "original_position": 48,
      "commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A bit ugly, hm... There's no better way to merge this, I guess.\r\n\r\nI think it makes sense to split this job into two jobs \"Valgrind (memcheck)\" and \"UBSan, ASan, LSan\". Then for each of these jobs, we can expand the remaining 2x2 combinations, i.e., list the 4 resulting combinations explicitly. This is probably a good idea anyway, it will also make it a bit easier to add variety to the jobs.\r\n\r\nWhat do you think?",
      "created_at": "2023-08-22T15:05:48Z",
      "updated_at": "2023-08-22T15:06:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1301794501",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301794501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": 417,
      "original_start_line": 417,
      "start_side": "RIGHT",
      "line": 420,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301802232",
      "pull_request_review_id": 1589692954,
      "id": 1301802232,
      "node_id": "PRRC_kwDOAP4Jqs5Nl-z4",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          ",
      "path": ".github/workflows/ci.yml",
      "position": 48,
      "original_position": 48,
      "commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": 1301794501,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think it makes sense to split this job into two jobs \"Valgrind (memcheck)\" and \"UBSan, ASan, LSan\".\r\n\r\nI was thinking about the same. But it won't help.\r\n\r\nOnly one `env` property is allowed job-wide and step-wide. Job-wide `env` is already busy with global variables. Therefore, even 2 sets won't fit one step-wide `env`.",
      "created_at": "2023-08-22T15:11:23Z",
      "updated_at": "2023-08-22T15:11:24Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1301802232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301802232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": 417,
      "original_start_line": 417,
      "start_side": "RIGHT",
      "line": 420,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301804745",
      "pull_request_review_id": 1589697023,
      "id": 1301804745,
      "node_id": "PRRC_kwDOAP4Jqs5Nl_bJ",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          \n+\n+      - name: CI script\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&\n+            ./ci/ci.sh\n+\n+      - run: cat tests.log || true\n+        if: ${{ always() }}\n+      - run: cat noverify_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat exhaustive_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat ctime_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat bench.log || true\n+        if: ${{ always() }}\n+      - run: cat config.log || true\n+        if: ${{ always() }}\n+      - run: cat test_env.log || true\n+        if: ${{ always() }}\n+      - name: CI env\n+        run: env\n+        if: ${{ always() }}\n+\n+  msan_debian:\n+    name: \"MSan\"\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - env_vars:\n+              CFLAGS: '-fsanitize=memory -g'\n+          - env_vars:\n+              ECMULTGENPRECISION: 2\n+              ECMULTWINDOW: 2\n+              CFLAGS: '-fsanitize=memory -g -O3'\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'yes'\n+      CC: 'clang'\n+      SECP256K1_TEST_ITERS: 32\n+      ASM: 'no'\n+      WITH_VALGRIND: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: CI script\n+        env: ${{ matrix.configuration.env_vars }}\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&",
      "path": ".github/workflows/ci.yml",
      "position": 115,
      "original_position": 115,
      "commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": 1301767281,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> (did I ask this before?)\r\n\r\nWe discussed whether it should be placed in `ci.sh`.\r\n\r\nUPD. ... as it's done in bitcoin repo.",
      "created_at": "2023-08-22T15:13:20Z",
      "updated_at": "2023-08-22T15:24:08Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1301804745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301804745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 487,
      "original_line": 487,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301808157",
      "pull_request_review_id": 1589702140,
      "id": 1301808157,
      "node_id": "PRRC_kwDOAP4Jqs5NmAQd",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          ",
      "path": ".github/workflows/ci.yml",
      "position": 48,
      "original_position": 48,
      "commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": 1301794501,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> list the 4 resulting combinations explicitly\r\n\r\n... but that is completely feasible.",
      "created_at": "2023-08-22T15:15:47Z",
      "updated_at": "2023-08-22T15:15:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1301808157",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301808157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": 417,
      "original_start_line": 417,
      "start_side": "RIGHT",
      "line": 420,
      "original_line": 420,
      "side": "RIGHT"
    }
  ]
}