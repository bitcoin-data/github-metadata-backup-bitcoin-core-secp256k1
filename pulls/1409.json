{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409",
    "id": 1484823514,
    "node_id": "PR_kwDOAP4Jqs5YgJva",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1409.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1409.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1409",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1409/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
    "number": 1409,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "ci: Move remained task from Cirrus to GitHub Actions",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR concludes the migration from Cirrus CI to GitHub Actions.",
    "labels": [
      {
        "id": 4975349089,
        "node_id": "LA_kwDOAP4Jqs8AAAABKI3NYQ",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/ci",
        "name": "ci",
        "description": "",
        "color": "006B75",
        "default": false
      }
    ],
    "created_at": "2023-08-22T13:58:55Z",
    "updated_at": "2023-08-23T10:00:17Z",
    "mergeable": true,
    "mergeable_state": "unstable",
    "merge_commit_sha": "f8fe005bc486b80dd4e77450998d52d843ff7dc5",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "hebasto:230821-gha-all",
      "ref": "230821-gha-all",
      "sha": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 434588155,
        "node_id": "R_kgDOGedJ-w",
        "name": "secp256k1",
        "full_name": "hebasto/secp256k1",
        "owner": {
          "login": "hebasto",
          "id": 32963518,
          "node_id": "MDQ6VXNlcjMyOTYzNTE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hebasto",
          "html_url": "https://github.com/hebasto",
          "followers_url": "https://api.github.com/users/hebasto/followers",
          "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
          "organizations_url": "https://api.github.com/users/hebasto/orgs",
          "repos_url": "https://api.github.com/users/hebasto/repos",
          "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hebasto/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hebasto/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/hebasto/secp256k1",
        "archive_url": "https://api.github.com/repos/hebasto/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hebasto/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hebasto/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hebasto/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hebasto/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hebasto/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hebasto/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hebasto/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hebasto/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hebasto/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/hebasto/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/hebasto/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/hebasto/secp256k1/events",
        "forks_url": "https://api.github.com/repos/hebasto/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/hebasto/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hebasto/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hebasto/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hebasto/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/hebasto/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hebasto/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hebasto/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hebasto/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hebasto/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hebasto/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/hebasto/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/hebasto/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hebasto/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hebasto/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hebasto/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:hebasto/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/hebasto/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/hebasto/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hebasto/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/hebasto/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/hebasto/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/hebasto/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/hebasto/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hebasto/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/hebasto/secp256k1/hooks",
        "svn_url": "https://github.com/hebasto/secp256k1",
        "language": "C",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 11157,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-23T09:59:51Z",
        "created_at": "2021-12-03T12:27:02Z",
        "updated_at": "2023-05-05T16:09:11Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "26a989924b7ef93386aadb4486f56e99bd04dfd1",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 981,
        "stargazers_count": 1815,
        "watchers_count": 1815,
        "size": 10563,
        "default_branch": "master",
        "open_issues_count": 140,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-23T09:59:40Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-08-22T21:28:37Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 238,
    "deletions": 159,
    "changed_files": 2,
    "commits": 4,
    "review_comments": 9,
    "comments": 0
  },
  "events": [
    {
      "event": "labeled",
      "id": 10159677165,
      "node_id": "LE_lADOAP4Jqs5u9KjrzwAAAAJdkF7t",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/10159677165",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T14:52:10Z",
      "label": {
        "name": "ci",
        "color": "006B75"
      }
    },
    {
      "event": "reviewed",
      "id": 1589636669,
      "node_id": "PRR_kwDOAP4Jqs5ev-49",
      "url": null,
      "actor": null,
      "commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#pullrequestreview-1589636669",
      "submitted_at": "2023-08-22T15:06:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
    },
    {
      "event": "unsubscribed",
      "id": 10160691324,
      "node_id": "UE_lADOAP4Jqs5u9KjrzwAAAAJdn9h8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/10160691324",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T16:22:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10162096309,
      "node_id": "HRFPE_lADOAP4Jqs5u9KjrzwAAAAJdtUi1",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/10162096309",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T19:01:07Z"
    },
    {
      "event": "reviewed",
      "id": 1591108279,
      "node_id": "PRR_kwDOAP4Jqs5e1mK3",
      "url": null,
      "actor": null,
      "commit_id": "1b51315e601f9eab4110a9eb3d117d0d27916ec0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#pullrequestreview-1591108279",
      "submitted_at": "2023-08-23T09:01:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-23T09:10:44Z",
      "updated_at": "2023-08-23T09:10:44Z",
      "source": {
        "issue": {
          "id": 1836807981,
          "node_id": "I_kwDOAP4Jqs5te3ct",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1392",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1392/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1392/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1392/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1392",
          "number": 1392,
          "state": "open",
          "state_reason": null,
          "title": "ci: Future of CI after Cirrus pricing change ",
          "body": "Roadmap (keeping this up to date):\r\n\r\nI think the natural way forward for us is:\r\n - [x] Move native Windows tasks to GitHub Actions (#1389 and #1397)\r\n - [x] Move SageMath task to GitHub Actions (#1399)\r\n - [x] Move native macOS tasks to GitHub Actions, this will convert them to x86_64 unfortunately (#1394, #1404)\r\n - Move Linux tasks to the Bitcoin Core persistent workers or alternatively to GitHub Actions\r\n   - [x] wine/msvc tasks (converting them to native windows in #1401)\r\n   - [x] wine/mingw tasks (#1398)\r\n   - [x] actual normal Linux tasks (#1396)\r\n   - [ ] special tasks like qemu/sanitizers (#1406, #1409)\r\n\r\nPossible follow-ups:\r\n - [ ] Consider using [artifacts](https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts) to move the Docker image from the Docker build job to the actual CI job (for Linux tasks). This should be a [cleaner solution](https://github.com/bitcoin-core/secp256k1/pull/1398#issuecomment-1677074743), but it adds some complexity. It's also worth checking if this avoids [network issues](https://github.com/bitcoin-core/secp256k1/pull/1396#issuecomment-1684108729). In terms of delay, [this adds about 12 min uploading time to the Docker build job, but avoids about 1 min delay in the actual CI jobs](https://github.com/bitcoin-core/secp256k1/pull/1396#issuecomment-1686387785) as compared to the current solution that relies purely on the GHA cache (#1398).  So this will speed up CI if we could avoid re-uploading existing artifacts, e.g., have another digest file that just stores the SHA256, and re-upload only if the SHA does not match. But all of this is probably not worth the complexity if the current approach with the cache turns out to be good enough.\r\n - [ ] Enable Valgrind on macOS again now that the macOS tasks run on x86_64 (#1151)\r\n - [ ] Bring back some ARM testing (see for details: https://github.com/bitcoin-core/secp256k1/pull/1394#issuecomment-1682321329)\r\n   - [ ] Add a task for ctimetest on ARM64/Linux/Valgrind on Cirrus CI using free minutes or the self-hosted runner  (#1163)\r\n   - [ ] Add more ARM64 tests (cttimetests only supported on Clang/MSan) on QEMU\r\n - [ ] Consider moving the `git` safe directory stuff to `run-in-docker-action` (https://github.com/bitcoin-core/secp256k1/pull/1409#pullrequestreview-1589636669)\r\n - [ ] cosmetics: Job names could need a rework\r\n - [ ] cosmetics: Printing of log files could be improved\r\n\r\n\r\n\r\nOther related PRs:\r\n - [x] https://github.com/bitcoin-core/secp256k1/pull/1403\r\n - [x] https://github.com/bitcoin-core/secp256k1/pull/1410\r\n\r\n----\r\n\r\nCorresponding Bitcoin Core issue: https://github.com/bitcoin/bitcoin/issues/28098\r\n\r\nCirrus CI will cap the community cluster, see [cirrus-ci.org/blog/2023/07/17/limiting-free-usage-of-cirrus-ci](https://cirrus-ci.org/blog/2023/07/17/limiting-free-usage-of-cirrus-ci/). As with Core, the pricing model makes it totally unreasonable to pay for compute credits (multiple thousand USD / month).\r\n\r\nThe plan in Bitcoin Core is to move native Windows+macOS tasks to GitHub Actions, and move Linux tasks to persistent workers (=self-hosted). If I read the Bitcoin Core IRC [meeting notes](https://bitcoin.jonasschnelli.ch/ircmeetings/logs/bitcoin-core-dev/2023/bitcoin-core-dev.2023-08-03-14.00.log.html#l-79) correctly, @MarcoFalke [said](https://bitcoin.jonasschnelli.ch/ircmeetings/logs/bitcoin-core-dev/2023/bitcoin-core-dev.2023-08-03-14.00.log.html#l-99) these workers will also be available for libsecp256k1.\r\n\r\nBut the devil is in the details: \r\n\r\nFor macOS, we need to take also #1153 into account. It seems that [GitHub-hosted macOS runners are on x86_64](https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources). The good news is that Valgrind should work again then, but the (very) bad is that this will reduce our number of native ARM tasks to zero. We still have some QEMU tasks, but we can't even the run the Valgrind cttimetests on them (maybe this would now work with MSan?!) @MarcoFalke Are the self-hosted runners only x86_64? \r\n\r\nFor Linux tasks, the meeting notes say that the main reason for using persistent workers is that some tasks require a very specific environment (e.g., the [USDT ASan job](https://github.com/bitcoin/bitcoin/pull/28161)). I don't think we have such requirements, so I tend to think that moving everything to GitHub Actions is a bit cleaner for us. With a persistent worker, Cirrus CI anyway acts only as a \"coordination layer\" between the worker and GitHub. Yet another way is to the self-hosted runners with GitHub Actions, see my comment https://github.com/bitcoin/bitcoin/issues/28098#issuecomment-1665661274). ",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 4975349089,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI3NYQ",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/ci",
              "name": "ci",
              "description": "",
              "color": "006B75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "created_at": "2023-08-04T14:03:09Z",
          "updated_at": "2023-08-23T09:10:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGMyMmFjMjc1MjkwMDNlODI4ZDhhODczY2E2NDM5ZjY5NzhlMmUxYmU",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/c22ac27529003e828d8a873ca6439f6978e2e1be",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/c22ac27529003e828d8a873ca6439f6978e2e1be",
      "tree": {
        "sha": "4d1f81c67d6fb43f34d2f262a4562169254491ab",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/4d1f81c67d6fb43f34d2f262a4562169254491ab"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4d1f81c67d6fb43f34d2f262a4562169254491ab\nparent 26a989924b7ef93386aadb4486f56e99bd04dfd1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692782645 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692782645 +0100\n\nci: Move sanitizers task from Cirrus to GitHub Actions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmTl0DUACgkQQQEIES5+\nqB/1oxAAnZO5AHyY0CXVnu/iC3fIUyMc+MFbX3bpHVLI9WXbazhf+CwKihsbU+zk\n5IAh17AzO+ZGtnqcWG6iqHW3uyYQXEWd6XCBqejPaEED9T3eP+3wf5tabjUzvmnv\n4Ecb+Rf1EI90OvncokjHsqXzz3vr78BXopRwUSU3blHH3kfz9f9hIqXmuSdEgYmn\nrKGgRpSAZdRb+MIhgwEjzH8vS2PhvjxCMaMbBv3ifIMRpvyWEQQN3f92JukM64mm\nnFVVhH47zDUKy5QU5ZOOqjr9l+efjS/gGxFob/KbmRwk/VLpJlc9fvt7arlMa6A6\n2r2iI8HIcJrg4yxoxzSBL+W8q3R4lQjGxsXWnVX81BFKODozEqv6sTuCX/cQHBsH\nza5HFdnp1ZKBA1R0Rt2+wIUJ544GRdDfTzKs4jbZmAvu+DYQVu75+R1nkRBOrjzO\nvC/xtLCfH4MpT2StiOuQ2bZtAtyTu6SJ1Vnhjeg/z6LOkSugY1D9jvAXF29YgCVR\ns9ONk9w+kNhctgU2RN52aNMjNQhPHrNix86s11NuG2DXODCQsG66J3VteoDyDEY1\nxrxXsnQ9BqbFHvgF0YWRSKG6mLatewicNwGUUYwaLV64KsPkgeAlNSLhKmzZOp6K\nf/1X7jRzVFBy7h/HXCSIgP4+h2RhxIlxvSgIWMNXMw/IhmYtOog=\n=wKA6\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/26a989924b7ef93386aadb4486f56e99bd04dfd1",
          "sha": "26a989924b7ef93386aadb4486f56e99bd04dfd1",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/26a989924b7ef93386aadb4486f56e99bd04dfd1"
        }
      ],
      "message": "ci: Move sanitizers task from Cirrus to GitHub Actions",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-23T09:24:05Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-23T09:24:05Z"
      },
      "sha": "c22ac27529003e828d8a873ca6439f6978e2e1be"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGQ1MWZiMGE1MzNlNWFlMzRiMjE2NTI3ZWEzMjI4MWZmNDk4MzEwZGM",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d51fb0a533e5ae34b216527ea32281ff498310dc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d51fb0a533e5ae34b216527ea32281ff498310dc",
      "tree": {
        "sha": "f20f2f55ed1eb44b96ae5d1f98af88a67d316129",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/f20f2f55ed1eb44b96ae5d1f98af88a67d316129"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f20f2f55ed1eb44b96ae5d1f98af88a67d316129\nparent c22ac27529003e828d8a873ca6439f6978e2e1be\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692782655 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692782655 +0100\n\nci: Move \"MSan\" from Cirrus to GitHub Actions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmTl0D8ACgkQQQEIES5+\nqB87jxAAnf3XDlkA4jmr5f4tuNgT72oUtba1o1Ag0GNXjtprM5ADYfDH77UYnTCL\nqpvJ+l67roWWtvuCsvkMTxdP2/FI8u0twIiRSZ8V0ByQ0c5Q2U3mL68Dt8Wykmkt\nkrIvQTIJ19sY576iBRXqoZ40A233FAyF3GvthwuqsEGZOtj1IQBKXyL4K0wuRIyN\nIsC52meJB2Quo4icL5PyazaMnK4CP+q7EddHDD+DR8UUv7/+qFPn3a4C8uzHTI1O\nwAhP/4HgvEfM57CPTwmlAUasvkntIJ+t1Lx/Rlt1s+6xTIkZpWa4szyUOSQ1xVHt\nwkCB2nG9vOFto5qR/QOPVhyZiyp8B9YN/4ByjFILkUFkOQ14I3IFA72kLtHN2zLM\nCnavTIOCF/LVsOttgMk1LOfZE5z3INtvQtgDgbtnijUJ5EEGWAB3uINeYP1TRK+M\nXDIrQdhBSIbzE6HpKKuaBD4slEWCyInZ+kLcRw7ulYfosCPjRGaXqBGCGxATv/RE\nICya/95Rai8g8eMDs6YFv2dPlZGEe4T2AawpWLlM6o9eDZHeJz+gv5HD7bP2K5Cw\nj6k35wq51KyKHw33luevWQGCgeDpWdbKvnNhpL//a58/tvjN3P33uwgy29PgRAcc\nVd9JkXQk1EV284gyLH/I/1e4E75FPfm7USmYVBy0UM6lmza7TdE=\n=27E4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/c22ac27529003e828d8a873ca6439f6978e2e1be",
          "sha": "c22ac27529003e828d8a873ca6439f6978e2e1be",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/c22ac27529003e828d8a873ca6439f6978e2e1be"
        }
      ],
      "message": "ci: Move \"MSan\" from Cirrus to GitHub Actions",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-23T09:24:15Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-23T09:24:15Z"
      },
      "sha": "d51fb0a533e5ae34b216527ea32281ff498310dc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDYxZmMzYTJkYzg4M2E1ZmZkYTQzNjU4MzM3ZWM5NGQzMzA2ZWI3N2Y",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/61fc3a2dc883a5ffda43658337ec94d3306eb77f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/61fc3a2dc883a5ffda43658337ec94d3306eb77f",
      "tree": {
        "sha": "5a7f813b3be69082c839560a35d84638acefb481",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/5a7f813b3be69082c839560a35d84638acefb481"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5a7f813b3be69082c839560a35d84638acefb481\nparent d51fb0a533e5ae34b216527ea32281ff498310dc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692782664 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692782664 +0100\n\nci: Move \"C++ -fpermissive...\" from Cirrus to GitHub Actions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmTl0EgACgkQQQEIES5+\nqB8AdRAAt7AnPbIzDAGu1jam2AZnUN1CsoCPpO/V4oYQkw/xXLrQpjLwBbK2ALTx\nyeY0nrDKnuRBhj4MgcomhndHPOO6bUopC13nkymfe/IaeTbzPH6PZYkLZ3E1KTkO\nMvAmSYPY9w47CI4y3gWF5XHbgEDFbXySIL0DDWh8ODrF/mDUdxsfDIIYT2HYwAoG\nptW2UbvAECKplo00cRXQ/G4xboiNB1t5JwHejQc+IxnyOiXEfLgNsJ5GoXmr46RT\nekmUQRZc7wwiw9j70tmwM0jeemZjfdNC3JPrbwkbsKuKca79cs/lS3GDJEMgnpL+\nEPNw7aPAdxCF5JpD81kTZtkKc9cueHuYV1W36GUXnkcUZxoEiMcqiJ5wLjQpGKqv\ndTFzVLRXuHOe99z/S+2Qo2WlmbNEiuiX89v+2b3iRezJ3NLKl6VHlkipsfz66aF2\nP1sg12QplBHijyiWwAkraPx7T3+exPbn4s8aVGOYd92ecpm7fBESDGbMcTc8FCHV\nnRcifY0LriGut1Nk/eJUPgGPByPO1Z1y/LgO/cKFVRBeKjGOzX03EXL7fYA3TKSG\nUK9Q4LMGAvY9sUXMe+YfWpo+BXQ4YIP2ybJICLa6I2Zn9rpSBFj7gjJmfevt/rDs\nqxh226W39EFVq0EyriXdWc8EytjfaWKkbl7AUJH1D1stXkPRlrQ=\n=cdIr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d51fb0a533e5ae34b216527ea32281ff498310dc",
          "sha": "d51fb0a533e5ae34b216527ea32281ff498310dc",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d51fb0a533e5ae34b216527ea32281ff498310dc"
        }
      ],
      "message": "ci: Move \"C++ -fpermissive...\" from Cirrus to GitHub Actions",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-23T09:24:24Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-23T09:24:24Z"
      },
      "sha": "61fc3a2dc883a5ffda43658337ec94d3306eb77f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDY3NmVkOGY5Y2YwMDFlYmFhZGY1M2Q1YzExZTMyZjdhNmIxZTU2NDk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "tree": {
        "sha": "f6fb08cb63f30c256d47c05e0333330a4770524f",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/f6fb08cb63f30c256d47c05e0333330a4770524f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f6fb08cb63f30c256d47c05e0333330a4770524f\nparent 61fc3a2dc883a5ffda43658337ec94d3306eb77f\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692784766 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1692784766 +0100\n\nci: Move \"C++ (public headers)\" from Cirrus to GitHub Actions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmTl2H4ACgkQQQEIES5+\nqB/6WBAAqy4O7L8j1wmd3L/5zqG2zrOOJ2kNY4cMYn8ea22iWQt7Q1aEyz7g13tZ\nR2onqAhV2as7GBzRhxePuM4iu+EfUhq0lULcpHYK9xwXz8SrUmdhiQfGmFkUl11V\nD4T1rMSNntDvATA14Pk+rgI6shidvYC6TvMnkvacAp/Bl3S0XnMnfQguOqTI5ROS\n56SMcHKIog4dUxoxFZVVCrQk67zMKxUJkbCz8KEiB/KDocXNS9d78e+FIbVdKjZa\nzf+tkb1fA11+l4k/p61a67bFrUFcl5CCO9sK2PFjzhyYMSOyjKGAe4+bOYEBdf2+\nTxDsva//K7Rzy4EG62feXBOWp8AfovcraFiE42RbGGB9jFwH+TkhMtKW0L5PGgsY\nzazRTHPYTTLTVX4dssQ9T0X7MMkgLalB32ai7Z8FsI3+0X7A1TqaVRMY3p178X4f\nNUxqLEhJIRY+PwQ3woKO34XBPebAfL/NJ+NZ+1SXBrl3ZfYNlGHD7uWrCCj9nppE\n/BYI+GaZAMZtHtkz/TmVyIbd3nErOpaOhlkSyTe5UOPDNXUpWu45iRjwTYG2WdAu\nlk3FWkNBxy/WsZ8IKV+QwyQmooQzWHpnqz7TWNNw9QOP206Vryd4fT9NBMNYmDcQ\nsUAGvWnZuEdF7fCVrngiWjm2kkgxXEWW4LsBf9k8aMhuElgC8EM=\n=KgcT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/61fc3a2dc883a5ffda43658337ec94d3306eb77f",
          "sha": "61fc3a2dc883a5ffda43658337ec94d3306eb77f",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/61fc3a2dc883a5ffda43658337ec94d3306eb77f"
        }
      ],
      "message": "ci: Move \"C++ (public headers)\" from Cirrus to GitHub Actions",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-23T09:59:26Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-08-23T09:59:26Z"
      },
      "sha": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10168127890,
      "node_id": "HRFPE_lADOAP4Jqs5u9KjrzwAAAAJeEVGS",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/10168127890",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-23T09:59:40Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301767281",
      "pull_request_review_id": 1589636669,
      "id": 1301767281,
      "node_id": "PRRC_kwDOAP4Jqs5Nl2Rx",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          \n+\n+      - name: CI script\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&\n+            ./ci/ci.sh\n+\n+      - run: cat tests.log || true\n+        if: ${{ always() }}\n+      - run: cat noverify_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat exhaustive_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat ctime_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat bench.log || true\n+        if: ${{ always() }}\n+      - run: cat config.log || true\n+        if: ${{ always() }}\n+      - run: cat test_env.log || true\n+        if: ${{ always() }}\n+      - name: CI env\n+        run: env\n+        if: ${{ always() }}\n+\n+  msan_debian:\n+    name: \"MSan\"\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - env_vars:\n+              CFLAGS: '-fsanitize=memory -g'\n+          - env_vars:\n+              ECMULTGENPRECISION: 2\n+              ECMULTWINDOW: 2\n+              CFLAGS: '-fsanitize=memory -g -O3'\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'yes'\n+      CC: 'clang'\n+      SECP256K1_TEST_ITERS: 32\n+      ASM: 'no'\n+      WITH_VALGRIND: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: CI script\n+        env: ${{ matrix.configuration.env_vars }}\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&",
      "path": ".github/workflows/ci.yml",
      "position": 157,
      "original_position": 115,
      "commit_id": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not this PR, but now that I see this, couldn't we add this to `run-in-docker-action` to avoid duplication?\r\n\r\n(did I ask this before?)",
      "created_at": "2023-08-22T14:48:02Z",
      "updated_at": "2023-08-22T15:06:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1301767281",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301767281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 529,
      "original_line": 529,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301794501",
      "pull_request_review_id": 1589636669,
      "id": 1301794501,
      "node_id": "PRRC_kwDOAP4Jqs5Nl87F",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          ",
      "path": ".github/workflows/ci.yml",
      "position": null,
      "original_position": 48,
      "commit_id": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A bit ugly, hm... There's no better way to merge this, I guess.\r\n\r\nI think it makes sense to split this job into two jobs \"Valgrind (memcheck)\" and \"UBSan, ASan, LSan\". Then for each of these jobs, we can expand the remaining 2x2 combinations, i.e., list the 4 resulting combinations explicitly. This is probably a good idea anyway, it will also make it a bit easier to add variety to the jobs.\r\n\r\nWhat do you think?",
      "created_at": "2023-08-22T15:05:48Z",
      "updated_at": "2023-08-22T15:06:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1301794501",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301794501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": 417,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301802232",
      "pull_request_review_id": 1589692954,
      "id": 1301802232,
      "node_id": "PRRC_kwDOAP4Jqs5Nl-z4",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          ",
      "path": ".github/workflows/ci.yml",
      "position": null,
      "original_position": 48,
      "commit_id": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": 1301794501,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think it makes sense to split this job into two jobs \"Valgrind (memcheck)\" and \"UBSan, ASan, LSan\".\r\n\r\nI was thinking about the same. But it won't help.\r\n\r\nOnly one `env` property is allowed job-wide and step-wide. Job-wide `env` is already busy with global variables. Therefore, even 2 sets won't fit one step-wide `env`.",
      "created_at": "2023-08-22T15:11:23Z",
      "updated_at": "2023-08-22T15:11:24Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1301802232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301802232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": 417,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301804745",
      "pull_request_review_id": 1589697023,
      "id": 1301804745,
      "node_id": "PRRC_kwDOAP4Jqs5Nl_bJ",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          \n+\n+      - name: CI script\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&\n+            ./ci/ci.sh\n+\n+      - run: cat tests.log || true\n+        if: ${{ always() }}\n+      - run: cat noverify_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat exhaustive_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat ctime_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat bench.log || true\n+        if: ${{ always() }}\n+      - run: cat config.log || true\n+        if: ${{ always() }}\n+      - run: cat test_env.log || true\n+        if: ${{ always() }}\n+      - name: CI env\n+        run: env\n+        if: ${{ always() }}\n+\n+  msan_debian:\n+    name: \"MSan\"\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - env_vars:\n+              CFLAGS: '-fsanitize=memory -g'\n+          - env_vars:\n+              ECMULTGENPRECISION: 2\n+              ECMULTWINDOW: 2\n+              CFLAGS: '-fsanitize=memory -g -O3'\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'yes'\n+      CC: 'clang'\n+      SECP256K1_TEST_ITERS: 32\n+      ASM: 'no'\n+      WITH_VALGRIND: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: CI script\n+        env: ${{ matrix.configuration.env_vars }}\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&",
      "path": ".github/workflows/ci.yml",
      "position": 157,
      "original_position": 115,
      "commit_id": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": 1301767281,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> (did I ask this before?)\r\n\r\nWe discussed whether it should be placed in `ci.sh`.\r\n\r\nUPD. ... as it's done in bitcoin repo.",
      "created_at": "2023-08-22T15:13:20Z",
      "updated_at": "2023-08-22T15:24:08Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1301804745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301804745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 529,
      "original_line": 529,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301808157",
      "pull_request_review_id": 1589702140,
      "id": 1301808157,
      "node_id": "PRRC_kwDOAP4Jqs5NmAQd",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          ",
      "path": ".github/workflows/ci.yml",
      "position": null,
      "original_position": 48,
      "commit_id": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": 1301794501,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> list the 4 resulting combinations explicitly\r\n\r\n... but that is completely feasible.",
      "created_at": "2023-08-22T15:15:47Z",
      "updated_at": "2023-08-22T15:15:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1301808157",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1301808157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": 417,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1302071417",
      "pull_request_review_id": 1590132595,
      "id": 1302071417,
      "node_id": "PRRC_kwDOAP4Jqs5NnAh5",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          ",
      "path": ".github/workflows/ci.yml",
      "position": null,
      "original_position": 48,
      "commit_id": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": 1301794501,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > list the 4 resulting combinations explicitly\r\n> \r\n> ... but that is completely feasible.\r\n\r\nDone.",
      "created_at": "2023-08-22T19:01:27Z",
      "updated_at": "2023-08-22T19:01:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1302071417",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1302071417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": 417,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1302696572",
      "pull_request_review_id": 1591084882,
      "id": 1302696572,
      "node_id": "PRRC_kwDOAP4Jqs5NpZJ8",
      "diff_hunk": "@@ -373,6 +373,138 @@ jobs:\n         run: env\n         if: ${{ always() }}\n \n+  sanitizers_debian:\n+    name: ${{ matrix.configuration.job_name }}\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - job_name: 'Valgrind (memcheck)'\n+            env_vars:\n+              # The `--error-exitcode` is required to make the test fail if valgrind found errors,\n+              # otherwise it will return 0 (https://www.valgrind.org/docs/manual/manual-core.html).\n+              WRAPPER_CMD: 'valgrind --error-exitcode=42'\n+              SECP256K1_TEST_ITERS: 2\n+          - job_name: 'UBSan, ASan, LSan'\n+            env_vars:\n+              CFLAGS: '-fsanitize=undefined,address -g'\n+              UBSAN_OPTIONS: 'print_stacktrace=1:halt_on_error=1'\n+              ASAN_OPTIONS: 'strict_string_checks=1:detect_stack_use_after_return=1:detect_leaks=1'\n+              LSAN_OPTIONS: 'use_unaligned=1'\n+              SECP256K1_TEST_ITERS: 32\n+        asm:\n+          - env_vars: { ASM: 'auto' }\n+          - env_vars: { ASM: 'no', ECMULTGENPRECISION: 2, ECMULTWINDOW: 2 }\n+        cc:\n+          - env_vars: { CC: 'clang' }\n+          - env_vars: { HOST: 'i686-linux-gnu', CC: 'i686-linux-gnu-gcc' }\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set environment variables\n+        run: |\n+          for var in \"$(jq -s 'add' <<< '${{ toJSON(matrix.configuration.env_vars) }} ${{ toJSON(matrix.asm.env_vars) }} ${{ toJSON(matrix.cc.env_vars) }}' | jq -r 'to_entries | .[] | \"\\(.key)=\\(.value)\"')\"; do\n+            echo \"$var\" >> \"$GITHUB_ENV\"\n+          done          \n+\n+      - name: CI script\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&\n+            ./ci/ci.sh\n+\n+      - run: cat tests.log || true\n+        if: ${{ always() }}\n+      - run: cat noverify_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat exhaustive_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat ctime_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat bench.log || true\n+        if: ${{ always() }}\n+      - run: cat config.log || true\n+        if: ${{ always() }}\n+      - run: cat test_env.log || true\n+        if: ${{ always() }}\n+      - name: CI env\n+        run: env\n+        if: ${{ always() }}\n+\n+  msan_debian:\n+    name: \"MSan\"\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        configuration:\n+          - env_vars:\n+              CFLAGS: '-fsanitize=memory -g'\n+          - env_vars:\n+              ECMULTGENPRECISION: 2\n+              ECMULTWINDOW: 2\n+              CFLAGS: '-fsanitize=memory -g -O3'\n+\n+    env:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+      CTIMETESTS: 'yes'\n+      CC: 'clang'\n+      SECP256K1_TEST_ITERS: 32\n+      ASM: 'no'\n+      WITH_VALGRIND: 'no'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: CI script\n+        env: ${{ matrix.configuration.env_vars }}\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&",
      "path": ".github/workflows/ci.yml",
      "position": 157,
      "original_position": 115,
      "commit_id": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "original_commit_id": "1961f18a7f3905c6d7308fe5f5fedd0cef9840a2",
      "in_reply_to_id": 1301767281,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, sure, I remember now. I still think this should not be in `ci.sh`, but yeah, we could consider moving it to `run-in-docker-action` (in a separate PR probably).",
      "created_at": "2023-08-23T08:49:09Z",
      "updated_at": "2023-08-23T08:49:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1302696572",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1302696572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 529,
      "original_line": 529,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1302711806",
      "pull_request_review_id": 1591108279,
      "id": 1302711806,
      "node_id": "PRRC_kwDOAP4Jqs5Npc3-",
      "diff_hunk": "@@ -548,6 +722,70 @@ jobs:\n         run: |\n           cl.exe -c -WX -TP include/*.h\n \n+  cxx_fpermissive_debian:\n+    name: \"C++ -fpermissive (entire project)\"\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    env:\n+      CC: 'g++'\n+      CFLAGS: '-fpermissive -g'\n+      CPPFLAGS: '-DSECP256K1_CPLUSPLUS_TEST_OVERRIDE'\n+      WERROR_CFLAGS:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: CI script\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&\n+            ./ci/ci.sh\n+\n+      - run: cat tests.log || true\n+        if: ${{ always() }}\n+      - run: cat noverify_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat exhaustive_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat ctime_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat bench.log || true\n+        if: ${{ always() }}\n+      - run: cat config.log || true\n+        if: ${{ always() }}\n+      - run: cat test_env.log || true\n+        if: ${{ always() }}\n+      - name: CI env\n+        run: env\n+        if: ${{ always() }}\n+\n+  cxx_headers_debian:\n+    name: \"C++ (public headers)\"\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: CI script\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            g++ -Werror include/*.h &&\n+            clang -Werror -x c++-header include/*.h",
      "path": ".github/workflows/ci.yml",
      "position": null,
      "original_position": 247,
      "commit_id": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "original_commit_id": "1b51315e601f9eab4110a9eb3d117d0d27916ec0",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: it's probably more convenient to run `clang` even if `g++` fails\r\n```suggestion\r\n            g++ -Werror include/*.h\r\n            clang -Werror -x c++-header include/*.h\r\n```\r\n(I think that linebreak should work. Or do we need a `;` here?)",
      "created_at": "2023-08-23T09:01:11Z",
      "updated_at": "2023-08-23T09:01:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1302711806",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1302711806"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": 786,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 787,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1302785663",
      "pull_request_review_id": 1591228236,
      "id": 1302785663,
      "node_id": "PRRC_kwDOAP4Jqs5Npu5_",
      "diff_hunk": "@@ -548,6 +722,70 @@ jobs:\n         run: |\n           cl.exe -c -WX -TP include/*.h\n \n+  cxx_fpermissive_debian:\n+    name: \"C++ -fpermissive (entire project)\"\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    env:\n+      CC: 'g++'\n+      CFLAGS: '-fpermissive -g'\n+      CPPFLAGS: '-DSECP256K1_CPLUSPLUS_TEST_OVERRIDE'\n+      WERROR_CFLAGS:\n+      ECDH: 'yes'\n+      RECOVERY: 'yes'\n+      SCHNORRSIG: 'yes'\n+      ELLSWIFT: 'yes'\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: CI script\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            git config --global --add safe.directory ${{ github.workspace }} &&\n+            ./ci/ci.sh\n+\n+      - run: cat tests.log || true\n+        if: ${{ always() }}\n+      - run: cat noverify_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat exhaustive_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat ctime_tests.log || true\n+        if: ${{ always() }}\n+      - run: cat bench.log || true\n+        if: ${{ always() }}\n+      - run: cat config.log || true\n+        if: ${{ always() }}\n+      - run: cat test_env.log || true\n+        if: ${{ always() }}\n+      - name: CI env\n+        run: env\n+        if: ${{ always() }}\n+\n+  cxx_headers_debian:\n+    name: \"C++ (public headers)\"\n+    runs-on: ubuntu-latest\n+    needs: docker_cache\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: CI script\n+        uses: ./.github/actions/run-in-docker-action\n+        with:\n+          dockerfile: ./ci/linux-debian.Dockerfile\n+          tag: linux-debian-image\n+          command: >\n+            g++ -Werror include/*.h &&\n+            clang -Werror -x c++-header include/*.h",
      "path": ".github/workflows/ci.yml",
      "position": null,
      "original_position": 247,
      "commit_id": "676ed8f9cf001ebaadf53d5c11e32f7a6b1e5649",
      "original_commit_id": "1b51315e601f9eab4110a9eb3d117d0d27916ec0",
      "in_reply_to_id": 1302711806,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! Reworked.",
      "created_at": "2023-08-23T10:00:16Z",
      "updated_at": "2023-08-23T10:00:16Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1409#discussion_r1302785663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1302785663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1409"
        }
      },
      "start_line": null,
      "original_start_line": 786,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 787,
      "side": "RIGHT"
    }
  ]
}