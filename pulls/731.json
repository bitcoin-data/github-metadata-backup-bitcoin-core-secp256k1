{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731",
    "id": 396291548,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk2MjkxNTQ4",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/731.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/731.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
    "number": 731,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Change SHA256 byte counter from size_t to uint64_t",
    "user": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This avoids that the SHA256 implementation would produce wrong paddings\r\nand thus wrong digests for messages of length >= 2^32 bytes on 32-bit\r\nplatforms.\r\n\r\nThis is not exploitable in any way since the SHA256 API is an internal\r\nAPI and we never call it with that long messages.\r\n\r\nThis also simplifies the struct initializer for the padding.\r\nSince missing elements are initialized with zeros, this change is\r\npurely syntactical.",
    "labels": [],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/1",
      "html_url": "https://github.com/bitcoin-core/secp256k1/milestone/1",
      "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/1/labels",
      "id": 1276306,
      "node_id": "MDk6TWlsZXN0b25lMTI3NjMwNg==",
      "number": 1,
      "state": "open",
      "title": "stable release (1.0.0-rc.1)",
      "description": "Motivation: libsecp is already widely used today, but often in a terribly outdated version. It's likely that a release process would help with that. Moreover, it simplifies using libsecp which may prevent developers from using less well tested alternatives. Lastly, without releases it's difficult to update the library in an organized fashion and communicate these updates.\r\n\r\nRelease Goals:\r\n\r\n- Stabilize API and documentation for functionality that exist today.\r\n- Fix a few known bugs.\r\n- Make ECDH non-experimental.\r\n\r\nThis milestone can be discussed in issue https://github.com/bitcoin-core/secp256k1/issues/286.",
      "creator": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 12,
      "closed_issues": 26,
      "created_at": "2015-08-27T18:21:31Z",
      "updated_at": "2023-04-10T15:36:41Z"
    },
    "created_at": "2020-03-31T12:13:03Z",
    "updated_at": "2022-03-24T22:54:50Z",
    "closed_at": "2022-03-24T22:54:50Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-03-24T22:54:50Z",
    "merge_commit_sha": "587239dbe392bcfb6a257214faed0b10b912714c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "real-or-random:202003-sha-size_t",
      "ref": "202003-sha-size_t",
      "sha": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 93596674,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MzU5NjY3NA==",
        "name": "secp256k1",
        "full_name": "real-or-random/secp256k1",
        "owner": {
          "login": "real-or-random",
          "id": 1071625,
          "node_id": "MDQ6VXNlcjEwNzE2MjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/real-or-random",
          "html_url": "https://github.com/real-or-random",
          "followers_url": "https://api.github.com/users/real-or-random/followers",
          "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
          "organizations_url": "https://api.github.com/users/real-or-random/orgs",
          "repos_url": "https://api.github.com/users/real-or-random/repos",
          "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/real-or-random/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/real-or-random/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/real-or-random/secp256k1",
        "archive_url": "https://api.github.com/repos/real-or-random/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/real-or-random/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/real-or-random/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/real-or-random/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/real-or-random/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/real-or-random/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/real-or-random/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/real-or-random/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/real-or-random/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/real-or-random/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/real-or-random/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/real-or-random/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/real-or-random/secp256k1/events",
        "forks_url": "https://api.github.com/repos/real-or-random/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/real-or-random/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/real-or-random/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/real-or-random/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/real-or-random/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/real-or-random/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/real-or-random/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/real-or-random/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/real-or-random/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/real-or-random/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/real-or-random/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/real-or-random/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/real-or-random/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/real-or-random/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/real-or-random/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/real-or-random/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:real-or-random/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/real-or-random/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/real-or-random/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/real-or-random/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/real-or-random/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/real-or-random/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/real-or-random/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/real-or-random/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/real-or-random/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/real-or-random/secp256k1/hooks",
        "svn_url": "https://github.com/real-or-random/secp256k1",
        "language": "C",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 13626,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-01T20:02:33Z",
        "created_at": "2017-06-07T05:39:43Z",
        "updated_at": "2023-03-08T17:07:47Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "e0508ee9db2725c5efbc1cad434e14c2ebf55427",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 948,
        "stargazers_count": 1768,
        "watchers_count": 1768,
        "size": 10062,
        "default_branch": "master",
        "open_issues_count": 142,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-12T16:38:48Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-06-12T17:38:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 139,
    "deletions": 13,
    "changed_files": 3,
    "commits": 4,
    "review_comments": 21,
    "comments": 11
  },
  "events": [
    {
      "event": "commented",
      "id": 607129981,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzEyOTk4MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/607129981",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-01T09:06:44Z",
      "updated_at": "2020-04-01T09:06:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Looks good.\r\nACK 33d0871ee77cd7014e40abf39ac6da98114b3558",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-607129981",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "commented",
      "id": 614625791,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDYyNTc5MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/614625791",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-16T12:37:07Z",
      "updated_at": "2020-04-16T12:37:07Z",
      "author_association": "MEMBER",
      "body": "I added a commit with additional tests for very long messages. See the commit message.\r\nThis adds 6s on my machine. I think this is acceptable. It would be nice if someone with access to a 32bit machine can try to revert my fix ( f5fdba8 ) and verify that the new tests fail then.\r\n\r\nIt will be good to have an additional test for crossing the 2^32 *byte* (instead of bit) boundary but this will take very long to execute. So I think it's better to implement (better) support for setting midstates first which is anyway useful for Schnorr signatures. Then we can add such a test. \r\n\r\nNote to myself for a future PR for setting midstates: cloudtools/sha256 is a python library for playing around with midstates. It's similarly broken to our implementation but the fix is easy. https://github.com/cloudtools/sha256/pull/3",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-614625791",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "reviewed",
      "id": 396199060,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTk5MDYw",
      "url": null,
      "actor": null,
      "commit_id": "efb0069223c000f5d953afc80514fa3be11521ba",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Good catch! This should be fixed.\r\n\r\nAdding six seconds with a test would be very painful. I don't see why it's needed. You could simply initialize the sha struct with a known midstate and bytes value (like this? https://github.com/bitcoin-core/secp256k1/pull/558/commits/e85b0bbafc31de2b746205e970753968b51ddd1b#diff-0d77700fa6e05639431c962ffaa5365aR437) and then do a single compression round to test that `bytes` doesn't wrap around. You should be able to test this with the `-m32` compiler flag even on 64 bit architectures.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#pullrequestreview-396199060",
      "submitted_at": "2020-04-20T07:22:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3259719189,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI1OTcxOTE4OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3259719189",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-22T09:35:18Z"
    },
    {
      "event": "commented",
      "id": 617674186,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzY3NDE4Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/617674186",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-22T09:48:26Z",
      "updated_at": "2020-04-22T09:49:14Z",
      "author_association": "MEMBER",
      "body": "> Adding six seconds with a test would be very painful. I don't see why it's needed. You could simply initialize the sha struct with a known midstate and bytes value (like this? [e85b0bb#diff-0d77700fa6e05639431c962ffaa5365aR437](https://github.com/bitcoin-core/secp256k1/commit/e85b0bbafc31de2b746205e970753968b51ddd1b#diff-0d77700fa6e05639431c962ffaa5365aR437)) and then do a single compression round to test that `bytes` doesn't wrap around.\r\n\r\nI added tests that implement this suggestion. On the way, I introduced a (very simply) initialize_midstate function to the internal API and changed the initialization functions to simple struct assignments. This feels a little bit cleaner and simpler to me.\r\n\r\nSee  the commit messages for details on the new tests.\r\n\r\nI left the other test commit there because it also cleans up the code and it works. But I left the extremely long message commented.\r\n\r\n> You should be able to test this with the `-m32` compiler flag even on 64 bit architectures.\r\n\r\nAh sure, I verified that the test fails then (even with the `VERIFY_CHECK` for overflow in `hash_impl.h` deleted).  \r\n\r\n\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-617674186",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3259827883,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI1OTgyNzg4Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3259827883",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-22T10:02:47Z"
    },
    {
      "event": "commented",
      "id": 617681826,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzY4MTgyNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/617681826",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-22T10:03:54Z",
      "updated_at": "2020-04-22T10:03:54Z",
      "author_association": "MEMBER",
      "body": "This uses constants syntax as in #746. I can change this of course if we don't want #746.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-617681826",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "reviewed",
      "id": 398581892,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NTgxODky",
      "url": null,
      "actor": null,
      "commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Can confirm that the new `counter_tests` catch the issue (in particular with the  correct test case number 12).",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#pullrequestreview-398581892",
      "submitted_at": "2020-04-22T21:06:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
    },
    {
      "event": "milestoned",
      "id": 3317690749,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDMzMTc2OTA3NDk=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3317690749",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T17:00:07Z",
      "milestone": {
        "title": "initial release (1.0.0-rc.1)"
      }
    },
    {
      "event": "reviewed",
      "id": 517550314,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NTUwMzE0",
      "url": null,
      "actor": null,
      "commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "This looks good to me. Needs a rebase. Perhaps also use this new midstate api in other parts of the code, like the schnorrsig module.\r\n\r\nRegarding the commit message \"Those tests verify that the SHA256 bit counter wraps correctly at bit lengths 20 to 34.\". Wouldn't it be better to say \"increments\" instead of \"wraps\"?",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#pullrequestreview-517550314",
      "submitted_at": "2020-10-27T10:29:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
    },
    {
      "event": "reviewed",
      "id": 518013659,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MDEzNjU5",
      "url": null,
      "actor": null,
      "commit_id": "6823d3ba67f5d5d61bb0599f076487fd6e648f5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#pullrequestreview-518013659",
      "submitted_at": "2020-10-27T18:25:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
    },
    {
      "event": "commented",
      "id": 718556329,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxODU1NjMyOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/718556329",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-29T09:43:31Z",
      "updated_at": "2020-10-29T09:43:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nSomewhat related: https://github.com/bitcoin/bitcoin/issues/19930 (Signed integer overflow when SipHasher processes inputs >= 2 GB)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-718556329",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "commented",
      "id": 721763840,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTc2Mzg0MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/721763840",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-04T14:28:31Z",
      "updated_at": "2020-11-04T14:28:31Z",
      "author_association": "MEMBER",
      "body": "Needs rebase again.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-721763840",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "commented",
      "id": 991815596,
      "node_id": "IC_kwDOAP4Jqs47Hees",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/991815596",
      "actor": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-12T01:18:53Z",
      "updated_at": "2021-12-12T01:21:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK b602b7b, `make check` passes all tests. The values of the three new test vectors added are correct. I verified their values using python's hashlib module.",
      "user": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-991815596",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "reviewed",
      "id": 829572421,
      "node_id": "PRR_kwDOAP4Jqs4xckVF",
      "url": null,
      "actor": null,
      "commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#pullrequestreview-829572421",
      "submitted_at": "2021-12-12T01:20:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGViMjg0NjRhOGJmODY1MmEyYjQ5ZDJlZDc2NTgwMWQ3YzBhYTE5NWQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/eb28464a8bf8652a2b49d2ed765801d7c0aa195d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/eb28464a8bf8652a2b49d2ed765801d7c0aa195d",
      "tree": {
        "sha": "e5659796f9e20d15c81f409a8b882a0896413b22",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/e5659796f9e20d15c81f409a8b882a0896413b22"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/ac83be33d0956faf6b7f61a60ab524ef7d6a473a",
          "sha": "ac83be33d0956faf6b7f61a60ab524ef7d6a473a",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/ac83be33d0956faf6b7f61a60ab524ef7d6a473a"
        }
      ],
      "message": "Change SHA256 byte counter from size_t to uint64_t\n\nThis avoids that the SHA256 implementation would produce wrong paddings\nand thus wrong digests for messages of length >= 2^32 bytes on 32-bit\nplatforms.\n\nThis is not exploitable in any way since the SHA256 API is an internal\nAPI and we never call it with that long messages.",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-03-02T14:54:33Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2020-03-31T11:40:37Z"
      },
      "sha": "eb28464a8bf8652a2b49d2ed765801d7c0aa195d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDhlM2RkZTExMzc0MTYxNWZjYjFhZWRjYWNmYzU0YmQzYjNkMjA0ZjE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/8e3dde113741615fcb1aedcacfc54bd3b3d204f1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/8e3dde113741615fcb1aedcacfc54bd3b3d204f1",
      "tree": {
        "sha": "2ddf5a89327984df59b868234d2aa5539be0e52a",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/2ddf5a89327984df59b868234d2aa5539be0e52a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/eb28464a8bf8652a2b49d2ed765801d7c0aa195d",
          "sha": "eb28464a8bf8652a2b49d2ed765801d7c0aa195d",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/eb28464a8bf8652a2b49d2ed765801d7c0aa195d"
        }
      ],
      "message": "Simplify struct initializer for SHA256 padding\n\nSince missing elements are initialized with zeros, this change is\npurely syntactical.",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-03-02T14:54:33Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2020-03-31T11:55:30Z"
      },
      "sha": "8e3dde113741615fcb1aedcacfc54bd3b3d204f1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDliNTE0Y2UxZDI1ZjE5NDRjNTQ5ZWFkMzBjYzg0MzY3ZDYxNmUwZTY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/9b514ce1d25f1944c549ead30cc84367d616e0e6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/9b514ce1d25f1944c549ead30cc84367d616e0e6",
      "tree": {
        "sha": "1e9bcc7c22fea0a5459a2a80c091dd5b06cb4361",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/1e9bcc7c22fea0a5459a2a80c091dd5b06cb4361"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/8e3dde113741615fcb1aedcacfc54bd3b3d204f1",
          "sha": "8e3dde113741615fcb1aedcacfc54bd3b3d204f1",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/8e3dde113741615fcb1aedcacfc54bd3b3d204f1"
        }
      ],
      "message": "Add test vector for very long SHA256 messages\n\nThe vector has been taken from https://www.di-mgt.com.au/sha_testvectors.html.\nIt can be independently verified using the following Python code.\n\n```\nh = hashlib.sha256()\nfor i in range(1_000_000):\n    h.update(b'a')\nprint(h.hexdigest())\n```",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-03-07T11:54:13Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2020-04-16T12:08:36Z"
      },
      "sha": "9b514ce1d25f1944c549ead30cc84367d616e0e6"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6194390072,
      "node_id": "HRFPE_lADOAP4Jqs4jOs99zwAAAAFxNuQ4",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6194390072",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T12:11:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6194405794,
      "node_id": "HRFPE_lADOAP4Jqs4jOs99zwAAAAFxNyGi",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6194405794",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T12:13:30Z"
    },
    {
      "event": "commented",
      "id": 1060625029,
      "node_id": "IC_kwDOAP4Jqs4_N9qF",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1060625029",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T12:15:11Z",
      "updated_at": "2022-03-07T12:15:11Z",
      "author_association": "MEMBER",
      "body": "Ready for review again. I removed some questionable parts of this PR (including the new internal function to set a midstate which simply took a full sha256 state struct -- tests now simply set the state explicitly).",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-1060625029",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6194606549,
      "node_id": "HRFPE_lADOAP4Jqs4jOs99zwAAAAFxOjHV",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6194606549",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T12:46:10Z"
    },
    {
      "event": "commented",
      "id": 1060650542,
      "node_id": "IC_kwDOAP4Jqs4_OD4u",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1060650542",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T12:46:41Z",
      "updated_at": "2022-03-07T12:46:41Z",
      "author_association": "MEMBER",
      "body": "Forced push to fix the CI failure.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-1060650542",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "reviewed",
      "id": 917421728,
      "node_id": "PRR_kwDOAP4Jqs42rr6g",
      "url": null,
      "actor": null,
      "commit_id": "a1a9e696cfd6bbf51d68f4fb7ce08c0f34a68bc1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "concept ACK, can confirm that \"counter_test\" for the 2^32 byte boundary (number 12) fails when reverting the counter fix and building a 32-bit binary.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#pullrequestreview-917421728",
      "submitted_at": "2022-03-22T15:11:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6290183705,
      "node_id": "HRFPE_lADOAP4Jqs4jOs99zwAAAAF27JYZ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6290183705",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-23T09:52:53Z"
    },
    {
      "event": "commented",
      "id": 1076171396,
      "node_id": "IC_kwDOAP4Jqs5AJRKE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1076171396",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-23T09:57:02Z",
      "updated_at": "2022-03-23T09:57:18Z",
      "author_association": "MEMBER",
      "body": "> can confirm that \"counter_test\" for the 2^32 byte boundary (number 12) fails when reverting the counter fix and building a 32-bit binary.\r\n\r\nBy the way , a nice thing is that the pure existence of the tests will make the compiler warn in the case of a 32-bit counter (because the tests will then try to set a too large constant for the counter).",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-1076171396",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "reviewed",
      "id": 918741322,
      "node_id": "PRR_kwDOAP4Jqs42wuFK",
      "url": null,
      "actor": null,
      "commit_id": "da38fb7cf2be9799a4e0137128aa096f81e612e8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#pullrequestreview-918741322",
      "submitted_at": "2022-03-23T13:06:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGY4ZDkxNzQzNTczOTFhYjRiZjY1YTJmNGQ5ZDljZmI4MDM5ZGM1OTI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "tree": {
        "sha": "d2a3694d88e7071e0c6215164e5e879b7c72d65b",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/d2a3694d88e7071e0c6215164e5e879b7c72d65b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/9b514ce1d25f1944c549ead30cc84367d616e0e6",
          "sha": "9b514ce1d25f1944c549ead30cc84367d616e0e6",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/9b514ce1d25f1944c549ead30cc84367d616e0e6"
        }
      ],
      "message": "Add SHA256 bit counter tests",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-03-23T15:33:44Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2020-04-22T09:21:08Z"
      },
      "sha": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6292674946,
      "node_id": "HRFPE_lADOAP4Jqs4jOs99zwAAAAF3EpmC",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6292674946",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-23T15:33:52Z"
    },
    {
      "event": "reviewed",
      "id": 919038627,
      "node_id": "PRR_kwDOAP4Jqs42x2qj",
      "url": null,
      "actor": null,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#pullrequestreview-919038627",
      "submitted_at": "2022-03-23T16:03:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
    },
    {
      "event": "commented",
      "id": 1078408476,
      "node_id": "IC_kwDOAP4Jqs5ARzUc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1078408476",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T21:35:55Z",
      "updated_at": "2022-03-24T21:35:55Z",
      "author_association": "MEMBER",
      "body": "utACK f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#issuecomment-1078408476",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/731"
    },
    {
      "event": "merged",
      "id": 6303374204,
      "node_id": "ME_lADOAP4Jqs4jOs99zwAAAAF3tdt8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6303374204",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "587239dbe392bcfb6a257214faed0b10b912714c",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/587239dbe392bcfb6a257214faed0b10b912714c",
      "created_at": "2022-03-24T22:54:50Z"
    },
    {
      "event": "closed",
      "id": 6303374236,
      "node_id": "CE_lADOAP4Jqs4jOs99zwAAAAF3tduc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6303374236",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T22:54:50Z"
    },
    {
      "event": "referenced",
      "id": 6333589806,
      "node_id": "REFE_lADOAP4Jqs4jOs99zwAAAAF5guku",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6333589806",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "465d05253aaff1e06165a1777e70da16e14d2519",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/465d05253aaff1e06165a1777e70da16e14d2519",
      "created_at": "2022-03-30T09:43:02Z"
    },
    {
      "event": "referenced",
      "id": 6352394822,
      "node_id": "REFE_lADOAP4Jqs4jOs99zwAAAAF6odpG",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6352394822",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6c0aecf72b1f4290f50302440065392715d6240a",
      "commit_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/commits/6c0aecf72b1f4290f50302440065392715d6240a",
      "created_at": "2022-04-01T13:21:05Z"
    },
    {
      "event": "referenced",
      "id": 6382809722,
      "node_id": "REFE_lADOAP4Jqs4jOs99zwAAAAF8cfJ6",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6382809722",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "afb7a6fe06a33956ef43429d31f5934448f6e671",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/afb7a6fe06a33956ef43429d31f5934448f6e671",
      "created_at": "2022-04-06T19:25:27Z"
    },
    {
      "event": "referenced",
      "id": 6681498825,
      "node_id": "REFE_lADOAP4Jqs4jOs99zwAAAAGOP5TJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6681498825",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "35d6112a72ef419af9cb1ee3ffd9e28ad0df04a0",
      "commit_url": "https://api.github.com/repos/gwillen/elements/commits/35d6112a72ef419af9cb1ee3ffd9e28ad0df04a0",
      "created_at": "2022-05-25T22:22:21Z"
    },
    {
      "event": "referenced",
      "id": 7059808252,
      "node_id": "REFE_lADOAP4Jqs4jOs99zwAAAAGkzB_8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7059808252",
      "actor": {
        "login": "patricklodder",
        "id": 1410115,
        "node_id": "MDQ6VXNlcjE0MTAxMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1410115?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/patricklodder",
        "html_url": "https://github.com/patricklodder",
        "followers_url": "https://api.github.com/users/patricklodder/followers",
        "following_url": "https://api.github.com/users/patricklodder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/patricklodder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/patricklodder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/patricklodder/subscriptions",
        "organizations_url": "https://api.github.com/users/patricklodder/orgs",
        "repos_url": "https://api.github.com/users/patricklodder/repos",
        "events_url": "https://api.github.com/users/patricklodder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/patricklodder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "21badcf9d23f51d831a2069a3d61ad320de417ea",
      "commit_url": "https://api.github.com/repos/patricklodder/dogecoin/commits/21badcf9d23f51d831a2069a3d61ad320de417ea",
      "created_at": "2022-07-25T21:21:03Z"
    },
    {
      "event": "referenced",
      "id": 7083242522,
      "node_id": "REFE_lADOAP4Jqs4jOs99zwAAAAGmMbQa",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7083242522",
      "actor": {
        "login": "patricklodder",
        "id": 1410115,
        "node_id": "MDQ6VXNlcjE0MTAxMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1410115?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/patricklodder",
        "html_url": "https://github.com/patricklodder",
        "followers_url": "https://api.github.com/users/patricklodder/followers",
        "following_url": "https://api.github.com/users/patricklodder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/patricklodder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/patricklodder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/patricklodder/subscriptions",
        "organizations_url": "https://api.github.com/users/patricklodder/orgs",
        "repos_url": "https://api.github.com/users/patricklodder/repos",
        "events_url": "https://api.github.com/users/patricklodder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/patricklodder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "03002a9013ffb5efdccfbae3f3510f4a44c0da20",
      "commit_url": "https://api.github.com/repos/patricklodder/dogecoin/commits/03002a9013ffb5efdccfbae3f3510f4a44c0da20",
      "created_at": "2022-07-28T16:53:45Z"
    },
    {
      "event": "referenced",
      "id": 7125520595,
      "node_id": "REFE_lADOAP4Jqs4jOs99zwAAAAGottDT",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7125520595",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3a0652a777202bd7b56ee68d1e56f240c42a459f",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/3a0652a777202bd7b56ee68d1e56f240c42a459f",
      "created_at": "2022-08-04T08:12:00Z"
    },
    {
      "event": "referenced",
      "id": 9068914584,
      "node_id": "REFE_lADOAP4Jqs4jOs99zwAAAAIcjKeY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9068914584",
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "522190d5c3686cae522b507d5f2366f580bfc586",
      "commit_url": "https://api.github.com/repos/str4d/zcash/commits/522190d5c3686cae522b507d5f2366f580bfc586",
      "created_at": "2023-04-21T15:40:11Z"
    },
    {
      "event": "referenced",
      "id": 9425177871,
      "node_id": "REFE_lADOAP4Jqs4jOs99zwAAAAIxyM0P",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9425177871",
      "actor": {
        "login": "vmta",
        "id": 23269741,
        "node_id": "MDQ6VXNlcjIzMjY5NzQx",
        "avatar_url": "https://avatars.githubusercontent.com/u/23269741?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vmta",
        "html_url": "https://github.com/vmta",
        "followers_url": "https://api.github.com/users/vmta/followers",
        "following_url": "https://api.github.com/users/vmta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vmta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vmta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vmta/subscriptions",
        "organizations_url": "https://api.github.com/users/vmta/orgs",
        "repos_url": "https://api.github.com/users/vmta/repos",
        "events_url": "https://api.github.com/users/vmta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vmta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e1120c94a1fe2208bfe6c939b4f67f6d37ce931c",
      "commit_url": "https://api.github.com/repos/umkoin/umkoin/commits/e1120c94a1fe2208bfe6c939b4f67f6d37ce931c",
      "created_at": "2023-06-04T15:42:10Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/413326188",
      "pull_request_review_id": 398581892,
      "id": 413326188,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMyNjE4OA==",
      "diff_hunk": "@@ -408,41 +408,120 @@ void run_scratch_tests(void) {\n /***** HASH TESTS *****/\n \n void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\"\n+        /*  Uncomment for test with extremely long input message. */\n+        /*, \"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno\" */\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5, 16777216",
      "path": "src/tests.c",
      "position": null,
      "original_position": 17,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's the significance of the 1000000/5 \"aaa\" test?",
      "created_at": "2020-04-22T20:55:25Z",
      "updated_at": "2020-04-22T21:06:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r413326188",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/413326188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/413724700",
      "pull_request_review_id": 398993801,
      "id": 413724700,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcyNDcwMA==",
      "diff_hunk": "@@ -408,41 +408,120 @@ void run_scratch_tests(void) {\n /***** HASH TESTS *****/\n \n void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\"\n+        /*  Uncomment for test with extremely long input message. */\n+        /*, \"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno\" */\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5, 16777216",
      "path": "src/tests.c",
      "position": null,
      "original_position": 17,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": 413326188,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not particularly significant. It's a 1 million bytes test. It's also taken from https://www.di-mgt.com.au/sha_testvectors.html, see the commit message. I left it in because I can't notice a difference of test running time in practice and it won't hurt. ",
      "created_at": "2020-04-23T11:08:23Z",
      "updated_at": "2020-04-23T11:08:24Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r413724700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/413724700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/512570120",
      "pull_request_review_id": 517545045,
      "id": 512570120,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU3MDEyMA==",
      "diff_hunk": "@@ -408,41 +408,120 @@ void run_scratch_tests(void) {\n /***** HASH TESTS *****/\n \n void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\"\n+        /*  Uncomment for test with extremely long input message. */\n+        /*, \"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno\" */\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5, 16777216",
      "path": "src/tests.c",
      "position": null,
      "original_position": 17,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": 413326188,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The difference is about 3 seconds (10%) in normal, no valgrind, tests.",
      "created_at": "2020-10-27T10:22:37Z",
      "updated_at": "2020-10-27T10:22:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r512570120",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/512570120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/512574141",
      "pull_request_review_id": 517550314,
      "id": 512574141,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU3NDE0MQ==",
      "diff_hunk": "@@ -408,41 +408,120 @@ void run_scratch_tests(void) {\n /***** HASH TESTS *****/\n \n void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\"\n+        /*  Uncomment for test with extremely long input message. */\n+        /*, \"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno\" */\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5, 16777216\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n+        {0x50, 0xe7, 0x2a, 0x0e, 0x26, 0x44, 0x2f, 0xe2, 0x55, 0x2d, 0xc3, 0x93, 0x8a, 0xc5, 0x86, 0x58, 0x22, 0x8c, 0x0c, 0xbf ,0xb1, 0xd2, 0xca, 0x87, 0x2a, 0xe4, 0x35, 0x26, 0x6f, 0xcd, 0x05, 0x5e}\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i;\n+    for (i = 0; i < sizeof(inputs)/sizeof(inputs[0]); i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n-        secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n-        secp256k1_sha256_finalize(&hasher, out);\n-        CHECK(memcmp(out, outputs[i], 32) == 0);\n+        unsigned int j;\n+        /* Skip the simple test (and rely only on the \"split\" test below) for long inputs to save time. */\n+        if (repeat[i] <= 1000000) {\n+            j = repeat[i];\n+            secp256k1_sha256_initialize(&hasher);\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+                j--;\n+            }\n+            secp256k1_sha256_finalize(&hasher, out);\n+            CHECK(memcmp(out, outputs[i], 32) == 0);\n+        }\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_rand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(memcmp(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+void run_sha256_counter_tests(void) {",
      "path": "src/tests.c",
      "position": 115,
      "original_position": 71,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would make sense to add a comment here that there exists code that generates this and where it is.\r\n\r\nFwiw I can't run it. After installing sha256 with pip I get the error\r\n```\r\nTraceback (most recent call last):\r\n  File \"py.py\", line 22, in <module>\r\n    hasher_copy = copy(hasher)\r\n  File \"/usr/lib/python3.8/copy.py\", line 92, in copy\r\n    rv = reductor(4)\r\nTypeError: cannot pickle 'sha256.sha256' object\r\n```\r\nThat's why everyone should use nix by the way :) I don't think it's particularly important to recreate the test cases as they shouldn't change and it's unlikely that we want to add more (otherwise I would have also suggested to move the code from the commit message into the contrib directory).",
      "created_at": "2020-10-27T10:28:56Z",
      "updated_at": "2020-10-27T10:29:17Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r512574141",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/512574141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/512928438",
      "pull_request_review_id": 518013659,
      "id": 512928438,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyODQzOA==",
      "diff_hunk": "@@ -16,7 +16,13 @@ typedef struct {\n     uint64_t bytes;\n } secp256k1_sha256;\n \n+\n+static const secp256k1_sha256 secp256k1_sha256_initial_state = {\n+    {UINT32_C(0x6a09e667), UINT32_C(0xbb67ae85), UINT32_C(0x3c6ef372), UINT32_C(0xa54ff53a), UINT32_C(0x510e527f), UINT32_C(0x9b05688c), UINT32_C(0x1f83d9ab), UINT32_C(0x5be0cd19)},",
      "path": "src/hash.h",
      "position": null,
      "original_position": 6,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "6823d3ba67f5d5d61bb0599f076487fd6e648f5e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: I don't think these `UINT32_C` contribute anything. Integer constants take on a type that fits them, up to `long` / `unsigned long`, which are IIRC guaranteed to be at least 32 bits.",
      "created_at": "2020-10-27T18:21:41Z",
      "updated_at": "2020-10-27T18:25:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r512928438",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/512928438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/512930595",
      "pull_request_review_id": 518013659,
      "id": 512930595,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkzMDU5NQ==",
      "diff_hunk": "@@ -408,41 +408,120 @@ void run_scratch_tests(void) {\n /***** HASH TESTS *****/\n \n void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\"\n+        /*  Uncomment for test with extremely long input message. */\n+        /*, \"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno\" */\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5, 16777216\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n+        {0x50, 0xe7, 0x2a, 0x0e, 0x26, 0x44, 0x2f, 0xe2, 0x55, 0x2d, 0xc3, 0x93, 0x8a, 0xc5, 0x86, 0x58, 0x22, 0x8c, 0x0c, 0xbf ,0xb1, 0xd2, 0xca, 0x87, 0x2a, 0xe4, 0x35, 0x26, 0x6f, 0xcd, 0x05, 0x5e}\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i;\n+    for (i = 0; i < sizeof(inputs)/sizeof(inputs[0]); i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n-        secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n-        secp256k1_sha256_finalize(&hasher, out);\n-        CHECK(memcmp(out, outputs[i], 32) == 0);\n+        unsigned int j;\n+        /* Skip the simple test (and rely only on the \"split\" test below) for long inputs to save time. */\n+        if (repeat[i] <= 1000000) {\n+            j = repeat[i];\n+            secp256k1_sha256_initialize(&hasher);\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+                j--;\n+            }\n+            secp256k1_sha256_finalize(&hasher, out);\n+            CHECK(memcmp(out, outputs[i], 32) == 0);\n+        }\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_rand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(memcmp(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+void run_sha256_counter_tests(void) {",
      "path": "src/tests.c",
      "position": 115,
      "original_position": 71,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": 512574141,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I get the same error.",
      "created_at": "2020-10-27T18:24:57Z",
      "updated_at": "2020-10-27T18:25:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r512930595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/512930595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/767208918",
      "pull_request_review_id": 829572421,
      "id": 767208918,
      "node_id": "PRRC_kwDOAP4Jqs4tuq3W",
      "diff_hunk": "@@ -148,10 +144,12 @@ static void secp256k1_sha256_write(secp256k1_sha256 *hash, const unsigned char *\n }\n \n static void secp256k1_sha256_finalize(secp256k1_sha256 *hash, unsigned char *out32) {\n-    static const unsigned char pad[64] = {0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+    static const unsigned char pad[64] = {0x80};\n     uint32_t sizedesc[2];\n     uint32_t out[8];\n     int i = 0;\n+    /* The maximum message size of SHA256 is 2^64-1 bits. */\n+    VERIFY_CHECK(hash->bytes < ((uint64_t)1 << 56));",
      "path": "src/hash_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": null,
      "user": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't this be `(unint64_t)1 << 61`? ((2^64)/8 bytes)",
      "created_at": "2021-12-12T00:49:56Z",
      "updated_at": "2021-12-12T01:20:56Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r767208918",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/767208918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/768634878",
      "pull_request_review_id": 831453742,
      "id": 768634878,
      "node_id": "PRRC_kwDOAP4Jqs4t0G_-",
      "diff_hunk": "@@ -148,10 +144,12 @@ static void secp256k1_sha256_write(secp256k1_sha256 *hash, const unsigned char *\n }\n \n static void secp256k1_sha256_finalize(secp256k1_sha256 *hash, unsigned char *out32) {\n-    static const unsigned char pad[64] = {0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+    static const unsigned char pad[64] = {0x80};\n     uint32_t sizedesc[2];\n     uint32_t out[8];\n     int i = 0;\n+    /* The maximum message size of SHA256 is 2^64-1 bits. */\n+    VERIFY_CHECK(hash->bytes < ((uint64_t)1 << 56));",
      "path": "src/hash_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": 767208918,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oh indeed.",
      "created_at": "2021-12-14T12:52:45Z",
      "updated_at": "2021-12-14T12:52:45Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r768634878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/768634878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/791148812",
      "pull_request_review_id": 861514306,
      "id": 791148812,
      "node_id": "PRRC_kwDOAP4Jqs4vJ_kM",
      "diff_hunk": "@@ -408,41 +408,120 @@ void run_scratch_tests(void) {\n /***** HASH TESTS *****/\n \n void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\"\n+        /*  Uncomment for test with extremely long input message. */\n+        /*, \"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno\" */\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5, 16777216",
      "path": "src/tests.c",
      "position": null,
      "original_position": 17,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": 413326188,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should use the `CONDITIONAL_TEST` introduced in #1049 .",
      "created_at": "2022-01-24T21:03:09Z",
      "updated_at": "2022-01-24T21:03:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r791148812",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/791148812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/820645878",
      "pull_request_review_id": 901606060,
      "id": 820645878,
      "node_id": "PRRC_kwDOAP4Jqs4w6g_2",
      "diff_hunk": "@@ -408,41 +408,120 @@ void run_scratch_tests(void) {\n /***** HASH TESTS *****/\n \n void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\"\n+        /*  Uncomment for test with extremely long input message. */\n+        /*, \"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno\" */\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5, 16777216",
      "path": "src/tests.c",
      "position": null,
      "original_position": 17,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": 413326188,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2022-03-07T12:11:12Z",
      "updated_at": "2022-03-07T12:11:12Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r820645878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/820645878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/820645967",
      "pull_request_review_id": 901606180,
      "id": 820645967,
      "node_id": "PRRC_kwDOAP4Jqs4w6hBP",
      "diff_hunk": "@@ -148,10 +144,12 @@ static void secp256k1_sha256_write(secp256k1_sha256 *hash, const unsigned char *\n }\n \n static void secp256k1_sha256_finalize(secp256k1_sha256 *hash, unsigned char *out32) {\n-    static const unsigned char pad[64] = {0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+    static const unsigned char pad[64] = {0x80};\n     uint32_t sizedesc[2];\n     uint32_t out[8];\n     int i = 0;\n+    /* The maximum message size of SHA256 is 2^64-1 bits. */\n+    VERIFY_CHECK(hash->bytes < ((uint64_t)1 << 56));",
      "path": "src/hash_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": 767208918,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2022-03-07T12:11:19Z",
      "updated_at": "2022-03-07T12:11:19Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r820645967",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/820645967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/820646040",
      "pull_request_review_id": 901606282,
      "id": 820646040,
      "node_id": "PRRC_kwDOAP4Jqs4w6hCY",
      "diff_hunk": "@@ -16,7 +16,13 @@ typedef struct {\n     uint64_t bytes;\n } secp256k1_sha256;\n \n+\n+static const secp256k1_sha256 secp256k1_sha256_initial_state = {\n+    {UINT32_C(0x6a09e667), UINT32_C(0xbb67ae85), UINT32_C(0x3c6ef372), UINT32_C(0xa54ff53a), UINT32_C(0x510e527f), UINT32_C(0x9b05688c), UINT32_C(0x1f83d9ab), UINT32_C(0x5be0cd19)},",
      "path": "src/hash.h",
      "position": null,
      "original_position": 6,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "6823d3ba67f5d5d61bb0599f076487fd6e648f5e",
      "in_reply_to_id": 512928438,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2022-03-07T12:11:25Z",
      "updated_at": "2022-03-07T12:11:25Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r820646040",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/820646040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/820649529",
      "pull_request_review_id": 901611428,
      "id": 820649529,
      "node_id": "PRRC_kwDOAP4Jqs4w6h45",
      "diff_hunk": "@@ -408,41 +408,120 @@ void run_scratch_tests(void) {\n /***** HASH TESTS *****/\n \n void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\"\n+        /*  Uncomment for test with extremely long input message. */\n+        /*, \"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno\" */\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5, 16777216\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n+        {0x50, 0xe7, 0x2a, 0x0e, 0x26, 0x44, 0x2f, 0xe2, 0x55, 0x2d, 0xc3, 0x93, 0x8a, 0xc5, 0x86, 0x58, 0x22, 0x8c, 0x0c, 0xbf ,0xb1, 0xd2, 0xca, 0x87, 0x2a, 0xe4, 0x35, 0x26, 0x6f, 0xcd, 0x05, 0x5e}\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i;\n+    for (i = 0; i < sizeof(inputs)/sizeof(inputs[0]); i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n-        secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n-        secp256k1_sha256_finalize(&hasher, out);\n-        CHECK(memcmp(out, outputs[i], 32) == 0);\n+        unsigned int j;\n+        /* Skip the simple test (and rely only on the \"split\" test below) for long inputs to save time. */\n+        if (repeat[i] <= 1000000) {\n+            j = repeat[i];\n+            secp256k1_sha256_initialize(&hasher);\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+                j--;\n+            }\n+            secp256k1_sha256_finalize(&hasher, out);\n+            CHECK(memcmp(out, outputs[i], 32) == 0);\n+        }\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_rand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(memcmp(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+void run_sha256_counter_tests(void) {",
      "path": "src/tests.c",
      "position": 115,
      "original_position": 71,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": 512574141,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe retry `pip install sha256`. They recently released a new version which claims to have Python 3 support. Maybe that fixes the problem (though I have no idea why this was working for me....)",
      "created_at": "2022-03-07T12:16:39Z",
      "updated_at": "2022-03-07T12:16:39Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r820649529",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/820649529"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/832305335",
      "pull_request_review_id": 917419749,
      "id": 832305335,
      "node_id": "PRRC_kwDOAP4Jqs4xm_i3",
      "diff_hunk": "@@ -408,41 +408,120 @@ void run_scratch_tests(void) {\n /***** HASH TESTS *****/\n \n void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\"\n+        /*  Uncomment for test with extremely long input message. */\n+        /*, \"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmno\" */\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5, 16777216\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n+        {0x50, 0xe7, 0x2a, 0x0e, 0x26, 0x44, 0x2f, 0xe2, 0x55, 0x2d, 0xc3, 0x93, 0x8a, 0xc5, 0x86, 0x58, 0x22, 0x8c, 0x0c, 0xbf ,0xb1, 0xd2, 0xca, 0x87, 0x2a, 0xe4, 0x35, 0x26, 0x6f, 0xcd, 0x05, 0x5e}\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i;\n+    for (i = 0; i < sizeof(inputs)/sizeof(inputs[0]); i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n-        secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n-        secp256k1_sha256_finalize(&hasher, out);\n-        CHECK(memcmp(out, outputs[i], 32) == 0);\n+        unsigned int j;\n+        /* Skip the simple test (and rely only on the \"split\" test below) for long inputs to save time. */\n+        if (repeat[i] <= 1000000) {\n+            j = repeat[i];\n+            secp256k1_sha256_initialize(&hasher);\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+                j--;\n+            }\n+            secp256k1_sha256_finalize(&hasher, out);\n+            CHECK(memcmp(out, outputs[i], 32) == 0);\n+        }\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_rand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(memcmp(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+void run_sha256_counter_tests(void) {",
      "path": "src/tests.c",
      "position": 115,
      "original_position": 71,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "b602b7bec51f148c4638b38edfab947ff9e2da47",
      "in_reply_to_id": 512574141,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Works for me now (python 3).",
      "created_at": "2022-03-22T15:05:14Z",
      "updated_at": "2022-03-22T15:05:15Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r832305335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/832305335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/832306782",
      "pull_request_review_id": 917421728,
      "id": 832306782,
      "node_id": "PRRC_kwDOAP4Jqs4xm_5e",
      "diff_hunk": "@@ -451,42 +451,164 @@ void run_ctz_tests(void) {\n \n /***** HASH TESTS *****/\n \n-void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+void run_sha256_known_output_tests(void) {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\",\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i, ninputs;\n+\n+    /* Skip last input vector for low iteration counts */\n+    ninputs = sizeof(inputs)/sizeof(inputs[0]) - 1;\n+    CONDITIONAL_TEST(16, \"run_sha256_known_output_tests 1000000\") ninputs++;\n+\n+    for (i = 0; i < ninputs; i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n+        unsigned int j;\n+        /* 1. Run: simply write the input bytestrings */\n+        j = repeat[i];\n         secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+        while (j > 0) {\n+            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+            j--;\n+        }\n         secp256k1_sha256_finalize(&hasher, out);\n         CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n+        /* 2. Run: split the input bytestrings randomly before writing */\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_testrand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+/** SHA256 bit counter tests\n+\n+The tests verify that the SHA256 bit counter doesn't wrap around at bit lengths\n+20 to 34. This wide range aims at being independent of the implementation of the\n+counter and it catches multiple natural 32-bit overflows (e.g., counting bits,\n+counting bytes, counting blocks, ...).\n+\n+The test vectors have been generated using following Python script which relies\n+on https://github.com/cloudtools/sha256/ (v0.3 on Python v3.10.2).\n+\n+```\n+from sha256 import sha256\n+from copy import copy\n+\n+def midstate_c_definition(hasher):\n+    ret  = '    {{0x' + hasher.state[0].hex('_', 4).replace('_', ', 0x') + '},\\n'\n+    ret += '    {0x00}, ' + str(hasher.state[1]) + '}'",
      "path": "src/tests.c",
      "position": null,
      "original_position": 87,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "a1a9e696cfd6bbf51d68f4fb7ce08c0f34a68bc1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    ret += '    {0x00}, ' + hex(str(hasher.state[1])) + '}'\r\n```\r\nis required to get the same output as the test vectors in tests.c",
      "created_at": "2022-03-22T15:06:28Z",
      "updated_at": "2022-03-22T15:11:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r832306782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/832306782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/832309943",
      "pull_request_review_id": 917421728,
      "id": 832309943,
      "node_id": "PRRC_kwDOAP4Jqs4xnAq3",
      "diff_hunk": "@@ -451,42 +451,164 @@ void run_ctz_tests(void) {\n \n /***** HASH TESTS *****/\n \n-void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+void run_sha256_known_output_tests(void) {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\",\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i, ninputs;\n+\n+    /* Skip last input vector for low iteration counts */\n+    ninputs = sizeof(inputs)/sizeof(inputs[0]) - 1;\n+    CONDITIONAL_TEST(16, \"run_sha256_known_output_tests 1000000\") ninputs++;\n+\n+    for (i = 0; i < ninputs; i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n+        unsigned int j;\n+        /* 1. Run: simply write the input bytestrings */\n+        j = repeat[i];\n         secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+        while (j > 0) {\n+            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+            j--;\n+        }\n         secp256k1_sha256_finalize(&hasher, out);\n         CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n+        /* 2. Run: split the input bytestrings randomly before writing */\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_testrand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+/** SHA256 bit counter tests\n+\n+The tests verify that the SHA256 bit counter doesn't wrap around at bit lengths",
      "path": "src/tests.c",
      "position": null,
      "original_position": 73,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "a1a9e696cfd6bbf51d68f4fb7ce08c0f34a68bc1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThe tests verify that the SHA256 bit counter doesn't wrap around at byte lengths\r\n```",
      "created_at": "2022-03-22T15:09:03Z",
      "updated_at": "2022-03-22T15:11:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r832309943",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/832309943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/833062762",
      "pull_request_review_id": 918490831,
      "id": 833062762,
      "node_id": "PRRC_kwDOAP4Jqs4xp4dq",
      "diff_hunk": "@@ -451,42 +451,164 @@ void run_ctz_tests(void) {\n \n /***** HASH TESTS *****/\n \n-void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+void run_sha256_known_output_tests(void) {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\",\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i, ninputs;\n+\n+    /* Skip last input vector for low iteration counts */\n+    ninputs = sizeof(inputs)/sizeof(inputs[0]) - 1;\n+    CONDITIONAL_TEST(16, \"run_sha256_known_output_tests 1000000\") ninputs++;\n+\n+    for (i = 0; i < ninputs; i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n+        unsigned int j;\n+        /* 1. Run: simply write the input bytestrings */\n+        j = repeat[i];\n         secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+        while (j > 0) {\n+            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+            j--;\n+        }\n         secp256k1_sha256_finalize(&hasher, out);\n         CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n+        /* 2. Run: split the input bytestrings randomly before writing */\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_testrand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+/** SHA256 bit counter tests\n+\n+The tests verify that the SHA256 bit counter doesn't wrap around at bit lengths\n+20 to 34. This wide range aims at being independent of the implementation of the\n+counter and it catches multiple natural 32-bit overflows (e.g., counting bits,\n+counting bytes, counting blocks, ...).\n+\n+The test vectors have been generated using following Python script which relies\n+on https://github.com/cloudtools/sha256/ (v0.3 on Python v3.10.2).\n+\n+```\n+from sha256 import sha256\n+from copy import copy\n+\n+def midstate_c_definition(hasher):\n+    ret  = '    {{0x' + hasher.state[0].hex('_', 4).replace('_', ', 0x') + '},\\n'\n+    ret += '    {0x00}, ' + str(hasher.state[1]) + '}'",
      "path": "src/tests.c",
      "position": null,
      "original_position": 87,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "a1a9e696cfd6bbf51d68f4fb7ce08c0f34a68bc1",
      "in_reply_to_id": 832306782,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oh fixed.",
      "created_at": "2022-03-23T09:53:18Z",
      "updated_at": "2022-03-23T09:53:18Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r833062762",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/833062762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/833063376",
      "pull_request_review_id": 918491731,
      "id": 833063376,
      "node_id": "PRRC_kwDOAP4Jqs4xp4nQ",
      "diff_hunk": "@@ -451,42 +451,164 @@ void run_ctz_tests(void) {\n \n /***** HASH TESTS *****/\n \n-void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+void run_sha256_known_output_tests(void) {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\",\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i, ninputs;\n+\n+    /* Skip last input vector for low iteration counts */\n+    ninputs = sizeof(inputs)/sizeof(inputs[0]) - 1;\n+    CONDITIONAL_TEST(16, \"run_sha256_known_output_tests 1000000\") ninputs++;\n+\n+    for (i = 0; i < ninputs; i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n+        unsigned int j;\n+        /* 1. Run: simply write the input bytestrings */\n+        j = repeat[i];\n         secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+        while (j > 0) {\n+            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+            j--;\n+        }\n         secp256k1_sha256_finalize(&hasher, out);\n         CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n+        /* 2. Run: split the input bytestrings randomly before writing */\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_testrand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+/** SHA256 bit counter tests\n+\n+The tests verify that the SHA256 bit counter doesn't wrap around at bit lengths",
      "path": "src/tests.c",
      "position": null,
      "original_position": 73,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "a1a9e696cfd6bbf51d68f4fb7ce08c0f34a68bc1",
      "in_reply_to_id": 832309943,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah yes, I reworded the sentence to make this even clearer.",
      "created_at": "2022-03-23T09:53:51Z",
      "updated_at": "2022-03-23T09:53:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r833063376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/833063376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/833238270",
      "pull_request_review_id": 918737720,
      "id": 833238270,
      "node_id": "PRRC_kwDOAP4Jqs4xqjT-",
      "diff_hunk": "@@ -451,42 +451,164 @@ void run_ctz_tests(void) {\n \n /***** HASH TESTS *****/\n \n-void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+void run_sha256_known_output_tests(void) {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\",\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i, ninputs;\n+\n+    /* Skip last input vector for low iteration counts */\n+    ninputs = sizeof(inputs)/sizeof(inputs[0]) - 1;\n+    CONDITIONAL_TEST(16, \"run_sha256_known_output_tests 1000000\") ninputs++;\n+\n+    for (i = 0; i < ninputs; i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n+        unsigned int j;\n+        /* 1. Run: simply write the input bytestrings */\n+        j = repeat[i];\n         secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+        while (j > 0) {\n+            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+            j--;\n+        }\n         secp256k1_sha256_finalize(&hasher, out);\n         CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n+        /* 2. Run: split the input bytestrings randomly before writing */\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_testrand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+/** SHA256 bit counter tests\n+\n+The tests verify that the SHA256 bit counter doesn't wrap around at bit lengths",
      "path": "src/tests.c",
      "position": null,
      "original_position": 73,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "a1a9e696cfd6bbf51d68f4fb7ce08c0f34a68bc1",
      "in_reply_to_id": 832309943,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah, much better",
      "created_at": "2022-03-23T13:05:00Z",
      "updated_at": "2022-03-23T13:05:00Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r833238270",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/833238270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/833240201",
      "pull_request_review_id": 918741322,
      "id": 833240201,
      "node_id": "PRRC_kwDOAP4Jqs4xqjyJ",
      "diff_hunk": "@@ -451,42 +451,165 @@ void run_ctz_tests(void) {\n \n /***** HASH TESTS *****/\n \n-void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+void run_sha256_known_output_tests(void) {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\",\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i, ninputs;\n+\n+    /* Skip last input vector for low iteration counts */\n+    ninputs = sizeof(inputs)/sizeof(inputs[0]) - 1;\n+    CONDITIONAL_TEST(16, \"run_sha256_known_output_tests 1000000\") ninputs++;\n+\n+    for (i = 0; i < ninputs; i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n+        unsigned int j;\n+        /* 1. Run: simply write the input bytestrings */\n+        j = repeat[i];\n         secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+        while (j > 0) {\n+            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+            j--;\n+        }\n         secp256k1_sha256_finalize(&hasher, out);\n         CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n+        /* 2. Run: split the input bytestrings randomly before writing */\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_testrand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+/** SHA256 counter tests\n+\n+The tests verify that the SHA256 counter doesn't wrap around at message lengths\n+20^i bytes to 33^i bytes. This wide range aims at being independent of the",
      "path": "src/tests.c",
      "position": null,
      "original_position": 74,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "da38fb7cf2be9799a4e0137128aa096f81e612e8",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't this be 2^20 bytes and 2^33 bytes?",
      "created_at": "2022-03-23T13:06:31Z",
      "updated_at": "2022-03-23T13:06:35Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r833240201",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/833240201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/833412878",
      "pull_request_review_id": 918987189,
      "id": 833412878,
      "node_id": "PRRC_kwDOAP4Jqs4xrN8O",
      "diff_hunk": "@@ -451,42 +451,165 @@ void run_ctz_tests(void) {\n \n /***** HASH TESTS *****/\n \n-void run_sha256_tests(void) {\n-    static const char *inputs[8] = {\n+void run_sha256_known_output_tests(void) {\n+    static const char *inputs[] = {\n         \"\", \"abc\", \"message digest\", \"secure hash algorithm\", \"SHA256 is considered to be safe\",\n         \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\",\n         \"For this sample, this 63-byte string will be used as input data\",\n-        \"This is exactly 64 bytes long, not counting the terminating byte\"\n+        \"This is exactly 64 bytes long, not counting the terminating byte\",\n+        \"aaaaa\",\n     };\n-    static const unsigned char outputs[8][32] = {\n+    static const unsigned int repeat[] = {\n+        1, 1, 1, 1, 1, 1, 1, 1, 1000000/5\n+    };\n+    static const unsigned char outputs[][32] = {\n         {0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55},\n         {0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23, 0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad},\n         {0xf7, 0x84, 0x6f, 0x55, 0xcf, 0x23, 0xe1, 0x4e, 0xeb, 0xea, 0xb5, 0xb4, 0xe1, 0x55, 0x0c, 0xad, 0x5b, 0x50, 0x9e, 0x33, 0x48, 0xfb, 0xc4, 0xef, 0xa3, 0xa1, 0x41, 0x3d, 0x39, 0x3c, 0xb6, 0x50},\n         {0xf3, 0x0c, 0xeb, 0x2b, 0xb2, 0x82, 0x9e, 0x79, 0xe4, 0xca, 0x97, 0x53, 0xd3, 0x5a, 0x8e, 0xcc, 0x00, 0x26, 0x2d, 0x16, 0x4c, 0xc0, 0x77, 0x08, 0x02, 0x95, 0x38, 0x1c, 0xbd, 0x64, 0x3f, 0x0d},\n         {0x68, 0x19, 0xd9, 0x15, 0xc7, 0x3f, 0x4d, 0x1e, 0x77, 0xe4, 0xe1, 0xb5, 0x2d, 0x1f, 0xa0, 0xf9, 0xcf, 0x9b, 0xea, 0xea, 0xd3, 0x93, 0x9f, 0x15, 0x87, 0x4b, 0xd9, 0x88, 0xe2, 0xa2, 0x36, 0x30},\n         {0x24, 0x8d, 0x6a, 0x61, 0xd2, 0x06, 0x38, 0xb8, 0xe5, 0xc0, 0x26, 0x93, 0x0c, 0x3e, 0x60, 0x39, 0xa3, 0x3c, 0xe4, 0x59, 0x64, 0xff, 0x21, 0x67, 0xf6, 0xec, 0xed, 0xd4, 0x19, 0xdb, 0x06, 0xc1},\n         {0xf0, 0x8a, 0x78, 0xcb, 0xba, 0xee, 0x08, 0x2b, 0x05, 0x2a, 0xe0, 0x70, 0x8f, 0x32, 0xfa, 0x1e, 0x50, 0xc5, 0xc4, 0x21, 0xaa, 0x77, 0x2b, 0xa5, 0xdb, 0xb4, 0x06, 0xa2, 0xea, 0x6b, 0xe3, 0x42},\n-        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8}\n+        {0xab, 0x64, 0xef, 0xf7, 0xe8, 0x8e, 0x2e, 0x46, 0x16, 0x5e, 0x29, 0xf2, 0xbc, 0xe4, 0x18, 0x26, 0xbd, 0x4c, 0x7b, 0x35, 0x52, 0xf6, 0xb3, 0x82, 0xa9, 0xe7, 0xd3, 0xaf, 0x47, 0xc2, 0x45, 0xf8},\n+        {0xcd, 0xc7, 0x6e, 0x5c, 0x99, 0x14, 0xfb, 0x92, 0x81, 0xa1, 0xc7, 0xe2, 0x84, 0xd7, 0x3e, 0x67, 0xf1, 0x80, 0x9a, 0x48, 0xa4, 0x97, 0x20, 0x0e, 0x04, 0x6d, 0x39, 0xcc, 0xc7, 0x11, 0x2c, 0xd0},\n     };\n-    int i;\n-    for (i = 0; i < 8; i++) {\n+    unsigned int i, ninputs;\n+\n+    /* Skip last input vector for low iteration counts */\n+    ninputs = sizeof(inputs)/sizeof(inputs[0]) - 1;\n+    CONDITIONAL_TEST(16, \"run_sha256_known_output_tests 1000000\") ninputs++;\n+\n+    for (i = 0; i < ninputs; i++) {\n         unsigned char out[32];\n         secp256k1_sha256 hasher;\n+        unsigned int j;\n+        /* 1. Run: simply write the input bytestrings */\n+        j = repeat[i];\n         secp256k1_sha256_initialize(&hasher);\n-        secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+        while (j > 0) {\n+            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), strlen(inputs[i]));\n+            j--;\n+        }\n         secp256k1_sha256_finalize(&hasher, out);\n         CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n+        /* 2. Run: split the input bytestrings randomly before writing */\n         if (strlen(inputs[i]) > 0) {\n             int split = secp256k1_testrand_int(strlen(inputs[i]));\n             secp256k1_sha256_initialize(&hasher);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n-            secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+            j = repeat[i];\n+            while (j > 0) {\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i]), split);\n+                secp256k1_sha256_write(&hasher, (const unsigned char*)(inputs[i] + split), strlen(inputs[i]) - split);\n+                j--;\n+            }\n             secp256k1_sha256_finalize(&hasher, out);\n             CHECK(secp256k1_memcmp_var(out, outputs[i], 32) == 0);\n         }\n     }\n }\n \n+/** SHA256 counter tests\n+\n+The tests verify that the SHA256 counter doesn't wrap around at message lengths\n+20^i bytes to 33^i bytes. This wide range aims at being independent of the",
      "path": "src/tests.c",
      "position": null,
      "original_position": 74,
      "commit_id": "f8d9174357391ab4bf65a2f4d9d9cfb8039dc592",
      "original_commit_id": "da38fb7cf2be9799a4e0137128aa096f81e612e8",
      "in_reply_to_id": 833240201,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "should now really be fixed",
      "created_at": "2022-03-23T15:34:01Z",
      "updated_at": "2022-03-23T15:34:01Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/731#discussion_r833412878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/833412878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/731"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    }
  ]
}