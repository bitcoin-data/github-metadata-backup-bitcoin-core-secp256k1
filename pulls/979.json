{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979",
    "id": 741783132,
    "node_id": "PR_kwDOAP4Jqs4sNrZc",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/979.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/979.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
    "number": 979,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Native jacobi symbol algorithm",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This introduces variants of the vartime divsteps-based GCD algorithm used for modular inverses to compute Jacobi symbols. Changes compared to the normal vartime divsteps:\r\n* Only positive matrices are used, guaranteeing that f and g remain positive.\r\n* An additional jac variable is updated to track sign changes during matrix computation.\r\n* There is (so far) no proof that this algorithm terminates within reasonable amount of time for every input, but experimentally it appears to almost always need less than 900 iterations. To account for that, only a bounded number of iterations is performed (1500), after which failure is returned. The field logic then falls back to using square roots to determining the result.\r\n* The algorithm converges to f=g=gcd(f0,g0) rather than g=0. To keep this test simple, the end condition is f=1, which won't be reached if started with g=0. That case is dealt with specially.\r\n\r\nThis code is currently unused, except for tests. I don't aim for it to be merged until there is a need for it, but this demonstrates its feasibility.\r\n\r\nIn terms of performance:\r\n```\r\nfield_inverse: min 1.76us / avg 1.76us / max 1.78us\r\nfield_inverse_var: min 0.991us / avg 0.993us / max 0.996us\r\nfield_jacobi_var: min 1.31us / avg 1.31us / max 1.31us\r\nfield_sqrt: min 4.36us / avg 4.37us / max 4.40us\r\n```\r\n\r\nwhile with the older (f24e122d13db7061b1086ddfd21d3a1c5294213b) libgmp based Jacobi code on the same system:\r\n```\r\nnum_jacobi: min 1.53us / avg 1.54us / max 1.55us\r\n```\r\n",
    "labels": [],
    "created_at": "2021-09-23T22:54:02Z",
    "updated_at": "2023-04-10T06:29:06Z",
    "closed_at": "2023-03-01T14:44:13Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-03-01T14:44:13Z",
    "merge_commit_sha": "09b1d466db7e05fcf94d2e2ada43e1261c5ae828",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sipa:202109_native_jacobi",
      "ref": "202109_native_jacobi",
      "sha": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 16648672,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODY3Mg==",
        "name": "secp256k1",
        "full_name": "sipa/secp256k1",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/secp256k1",
        "archive_url": "https://api.github.com/repos/sipa/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/sipa/secp256k1/events",
        "forks_url": "https://api.github.com/repos/sipa/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/sipa/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/sipa/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/sipa/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/sipa/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/sipa/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/sipa/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/sipa/secp256k1/hooks",
        "svn_url": "https://github.com/sipa/secp256k1",
        "language": "C",
        "forks_count": 20,
        "stargazers_count": 43,
        "watchers_count": 43,
        "size": 11487,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-31T17:42:23Z",
        "created_at": "2014-02-08T17:33:30Z",
        "updated_at": "2023-05-11T11:08:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "cbd25559343add1fba511d1f0084be7f32b85549",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 948,
        "stargazers_count": 1768,
        "watchers_count": 1768,
        "size": 10062,
        "default_branch": "master",
        "open_issues_count": 142,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-12T16:38:48Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-06-12T17:38:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 553,
    "deletions": 40,
    "changed_files": 13,
    "commits": 5,
    "review_comments": 70,
    "comments": 16
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 5352841397,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAE_DeC1",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5352841397",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-23T22:57:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5352855286,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAE_Dhb2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5352855286",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-23T23:01:51Z"
    },
    {
      "event": "reviewed",
      "id": 800417034,
      "node_id": "PRR_kwDOAP4Jqs4vtWUK",
      "url": null,
      "actor": null,
      "commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tACK 042f91bf4acca0e1d70ca6afffe045a525a7b614\r\n\r\n`./tests` passed, including the additional checks I suggested.\r\n\r\nI'm still brushing up on the divsteps algorithm, and will review this change again once I've worked through the various details / optimizations.\r\n\r\n---\r\n\r\nBenchmark results look good on x86_64 (MacBook Pro): native jacobi version is faster than libgmp. However, on arm64 (Mac M1), native jacobi version was slightly *slower*!\r\n\r\nOn M1 I also tried `./configure  --with-asm=arm --enable-experimental` to see if that would speed up the native jacobi version, but attempting to build resulted in a lot of compile errors in `field_10x26_arm.s`.\r\n\r\n### MacBook Pro (x86_64)\r\n\r\n**native jacobi branch**\r\n\r\n```\r\n$ ./bench_internal field\r\n...\r\nfield_jacobi_var: min 2.03us / avg 2.25us / max 3.85us\r\nfield_sqrt: min 6.33us / avg 6.38us / max 6.46us\r\n\r\n$ ./bench_internal jacobi\r\nfield_jacobi_var: min 2.00us / avg 2.06us / max 2.15us\r\n```\r\n\r\n**libgmp branch** f24e122d13db7061b1086ddfd21d3a1c5294213b:\r\n\r\n```\r\n$ ./bench_internal field\r\n...\r\nfield_sqrt: min 6.05us / avg 6.13us / max 6.38us\r\n\r\n$ ./bench_internal num\r\nnum_jacobi: min 2.44us / avg 2.47us / max 2.53us\r\n```\r\n\r\n### Mac M1 (arm64)\r\n\r\n**native jacobi branch**\r\n\r\n```\r\n% ./bench_internal field\r\n...\r\nfield_jacobi_var: min 1.54us / avg 1.55us / max 1.56us\r\nfield_sqrt: min 4.04us / avg 4.09us / max 4.29us\r\n\r\n% ./bench_internal jacobi\r\nfield_jacobi_var: min 1.55us / avg 1.74us / max 3.18us\r\n```\r\n\r\n**libgmp branch** f24e122d13db7061b1086ddfd21d3a1c5294213b:\r\n\r\n```\r\n% ./bench_internal field\r\n...\r\nfield_sqrt: min 4.04us / avg 4.04us / max 4.05us\r\n\r\n% ./bench_internal jacobi\r\n...\r\nnum_jacobi: min 1.41us / avg 1.41us / max 1.42us\r\n```",
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-800417034",
      "submitted_at": "2021-11-08T22:01:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "commented",
      "id": 963905416,
      "node_id": "IC_kwDOAP4Jqs45dAeI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/963905416",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T08:09:10Z",
      "updated_at": "2021-11-09T08:09:10Z",
      "author_association": "MEMBER",
      "body": "@robot-dreams Always nice to see new contributors in the repo. :) Just curious, are you simply helping or are you interested in getting this merged? If the latter, I'm further curious about your use case. Feel free just ignore my intrusive questions. ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-963905416",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "mentioned",
      "id": 5587898338,
      "node_id": "MEE_lADOAP4Jqs479QLizwAAAAFNEI_i",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5587898338",
      "actor": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T08:09:10Z"
    },
    {
      "event": "subscribed",
      "id": 5587898341,
      "node_id": "SE_lADOAP4Jqs479QLizwAAAAFNEI_l",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5587898341",
      "actor": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T08:09:10Z"
    },
    {
      "event": "commented",
      "id": 964369223,
      "node_id": "IC_kwDOAP4Jqs45extH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/964369223",
      "actor": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T17:25:25Z",
      "updated_at": "2021-11-09T17:25:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "@real-or-random Thanks for the reply! I'm simply helping and try to learn about this repo, I don't have a personal use case.",
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-964369223",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "mentioned",
      "id": 5591441951,
      "node_id": "MEE_lADOAP4Jqs479QLizwAAAAFNRqIf",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5591441951",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T17:25:25Z"
    },
    {
      "event": "subscribed",
      "id": 5591441958,
      "node_id": "SE_lADOAP4Jqs479QLizwAAAAFNRqIm",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5591441958",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T17:25:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5592894675,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAFNXMzT",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5592894675",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T21:23:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5592916644,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAFNXSKk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5592916644",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T21:26:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5592980707,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAFNXhzj",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5592980707",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T21:36:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5593095714,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAFNX94i",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5593095714",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T21:54:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5593269250,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAFNYoQC",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5593269250",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T22:22:48Z"
    },
    {
      "event": "commented",
      "id": 964600746,
      "node_id": "IC_kwDOAP4Jqs45fqOq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/964600746",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T22:24:06Z",
      "updated_at": "2021-11-09T22:24:06Z",
      "author_association": "MEMBER",
      "body": "@robot-dreams Thanks for your comments!\r\n\r\nThe failure with asm=arm is expected, as Apple M1 is 64-bit ARM, while the assembly code used here is 32-bit.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-964600746",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "mentioned",
      "id": 5593274582,
      "node_id": "MEE_lADOAP4Jqs479QLizwAAAAFNYpjW",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5593274582",
      "actor": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T22:24:06Z"
    },
    {
      "event": "subscribed",
      "id": 5593274584,
      "node_id": "SE_lADOAP4Jqs479QLizwAAAAFNYpjY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5593274584",
      "actor": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T22:24:06Z"
    },
    {
      "event": "commented",
      "id": 964620481,
      "node_id": "IC_kwDOAP4Jqs45fvDB",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/964620481",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T22:57:35Z",
      "updated_at": "2021-11-09T22:57:35Z",
      "author_association": "MEMBER",
      "body": "Made another change: in VERIFY mode, the upper bound on the number of posdivsteps iterations is reduced to ~750 (which is close to the median of how many iterations are needed for random input mod the field size), so that the uncomputable path is actually exercised in the tests.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-964620481",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "reviewed",
      "id": 801603449,
      "node_id": "PRR_kwDOAP4Jqs4vx395",
      "url": null,
      "actor": null,
      "commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 6e3fcc4f5149c96ab052f3312091dfc0b8eab397\r\n\r\nI agree with your modifications to the original `safegcd` for calculating Jacobi symbol instead of modular inverse. I also replicated the logic for the 64-bit version in Python, and checked that the result matches a \"slow\" Jacobi function for a few randomly generated inputs (see https://gist.github.com/robot-dreams/ceb00162b80384f2ae1913aaa2b35e75).\r\n\r\nOne potential concern is that with this change, there are now 4 slightly different implementations of a similar algorithm (32/64-bit, inv/jacobi). Do you think there's a nice way to consolidate the logic, at least among a given word size? (If there's no nice way or if it's too much trouble, I'm fine with leaving it as is and relying on having good tests.)\r\n\r\nOther questions:\r\n\r\n- What was the motivation for using different approaches to clear the low-order bits of `g` between the 32 and 64 bit implementations (8-bit lookup table vs 4 and 6-bit tricks from Hacker's Delight)?\r\n\r\n- I agree that replacing `f, g = g, -f` with `f, g = g, f` ensures that all matrix entries are always positive. But aside from actually observing that it converges to `f = 1` in practice, do you have any other intuitive justification for this? (The best I can come up with is that since you're constantly dividing `g` by 2 and swapping the roles of `f` and `g`, you're quickly moving towards a solution even if you replace `g - f` with `g + f` in the original GCD algorithm.)\r\n\r\n- Is there already a writeup describing this change? If not, would it make sense to add a brief section to https://github.com/bitcoin-core/secp256k1/blob/master/doc/safegcd_implementation.md? (If you think so, I'd be happy to give that a shot.)",
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-801603449",
      "submitted_at": "2021-11-10T04:44:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "commented",
      "id": 964788248,
      "node_id": "IC_kwDOAP4Jqs45gYAY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/964788248",
      "actor": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-10T04:57:53Z",
      "updated_at": "2021-11-10T04:57:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa Thanks for responding to the comments!\r\n\r\n- Yes, 32-bit makes sense (in retrospect the fact that the file was called `field_10x26` instead of `field_5x52` should have given that away)\r\n- Great idea to reduce the number of iterations for validation!",
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-964788248",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "mentioned",
      "id": 5594549380,
      "node_id": "MEE_lADOAP4Jqs479QLizwAAAAFNdgyE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5594549380",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-10T04:57:54Z"
    },
    {
      "event": "subscribed",
      "id": 5594549382,
      "node_id": "SE_lADOAP4Jqs479QLizwAAAAFNdgyG",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5594549382",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-10T04:57:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5598261167,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAFNrq-v",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5598261167",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-10T16:15:45Z"
    },
    {
      "event": "commented",
      "id": 965513689,
      "node_id": "IC_kwDOAP4Jqs45jJHZ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/965513689",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-10T16:28:27Z",
      "updated_at": "2021-11-10T16:28:27Z",
      "author_association": "MEMBER",
      "body": "> One potential concern is that with this change, there are now 4 slightly different implementations of a similar algorithm (32/64-bit, inv/jacobi). Do you think there's a nice way to consolidate the logic, at least among a given word size? (If there's no nice way or if it's too much trouble, I'm fine with leaving it as is and relying on having good tests.)\r\n\r\nArguably there are 6 implementations (32/64-bit, and const/var/varpos divsteps), and they do share some of the code (in particular the matrix application), but not everything. I don't think there is an obvious way of merging more code without reducing performance, but I also haven't tried very hard.\r\n\r\n> What was the motivation for using different approaches to clear the low-order bits of g between the 32 and 64 bit implementations (8-bit lookup table vs 4 and 6-bit tricks from Hacker's Delight)?\r\n\r\nJust dumb benchmarking. The formula was faster on x86_64 systems we tried, and the table was faster on ARMv7 systems (it's explained in one of the commit messages that introduced it).\r\n\r\n> I agree that replacing f, g = g, -f with f, g = g, f ensures that all matrix entries are always positive. But aside from actually observing that it converges to f = 1 in practice, do you have any other intuitive justification for this? (The best I can come up with is that since you're constantly dividing g by 2 and swapping the roles of f and g, you're quickly moving towards a solution even if you replace g - f with g + f in the original GCD algorithm.)\r\n\r\nI don't, no. I do have a proof that any f>0,g>0 converges to f=g somewhere in a finite number of steps, but the upper bound is something like `f*g*log2(f*g)`, which is obviously useless for practical purposes. The technique explained in https://github.com/sipa/safegcd-bounds completely fails for posdivsteps (doesn't converge at all). With a lot of tricks I got it to converge, but in what appears quadratic (`O(log2(f)^2)`), and it's only tractable to evaluate for f up to 2^20 or so.\r\n\r\nThe difficulty is that there are both steps that take f and g further apart (g /= 2) and steps that bring them closer (g = (f+g)/2), and it's hard to infer tight bounds on how many times one can happen in between two executions of the other.\r\n\r\nSo in short, no; the actual argument why this works is purely empirical; all out of a 2.5 billion random inputs (with the field size modulus) need between 630 and 921 iterations.\r\n\r\n> Is there already a writeup describing this change? If not, would it make sense to add a brief section to https://github.com/bitcoin-core/secp256k1/blob/master/doc/safegcd_implementation.md? (If you think so, I'd be happy to give that a shot.)\r\n\r\nI think that would be valuable, yes. I haven't done so yet, but was considering it. Feel free to take a shot at it.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-965513689",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5610770740,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAFObZE0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5610770740",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-12T16:37:01Z"
    },
    {
      "event": "commented",
      "id": 967253729,
      "node_id": "IC_kwDOAP4Jqs45px7h",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/967253729",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-12T16:37:24Z",
      "updated_at": "2021-11-12T16:37:24Z",
      "author_association": "MEMBER",
      "body": "Included @robot-dreams's update to the writeup.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-967253729",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "mentioned",
      "id": 5610773426,
      "node_id": "MEE_lADOAP4Jqs479QLizwAAAAFObZuy",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5610773426",
      "actor": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-12T16:37:24Z"
    },
    {
      "event": "subscribed",
      "id": 5610773431,
      "node_id": "SE_lADOAP4Jqs479QLizwAAAAFObZu3",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5610773431",
      "actor": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-12T16:37:24Z"
    },
    {
      "event": "reviewed",
      "id": 806429754,
      "node_id": "PRR_kwDOAP4Jqs4wESQ6",
      "url": null,
      "actor": null,
      "commit_id": "902d57e0755b211f6864dcc3267dab2cc0ceb4d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 5af3d290b6eabd6dd5cb2565caab24c0ceb8b8f9 aside from comment nits—I checked the range diff against the old commit and it looks good.",
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-806429754",
      "submitted_at": "2021-11-15T18:52:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5627556236,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAFPbbGM",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5627556236",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-16T20:28:20Z"
    },
    {
      "event": "commented",
      "id": 970690367,
      "node_id": "IC_kwDOAP4Jqs45248_",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/970690367",
      "actor": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-16T21:22:41Z",
      "updated_at": "2021-11-16T21:22:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 53b7ce28bef8008787c1aeb202ec17ef3a3b3325",
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-970690367",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "closed",
      "id": 5975388690,
      "node_id": "CE_lADOAP4Jqs479QLizwAAAAFkKTIS",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5975388690",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-29T18:35:50Z"
    },
    {
      "event": "reopened",
      "id": 5975571505,
      "node_id": "REE_lADOAP4Jqs479QLizwAAAAFkK_wx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5975571505",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-29T21:59:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6897053275,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAGbGK5b",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6897053275",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T20:19:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7726556956,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHMiecc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7726556956",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-02T19:22:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7744138012,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHNlisc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7744138012",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T21:37:08Z"
    },
    {
      "event": "reviewed",
      "id": 1205393656,
      "node_id": "PRR_kwDOAP4Jqs5H2Nj4",
      "url": null,
      "actor": null,
      "commit_id": "d70f0fefc98b3557850a6b710ea734be0f240da7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1205393656",
      "submitted_at": "2022-12-10T16:00:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8005137322,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHdJLOq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8005137322",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-10T16:44:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8005147836,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHdJNy8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8005147836",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-10T16:50:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8005183029,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHdJWY1",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8005183029",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-10T17:00:48Z"
    },
    {
      "event": "commented",
      "id": 1345322173,
      "node_id": "IC_kwDOAP4Jqs5QL_y9",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1345322173",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-10T17:02:03Z",
      "updated_at": "2022-12-10T20:26:01Z",
      "author_association": "MEMBER",
      "body": "I removed a determinant check in the 64-bit jacobi code, as this new algorithm can result in determinant either 2^62 or -2^62, but the int128 code can't deal with that yet.\r\n\r\nEDIT: fixed now, added two commits to deal with that.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-1345322173",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8005677290,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHdLPDq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8005677290",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-10T20:24:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8005697681,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHdLUCR",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8005697681",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-10T20:35:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8005711416,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHdLXY4",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8005711416",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-10T20:43:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8005740472,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHdLee4",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8005740472",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-10T20:58:59Z"
    },
    {
      "event": "reviewed",
      "id": 1234827593,
      "node_id": "PRR_kwDOAP4Jqs5JmflJ",
      "url": null,
      "actor": null,
      "commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "This is really good, I have almost only nits.\r\n\r\nnote to self: I haven't looked at the tests for secp256k1_jacobi32/64_maybe_var yet",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1234827593",
      "submitted_at": "2023-01-03T18:39:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "reviewed",
      "id": 1234963970,
      "node_id": "PRR_kwDOAP4Jqs5JnA4C",
      "url": null,
      "actor": null,
      "commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1234963970",
      "submitted_at": "2023-01-03T18:40:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8146775448,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHlle2Y",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8146775448",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-03T23:28:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8154824456,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHmEL8I",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8154824456",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-04T21:51:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8161451012,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHmddwE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8161451012",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-05T15:39:54Z"
    },
    {
      "event": "reviewed",
      "id": 1237681251,
      "node_id": "PRR_kwDOAP4Jqs5JxYRj",
      "url": null,
      "actor": null,
      "commit_id": "ef2ac449d757189b67be27437824c2d0c0663bde",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Some final comments you can address or ignore. \r\n\r\nI'm running some testing locally and will then ACK if it's successful.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1237681251",
      "submitted_at": "2023-01-05T16:34:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "reviewed",
      "id": 1237900726,
      "node_id": "PRR_kwDOAP4Jqs5JyN22",
      "url": null,
      "actor": null,
      "commit_id": "ef2ac449d757189b67be27437824c2d0c0663bde",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK ef2ac449d757189b67be27437824c2d0c0663bde diff and writeup is good and I tested every commit",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1237900726",
      "submitted_at": "2023-01-05T19:03:24Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "commented",
      "id": 1372629811,
      "node_id": "IC_kwDOAP4Jqs5R0Ksz",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1372629811",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-05T19:17:35Z",
      "updated_at": "2023-01-05T19:20:25Z",
      "author_association": "MEMBER",
      "body": "I think I'll leave your remaining nits for now, as they seem to intersect a bit with the existing safegcd/modinv functions, so addressing them is perhaps better done afterwards generally.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-1372629811",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "commented",
      "id": 1384526241,
      "node_id": "IC_kwDOAP4Jqs5ShjGh",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1384526241",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-16T20:32:56Z",
      "updated_at": "2023-01-16T20:32:56Z",
      "author_association": "MEMBER",
      "body": "needs (trivial) rebase",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-1384526241",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8241629686,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHrPUn2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8241629686",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-17T04:45:11Z"
    },
    {
      "event": "commented",
      "id": 1384826152,
      "node_id": "IC_kwDOAP4Jqs5SisUo",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1384826152",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-17T04:45:48Z",
      "updated_at": "2023-01-17T04:45:48Z",
      "author_association": "MEMBER",
      "body": "Rebased after merge of #1190.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-1384826152",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "reviewed",
      "id": 1253132065,
      "node_id": "PRR_kwDOAP4Jqs5KsUch",
      "url": null,
      "actor": null,
      "commit_id": "642b9f422748a11830dffd598437be3c57430aff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "reACK 642b9f42  diff and writeup is good and I tested every commit",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1253132065",
      "submitted_at": "2023-01-18T09:39:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "reviewed",
      "id": 1264613320,
      "node_id": "PRR_kwDOAP4Jqs5LYHfI",
      "url": null,
      "actor": null,
      "commit_id": "f6470b6afe0ad42aa68201a2b9fef19f24036c23",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1264613320",
      "submitted_at": "2023-01-21T10:49:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8367812720,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAHywrBw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8367812720",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T20:56:48Z"
    },
    {
      "event": "commented",
      "id": 1405640715,
      "node_id": "IC_kwDOAP4Jqs5TyGAL",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1405640715",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T20:57:28Z",
      "updated_at": "2023-01-26T20:57:28Z",
      "author_association": "MEMBER",
      "body": "Rebased, and addressed a few nits.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-1405640715",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "reviewed",
      "id": 1315114882,
      "node_id": "PRR_kwDOAP4Jqs5OYw-C",
      "url": null,
      "actor": null,
      "commit_id": "8b2ae083281617d55c55d6e21e60e27616e0a4db",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK mod nit\r\n\r\nI was able to [implement the algorithm](https://gist.github.com/jonasnick/beca92a9c18088c03146bf9dbb3d5afa) based on the descriptions and python snippets in `safegcd_implementation.md` and compare it against the C implementation.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1315114882",
      "submitted_at": "2023-02-27T08:51:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDVmZmZiMmM3YWY1ZDMzMjIzZDgxOTI4M2YxYTU2MTg4OWE4MjEwZDk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5fffb2c7af5d33223d819283f1a561889a8210d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5fffb2c7af5d33223d819283f1a561889a8210d9",
      "tree": {
        "sha": "3d756d443c5064e3601c18230d79f587c3a34ada",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/3d756d443c5064e3601c18230d79f587c3a34ada"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/cbd25559343add1fba511d1f0084be7f32b85549",
          "sha": "cbd25559343add1fba511d1f0084be7f32b85549",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/cbd25559343add1fba511d1f0084be7f32b85549"
        }
      ],
      "message": "Make secp256k1_i128_check_pow2 support -(2^n)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-02-27T20:38:05Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-12-10T20:13:43Z"
      },
      "sha": "5fffb2c7af5d33223d819283f1a561889a8210d9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDA0YzZjMWIxODE2MmUzZGMwMGQ5YmU1MDk4ZWUxY2NiY2IyZTc4ZDk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/04c6c1b18162e3dc00d9be5098ee1ccbcb2e78d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/04c6c1b18162e3dc00d9be5098ee1ccbcb2e78d9",
      "tree": {
        "sha": "b9ff943f4e773def3ce82127394a73a00b1b065f",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/b9ff943f4e773def3ce82127394a73a00b1b065f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5fffb2c7af5d33223d819283f1a561889a8210d9",
          "sha": "5fffb2c7af5d33223d819283f1a561889a8210d9",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5fffb2c7af5d33223d819283f1a561889a8210d9"
        }
      ],
      "message": "Make secp256k1_modinv64_det_check_pow2 support abs val",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-02-27T20:38:05Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-12-10T20:22:32Z"
      },
      "sha": "04c6c1b18162e3dc00d9be5098ee1ccbcb2e78d9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8620447729,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAIB0Zfx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8620447729",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-27T21:21:17Z"
    },
    {
      "event": "commented",
      "id": 1447115214,
      "node_id": "IC_kwDOAP4Jqs5WQTnO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1447115214",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-27T21:25:52Z",
      "updated_at": "2023-02-27T21:25:52Z",
      "author_association": "MEMBER",
      "body": "Rebased, and updated to only support coprime inputs in the `secp256k1_secp256k1_jacobiXX_maybe_var` functions. The return value of those functions for \"unknown/timeout\" has been changed from -2 to 0.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-1447115214",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "reviewed",
      "id": 1317488214,
      "node_id": "PRR_kwDOAP4Jqs5Oh0ZW",
      "url": null,
      "actor": null,
      "commit_id": "4a8d82de3c51efd753c92904cdc71f81ebd896a3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1317488214",
      "submitted_at": "2023-02-28T12:53:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8628345520,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAICShqw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8628345520",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-28T15:32:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8628918018,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAICUtcC",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8628918018",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-28T16:23:01Z"
    },
    {
      "event": "reviewed",
      "id": 1318607765,
      "node_id": "PRR_kwDOAP4Jqs5OmFuV",
      "url": null,
      "actor": null,
      "commit_id": "1c1c20226879ce4780a855f2fda7ca94bb10c477",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1318607765",
      "submitted_at": "2023-02-28T20:51:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "commented",
      "id": 1448896671,
      "node_id": "IC_kwDOAP4Jqs5WXGif",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1448896671",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-28T20:51:48Z",
      "updated_at": "2023-02-28T20:51:48Z",
      "author_association": "MEMBER",
      "body": "reACK mod nit",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-1448896671",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDFkZTJhMDFjMmIyMmRjODIxNjM5M2FkMDQ3MTM4MmJlYWZmZWY1MjU",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/1de2a01c2b22dc8216393ad0471382beaffef525",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/1de2a01c2b22dc8216393ad0471382beaffef525",
      "tree": {
        "sha": "9a13fa48830905176e3ea313c33040013a8ec0c7",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/9a13fa48830905176e3ea313c33040013a8ec0c7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/04c6c1b18162e3dc00d9be5098ee1ccbcb2e78d9",
          "sha": "04c6c1b18162e3dc00d9be5098ee1ccbcb2e78d9",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/04c6c1b18162e3dc00d9be5098ee1ccbcb2e78d9"
        }
      ],
      "message": "Native jacobi symbol algorithm\n\nThis introduces variants of the divsteps-based GCD algorithm used for\nmodular inverses to compute Jacobi symbols. Changes compared to\nthe normal vartime divsteps:\n* Only positive matrices are used, guaranteeing that f and g remain\n  positive.\n* An additional jac variable is updated to track sign changes during\n  matrix computation.\n* There is (so far) no proof that this algorithm terminates within\n  reasonable amount of time for every input, but experimentally it\n  appears to almost always need less than 900 iterations. To account\n  for that, only a bounded number of iterations is performed (1500),\n  after which failure is returned. In VERIFY mode a lower iteration\n  count is used to make sure that callers exercise their fallback.\n* The algorithm converges to f=g=gcd(f0,g0) rather than g=0. To keep\n  this test simple, the end condition is f=1, which won't be reached\n  if started with non-coprime or g=0 inputs. Because of that we only\n  support coprime non-zero inputs.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-02-28T20:54:00Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-09-11T14:39:00Z"
      },
      "sha": "1de2a01c2b22dc8216393ad0471382beaffef525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDZiZTAxMDM2YzhhNmRhNTA0Mzk1M2QwNTVmZmI1OTIwNzI4ZmJmZjc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/6be01036c8a6da5043953d055ffb5920728fbff7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/6be01036c8a6da5043953d055ffb5920728fbff7",
      "tree": {
        "sha": "70ef1c5b98b683b97e6184e0c2c3f313bc485037",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/70ef1c5b98b683b97e6184e0c2c3f313bc485037"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/1de2a01c2b22dc8216393ad0471382beaffef525",
          "sha": "1de2a01c2b22dc8216393ad0471382beaffef525",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/1de2a01c2b22dc8216393ad0471382beaffef525"
        }
      ],
      "message": "Add secp256k1_fe_is_square_var function\n\nThe implementation calls the secp256k1_modinvNN_jacobi_var code, falling back\nto computing a square root in the (extremely rare) case it failed converge.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-02-28T20:57:32Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-01-04T21:05:34Z"
      },
      "sha": "6be01036c8a6da5043953d055ffb5920728fbff7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGNlM2NmYzc4YTYwMjBkMjFiZTI5OWUxZTRmMjJjZjhlZjA4OTE5NGQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "tree": {
        "sha": "1ff288b8a2dcb22a4684d0e69fe0d0b700caa48e",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/1ff288b8a2dcb22a4684d0e69fe0d0b700caa48e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/6be01036c8a6da5043953d055ffb5920728fbff7",
          "sha": "6be01036c8a6da5043953d055ffb5920728fbff7",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/6be01036c8a6da5043953d055ffb5920728fbff7"
        }
      ],
      "message": "doc: Describe Jacobi calculation in safegcd_implementation.md",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-02-28T20:57:32Z"
      },
      "author": {
        "name": "Elliott Jin",
        "email": "elliott.jin@gmail.com",
        "date": "2021-11-10T18:37:44Z"
      },
      "sha": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8631401159,
      "node_id": "HRFPE_lADOAP4Jqs479QLizwAAAAICeLrH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8631401159",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-28T20:57:43Z"
    },
    {
      "event": "commented",
      "id": 1448921114,
      "node_id": "IC_kwDOAP4Jqs5WXMga",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1448921114",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-28T21:10:28Z",
      "updated_at": "2023-02-28T21:10:28Z",
      "author_association": "MEMBER",
      "body": "ACK ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#issuecomment-1448921114",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/979"
    },
    {
      "event": "reviewed",
      "id": 1319678651,
      "node_id": "PRR_kwDOAP4Jqs5OqLK7",
      "url": null,
      "actor": null,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "reACK ce3cfc78a6020d21be299e1e4f22cf8ef089194d diff and writeup is good and I tested every commit",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1319678651",
      "submitted_at": "2023-03-01T11:50:08Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "merged",
      "id": 8639057073,
      "node_id": "ME_lADOAP4Jqs479QLizwAAAAIC7Yyx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8639057073",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "09b1d466db7e05fcf94d2e2ada43e1261c5ae828",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/09b1d466db7e05fcf94d2e2ada43e1261c5ae828",
      "created_at": "2023-03-01T14:44:13Z"
    },
    {
      "event": "closed",
      "id": 8639057134,
      "node_id": "CE_lADOAP4Jqs479QLizwAAAAIC7Yzu",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8639057134",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T14:44:14Z"
    },
    {
      "event": "referenced",
      "id": 8691097620,
      "node_id": "REFE_lADOAP4Jqs479QLizwAAAAIGB6AU",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8691097620",
      "actor": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a5df79db12ea656a23f883194056ba60191fcf3a",
      "commit_url": "https://api.github.com/repos/dhruv/bitcoin-core-ci/commits/a5df79db12ea656a23f883194056ba60191fcf3a",
      "created_at": "2023-03-07T22:33:08Z"
    },
    {
      "event": "referenced",
      "id": 8691141331,
      "node_id": "REFE_lADOAP4Jqs479QLizwAAAAIGCErT",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8691141331",
      "actor": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "77b510d84ce6e2db2b3a90acd96b34a441fa797f",
      "commit_url": "https://api.github.com/repos/dhruv/bitcoin-core-ci/commits/77b510d84ce6e2db2b3a90acd96b34a441fa797f",
      "created_at": "2023-03-07T22:40:08Z"
    },
    {
      "event": "referenced",
      "id": 8701394289,
      "node_id": "REFE_lADOAP4Jqs479QLizwAAAAIGpL1x",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8701394289",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "763079a3f1b937f54e3c2d4166d296f596f7be1b",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/763079a3f1b937f54e3c2d4166d296f596f7be1b",
      "created_at": "2023-03-08T22:42:58Z"
    },
    {
      "event": "referenced",
      "id": 8748930052,
      "node_id": "REFE_lADOAP4Jqs479QLizwAAAAIJehQE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8748930052",
      "actor": {
        "login": "div72",
        "id": 60045611,
        "node_id": "MDQ6VXNlcjYwMDQ1NjEx",
        "avatar_url": "https://avatars.githubusercontent.com/u/60045611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/div72",
        "html_url": "https://github.com/div72",
        "followers_url": "https://api.github.com/users/div72/followers",
        "following_url": "https://api.github.com/users/div72/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/div72/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/div72/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/div72/subscriptions",
        "organizations_url": "https://api.github.com/users/div72/orgs",
        "repos_url": "https://api.github.com/users/div72/repos",
        "events_url": "https://api.github.com/users/div72/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/div72/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "945b09457569a68ff338368a99234bd8473da1bf",
      "commit_url": "https://api.github.com/repos/div72/Gridcoin-Research/commits/945b09457569a68ff338368a99234bd8473da1bf",
      "created_at": "2023-03-14T22:14:00Z"
    },
    {
      "event": "reviewed",
      "id": 1352237911,
      "node_id": "PRR_kwDOAP4Jqs5QmYNX",
      "url": null,
      "actor": null,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#pullrequestreview-1352237911",
      "submitted_at": "2023-03-22T10:37:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
    },
    {
      "event": "unsubscribed",
      "id": 8816493480,
      "node_id": "UE_lADOAP4Jqs479QLizwAAAAINgQOo",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8816493480",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-22T12:56:12Z"
    },
    {
      "event": "referenced",
      "id": 8961190535,
      "node_id": "REFE_lADOAP4Jqs479QLizwAAAAIWIOqH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8961190535",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "145078c41895176e2a4ac205417b25a793bc1717",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/145078c41895176e2a4ac205417b25a793bc1717",
      "created_at": "2023-04-10T06:24:17Z"
    },
    {
      "event": "referenced",
      "id": 9425177744,
      "node_id": "REFE_lADOAP4Jqs479QLizwAAAAIxyMyQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9425177744",
      "actor": {
        "login": "vmta",
        "id": 23269741,
        "node_id": "MDQ6VXNlcjIzMjY5NzQx",
        "avatar_url": "https://avatars.githubusercontent.com/u/23269741?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vmta",
        "html_url": "https://github.com/vmta",
        "followers_url": "https://api.github.com/users/vmta/followers",
        "following_url": "https://api.github.com/users/vmta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vmta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vmta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vmta/subscriptions",
        "organizations_url": "https://api.github.com/users/vmta/orgs",
        "repos_url": "https://api.github.com/users/vmta/repos",
        "events_url": "https://api.github.com/users/vmta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vmta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e1120c94a1fe2208bfe6c939b4f67f6d37ce931c",
      "commit_url": "https://api.github.com/repos/umkoin/umkoin/commits/e1120c94a1fe2208bfe6c939b4f67f6d37ce931c",
      "created_at": "2023-06-04T15:42:06Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/744946837",
      "pull_request_review_id": 800417034,
      "id": 744946837,
      "node_id": "PRRC_kwDOAP4Jqs4sZvyV",
      "diff_hunk": "@@ -39,4 +39,7 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for x (where gcd(x,p) == 1), 0 if it cannot be determined. */\n+static int secp256k1_jacobi32_maybe_var(const secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);",
      "path": "src/modinv32.h",
      "position": 7,
      "original_position": 5,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: This API is probably ok since you specify that gcd(x, p) == 1, but is it still dangerous to return 0 here, instead of some other constant (like `#define JACOBI_VAR_FAILURE -2` or whatever) that can't possibly be the value of a jacobi symbol?",
      "created_at": "2021-11-08T17:32:42Z",
      "updated_at": "2021-11-08T22:01:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r744946837",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/744946837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/744955844",
      "pull_request_review_id": 800417034,
      "id": 744955844,
      "node_id": "PRRC_kwDOAP4Jqs4sZx_E",
      "diff_hunk": "@@ -811,12 +811,29 @@ void test_modinv32_uint16(uint16_t* out, const uint16_t* in, const uint16_t* mod\n     uint16_to_signed30(&x, in);\n     nonzero = (x.v[0] | x.v[1] | x.v[2] | x.v[3] | x.v[4] | x.v[5] | x.v[6] | x.v[7] | x.v[8]) != 0;\n     uint16_to_signed30(&m.modulus, mod);\n-    mutate_sign_signed30(&m.modulus);\n \n     /* compute 1/modulus mod 2^30 */\n     m.modulus_inv30 = modinv2p64(m.modulus.v[0]) & 0x3fffffff;\n     CHECK(((m.modulus_inv30 * m.modulus.v[0]) & 0x3fffffff) == 1);\n \n+    /* Test secp256k1_jacobi32_maybe_var. */\n+    if (nonzero) {\n+        uint16_t sqr[16], negone[16];\n+        mulmod256(sqr, in, in, mod);\n+        uint16_to_signed30(&x, sqr);\n+        CHECK(secp256k1_jacobi32_maybe_var(&x, &m) == nonzero);\n+        if ((mod[0] & 3) == 3) {\n+            /* If mod % 4 == 3, x and -x have opposite jacobi symbols. */\n+            negone[0] = mod[0] - 1;\n+            for (i = 1; i < 16; ++i) negone[i] = mod[i];\n+            mulmod256(sqr, sqr, negone, mod);\n+            uint16_to_signed30(&x, sqr);\n+            CHECK(secp256k1_jacobi32_maybe_var(&x, &m) == -nonzero);\n+        }",
      "path": "src/tests.c",
      "position": null,
      "original_position": 23,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Given that (-1 | n) = (-1)^((n - 1) / 2), I think we can make a stronger claim here that x and -x have opposite jacobi symbols if and only if mod % 4 == 3.\r\n\r\nWould it make sense to get some more test cases here (and in the jacobi64 version below) by considering both possibilities, e.g. as follows?\r\n\r\n```suggestion\r\n        negone[0] = mod[0] - 1;\r\n        for (i = 1; i < 16; ++i) negone[i] = mod[i];\r\n        mulmod256(sqr, sqr, negone, mod);\r\n        uint16_to_signed30(&x, sqr);\r\n        /* x and -x have opposite jacobi symbols if and only if mod % 4 == 3. */\r\n        if ((mod[0] & 3) == 3) {\r\n            CHECK(secp256k1_jacobi32_maybe_var(&x, &m) == -nonzero);\r\n        } else {\r\n            CHECK(secp256k1_jacobi32_maybe_var(&x, &m) == nonzero);\r\n        }\r\n```",
      "created_at": "2021-11-08T17:44:30Z",
      "updated_at": "2021-11-08T22:01:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r744955844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/744955844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 825,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 963,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/745051598",
      "pull_request_review_id": 800417034,
      "id": 745051598,
      "node_id": "PRRC_kwDOAP4Jqs4saJXO",
      "diff_hunk": "@@ -575,4 +575,25 @@ static void secp256k1_fe_inv_var(secp256k1_fe *r, const secp256k1_fe *x) {\n #endif\n }\n \n+static int secp256k1_fe_jacobi_var(const secp256k1_fe *x) {\n+    secp256k1_fe tmp;\n+    secp256k1_modinv64_signed62 s;\n+    int ret;\n+\n+    tmp = *x;\n+    secp256k1_fe_normalize_var(&tmp);\n+    /* secp256k1_jacobi64_maybe_var cannot deal with input=0; handle it specially. */\n+    if (secp256k1_fe_is_zero(&tmp)) return 0;\n+    secp256k1_fe_to_signed62(&s, &tmp);\n+    ret = secp256k1_jacobi64_maybe_var(&s, &secp256k1_const_modinfo_fe);\n+    if (ret == 0) {\n+        /* secp256k1_jacobi64_maybe_var failed to compute the Jacobi symbol. Fall back\n+         * to computing a square root. This should be extremely rare with random\n+         * input. */\n+        secp256k1_fe dummy;\n+        ret = 2*secp256k1_fe_sqrt(&dummy, &tmp) - 1;\n+    }\n+    return ret;",
      "path": "src/field_5x52_impl.h",
      "position": 28,
      "original_position": 22,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Is it worth adding an extra verification step here, to always compute the jacobi symbol both ways for tests?\r\n\r\n```suggestion\r\n    } else {\r\n#ifdef VERIFY\r\n        secp256k1_fe dummy;\r\n        VERIFY_CHECK(2*secp256k1_fe_sqrt(&dummy, &tmp) - 1 == ret);\r\n#endif\r\n    }\r\n    return ret;\r\n```",
      "created_at": "2021-11-08T20:01:17Z",
      "updated_at": "2021-11-08T22:01:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r745051598",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/745051598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": 690,
      "original_start_line": 595,
      "start_side": "RIGHT",
      "line": 691,
      "original_line": 691,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/745850825",
      "pull_request_review_id": 801603449,
      "id": 745850825,
      "node_id": "PRRC_kwDOAP4Jqs4sdMfJ",
      "diff_hunk": "@@ -294,6 +294,94 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int64_t secp256k1_modinv64_posdivsteps_62_var(int64_t eta, uint64_t f0, uint64_t g0, secp256k1_modinv64_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix; see comments in secp256k1_modinv64_divsteps_62. */\n+    uint64_t u = 1, v = 0, q = 0, r = 1;\n+    uint64_t f = f0, g = g0, m;\n+    uint32_t w;\n+    int i = 62, limit, zeros;\n+    int jac = *jacp;\n+\n+    for (;;) {\n+        /* Use a sentinel bit to count zeros only up to i. */\n+        zeros = secp256k1_ctz64_var(g | (UINT64_MAX << i));\n+        /* Perform zeros divsteps at once; they all just divide g by two. */\n+        g >>= zeros;\n+        u <<= zeros;\n+        v <<= zeros;\n+        eta -= zeros;\n+        i -= zeros;\n+        /* Update the bottom bit of jac: when dividing g by an odd power of 2,\n+         * if (f mod 8) is 3 or 5, the Jacobi symbol changes sign. */\n+        jac ^= (zeros & ((f >> 1) ^ (f >> 2)));\n+        /* We're done once we've done 60 posdivsteps. */",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 34,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `62 posdivsteps`?",
      "created_at": "2021-11-09T17:30:10Z",
      "updated_at": "2021-11-10T04:44:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r745850825",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/745850825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/745856159",
      "pull_request_review_id": 801603449,
      "id": 745856159,
      "node_id": "PRRC_kwDOAP4Jqs4sdNyf",
      "diff_hunk": "@@ -317,6 +317,83 @@ static int32_t secp256k1_modinv32_divsteps_30_var(int32_t eta, uint32_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 30 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^32 rather than 2^30, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int32_t secp256k1_modinv32_posdivsteps_30_var(int32_t eta, uint32_t f0, uint32_t g0, secp256k1_modinv32_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix. */\n+    uint32_t u = 1, v = 0, q = 0, r = 1;\n+    uint32_t f = f0, g = g0, m;\n+    uint16_t w;\n+    int i = 30, limit, zeros;\n+    int jac = *jacp;\n+\n+    for (;;) {\n+        /* Use a sentinel bit to count zeros only up to i. */\n+        zeros = secp256k1_ctz32_var(g | (UINT32_MAX << i));\n+        /* Perform zeros divsteps at once; they all just divide g by two. */\n+        g >>= zeros;\n+        u <<= zeros;\n+        v <<= zeros;\n+        eta -= zeros;\n+        i -= zeros;\n+        /* Update the bottom bit of jac: when dividing g by an odd power of 2,\n+         * if (f mod 8) is 3 or 5, the Jacobi symbol changes sign. */\n+        jac ^= (zeros & ((f >> 1) ^ (f >> 2)));\n+        /* We're done once we've done 60 posdivsteps. */",
      "path": "src/modinv32_impl.h",
      "position": null,
      "original_position": 87,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `30 posdivsteps`?",
      "created_at": "2021-11-09T17:37:11Z",
      "updated_at": "2021-11-10T04:44:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r745856159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/745856159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 350,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746062244",
      "pull_request_review_id": 801902895,
      "id": 746062244,
      "node_id": "PRRC_kwDOAP4Jqs4seAGk",
      "diff_hunk": "@@ -39,4 +39,7 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for x (where gcd(x,p) == 1), 0 if it cannot be determined. */\n+static int secp256k1_jacobi32_maybe_var(const secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);",
      "path": "src/modinv32.h",
      "position": 7,
      "original_position": 5,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "in_reply_to_id": 744946837,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea. Done.",
      "created_at": "2021-11-09T21:31:15Z",
      "updated_at": "2021-11-09T21:31:15Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746062244",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746062244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746063187",
      "pull_request_review_id": 801904180,
      "id": 746063187,
      "node_id": "PRRC_kwDOAP4Jqs4seAVT",
      "diff_hunk": "@@ -811,12 +811,29 @@ void test_modinv32_uint16(uint16_t* out, const uint16_t* in, const uint16_t* mod\n     uint16_to_signed30(&x, in);\n     nonzero = (x.v[0] | x.v[1] | x.v[2] | x.v[3] | x.v[4] | x.v[5] | x.v[6] | x.v[7] | x.v[8]) != 0;\n     uint16_to_signed30(&m.modulus, mod);\n-    mutate_sign_signed30(&m.modulus);\n \n     /* compute 1/modulus mod 2^30 */\n     m.modulus_inv30 = modinv2p64(m.modulus.v[0]) & 0x3fffffff;\n     CHECK(((m.modulus_inv30 * m.modulus.v[0]) & 0x3fffffff) == 1);\n \n+    /* Test secp256k1_jacobi32_maybe_var. */\n+    if (nonzero) {\n+        uint16_t sqr[16], negone[16];\n+        mulmod256(sqr, in, in, mod);\n+        uint16_to_signed30(&x, sqr);\n+        CHECK(secp256k1_jacobi32_maybe_var(&x, &m) == nonzero);\n+        if ((mod[0] & 3) == 3) {\n+            /* If mod % 4 == 3, x and -x have opposite jacobi symbols. */\n+            negone[0] = mod[0] - 1;\n+            for (i = 1; i < 16; ++i) negone[i] = mod[i];\n+            mulmod256(sqr, sqr, negone, mod);\n+            uint16_to_signed30(&x, sqr);\n+            CHECK(secp256k1_jacobi32_maybe_var(&x, &m) == -nonzero);\n+        }",
      "path": "src/tests.c",
      "position": null,
      "original_position": 23,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "in_reply_to_id": 744955844,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice catch, done. I was hoping to have a test that guarantees finding a -1 result, but that's hard without a per-modulus search for a non-square factor. This is pretty useful too, though.",
      "created_at": "2021-11-09T21:32:54Z",
      "updated_at": "2021-11-09T21:32:54Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746063187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746063187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 825,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 963,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746071575",
      "pull_request_review_id": 801915048,
      "id": 746071575,
      "node_id": "PRRC_kwDOAP4Jqs4seCYX",
      "diff_hunk": "@@ -575,4 +575,25 @@ static void secp256k1_fe_inv_var(secp256k1_fe *r, const secp256k1_fe *x) {\n #endif\n }\n \n+static int secp256k1_fe_jacobi_var(const secp256k1_fe *x) {\n+    secp256k1_fe tmp;\n+    secp256k1_modinv64_signed62 s;\n+    int ret;\n+\n+    tmp = *x;\n+    secp256k1_fe_normalize_var(&tmp);\n+    /* secp256k1_jacobi64_maybe_var cannot deal with input=0; handle it specially. */\n+    if (secp256k1_fe_is_zero(&tmp)) return 0;\n+    secp256k1_fe_to_signed62(&s, &tmp);\n+    ret = secp256k1_jacobi64_maybe_var(&s, &secp256k1_const_modinfo_fe);\n+    if (ret == 0) {\n+        /* secp256k1_jacobi64_maybe_var failed to compute the Jacobi symbol. Fall back\n+         * to computing a square root. This should be extremely rare with random\n+         * input. */\n+        secp256k1_fe dummy;\n+        ret = 2*secp256k1_fe_sqrt(&dummy, &tmp) - 1;\n+    }\n+    return ret;",
      "path": "src/field_5x52_impl.h",
      "position": 28,
      "original_position": 22,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "in_reply_to_id": 745051598,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-11-09T21:47:04Z",
      "updated_at": "2021-11-09T21:47:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746071575",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746071575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": 690,
      "original_start_line": 595,
      "start_side": "RIGHT",
      "line": 691,
      "original_line": 691,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746223337",
      "pull_request_review_id": 801603449,
      "id": 746223337,
      "node_id": "PRRC_kwDOAP4Jqs4senbp",
      "diff_hunk": "@@ -294,6 +294,94 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int64_t secp256k1_modinv64_posdivsteps_62_var(int64_t eta, uint64_t f0, uint64_t g0, secp256k1_modinv64_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix; see comments in secp256k1_modinv64_divsteps_62. */\n+    uint64_t u = 1, v = 0, q = 0, r = 1;\n+    uint64_t f = f0, g = g0, m;\n+    uint32_t w;\n+    int i = 62, limit, zeros;\n+    int jac = *jacp;\n+\n+    for (;;) {\n+        /* Use a sentinel bit to count zeros only up to i. */\n+        zeros = secp256k1_ctz64_var(g | (UINT64_MAX << i));\n+        /* Perform zeros divsteps at once; they all just divide g by two. */\n+        g >>= zeros;\n+        u <<= zeros;\n+        v <<= zeros;\n+        eta -= zeros;\n+        i -= zeros;\n+        /* Update the bottom bit of jac: when dividing g by an odd power of 2,\n+         * if (f mod 8) is 3 or 5, the Jacobi symbol changes sign. */\n+        jac ^= (zeros & ((f >> 1) ^ (f >> 2)));\n+        /* We're done once we've done 60 posdivsteps. */\n+        if (i == 0) break;\n+        VERIFY_CHECK((f & 1) == 1);\n+        VERIFY_CHECK((g & 1) == 1);\n+        VERIFY_CHECK((u * f0 + v * g0) == f << (62 - i));\n+        VERIFY_CHECK((q * f0 + r * g0) == g << (62 - i));\n+        /* If eta is negative, negate it and replace f,g with g,-f. */",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 40,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "6e3fcc4f5149c96ab052f3312091dfc0b8eab397",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `replace f,g with g,f`?",
      "created_at": "2021-11-10T03:35:06Z",
      "updated_at": "2021-11-10T04:44:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746223337",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746223337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746229426",
      "pull_request_review_id": 801603449,
      "id": 746229426,
      "node_id": "PRRC_kwDOAP4Jqs4seo6y",
      "diff_hunk": "@@ -317,6 +317,83 @@ static int32_t secp256k1_modinv32_divsteps_30_var(int32_t eta, uint32_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 30 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^32 rather than 2^30, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int32_t secp256k1_modinv32_posdivsteps_30_var(int32_t eta, uint32_t f0, uint32_t g0, secp256k1_modinv32_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix. */\n+    uint32_t u = 1, v = 0, q = 0, r = 1;\n+    uint32_t f = f0, g = g0, m;\n+    uint16_t w;\n+    int i = 30, limit, zeros;\n+    int jac = *jacp;\n+\n+    for (;;) {\n+        /* Use a sentinel bit to count zeros only up to i. */\n+        zeros = secp256k1_ctz32_var(g | (UINT32_MAX << i));\n+        /* Perform zeros divsteps at once; they all just divide g by two. */\n+        g >>= zeros;\n+        u <<= zeros;\n+        v <<= zeros;\n+        eta -= zeros;\n+        i -= zeros;\n+        /* Update the bottom bit of jac: when dividing g by an odd power of 2,\n+         * if (f mod 8) is 3 or 5, the Jacobi symbol changes sign. */\n+        jac ^= (zeros & ((f >> 1) ^ (f >> 2)));\n+        /* We're done once we've done 60 posdivsteps. */\n+        if (i == 0) break;\n+        VERIFY_CHECK((f & 1) == 1);\n+        VERIFY_CHECK((g & 1) == 1);\n+        VERIFY_CHECK((u * f0 + v * g0) == f << (30 - i));\n+        VERIFY_CHECK((q * f0 + r * g0) == g << (30 - i));\n+        /* If eta is negative, negate it and replace f,g with g,-f. */",
      "path": "src/modinv32_impl.h",
      "position": null,
      "original_position": 93,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "6e3fcc4f5149c96ab052f3312091dfc0b8eab397",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `replace f,g with g,f`?",
      "created_at": "2021-11-10T03:54:40Z",
      "updated_at": "2021-11-10T04:44:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746229426",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746229426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 356,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746232040",
      "pull_request_review_id": 801603449,
      "id": 746232040,
      "node_id": "PRRC_kwDOAP4Jqs4sepjo",
      "diff_hunk": "@@ -294,6 +294,94 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int64_t secp256k1_modinv64_posdivsteps_62_var(int64_t eta, uint64_t f0, uint64_t g0, secp256k1_modinv64_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix; see comments in secp256k1_modinv64_divsteps_62. */\n+    uint64_t u = 1, v = 0, q = 0, r = 1;\n+    uint64_t f = f0, g = g0, m;\n+    uint32_t w;\n+    int i = 62, limit, zeros;\n+    int jac = *jacp;\n+\n+    for (;;) {\n+        /* Use a sentinel bit to count zeros only up to i. */\n+        zeros = secp256k1_ctz64_var(g | (UINT64_MAX << i));\n+        /* Perform zeros divsteps at once; they all just divide g by two. */\n+        g >>= zeros;\n+        u <<= zeros;\n+        v <<= zeros;\n+        eta -= zeros;\n+        i -= zeros;\n+        /* Update the bottom bit of jac: when dividing g by an odd power of 2,\n+         * if (f mod 8) is 3 or 5, the Jacobi symbol changes sign. */\n+        jac ^= (zeros & ((f >> 1) ^ (f >> 2)));\n+        /* We're done once we've done 60 posdivsteps. */\n+        if (i == 0) break;\n+        VERIFY_CHECK((f & 1) == 1);\n+        VERIFY_CHECK((g & 1) == 1);\n+        VERIFY_CHECK((u * f0 + v * g0) == f << (62 - i));\n+        VERIFY_CHECK((q * f0 + r * g0) == g << (62 - i));\n+        /* If eta is negative, negate it and replace f,g with g,-f. */\n+        if (eta < 0) {\n+            uint64_t tmp;\n+            eta = -eta;\n+            tmp = f; f = g; g = tmp;\n+            tmp = u; u = q; q = tmp;\n+            tmp = v; v = r; r = tmp;\n+            /* Update bottom bit of jac: when swapping f and g, the Jacobi symbol changes sign\n+             * if both f and g are 3 mod 4. */\n+            jac ^= ((f & g) >> 1);\n+            /* Use a formula to cancel out up to 6 bits of g. Also, no more than i can be cancelled\n+             * out (as we'd be done before that point), and no more than eta+1 can be done as its\n+             * will flip again once that happens. */",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 52,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "6e3fcc4f5149c96ab052f3312091dfc0b8eab397",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `sign will flip`?",
      "created_at": "2021-11-10T04:02:46Z",
      "updated_at": "2021-11-10T04:52:55Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746232040",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746232040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 345,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746764475",
      "pull_request_review_id": 802839358,
      "id": 746764475,
      "node_id": "PRRC_kwDOAP4Jqs4sgri7",
      "diff_hunk": "@@ -294,6 +294,94 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int64_t secp256k1_modinv64_posdivsteps_62_var(int64_t eta, uint64_t f0, uint64_t g0, secp256k1_modinv64_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix; see comments in secp256k1_modinv64_divsteps_62. */\n+    uint64_t u = 1, v = 0, q = 0, r = 1;\n+    uint64_t f = f0, g = g0, m;\n+    uint32_t w;\n+    int i = 62, limit, zeros;\n+    int jac = *jacp;\n+\n+    for (;;) {\n+        /* Use a sentinel bit to count zeros only up to i. */\n+        zeros = secp256k1_ctz64_var(g | (UINT64_MAX << i));\n+        /* Perform zeros divsteps at once; they all just divide g by two. */\n+        g >>= zeros;\n+        u <<= zeros;\n+        v <<= zeros;\n+        eta -= zeros;\n+        i -= zeros;\n+        /* Update the bottom bit of jac: when dividing g by an odd power of 2,\n+         * if (f mod 8) is 3 or 5, the Jacobi symbol changes sign. */\n+        jac ^= (zeros & ((f >> 1) ^ (f >> 2)));\n+        /* We're done once we've done 60 posdivsteps. */\n+        if (i == 0) break;\n+        VERIFY_CHECK((f & 1) == 1);\n+        VERIFY_CHECK((g & 1) == 1);\n+        VERIFY_CHECK((u * f0 + v * g0) == f << (62 - i));\n+        VERIFY_CHECK((q * f0 + r * g0) == g << (62 - i));\n+        /* If eta is negative, negate it and replace f,g with g,-f. */\n+        if (eta < 0) {\n+            uint64_t tmp;\n+            eta = -eta;\n+            tmp = f; f = g; g = tmp;\n+            tmp = u; u = q; q = tmp;\n+            tmp = v; v = r; r = tmp;\n+            /* Update bottom bit of jac: when swapping f and g, the Jacobi symbol changes sign\n+             * if both f and g are 3 mod 4. */\n+            jac ^= ((f & g) >> 1);\n+            /* Use a formula to cancel out up to 6 bits of g. Also, no more than i can be cancelled\n+             * out (as we'd be done before that point), and no more than eta+1 can be done as its\n+             * will flip again once that happens. */",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 52,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "6e3fcc4f5149c96ab052f3312091dfc0b8eab397",
      "in_reply_to_id": 746232040,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-11-10T16:29:52Z",
      "updated_at": "2021-11-10T16:29:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746764475",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746764475"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 345,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746764650",
      "pull_request_review_id": 802839545,
      "id": 746764650,
      "node_id": "PRRC_kwDOAP4Jqs4sgrlq",
      "diff_hunk": "@@ -317,6 +317,83 @@ static int32_t secp256k1_modinv32_divsteps_30_var(int32_t eta, uint32_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 30 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^32 rather than 2^30, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int32_t secp256k1_modinv32_posdivsteps_30_var(int32_t eta, uint32_t f0, uint32_t g0, secp256k1_modinv32_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix. */\n+    uint32_t u = 1, v = 0, q = 0, r = 1;\n+    uint32_t f = f0, g = g0, m;\n+    uint16_t w;\n+    int i = 30, limit, zeros;\n+    int jac = *jacp;\n+\n+    for (;;) {\n+        /* Use a sentinel bit to count zeros only up to i. */\n+        zeros = secp256k1_ctz32_var(g | (UINT32_MAX << i));\n+        /* Perform zeros divsteps at once; they all just divide g by two. */\n+        g >>= zeros;\n+        u <<= zeros;\n+        v <<= zeros;\n+        eta -= zeros;\n+        i -= zeros;\n+        /* Update the bottom bit of jac: when dividing g by an odd power of 2,\n+         * if (f mod 8) is 3 or 5, the Jacobi symbol changes sign. */\n+        jac ^= (zeros & ((f >> 1) ^ (f >> 2)));\n+        /* We're done once we've done 60 posdivsteps. */\n+        if (i == 0) break;\n+        VERIFY_CHECK((f & 1) == 1);\n+        VERIFY_CHECK((g & 1) == 1);\n+        VERIFY_CHECK((u * f0 + v * g0) == f << (30 - i));\n+        VERIFY_CHECK((q * f0 + r * g0) == g << (30 - i));\n+        /* If eta is negative, negate it and replace f,g with g,-f. */",
      "path": "src/modinv32_impl.h",
      "position": null,
      "original_position": 93,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "6e3fcc4f5149c96ab052f3312091dfc0b8eab397",
      "in_reply_to_id": 746229426,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-11-10T16:30:02Z",
      "updated_at": "2021-11-10T16:30:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746764650",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746764650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 356,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746764756",
      "pull_request_review_id": 802839670,
      "id": 746764756,
      "node_id": "PRRC_kwDOAP4Jqs4sgrnU",
      "diff_hunk": "@@ -294,6 +294,94 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int64_t secp256k1_modinv64_posdivsteps_62_var(int64_t eta, uint64_t f0, uint64_t g0, secp256k1_modinv64_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix; see comments in secp256k1_modinv64_divsteps_62. */\n+    uint64_t u = 1, v = 0, q = 0, r = 1;\n+    uint64_t f = f0, g = g0, m;\n+    uint32_t w;\n+    int i = 62, limit, zeros;\n+    int jac = *jacp;\n+\n+    for (;;) {\n+        /* Use a sentinel bit to count zeros only up to i. */\n+        zeros = secp256k1_ctz64_var(g | (UINT64_MAX << i));\n+        /* Perform zeros divsteps at once; they all just divide g by two. */\n+        g >>= zeros;\n+        u <<= zeros;\n+        v <<= zeros;\n+        eta -= zeros;\n+        i -= zeros;\n+        /* Update the bottom bit of jac: when dividing g by an odd power of 2,\n+         * if (f mod 8) is 3 or 5, the Jacobi symbol changes sign. */\n+        jac ^= (zeros & ((f >> 1) ^ (f >> 2)));\n+        /* We're done once we've done 60 posdivsteps. */\n+        if (i == 0) break;\n+        VERIFY_CHECK((f & 1) == 1);\n+        VERIFY_CHECK((g & 1) == 1);\n+        VERIFY_CHECK((u * f0 + v * g0) == f << (62 - i));\n+        VERIFY_CHECK((q * f0 + r * g0) == g << (62 - i));\n+        /* If eta is negative, negate it and replace f,g with g,-f. */",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 40,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "6e3fcc4f5149c96ab052f3312091dfc0b8eab397",
      "in_reply_to_id": 746223337,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-11-10T16:30:08Z",
      "updated_at": "2021-11-10T16:30:08Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746764756",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746764756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746764856",
      "pull_request_review_id": 802839799,
      "id": 746764856,
      "node_id": "PRRC_kwDOAP4Jqs4sgro4",
      "diff_hunk": "@@ -317,6 +317,83 @@ static int32_t secp256k1_modinv32_divsteps_30_var(int32_t eta, uint32_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 30 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^32 rather than 2^30, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int32_t secp256k1_modinv32_posdivsteps_30_var(int32_t eta, uint32_t f0, uint32_t g0, secp256k1_modinv32_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix. */\n+    uint32_t u = 1, v = 0, q = 0, r = 1;\n+    uint32_t f = f0, g = g0, m;\n+    uint16_t w;\n+    int i = 30, limit, zeros;\n+    int jac = *jacp;\n+\n+    for (;;) {\n+        /* Use a sentinel bit to count zeros only up to i. */\n+        zeros = secp256k1_ctz32_var(g | (UINT32_MAX << i));\n+        /* Perform zeros divsteps at once; they all just divide g by two. */\n+        g >>= zeros;\n+        u <<= zeros;\n+        v <<= zeros;\n+        eta -= zeros;\n+        i -= zeros;\n+        /* Update the bottom bit of jac: when dividing g by an odd power of 2,\n+         * if (f mod 8) is 3 or 5, the Jacobi symbol changes sign. */\n+        jac ^= (zeros & ((f >> 1) ^ (f >> 2)));\n+        /* We're done once we've done 60 posdivsteps. */",
      "path": "src/modinv32_impl.h",
      "position": null,
      "original_position": 87,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "in_reply_to_id": 745856159,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-11-10T16:30:14Z",
      "updated_at": "2021-11-10T16:30:15Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746764856",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746764856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 350,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746764936",
      "pull_request_review_id": 802839937,
      "id": 746764936,
      "node_id": "PRRC_kwDOAP4Jqs4sgrqI",
      "diff_hunk": "@@ -294,6 +294,94 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int64_t secp256k1_modinv64_posdivsteps_62_var(int64_t eta, uint64_t f0, uint64_t g0, secp256k1_modinv64_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix; see comments in secp256k1_modinv64_divsteps_62. */\n+    uint64_t u = 1, v = 0, q = 0, r = 1;\n+    uint64_t f = f0, g = g0, m;\n+    uint32_t w;\n+    int i = 62, limit, zeros;\n+    int jac = *jacp;\n+\n+    for (;;) {\n+        /* Use a sentinel bit to count zeros only up to i. */\n+        zeros = secp256k1_ctz64_var(g | (UINT64_MAX << i));\n+        /* Perform zeros divsteps at once; they all just divide g by two. */\n+        g >>= zeros;\n+        u <<= zeros;\n+        v <<= zeros;\n+        eta -= zeros;\n+        i -= zeros;\n+        /* Update the bottom bit of jac: when dividing g by an odd power of 2,\n+         * if (f mod 8) is 3 or 5, the Jacobi symbol changes sign. */\n+        jac ^= (zeros & ((f >> 1) ^ (f >> 2)));\n+        /* We're done once we've done 60 posdivsteps. */",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 34,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "042f91bf4acca0e1d70ca6afffe045a525a7b614",
      "in_reply_to_id": 745850825,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-11-10T16:30:21Z",
      "updated_at": "2021-11-10T16:30:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r746764936",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/746764936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/749592091",
      "pull_request_review_id": 806429754,
      "id": 749592091,
      "node_id": "PRRC_kwDOAP4Jqs4srd4b",
      "diff_hunk": "@@ -584,4 +661,69 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n     *x = d;\n }\n \n+/* Compute the Jacobi symbol of x modulo modinfo->modulus (variable time). gcd(x,modulus) must be 1. */",
      "path": "src/modinv32_impl.h",
      "position": 152,
      "original_position": 141,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "902d57e0755b211f6864dcc3267dab2cc0ceb4d3",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nits (also applies to `modinv64_impl`):\r\n- Is `gcd(x,modulus) must be 1` still true, since you're handling `x=0` here?\r\n- Is it necessary to also mention `x must be normalized` here for consistency with `modinv32.h`?",
      "created_at": "2021-11-15T18:46:27Z",
      "updated_at": "2021-11-15T18:52:58Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r749592091",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/749592091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 675,
      "original_line": 675,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/750636902",
      "pull_request_review_id": 807801525,
      "id": 750636902,
      "node_id": "PRRC_kwDOAP4Jqs4svc9m",
      "diff_hunk": "@@ -584,4 +661,69 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n     *x = d;\n }\n \n+/* Compute the Jacobi symbol of x modulo modinfo->modulus (variable time). gcd(x,modulus) must be 1. */",
      "path": "src/modinv32_impl.h",
      "position": 152,
      "original_position": 141,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "902d57e0755b211f6864dcc3267dab2cc0ceb4d3",
      "in_reply_to_id": 749592091,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I made a few changes to address this.",
      "created_at": "2021-11-16T20:28:33Z",
      "updated_at": "2021-11-16T20:28:33Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r750636902",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/750636902"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 675,
      "original_line": 675,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1040167654",
      "pull_request_review_id": 1205393656,
      "id": 1040167654,
      "node_id": "PRRC_kwDOAP4Jqs49_7Lm",
      "diff_hunk": "@@ -769,3 +769,30 @@ def modinv_var(M, Mi, x):\n         d, e = update_de(d, e, t, M, Mi)\n     return normalize(f, d, Mi)\n ```\n+\n+## 8. From GCDs to Jacobi symbol\n+\n+We can also use a similar approach to calculate Jacobi symbol *(x | M)* by keeping track of an extra variable *j*, for which at every step *(x | M) = j (g | f)*. As we update *f* and *g*, we make corresponding updates to *j* using [properties of the Jacobi symbol](https://en.wikipedia.org/wiki/Jacobi_symbol#Properties). In particular, we update *j* whenever we divide *g* by *2* or swap *f* and *g*; these updates depend only on the values of *f* and *g* modulo *4* or *8*, and can thus be applied very quickly. Overall, this calculation is slightly simpler than the one for modular inverse because we no longer need to keep track of *d* and *e*.\n+\n+However, one difficulty of this approach is that the Jacobi symbol *(a | n)* is only defined for positive odd integers *n*, whereas in the original safegcd algorithm, *f, g* can take negative values. We resolve this by using the following modified steps:\n+\n+```python\n+        # Before\n+        if delta > 0 and g & 1:\n+            delta, f, g = 1 - delta, g, (g - f) // 2\n+\n+        # After\n+        if delta > 0 and g & 1:\n+            delta, f, g = 1 - delta, g, (g + f) // 2\n+```\n+\n+The algorithm is still correct, since the changed divstep, called a \"posdivstep\" (see section 8.4 and E.5 in the paper) preserves *gcd(f, g)*. However, there's no proof that the modified algorithm will converge. The justification for posdivsteps is completely empirical: in practice, it appears that the vast majority of inputs converge to *f=g=gcd(f<sub>0</sub>, g<sub>0<sub>)* in a number of steps proportional to their logarithm.",
      "path": "doc/safegcd_implementation.md",
      "position": null,
      "original_position": 31,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "d70f0fefc98b3557850a6b710ea734be0f240da7",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`g<sub>0<sub>` -> `g<sub>0</sub>`",
      "created_at": "2022-12-05T22:25:12Z",
      "updated_at": "2022-12-10T16:00:07Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1040167654",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1040167654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045101624",
      "pull_request_review_id": 1205393656,
      "id": 1045101624,
      "node_id": "PRRC_kwDOAP4Jqs4-Svw4",
      "diff_hunk": "@@ -218,6 +218,17 @@ void bench_field_sqrt(void* arg, int iters) {\n     CHECK(j <= iters);\n }\n \n+void bench_field_jacobi_var(void* arg, int iters) {\n+    int i, j = 0;\n+    bench_inv *data = (bench_inv*)arg;\n+\n+    for (i = 0; i < iters; i++) {\n+        j += secp256k1_fe_jacobi_var(&data->fe[0]);\n+        secp256k1_fe_add(&data->fe[0], &data->fe[1]);\n+    }\n+    CHECK(j <= iters);\n+}",
      "path": "src/bench_internal.c",
      "position": null,
      "original_position": 13,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "d70f0fefc98b3557850a6b710ea734be0f240da7",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`./bench_internal jacobi` crashes on my machine when configured with CPPFLAGS=-DVERIFY. Backtrace:\r\n```\r\nsrc/field_5x52_impl.h:57: test condition failed: r == 1\r\n\r\nProgram received signal SIGABRT, Aborted.\r\n0x00007ffff7e3fbc7 in __pthread_kill_implementation () from /nix/store/hsk71z8admvgykn7vzjy11dfnar9f4r1-glibc-2.35-163/lib/libc.so.6\r\n(gdb) bt\r\n#0  0x00007ffff7e3fbc7 in __pthread_kill_implementation () from /nix/store/hsk71z8admvgykn7vzjy11dfnar9f4r1-glibc-2.35-163/lib/libc.so.6\r\n#1  0x00007ffff7df2b46 in raise () from /nix/store/hsk71z8admvgykn7vzjy11dfnar9f4r1-glibc-2.35-163/lib/libc.so.6\r\n#2  0x00007ffff7ddd4b5 in abort () from /nix/store/hsk71z8admvgykn7vzjy11dfnar9f4r1-glibc-2.35-163/lib/libc.so.6\r\n#3  0x0000000000402920 in secp256k1_fe_verify (a=<optimized out>) at src/field_5x52_impl.h:57\r\n#4  0x000000000040c1f8 in secp256k1_fe_add (a=0x99, r=0x69) at src/field_5x52_impl.h:443\r\n#5  bench_field_jacobi_var (arg=arg@entry=0x7fffffffcf20, iters=iters@entry=20000) at src/bench_internal.c:227\r\n#6  0x0000000000413d5a in run_benchmark (name=0x416221 \"field_jacobi_var\", benchmark=0x40bdd0 <bench_field_jacobi_var>, setup=0x40cd70 <bench_setup>,\r\n    teardown=0x0, data=0x7fffffffcf20, count=10, iter=20000) at src/bench.h:109\r\n#7  0x000000000040147d in main (argc=2, argv=0x7fffffffd798) at src/bench_internal.c:393\r\n```\r\n",
      "created_at": "2022-12-10T15:55:37Z",
      "updated_at": "2022-12-10T16:00:07Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1045101624",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045101624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 221,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 233,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045102068",
      "pull_request_review_id": 1205393656,
      "id": 1045102068,
      "node_id": "PRRC_kwDOAP4Jqs4-Sv30",
      "diff_hunk": "@@ -2854,8 +2894,10 @@ void run_sqrt(void) {\n         for (j = 0; j < count; j++) {\n             random_fe(&x);\n             secp256k1_fe_sqr(&s, &x);\n+            CHECK(secp256k1_fe_jacobi_var(&s) == 1);\n             test_sqrt(&s, &x);\n             secp256k1_fe_negate(&t, &s, 1);\n+            CHECK(secp256k1_fe_jacobi_var(&t) == -1);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 75,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "d70f0fefc98b3557850a6b710ea734be0f240da7",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it possible that that `secp256k1_fe_jacobi_var(&s)` is taking the slow `secp256k1_fe_sqrt` branch about 50% of the time? I discovered this on my machine with this simple patch that adds a printf:\r\n\r\n```\r\ndiff --git a/src/field_5x52_impl.h b/src/field_5x52_impl.h\r\nindex 26e89123..d3eb3347 100644\r\n--- a/src/field_5x52_impl.h\r\n+++ b/src/field_5x52_impl.h\r\n@@ -681,6 +681,7 @@ static int secp256k1_fe_jacobi_var(const secp256k1_fe *x) {\r\n          * to computing a square root. This should be extremely rare with random\r\n          * input. */\r\n         secp256k1_fe dummy;\r\n+        printf(\"slow\");\r\n         ret = 2*secp256k1_fe_sqrt(&dummy, &tmp) - 1;\r\n #ifdef VERIFY\r\n     } else {\r\n```\r\n\r\nI'm quite confused because should be \"extremely rare with random input\", but `s` appears to be a random field element. Furthermore, \"slow\" isn't printed in the jacobi benchmarks unless I compile with `-DVERIFY` (which crashes after a few iterations, see other comment).",
      "created_at": "2022-12-10T15:59:37Z",
      "updated_at": "2022-12-10T16:00:07Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1045102068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045102068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 2894,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045102717",
      "pull_request_review_id": 1212582310,
      "id": 1045102717,
      "node_id": "PRRC_kwDOAP4Jqs4-SwB9",
      "diff_hunk": "@@ -2854,8 +2894,10 @@ void run_sqrt(void) {\n         for (j = 0; j < count; j++) {\n             random_fe(&x);\n             secp256k1_fe_sqr(&s, &x);\n+            CHECK(secp256k1_fe_jacobi_var(&s) == 1);\n             test_sqrt(&s, &x);\n             secp256k1_fe_negate(&t, &s, 1);\n+            CHECK(secp256k1_fe_jacobi_var(&t) == -1);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 75,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "d70f0fefc98b3557850a6b710ea734be0f240da7",
      "in_reply_to_id": 1045102068,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, deliberately.\r\n\r\nWIth -DVERIFY, the cut-off is at ~900 iterations of the algorithm, chosen to be roughly the median of the number of iterations needed. Without -DVERIFY, ~1500 iterations is the limit, which has probability less than 1 in a billion (probably a lot less).\r\n\r\nIt's using a lower limit in -DVERIFY to make sure the slow branch is exercised in tests.",
      "created_at": "2022-12-10T16:04:29Z",
      "updated_at": "2022-12-10T16:04:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1045102717",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045102717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 2894,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045107172",
      "pull_request_review_id": 1212585882,
      "id": 1045107172,
      "node_id": "PRRC_kwDOAP4Jqs4-SxHk",
      "diff_hunk": "@@ -218,6 +218,17 @@ void bench_field_sqrt(void* arg, int iters) {\n     CHECK(j <= iters);\n }\n \n+void bench_field_jacobi_var(void* arg, int iters) {\n+    int i, j = 0;\n+    bench_inv *data = (bench_inv*)arg;\n+\n+    for (i = 0; i < iters; i++) {\n+        j += secp256k1_fe_jacobi_var(&data->fe[0]);\n+        secp256k1_fe_add(&data->fe[0], &data->fe[1]);\n+    }\n+    CHECK(j <= iters);\n+}",
      "path": "src/bench_internal.c",
      "position": null,
      "original_position": 13,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "d70f0fefc98b3557850a6b710ea734be0f240da7",
      "in_reply_to_id": 1045101624,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed. It was just a missing normalize in the benchmark.",
      "created_at": "2022-12-10T16:45:13Z",
      "updated_at": "2022-12-10T16:45:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1045107172",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045107172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 221,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 233,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045107182",
      "pull_request_review_id": 1212585897,
      "id": 1045107182,
      "node_id": "PRRC_kwDOAP4Jqs4-SxHu",
      "diff_hunk": "@@ -769,3 +769,30 @@ def modinv_var(M, Mi, x):\n         d, e = update_de(d, e, t, M, Mi)\n     return normalize(f, d, Mi)\n ```\n+\n+## 8. From GCDs to Jacobi symbol\n+\n+We can also use a similar approach to calculate Jacobi symbol *(x | M)* by keeping track of an extra variable *j*, for which at every step *(x | M) = j (g | f)*. As we update *f* and *g*, we make corresponding updates to *j* using [properties of the Jacobi symbol](https://en.wikipedia.org/wiki/Jacobi_symbol#Properties). In particular, we update *j* whenever we divide *g* by *2* or swap *f* and *g*; these updates depend only on the values of *f* and *g* modulo *4* or *8*, and can thus be applied very quickly. Overall, this calculation is slightly simpler than the one for modular inverse because we no longer need to keep track of *d* and *e*.\n+\n+However, one difficulty of this approach is that the Jacobi symbol *(a | n)* is only defined for positive odd integers *n*, whereas in the original safegcd algorithm, *f, g* can take negative values. We resolve this by using the following modified steps:\n+\n+```python\n+        # Before\n+        if delta > 0 and g & 1:\n+            delta, f, g = 1 - delta, g, (g - f) // 2\n+\n+        # After\n+        if delta > 0 and g & 1:\n+            delta, f, g = 1 - delta, g, (g + f) // 2\n+```\n+\n+The algorithm is still correct, since the changed divstep, called a \"posdivstep\" (see section 8.4 and E.5 in the paper) preserves *gcd(f, g)*. However, there's no proof that the modified algorithm will converge. The justification for posdivsteps is completely empirical: in practice, it appears that the vast majority of inputs converge to *f=g=gcd(f<sub>0</sub>, g<sub>0<sub>)* in a number of steps proportional to their logarithm.",
      "path": "doc/safegcd_implementation.md",
      "position": null,
      "original_position": 31,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "d70f0fefc98b3557850a6b710ea734be0f240da7",
      "in_reply_to_id": 1040167654,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2022-12-10T16:45:21Z",
      "updated_at": "2022-12-10T16:45:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1045107182",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045107182"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045107294",
      "pull_request_review_id": 1212585983,
      "id": 1045107294,
      "node_id": "PRRC_kwDOAP4Jqs4-SxJe",
      "diff_hunk": "@@ -2854,8 +2894,10 @@ void run_sqrt(void) {\n         for (j = 0; j < count; j++) {\n             random_fe(&x);\n             secp256k1_fe_sqr(&s, &x);\n+            CHECK(secp256k1_fe_jacobi_var(&s) == 1);\n             test_sqrt(&s, &x);\n             secp256k1_fe_negate(&t, &s, 1);\n+            CHECK(secp256k1_fe_jacobi_var(&t) == -1);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 75,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "d70f0fefc98b3557850a6b710ea734be0f240da7",
      "in_reply_to_id": 1045102068,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah ok, that's good. I did not looked into `secp256k1_jacobi64_maybe_var` so far and hadn't considered that its behavior would change on VERIFY.",
      "created_at": "2022-12-10T16:46:46Z",
      "updated_at": "2022-12-10T16:46:46Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1045107294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1045107294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 2894,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060767767",
      "pull_request_review_id": 1234827593,
      "id": 1060767767,
      "node_id": "PRRC_kwDOAP4Jqs4_OggX",
      "diff_hunk": "@@ -183,10 +183,16 @@ static SECP256K1_INLINE int secp256k1_i128_eq_var(const secp256k1_int128 *a, con\n    return a->hi == b->hi && a->lo == b->lo;\n }\n \n-static SECP256K1_INLINE int secp256k1_i128_check_pow2(const secp256k1_int128 *r, unsigned int n) {\n-   VERIFY_CHECK(n < 127);\n-   return n >= 64 ? r->hi == (uint64_t)1 << (n - 64) && r->lo == 0\n-                  : r->hi == 0 && r->lo == (uint64_t)1 << n;\n+static SECP256K1_INLINE int secp256k1_i128_check_pow2(const secp256k1_int128 *r, unsigned int n, int sign) {\n+    VERIFY_CHECK(n < 127);\n+    VERIFY_CHECK(sign == 1 || sign == -1);\n+    if (sign == 1) {\n+        return n >= 64 ? r->hi == (uint64_t)1 << (n - 64) && r->lo == 0\n+                       : r->hi == 0 && r->lo == (uint64_t)1 << n;\n+    } else {\n+        return n >= 64 ? r->hi == (~(uint64_t)0) << (n - 64) && r->lo == 0\n+                       : r->hi == (~(uint64_t)0) && r->lo == (~(uint64_t)0) << n;\n+    }",
      "path": "src/int128_struct_impl.h",
      "position": null,
      "original_position": 17,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n    return n >= 64 ? r->hi == (uint64_t)sign << (n - 64) && r->lo == 0\r\n                   : r->hi == (uint64_t)((sign - 1) >> 2) && r->lo == (uint64_t)sign << n;\r\n```",
      "created_at": "2023-01-03T16:48:03Z",
      "updated_at": "2023-01-03T18:39:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1060767767",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060767767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 189,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060781266",
      "pull_request_review_id": 1234827593,
      "id": 1060781266,
      "node_id": "PRRC_kwDOAP4Jqs4_OjzS",
      "diff_hunk": "@@ -1948,7 +1988,33 @@ void run_int128_test_case(void) {\n             }\n             swz = swa;\n         }\n-        CHECK(secp256k1_i128_check_pow2(&swz, pos) == expect);\n+        CHECK(secp256k1_i128_check_pow2(&swz, pos, 1) == expect);\n+    }\n+    /* test secp256k1_i128_check_pow2 (sign == -1) */\n+    {\n+        int expect = (uc & 1);\n+        int pos = ub % 127;\n+        if (expect) {\n+            /* If expect==1, set swz to exactly -(2 << pos). */\n+            uint64_t hi = ~(uint64_t)0;\n+            uint64_t lo = ~(uint64_t)0;\n+            if (pos & 64) {",
      "path": "src/tests.c",
      "position": null,
      "original_position": 92,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: \r\n```suggestion\r\n            if (pos >= 64) {\r\n```\r\n\r\nI find this much clearer, it took me a while to convince myself that they're equivalent (which holds because `pos < 128`).\r\n\r\nIf you happen to accept this suggestion, you should change it below too and also the two occurrences in the `sign == 1` test block, where you got this code from.",
      "created_at": "2023-01-03T17:03:30Z",
      "updated_at": "2023-01-03T18:39:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1060781266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060781266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2001,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060790807",
      "pull_request_review_id": 1234827593,
      "id": 1060790807,
      "node_id": "PRRC_kwDOAP4Jqs4_OmIX",
      "diff_hunk": "@@ -71,11 +71,13 @@ static int secp256k1_modinv64_mul_cmp_62(const secp256k1_modinv64_signed62 *a, i\n     return 0;\n }\n \n-/* Check if the determinant of t is equal to 1 << n. */\n-static int secp256k1_modinv64_det_check_pow2(const secp256k1_modinv64_trans2x2 *t, unsigned int n) {\n+/* Check if the determinant of t is equal to 1 << n. If abs, |det| == 1 << n. */",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "readability nit:\r\n```suggestion\r\n/* Check if the determinant of t is equal to 1 << n. If abs, check if |det t| == 1 << n. */\r\n```\r\nor if you prefer shorter\r\n```suggestion\r\n/* Check if the determinant of t equals 1 << n. If abs, check if |det t| == 1 << n. */\r\n```",
      "created_at": "2023-01-03T17:14:05Z",
      "updated_at": "2023-01-03T18:39:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1060790807",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060790807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060800225",
      "pull_request_review_id": 1234827593,
      "id": 1060800225,
      "node_id": "PRRC_kwDOAP4Jqs4_Oobh",
      "diff_hunk": "@@ -139,4 +139,7 @@ static void secp256k1_fe_half(secp256k1_fe *r);\n  *  magnitude set to 'm' and is normalized if (and only if) 'm' is zero. */\n static void secp256k1_fe_get_bounds(secp256k1_fe *r, int m);\n \n+/** Compute the Jacobi symbol of a / p. 0 if a=0; 1 if a square; -1 if a non-square. */",
      "path": "src/field.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n/** Compute the Jacobi symbol of a / p. 0 if a=0; 1 if a square and non-zero; -1 if a non-square. */\r\n```",
      "created_at": "2023-01-03T17:25:13Z",
      "updated_at": "2023-01-03T18:39:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1060800225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060800225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060831728",
      "pull_request_review_id": 1234827593,
      "id": 1060831728,
      "node_id": "PRRC_kwDOAP4Jqs4_OwHw",
      "diff_hunk": "@@ -667,4 +667,32 @@ static void secp256k1_fe_inv_var(secp256k1_fe *r, const secp256k1_fe *x) {\n #endif\n }\n \n+static int secp256k1_fe_jacobi_var(const secp256k1_fe *x) {\n+    secp256k1_fe tmp;\n+    secp256k1_modinv64_signed62 s;\n+    int ret;\n+\n+    tmp = *x;\n+    secp256k1_fe_normalize_var(&tmp);\n+    secp256k1_fe_to_signed62(&s, &tmp);\n+    ret = secp256k1_jacobi64_maybe_var(&s, &secp256k1_const_modinfo_fe);\n+    if (ret == -2) {\n+        /* secp256k1_jacobi64_maybe_var failed to compute the Jacobi symbol. Fall back\n+         * to computing a square root. This should be extremely rare with random\n+         * input. */\n+        secp256k1_fe dummy;\n+        ret = 2*secp256k1_fe_sqrt(&dummy, &tmp) - 1;",
      "path": "src/field_5x52_impl.h",
      "position": null,
      "original_position": 18,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should instead have a function  `fe_is_square_var`? \r\n\r\nI think this will be better because it\r\n * avoids the return value translations here and below \r\n * is more ergonomic to use (I think, remember that we had it this in the old version of BIP340 too),\r\n * and it aligns with the uses in ellswift: in the corresponding PR, we only test `>=0` and `<0`, so we actually don't even need the special casing for `==0` currently.\r\n\r\nThis is related to my comment below about the `jacp` function argument.",
      "created_at": "2023-01-03T18:05:47Z",
      "updated_at": "2023-01-03T18:39:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1060831728",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060831728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060846272",
      "pull_request_review_id": 1234827593,
      "id": 1060846272,
      "node_id": "PRRC_kwDOAP4Jqs4_OzrA",
      "diff_hunk": "@@ -301,11 +303,100 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n      * does not change the gcd of f and g, apart from adding a power-of-2 factor to it (which\n      * will be divided out again). As each divstep's individual matrix has determinant 2, the\n      * aggregate of 62 of them will have determinant 2^62. */\n-    VERIFY_CHECK(secp256k1_modinv64_det_check_pow2(t, 62));\n+    VERIFY_CHECK(secp256k1_modinv64_det_check_pow2(t, 62, 0));\n #endif\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int64_t secp256k1_modinv64_posdivsteps_62_var(int64_t eta, uint64_t f0, uint64_t g0, secp256k1_modinv64_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix; see comments in secp256k1_modinv64_divsteps_62. */\n+    uint64_t u = 1, v = 0, q = 0, r = 1;\n+    uint64_t f = f0, g = g0, m;\n+    uint32_t w;\n+    int i = 62, limit, zeros;\n+    int jac = *jacp;",
      "path": "src/modinv64_impl.h",
      "position": 64,
      "original_position": 61,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    int jac = *jacp;\r\n    VERIFY_CHECK(jac == 0 || jac == 1);\r\n```",
      "created_at": "2023-01-03T18:26:01Z",
      "updated_at": "2023-01-03T18:42:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1060846272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060846272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 330,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060848555",
      "pull_request_review_id": 1234827593,
      "id": 1060848555,
      "node_id": "PRRC_kwDOAP4Jqs4_O0Or",
      "diff_hunk": "@@ -301,11 +303,100 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n      * does not change the gcd of f and g, apart from adding a power-of-2 factor to it (which\n      * will be divided out again). As each divstep's individual matrix has determinant 2, the\n      * aggregate of 62 of them will have determinant 2^62. */\n-    VERIFY_CHECK(secp256k1_modinv64_det_check_pow2(t, 62));\n+    VERIFY_CHECK(secp256k1_modinv64_det_check_pow2(t, 62, 0));\n #endif\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "should document the input/output parameter `jacp`. (And the variable name is confusing. This is not the jacobi symbol but its sign.)",
      "created_at": "2023-01-03T18:29:21Z",
      "updated_at": "2023-01-03T18:39:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1060848555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060848555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 315,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060852701",
      "pull_request_review_id": 1234827593,
      "id": 1060852701,
      "node_id": "PRRC_kwDOAP4Jqs4_O1Pd",
      "diff_hunk": "@@ -626,4 +717,71 @@ static void secp256k1_modinv64_var(secp256k1_modinv64_signed62 *x, const secp256\n     *x = d;\n }\n \n+/* Do up to 25 iterations of 62 posdivsteps (up to 1550 steps; more is extremely rare) each until f=1.\n+ * In VERIFY mode use a lower number of iterations (744, close to the median 756), so failure actually occurs. */\n+#ifdef VERIFY\n+#define JACOBI64_ITERATIONS 12\n+#else\n+#define JACOBI64_ITERATIONS 25\n+#endif",
      "path": "src/modinv64_impl.h",
      "position": 147,
      "original_position": 147,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "On the one hand, I really like this trick. But on the other hand, it creates a difference between VERIFY and non-VERIFY (and who knows, maybe this influences loop unrolling etc.)\r\n\r\nWould it be a good idea to keep this 25 in the real code but create a test-only version of it (either in the tests file or here) that just runs with 12? Or maybe better, make the number of iterations an argument of the function? Since it's a \"maybe\" function, it should be correct for each iteration value.",
      "created_at": "2023-01-03T18:34:53Z",
      "updated_at": "2023-01-03T18:39:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1060852701",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060852701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": 723,
      "original_start_line": 720,
      "start_side": "RIGHT",
      "line": 729,
      "original_line": 729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060856943",
      "pull_request_review_id": 1234963970,
      "id": 1060856943,
      "node_id": "PRRC_kwDOAP4Jqs4_O2Rv",
      "diff_hunk": "@@ -317,6 +317,83 @@ static int32_t secp256k1_modinv32_divsteps_30_var(int32_t eta, uint32_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 30 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^32 rather than 2^30, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int32_t secp256k1_modinv32_posdivsteps_30_var(int32_t eta, uint32_t f0, uint32_t g0, secp256k1_modinv32_trans2x2 *t, int *jacp) {",
      "path": "src/modinv32_impl.h",
      "position": 70,
      "original_position": 67,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since this is so similar to the other function, have you considered using macros to avoid code duplication? (I'm not saying it's necessarily better.)",
      "created_at": "2023-01-03T18:40:54Z",
      "updated_at": "2023-01-03T18:40:54Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1060856943",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1060856943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 333,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061032840",
      "pull_request_review_id": 1235214873,
      "id": 1061032840,
      "node_id": "PRRC_kwDOAP4Jqs4_PhOI",
      "diff_hunk": "@@ -183,10 +183,16 @@ static SECP256K1_INLINE int secp256k1_i128_eq_var(const secp256k1_int128 *a, con\n    return a->hi == b->hi && a->lo == b->lo;\n }\n \n-static SECP256K1_INLINE int secp256k1_i128_check_pow2(const secp256k1_int128 *r, unsigned int n) {\n-   VERIFY_CHECK(n < 127);\n-   return n >= 64 ? r->hi == (uint64_t)1 << (n - 64) && r->lo == 0\n-                  : r->hi == 0 && r->lo == (uint64_t)1 << n;\n+static SECP256K1_INLINE int secp256k1_i128_check_pow2(const secp256k1_int128 *r, unsigned int n, int sign) {\n+    VERIFY_CHECK(n < 127);\n+    VERIFY_CHECK(sign == 1 || sign == -1);\n+    if (sign == 1) {\n+        return n >= 64 ? r->hi == (uint64_t)1 << (n - 64) && r->lo == 0\n+                       : r->hi == 0 && r->lo == (uint64_t)1 << n;\n+    } else {\n+        return n >= 64 ? r->hi == (~(uint64_t)0) << (n - 64) && r->lo == 0\n+                       : r->hi == (~(uint64_t)0) && r->lo == (~(uint64_t)0) << n;\n+    }",
      "path": "src/int128_struct_impl.h",
      "position": null,
      "original_position": 17,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060767767,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-01-03T23:28:26Z",
      "updated_at": "2023-01-03T23:28:26Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1061032840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061032840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 189,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061032879",
      "pull_request_review_id": 1235214930,
      "id": 1061032879,
      "node_id": "PRRC_kwDOAP4Jqs4_PhOv",
      "diff_hunk": "@@ -1948,7 +1988,33 @@ void run_int128_test_case(void) {\n             }\n             swz = swa;\n         }\n-        CHECK(secp256k1_i128_check_pow2(&swz, pos) == expect);\n+        CHECK(secp256k1_i128_check_pow2(&swz, pos, 1) == expect);\n+    }\n+    /* test secp256k1_i128_check_pow2 (sign == -1) */\n+    {\n+        int expect = (uc & 1);\n+        int pos = ub % 127;\n+        if (expect) {\n+            /* If expect==1, set swz to exactly -(2 << pos). */\n+            uint64_t hi = ~(uint64_t)0;\n+            uint64_t lo = ~(uint64_t)0;\n+            if (pos & 64) {",
      "path": "src/tests.c",
      "position": null,
      "original_position": 92,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060781266,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-01-03T23:28:33Z",
      "updated_at": "2023-01-03T23:28:33Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1061032879",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061032879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2001,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061914866",
      "pull_request_review_id": 1236528047,
      "id": 1061914866,
      "node_id": "PRRC_kwDOAP4Jqs4_S4jy",
      "diff_hunk": "@@ -667,4 +667,32 @@ static void secp256k1_fe_inv_var(secp256k1_fe *r, const secp256k1_fe *x) {\n #endif\n }\n \n+static int secp256k1_fe_jacobi_var(const secp256k1_fe *x) {\n+    secp256k1_fe tmp;\n+    secp256k1_modinv64_signed62 s;\n+    int ret;\n+\n+    tmp = *x;\n+    secp256k1_fe_normalize_var(&tmp);\n+    secp256k1_fe_to_signed62(&s, &tmp);\n+    ret = secp256k1_jacobi64_maybe_var(&s, &secp256k1_const_modinfo_fe);\n+    if (ret == -2) {\n+        /* secp256k1_jacobi64_maybe_var failed to compute the Jacobi symbol. Fall back\n+         * to computing a square root. This should be extremely rare with random\n+         * input. */\n+        secp256k1_fe dummy;\n+        ret = 2*secp256k1_fe_sqrt(&dummy, &tmp) - 1;",
      "path": "src/field_5x52_impl.h",
      "position": null,
      "original_position": 18,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060831728,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've renamed the function to `secp256k1_fe_is_square_var`; the internal (modinv) one is still actually computing a Jacobi symbol, I'm less convinced about changing things there.",
      "created_at": "2023-01-04T21:52:14Z",
      "updated_at": "2023-01-04T21:52:14Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1061914866",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061914866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061915218",
      "pull_request_review_id": 1236528475,
      "id": 1061915218,
      "node_id": "PRRC_kwDOAP4Jqs4_S4pS",
      "diff_hunk": "@@ -301,11 +303,100 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n      * does not change the gcd of f and g, apart from adding a power-of-2 factor to it (which\n      * will be divided out again). As each divstep's individual matrix has determinant 2, the\n      * aggregate of 62 of them will have determinant 2^62. */\n-    VERIFY_CHECK(secp256k1_modinv64_det_check_pow2(t, 62));\n+    VERIFY_CHECK(secp256k1_modinv64_det_check_pow2(t, 62, 0));\n #endif\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060848555,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've added a comment explaining it (in both the 32-bit and 64-bit versions).",
      "created_at": "2023-01-04T21:52:47Z",
      "updated_at": "2023-01-04T21:52:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1061915218",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061915218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": 315,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061917455",
      "pull_request_review_id": 1236531621,
      "id": 1061917455,
      "node_id": "PRRC_kwDOAP4Jqs4_S5MP",
      "diff_hunk": "@@ -626,4 +717,71 @@ static void secp256k1_modinv64_var(secp256k1_modinv64_signed62 *x, const secp256\n     *x = d;\n }\n \n+/* Do up to 25 iterations of 62 posdivsteps (up to 1550 steps; more is extremely rare) each until f=1.\n+ * In VERIFY mode use a lower number of iterations (744, close to the median 756), so failure actually occurs. */\n+#ifdef VERIFY\n+#define JACOBI64_ITERATIONS 12\n+#else\n+#define JACOBI64_ITERATIONS 25\n+#endif",
      "path": "src/modinv64_impl.h",
      "position": 147,
      "original_position": 147,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060852701,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> it creates a difference between VERIFY and non-VERIFY (and who knows, maybe this influences loop unrolling etc.)\r\n\r\nIs that a problem? VERIFY vs non-VERIFY may already affect loop unrolling by having more code inside the loop for example. I feel like VERIFY mode isn't to test the compiler's correctness, but to test the correctness of our source code.\r\n\r\nSo... I'm not sure. I do see the uneasiness about it, but I feel that the current approach is really the only one that guarantees (a) it's actually exercised in realistic settings and (b) using the same code as is used in production. A copy in tests could go out of sync, and having the iteration count be an argument still means somewhere higher in the stack there needs to be a decision what to set it to, which I think has the same problems.\r\n\r\nIf we don't like it, I think the best alternative is just having maintainers occasionally manually setting the iteration count lower, and seeing if tests still pass.",
      "created_at": "2023-01-04T21:56:18Z",
      "updated_at": "2023-01-04T21:59:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1061917455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061917455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": 723,
      "original_start_line": 720,
      "start_side": "RIGHT",
      "line": 729,
      "original_line": 729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061918829",
      "pull_request_review_id": 1236533696,
      "id": 1061918829,
      "node_id": "PRRC_kwDOAP4Jqs4_S5ht",
      "diff_hunk": "@@ -317,6 +317,83 @@ static int32_t secp256k1_modinv32_divsteps_30_var(int32_t eta, uint32_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 30 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^32 rather than 2^30, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int32_t secp256k1_modinv32_posdivsteps_30_var(int32_t eta, uint32_t f0, uint32_t g0, secp256k1_modinv32_trans2x2 *t, int *jacp) {",
      "path": "src/modinv32_impl.h",
      "position": 70,
      "original_position": 67,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060856943,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have, but it's a bunch of small changes:\r\n* Different transformation matrices (which in terms of code means some negation signs are gone).\r\n* Higher upper bounds on eta.\r\n* `*jacp` accounting.\r\n* Different constraints on the determinant of the transformation matrix.\r\n\r\nI don't think macros to reduce code reuse would be very readable.",
      "created_at": "2023-01-04T21:58:27Z",
      "updated_at": "2023-01-04T21:58:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1061918829",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061918829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 333,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061922144",
      "pull_request_review_id": 1236538649,
      "id": 1061922144,
      "node_id": "PRRC_kwDOAP4Jqs4_S6Vg",
      "diff_hunk": "@@ -301,11 +303,100 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n      * does not change the gcd of f and g, apart from adding a power-of-2 factor to it (which\n      * will be divided out again). As each divstep's individual matrix has determinant 2, the\n      * aggregate of 62 of them will have determinant 2^62. */\n-    VERIFY_CHECK(secp256k1_modinv64_det_check_pow2(t, 62));\n+    VERIFY_CHECK(secp256k1_modinv64_det_check_pow2(t, 62, 0));\n #endif\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int64_t secp256k1_modinv64_posdivsteps_62_var(int64_t eta, uint64_t f0, uint64_t g0, secp256k1_modinv64_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix; see comments in secp256k1_modinv64_divsteps_62. */\n+    uint64_t u = 1, v = 0, q = 0, r = 1;\n+    uint64_t f = f0, g = g0, m;\n+    uint32_t w;\n+    int i = 62, limit, zeros;\n+    int jac = *jacp;",
      "path": "src/modinv64_impl.h",
      "position": 64,
      "original_position": 61,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060846272,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's not actually correct; the other bits of `*jacp` will take on non-zero values too, but are irrelevant. I've hopefully addressed that in the added comments.",
      "created_at": "2023-01-04T22:02:34Z",
      "updated_at": "2023-01-04T22:02:34Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1061922144",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1061922144"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 330,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062151551",
      "pull_request_review_id": 1236901141,
      "id": 1062151551,
      "node_id": "PRRC_kwDOAP4Jqs4_TyV_",
      "diff_hunk": "@@ -317,6 +317,83 @@ static int32_t secp256k1_modinv32_divsteps_30_var(int32_t eta, uint32_t f0, uint\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 30 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^32 rather than 2^30, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int32_t secp256k1_modinv32_posdivsteps_30_var(int32_t eta, uint32_t f0, uint32_t g0, secp256k1_modinv32_trans2x2 *t, int *jacp) {",
      "path": "src/modinv32_impl.h",
      "position": 70,
      "original_position": 67,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060856943,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense!",
      "created_at": "2023-01-05T06:41:33Z",
      "updated_at": "2023-01-05T06:41:34Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062151551",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062151551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 333,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062151818",
      "pull_request_review_id": 1236901512,
      "id": 1062151818,
      "node_id": "PRRC_kwDOAP4Jqs4_TyaK",
      "diff_hunk": "@@ -301,11 +303,100 @@ static int64_t secp256k1_modinv64_divsteps_62_var(int64_t eta, uint64_t f0, uint\n      * does not change the gcd of f and g, apart from adding a power-of-2 factor to it (which\n      * will be divided out again). As each divstep's individual matrix has determinant 2, the\n      * aggregate of 62 of them will have determinant 2^62. */\n-    VERIFY_CHECK(secp256k1_modinv64_det_check_pow2(t, 62));\n+    VERIFY_CHECK(secp256k1_modinv64_det_check_pow2(t, 62, 0));\n #endif\n     return eta;\n }\n \n+/* Compute the transition matrix and eta for 62 posdivsteps (variable time, eta=-delta), and keeps track\n+ * of the Jacobi symbol along the way. f0 and g0 must be f and g mod 2^64 rather than 2^62, because\n+ * Jacobi tracking requires knowing (f mod 8) rather than just (f mod 2).\n+ *\n+ * Input:  eta: initial eta\n+ *         f0:  bottom limb of initial f\n+ *         g0:  bottom limb of initial g\n+ * Output: t: transition matrix\n+ * Return: final eta\n+ */\n+static int64_t secp256k1_modinv64_posdivsteps_62_var(int64_t eta, uint64_t f0, uint64_t g0, secp256k1_modinv64_trans2x2 *t, int *jacp) {\n+    /* Transformation matrix; see comments in secp256k1_modinv64_divsteps_62. */\n+    uint64_t u = 1, v = 0, q = 0, r = 1;\n+    uint64_t f = f0, g = g0, m;\n+    uint32_t w;\n+    int i = 62, limit, zeros;\n+    int jac = *jacp;",
      "path": "src/modinv64_impl.h",
      "position": 64,
      "original_position": 61,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060846272,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, I got it after reading your new comments.",
      "created_at": "2023-01-05T06:42:04Z",
      "updated_at": "2023-01-05T06:42:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062151818",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062151818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 330,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062169019",
      "pull_request_review_id": 1236926015,
      "id": 1062169019,
      "node_id": "PRRC_kwDOAP4Jqs4_T2m7",
      "diff_hunk": "@@ -626,4 +717,71 @@ static void secp256k1_modinv64_var(secp256k1_modinv64_signed62 *x, const secp256\n     *x = d;\n }\n \n+/* Do up to 25 iterations of 62 posdivsteps (up to 1550 steps; more is extremely rare) each until f=1.\n+ * In VERIFY mode use a lower number of iterations (744, close to the median 756), so failure actually occurs. */\n+#ifdef VERIFY\n+#define JACOBI64_ITERATIONS 12\n+#else\n+#define JACOBI64_ITERATIONS 25\n+#endif",
      "path": "src/modinv64_impl.h",
      "position": 147,
      "original_position": 147,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060852701,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I feel like VERIFY mode isn't to test the compiler's correctness, but to test the correctness of our source code.\r\n\r\nThat's the way I see it. too. [1] I think the fundamental problem here is that we don't really run tests in non-VERIFY mode. I'll comment in https://github.com/bitcoin-core/secp256k1/issues/1037, which is somewhat related.\r\n\r\n > A copy in tests could go out of sync,  [...]\r\n\r\nAgreed, that's bad. \r\n\r\n> If we don't like it, I think the best alternative is just having maintainers occasionally manually setting the iteration count lower, and seeing if tests still pass.\r\n\r\nThat's even worse, we'll forget to run it.\r\n\r\n> and having the iteration count be an argument still means somewhere higher in the stack there needs to be a decision what to set it to, which I think has the same problems.\r\n\r\n> So... I'm not sure. I do see the uneasiness about it, but I feel that the current approach is really the only one that guarantees (a) it's actually exercised in realistic settings and (b) using the same code as is used in production. \r\n\r\nHm, yeah, I don't think (a) is a big concern here: What this VERIFY tests is just handling the loop termination in case of too many iterations, and that's a few lines of code which doesn't care too much if the failure happened in an realistic input or not. So what I imagined it is that we run it for values of the iteration count in the test, and this will be good enough to exercise this code.\r\n\r\nThis would have the advantage that it minimizes the difference between VERIFY and non-VERIFY mode. But after thinking more about it, I agree that it's a somewhat moot goal. [2] Your comment about loop unrolling is right and we have a lot of code locations where we add some substantial amount of code in VERIFY (you introduce another one here in this PR, which I don't mind at all.)  \r\n\r\nSo yes, let's keep this as it is.\r\n\r\n[1] Though to some extent, VERIFY can also help checking compiler, e.g., when a function is miscompiles and its result is VERIFIED somewhere else.\r\n[2] I think my brain mixed up my thoughts with the discussion in https://github.com/bitcoin-core/secp256k1/pull/1169#pullrequestreview-1224682895,  but this was about SECP256K1_CHECKMEM_ENABLED being defined, not VERIFY.",
      "created_at": "2023-01-05T07:13:38Z",
      "updated_at": "2023-01-05T07:14:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062169019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062169019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": 723,
      "original_start_line": 720,
      "start_side": "RIGHT",
      "line": 729,
      "original_line": 729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062170737",
      "pull_request_review_id": 1236928601,
      "id": 1062170737,
      "node_id": "PRRC_kwDOAP4Jqs4_T3Bx",
      "diff_hunk": "@@ -667,4 +667,32 @@ static void secp256k1_fe_inv_var(secp256k1_fe *r, const secp256k1_fe *x) {\n #endif\n }\n \n+static int secp256k1_fe_jacobi_var(const secp256k1_fe *x) {\n+    secp256k1_fe tmp;\n+    secp256k1_modinv64_signed62 s;\n+    int ret;\n+\n+    tmp = *x;\n+    secp256k1_fe_normalize_var(&tmp);\n+    secp256k1_fe_to_signed62(&s, &tmp);\n+    ret = secp256k1_jacobi64_maybe_var(&s, &secp256k1_const_modinfo_fe);\n+    if (ret == -2) {\n+        /* secp256k1_jacobi64_maybe_var failed to compute the Jacobi symbol. Fall back\n+         * to computing a square root. This should be extremely rare with random\n+         * input. */\n+        secp256k1_fe dummy;\n+        ret = 2*secp256k1_fe_sqrt(&dummy, &tmp) - 1;",
      "path": "src/field_5x52_impl.h",
      "position": null,
      "original_position": 18,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060831728,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "makes sense",
      "created_at": "2023-01-05T07:16:37Z",
      "updated_at": "2023-01-05T07:16:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062170737",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062170737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062171426",
      "pull_request_review_id": 1236929562,
      "id": 1062171426,
      "node_id": "PRRC_kwDOAP4Jqs4_T3Mi",
      "diff_hunk": "@@ -71,11 +71,13 @@ static int secp256k1_modinv64_mul_cmp_62(const secp256k1_modinv64_signed62 *a, i\n     return 0;\n }\n \n-/* Check if the determinant of t is equal to 1 << n. */\n-static int secp256k1_modinv64_det_check_pow2(const secp256k1_modinv64_trans2x2 *t, unsigned int n) {\n+/* Check if the determinant of t is equal to 1 << n. If abs, |det| == 1 << n. */",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060790807,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This one is still unresolved -- (Feel free to dismiss, I'm mostly checking if the PR is ready for review again.)",
      "created_at": "2023-01-05T07:17:48Z",
      "updated_at": "2023-01-05T07:17:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062171426",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062171426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062591226",
      "pull_request_review_id": 1237571626,
      "id": 1062591226,
      "node_id": "PRRC_kwDOAP4Jqs4_Vdr6",
      "diff_hunk": "@@ -626,4 +717,71 @@ static void secp256k1_modinv64_var(secp256k1_modinv64_signed62 *x, const secp256\n     *x = d;\n }\n \n+/* Do up to 25 iterations of 62 posdivsteps (up to 1550 steps; more is extremely rare) each until f=1.\n+ * In VERIFY mode use a lower number of iterations (744, close to the median 756), so failure actually occurs. */\n+#ifdef VERIFY\n+#define JACOBI64_ITERATIONS 12\n+#else\n+#define JACOBI64_ITERATIONS 25\n+#endif",
      "path": "src/modinv64_impl.h",
      "position": 147,
      "original_position": 147,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060852701,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Another thing is that the approach here guarantees that (in VERIFY mode) all potential callers of this function actually deal with failure being returned. An approach where the caller has to explicitly ask for \"low iterations\" doesn't have that property, as a hypothetical oblivious caller just wouldn't ask for it.\r\n\r\nThat's a minor concern of course; I think it's pretty unlikely there will be other callers than `secp256k1_fe_is_square_var` any time soon (and tests).",
      "created_at": "2023-01-05T15:19:48Z",
      "updated_at": "2023-01-05T15:19:48Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062591226",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062591226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": 723,
      "original_start_line": 720,
      "start_side": "RIGHT",
      "line": 729,
      "original_line": 729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062613835",
      "pull_request_review_id": 1237609772,
      "id": 1062613835,
      "node_id": "PRRC_kwDOAP4Jqs4_VjNL",
      "diff_hunk": "@@ -71,11 +71,13 @@ static int secp256k1_modinv64_mul_cmp_62(const secp256k1_modinv64_signed62 *a, i\n     return 0;\n }\n \n-/* Check if the determinant of t is equal to 1 << n. */\n-static int secp256k1_modinv64_det_check_pow2(const secp256k1_modinv64_trans2x2 *t, unsigned int n) {\n+/* Check if the determinant of t is equal to 1 << n. If abs, |det| == 1 << n. */",
      "path": "src/modinv64_impl.h",
      "position": null,
      "original_position": 6,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "55822babf24c8dce69f69192c62f57aba4594bc6",
      "in_reply_to_id": 1060790807,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-01-05T15:40:13Z",
      "updated_at": "2023-01-05T15:40:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062613835",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062613835"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062659401",
      "pull_request_review_id": 1237681251,
      "id": 1062659401,
      "node_id": "PRRC_kwDOAP4Jqs4_VuVJ",
      "diff_hunk": "@@ -769,3 +769,30 @@ def modinv_var(M, Mi, x):\n         d, e = update_de(d, e, t, M, Mi)\n     return normalize(f, d, Mi)\n ```\n+\n+## 8. From GCDs to Jacobi symbol\n+\n+We can also use a similar approach to calculate Jacobi symbol *(x | M)* by keeping track of an extra variable *j*, for which at every step *(x | M) = j (g | f)*. As we update *f* and *g*, we make corresponding updates to *j* using [properties of the Jacobi symbol](https://en.wikipedia.org/wiki/Jacobi_symbol#Properties). In particular, we update *j* whenever we divide *g* by *2* or swap *f* and *g*; these updates depend only on the values of *f* and *g* modulo *4* or *8*, and can thus be applied very quickly. Overall, this calculation is slightly simpler than the one for modular inverse because we no longer need to keep track of *d* and *e*.",
      "path": "doc/safegcd_implementation.md",
      "position": null,
      "original_position": 17,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "ef2ac449d757189b67be27437824c2d0c0663bde",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It wouldn't hurt to spell the two properties out here for self-containedness.",
      "created_at": "2023-01-05T16:24:36Z",
      "updated_at": "2023-01-05T16:34:07Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062659401",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062659401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 775,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062661604",
      "pull_request_review_id": 1237681251,
      "id": 1062661604,
      "node_id": "PRRC_kwDOAP4Jqs4_Vu3k",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). Either x must be 0, or x must be coprime with",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "ef2ac449d757189b67be27437824c2d0c0663bde",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "maybe this should spell out that the Jacobi symbol is only defined for odd mod?\r\n\r\n (Do we need mod > 1? I see the termination condition f == 1 is only checked after applying a the first round of posdivsteps.) ",
      "created_at": "2023-01-05T16:26:52Z",
      "updated_at": "2023-01-05T16:42:10Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062661604",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062661604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062793398",
      "pull_request_review_id": 1237889487,
      "id": 1062793398,
      "node_id": "PRRC_kwDOAP4Jqs4_WPC2",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). Either x must be 0, or x must be coprime with",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "ef2ac449d757189b67be27437824c2d0c0663bde",
      "in_reply_to_id": 1062661604,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If mod=1, then x=0, so I think the output is trivial in any case then?",
      "created_at": "2023-01-05T18:54:59Z",
      "updated_at": "2023-01-05T18:54:59Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062793398",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1062793398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1063331564",
      "pull_request_review_id": 1238671085,
      "id": 1063331564,
      "node_id": "PRRC_kwDOAP4Jqs4_YSbs",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). Either x must be 0, or x must be coprime with",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "ef2ac449d757189b67be27437824c2d0c0663bde",
      "in_reply_to_id": 1062661604,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Okay yes, I don't immediately see why. If this is the case, then it should probably be explained.\r\n\r\n(This can be done later as you said below.)",
      "created_at": "2023-01-06T10:46:01Z",
      "updated_at": "2023-01-06T10:46:01Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1063331564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1063331564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1083275257",
      "pull_request_review_id": 1264613320,
      "id": 1083275257,
      "node_id": "PRRC_kwDOAP4Jqs5AkXf5",
      "diff_hunk": "@@ -1929,30 +1929,56 @@ static void run_int128_test_case(void) {\n         }\n         CHECK(secp256k1_i128_eq_var(&swa, &swz) == expect);\n     }\n-    /* test secp256k1_i128_check_pow2 */\n+    /* test secp256k1_i128_check_pow2 (sign == 1) */\n     {\n         int expect = (uc & 1);\n         int pos = ub % 127;\n         if (expect) {\n             /* If expect==1, set swz to exactly (2 << pos). */\n             uint64_t hi = 0;\n             uint64_t lo = 0;\n-            if (pos & 64) {\n+            if (pos >= 64) {\n                 hi = (((uint64_t)1) << (pos & 63));\n             } else {\n                 lo = (((uint64_t)1) << (pos & 63));\n             }\n             secp256k1_i128_load(&swz, hi, lo);\n         } else {\n             /* If expect==0, set swz = swa, but update expect=1 if swa happens to equal (2 << pos). */\n-            if (pos & 64) {\n+            if (pos >= 64) {\n                 if ((v[1] == (((uint64_t)1) << (pos & 63))) && v[0] == 0) expect = 1;\n             } else {\n                 if ((v[0] == (((uint64_t)1) << (pos & 63))) && v[1] == 0) expect = 1;\n             }\n             swz = swa;\n         }\n-        CHECK(secp256k1_i128_check_pow2(&swz, pos) == expect);\n+        CHECK(secp256k1_i128_check_pow2(&swz, pos, 1) == expect);\n+    }\n+    /* test secp256k1_i128_check_pow2 (sign == -1) */\n+    {\n+        int expect = (uc & 1);\n+        int pos = ub % 127;\n+        if (expect) {\n+            /* If expect==1, set swz to exactly -(2 << pos). */",
      "path": "src/tests.c",
      "position": null,
      "original_position": 38,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "f6470b6afe0ad42aa68201a2b9fef19f24036c23",
      "in_reply_to_id": null,
      "user": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't it be `-2^pos` instead of `-(2 << pos)`? Similarly, in the lines: 1973, 1937, 1947. ",
      "created_at": "2023-01-21T10:49:51Z",
      "updated_at": "2023-01-21T10:49:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1083275257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1083275257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1962,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1088331971",
      "pull_request_review_id": 1271770538,
      "id": 1088331971,
      "node_id": "PRRC_kwDOAP4Jqs5A3qDD",
      "diff_hunk": "@@ -1929,30 +1929,56 @@ static void run_int128_test_case(void) {\n         }\n         CHECK(secp256k1_i128_eq_var(&swa, &swz) == expect);\n     }\n-    /* test secp256k1_i128_check_pow2 */\n+    /* test secp256k1_i128_check_pow2 (sign == 1) */\n     {\n         int expect = (uc & 1);\n         int pos = ub % 127;\n         if (expect) {\n             /* If expect==1, set swz to exactly (2 << pos). */\n             uint64_t hi = 0;\n             uint64_t lo = 0;\n-            if (pos & 64) {\n+            if (pos >= 64) {\n                 hi = (((uint64_t)1) << (pos & 63));\n             } else {\n                 lo = (((uint64_t)1) << (pos & 63));\n             }\n             secp256k1_i128_load(&swz, hi, lo);\n         } else {\n             /* If expect==0, set swz = swa, but update expect=1 if swa happens to equal (2 << pos). */\n-            if (pos & 64) {\n+            if (pos >= 64) {\n                 if ((v[1] == (((uint64_t)1) << (pos & 63))) && v[0] == 0) expect = 1;\n             } else {\n                 if ((v[0] == (((uint64_t)1) << (pos & 63))) && v[1] == 0) expect = 1;\n             }\n             swz = swa;\n         }\n-        CHECK(secp256k1_i128_check_pow2(&swz, pos) == expect);\n+        CHECK(secp256k1_i128_check_pow2(&swz, pos, 1) == expect);\n+    }\n+    /* test secp256k1_i128_check_pow2 (sign == -1) */\n+    {\n+        int expect = (uc & 1);\n+        int pos = ub % 127;\n+        if (expect) {\n+            /* If expect==1, set swz to exactly -(2 << pos). */",
      "path": "src/tests.c",
      "position": null,
      "original_position": 38,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "f6470b6afe0ad42aa68201a2b9fef19f24036c23",
      "in_reply_to_id": 1083275257,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch, fixed.",
      "created_at": "2023-01-26T20:57:03Z",
      "updated_at": "2023-01-26T20:57:03Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1088331971",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1088331971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1962,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1088332137",
      "pull_request_review_id": 1271770721,
      "id": 1088332137,
      "node_id": "PRRC_kwDOAP4Jqs5A3qFp",
      "diff_hunk": "@@ -769,3 +769,30 @@ def modinv_var(M, Mi, x):\n         d, e = update_de(d, e, t, M, Mi)\n     return normalize(f, d, Mi)\n ```\n+\n+## 8. From GCDs to Jacobi symbol\n+\n+We can also use a similar approach to calculate Jacobi symbol *(x | M)* by keeping track of an extra variable *j*, for which at every step *(x | M) = j (g | f)*. As we update *f* and *g*, we make corresponding updates to *j* using [properties of the Jacobi symbol](https://en.wikipedia.org/wiki/Jacobi_symbol#Properties). In particular, we update *j* whenever we divide *g* by *2* or swap *f* and *g*; these updates depend only on the values of *f* and *g* modulo *4* or *8*, and can thus be applied very quickly. Overall, this calculation is slightly simpler than the one for modular inverse because we no longer need to keep track of *d* and *e*.",
      "path": "doc/safegcd_implementation.md",
      "position": null,
      "original_position": 17,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "ef2ac449d757189b67be27437824c2d0c0663bde",
      "in_reply_to_id": 1062659401,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-01-26T20:57:12Z",
      "updated_at": "2023-01-26T20:57:12Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1088332137",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1088332137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 775,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1118427159",
      "pull_request_review_id": 1315114882,
      "id": 1118427159,
      "node_id": "PRRC_kwDOAP4Jqs5CqdgX",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). Either x must be 0, or x must be coprime with",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "8b2ae083281617d55c55d6e21e60e27616e0a4db",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: The jacobi symbol (0|1) is commonly defined to be 1 (see e.g. [wikipedia](https://en.wikipedia.org/wiki/Jacobi_symbol)), but `secp256k1_jacobi_maybe_var` returns 0 in that case. I think it would be valuable to document `secp256k1_jacobi_maybe_var`'s behavior in this edge case.",
      "created_at": "2023-02-27T08:39:22Z",
      "updated_at": "2023-02-27T08:51:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1118427159",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1118427159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1118483975",
      "pull_request_review_id": 1315199895,
      "id": 1118483975,
      "node_id": "PRRC_kwDOAP4Jqs5CqrYH",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). Either x must be 0, or x must be coprime with",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "8b2ae083281617d55c55d6e21e60e27616e0a4db",
      "in_reply_to_id": 1118427159,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's related to what I said there: https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1062661604. Though I don't understand why I said there that I don't see why the output is trivial. It's trivial, of course. Maybe what I meant is that I don't see immediately why the output is correct, which matches your comment here, @jonasnick.\r\n\r\nPerhaps it's better to simply exclude (0|1) as a valid input, and then document and VERIFY_CHECK that. That makes it easier to recognize this corner case in future code. (And I feel it's hard to predict what definition of jac(0|1) future code would expect to work. It's better to make callers remind of the corner case explicitly.)\r\n",
      "created_at": "2023-02-27T09:30:47Z",
      "updated_at": "2023-02-27T09:30:48Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1118483975",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1118483975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1119330826",
      "pull_request_review_id": 1316460728,
      "id": 1119330826,
      "node_id": "PRRC_kwDOAP4Jqs5Ct6IK",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). Either x must be 0, or x must be coprime with",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "ef2ac449d757189b67be27437824c2d0c0663bde",
      "in_reply_to_id": 1062661604,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@real-or-random Has this been addressed by only supporting coprime inputs? The `secp256k1_modinv32_modinfo` requires an odd modulus already.",
      "created_at": "2023-02-27T21:28:18Z",
      "updated_at": "2023-02-27T21:28:19Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1119330826",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1119330826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1119331412",
      "pull_request_review_id": 1316461666,
      "id": 1119331412,
      "node_id": "PRRC_kwDOAP4Jqs5Ct6RU",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). Either x must be 0, or x must be coprime with",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "8b2ae083281617d55c55d6e21e60e27616e0a4db",
      "in_reply_to_id": 1118427159,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-02-27T21:29:04Z",
      "updated_at": "2023-02-27T21:29:04Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1119331412",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1119331412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120017683",
      "pull_request_review_id": 1317488214,
      "id": 1120017683,
      "node_id": "PRRC_kwDOAP4Jqs5Cwh0T",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). x must be coprime with modulus (and thus cannot be 0).",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "4a8d82de3c51efd753c92904cdc71f81ebd896a3",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't 0 coprime with 1 (and no other positive integer)? The gcd is 1, since 1 divides 0 and 1 divides 1.",
      "created_at": "2023-02-28T12:52:32Z",
      "updated_at": "2023-02-28T12:53:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1120017683",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120017683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120215319",
      "pull_request_review_id": 1317824938,
      "id": 1120215319,
      "node_id": "PRRC_kwDOAP4Jqs5CxSEX",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). x must be coprime with modulus (and thus cannot be 0).",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "4a8d82de3c51efd753c92904cdc71f81ebd896a3",
      "in_reply_to_id": 1120017683,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good call. And iterating *(f=1,g=0)* doesn't change the state, so it's inaccurate to say it converges to *f=g=gcd(f<sub>0</sub>,g<sub>0</sub>)* as well.",
      "created_at": "2023-02-28T15:04:38Z",
      "updated_at": "2023-02-28T15:04:38Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1120215319",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120215319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120258098",
      "pull_request_review_id": 1317878941,
      "id": 1120258098,
      "node_id": "PRRC_kwDOAP4Jqs5Cxcgy",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). Either x must be 0, or x must be coprime with",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "ef2ac449d757189b67be27437824c2d0c0663bde",
      "in_reply_to_id": 1062661604,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, that can be considered resolved. \r\n\r\n> The `secp256k1_modinv32_modinfo` requires an odd modulus already.\r\n\r\nI wonder if it's a good idea to add a function `secp256k1_modinv32_modinfo` verify that checks consistency and call it on entry of every function that reads modinfo, similar to how we do this for other data structures. But if yes, that should happen in a separate PR.",
      "created_at": "2023-02-28T15:30:13Z",
      "updated_at": "2023-02-28T15:30:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1120258098",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120258098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120263806",
      "pull_request_review_id": 1317885999,
      "id": 1120263806,
      "node_id": "PRRC_kwDOAP4Jqs5Cxd5-",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). x must be coprime with modulus (and thus cannot be 0).",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "4a8d82de3c51efd753c92904cdc71f81ebd896a3",
      "in_reply_to_id": 1120017683,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've changed some comments, and clarified the explanation in safegcd_implementation.md too.",
      "created_at": "2023-02-28T15:33:43Z",
      "updated_at": "2023-02-28T15:33:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1120263806",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120263806"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120311998",
      "pull_request_review_id": 1317951581,
      "id": 1120311998,
      "node_id": "PRRC_kwDOAP4Jqs5Cxpq-",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). x must be coprime with modulus (and thus cannot be 0).",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "4a8d82de3c51efd753c92904cdc71f81ebd896a3",
      "in_reply_to_id": 1120017683,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe I'm missing something but this line still says `x coprime with modulus => x != 0`.",
      "created_at": "2023-02-28T16:01:26Z",
      "updated_at": "2023-02-28T16:01:26Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1120311998",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120311998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120315232",
      "pull_request_review_id": 1317956984,
      "id": 1120315232,
      "node_id": "PRRC_kwDOAP4Jqs5Cxqdg",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). x must be coprime with modulus (and thus cannot be 0).",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "4a8d82de3c51efd753c92904cdc71f81ebd896a3",
      "in_reply_to_id": 1120017683,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, oops. It is correct, because the modinfo structure requires *modulus >= 3*, but I forgot to point that out in the comment here (it is added elsewhere).",
      "created_at": "2023-02-28T16:03:23Z",
      "updated_at": "2023-02-28T16:03:24Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1120315232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120315232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120351007",
      "pull_request_review_id": 1318018693,
      "id": 1120351007,
      "node_id": "PRRC_kwDOAP4Jqs5CxzMf",
      "diff_hunk": "@@ -35,4 +35,8 @@ static void secp256k1_modinv32_var(secp256k1_modinv32_signed30 *x, const secp256\n /* Same as secp256k1_modinv32_var, but constant time in x (not in the modulus). */\n static void secp256k1_modinv32(secp256k1_modinv32_signed30 *x, const secp256k1_modinv32_modinfo *modinfo);\n \n+/* Compute the Jacobi symbol for (x | modinfo->modulus). x must be coprime with modulus (and thus cannot be 0).",
      "path": "src/modinv32.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "4a8d82de3c51efd753c92904cdc71f81ebd896a3",
      "in_reply_to_id": 1120017683,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment about that too now.",
      "created_at": "2023-02-28T16:23:09Z",
      "updated_at": "2023-02-28T16:23:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1120351007",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120351007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120752989",
      "pull_request_review_id": 1318607765,
      "id": 1120752989,
      "node_id": "PRRC_kwDOAP4Jqs5CzVVd",
      "diff_hunk": "@@ -1022,12 +1022,32 @@ static void test_modinv32_uint16(uint16_t* out, const uint16_t* in, const uint16\n     uint16_to_signed30(&x, in);\n     nonzero = (x.v[0] | x.v[1] | x.v[2] | x.v[3] | x.v[4] | x.v[5] | x.v[6] | x.v[7] | x.v[8]) != 0;\n     uint16_to_signed30(&m.modulus, mod);\n-    mutate_sign_signed30(&m.modulus);\n \n     /* compute 1/modulus mod 2^30 */\n     m.modulus_inv30 = modinv2p64(m.modulus.v[0]) & 0x3fffffff;\n     CHECK(((m.modulus_inv30 * m.modulus.v[0]) & 0x3fffffff) == 1);\n \n+    /* Test secp256k1_jacobi32_maybe_var. */\n+    if (nonzero) {\n+        int jac;\n+        uint16_t sqr[16], negone[16];\n+        mulmod256(sqr, in, in, mod);\n+        uint16_to_signed30(&x, sqr);\n+        /* Compute jacobi symbol of in^2, which must be 1 (or uncomputable). */\n+        jac = secp256k1_jacobi32_maybe_var(&x, &m);\n+        CHECK(jac == 0 || jac == 1);\n+        /* Then compute the jacobi symbol of -(in^2). x and -x have opposite\n+         * jacobi symbols if and only if (mod % 4) == 3. */\n+        negone[0] = mod[0] - 1;\n+        for (i = 1; i < 16; ++i) negone[i] = mod[i];\n+        mulmod256(sqr, sqr, negone, mod);\n+        uint16_to_signed30(&x, sqr);\n+        jac = secp256k1_jacobi32_maybe_var(&x, &m);\n+        CHECK(jac == 0 || jac == (1 - (mod[0] & 2)) * nonzero);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 26,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "1c1c20226879ce4780a855f2fda7ca94bb10c477",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nonzero is always 1 in this branch (same in modinv64 tests)",
      "created_at": "2023-02-28T20:51:06Z",
      "updated_at": "2023-02-28T20:51:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1120752989",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120752989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1046,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120760068",
      "pull_request_review_id": 1318616906,
      "id": 1120760068,
      "node_id": "PRRC_kwDOAP4Jqs5CzXEE",
      "diff_hunk": "@@ -1022,12 +1022,32 @@ static void test_modinv32_uint16(uint16_t* out, const uint16_t* in, const uint16\n     uint16_to_signed30(&x, in);\n     nonzero = (x.v[0] | x.v[1] | x.v[2] | x.v[3] | x.v[4] | x.v[5] | x.v[6] | x.v[7] | x.v[8]) != 0;\n     uint16_to_signed30(&m.modulus, mod);\n-    mutate_sign_signed30(&m.modulus);\n \n     /* compute 1/modulus mod 2^30 */\n     m.modulus_inv30 = modinv2p64(m.modulus.v[0]) & 0x3fffffff;\n     CHECK(((m.modulus_inv30 * m.modulus.v[0]) & 0x3fffffff) == 1);\n \n+    /* Test secp256k1_jacobi32_maybe_var. */\n+    if (nonzero) {\n+        int jac;\n+        uint16_t sqr[16], negone[16];\n+        mulmod256(sqr, in, in, mod);\n+        uint16_to_signed30(&x, sqr);\n+        /* Compute jacobi symbol of in^2, which must be 1 (or uncomputable). */\n+        jac = secp256k1_jacobi32_maybe_var(&x, &m);\n+        CHECK(jac == 0 || jac == 1);\n+        /* Then compute the jacobi symbol of -(in^2). x and -x have opposite\n+         * jacobi symbols if and only if (mod % 4) == 3. */\n+        negone[0] = mod[0] - 1;\n+        for (i = 1; i < 16; ++i) negone[i] = mod[i];\n+        mulmod256(sqr, sqr, negone, mod);\n+        uint16_to_signed30(&x, sqr);\n+        jac = secp256k1_jacobi32_maybe_var(&x, &m);\n+        CHECK(jac == 0 || jac == (1 - (mod[0] & 2)) * nonzero);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 26,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "1c1c20226879ce4780a855f2fda7ca94bb10c477",
      "in_reply_to_id": 1120752989,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2023-02-28T20:57:48Z",
      "updated_at": "2023-02-28T20:57:48Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1120760068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1120760068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1046,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1144581018",
      "pull_request_review_id": 1352237911,
      "id": 1144581018,
      "node_id": "PRRC_kwDOAP4Jqs5EOOua",
      "diff_hunk": "@@ -189,10 +189,11 @@ static SECP256K1_INLINE int secp256k1_i128_eq_var(const secp256k1_int128 *a, con\n    return a->hi == b->hi && a->lo == b->lo;\n }\n \n-static SECP256K1_INLINE int secp256k1_i128_check_pow2(const secp256k1_int128 *r, unsigned int n) {\n-   VERIFY_CHECK(n < 127);\n-   return n >= 64 ? r->hi == (uint64_t)1 << (n - 64) && r->lo == 0\n-                  : r->hi == 0 && r->lo == (uint64_t)1 << n;\n+static SECP256K1_INLINE int secp256k1_i128_check_pow2(const secp256k1_int128 *r, unsigned int n, int sign) {\n+    VERIFY_CHECK(n < 127);\n+    VERIFY_CHECK(sign == 1 || sign == -1);\n+    return n >= 64 ? r->hi == (uint64_t)sign << (n - 64) && r->lo == 0\n+                   : r->hi == (uint64_t)((sign - 1) >> 1) && r->lo == (uint64_t)sign << n;",
      "path": "src/int128_struct_impl.h",
      "position": 12,
      "original_position": 12,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "in_reply_to_id": null,
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is no need to subtract 1 before doing a right shift.",
      "created_at": "2023-03-22T10:37:36Z",
      "updated_at": "2023-03-22T10:37:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1144581018",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1144581018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 196,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1161472357",
      "pull_request_review_id": 1377140773,
      "id": 1161472357,
      "node_id": "PRRC_kwDOAP4Jqs5FOqll",
      "diff_hunk": "@@ -189,10 +189,11 @@ static SECP256K1_INLINE int secp256k1_i128_eq_var(const secp256k1_int128 *a, con\n    return a->hi == b->hi && a->lo == b->lo;\n }\n \n-static SECP256K1_INLINE int secp256k1_i128_check_pow2(const secp256k1_int128 *r, unsigned int n) {\n-   VERIFY_CHECK(n < 127);\n-   return n >= 64 ? r->hi == (uint64_t)1 << (n - 64) && r->lo == 0\n-                  : r->hi == 0 && r->lo == (uint64_t)1 << n;\n+static SECP256K1_INLINE int secp256k1_i128_check_pow2(const secp256k1_int128 *r, unsigned int n, int sign) {\n+    VERIFY_CHECK(n < 127);\n+    VERIFY_CHECK(sign == 1 || sign == -1);\n+    return n >= 64 ? r->hi == (uint64_t)sign << (n - 64) && r->lo == 0\n+                   : r->hi == (uint64_t)((sign - 1) >> 1) && r->lo == (uint64_t)sign << n;",
      "path": "src/int128_struct_impl.h",
      "position": 12,
      "original_position": 12,
      "commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "original_commit_id": "ce3cfc78a6020d21be299e1e4f22cf8ef089194d",
      "in_reply_to_id": 1144581018,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "solved in https://github.com/bitcoin-core/secp256k1/pull/1250",
      "created_at": "2023-04-10T06:29:05Z",
      "updated_at": "2023-04-10T06:29:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/979#discussion_r1161472357",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1161472357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/979"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 196,
      "original_line": 196,
      "side": "RIGHT"
    }
  ]
}