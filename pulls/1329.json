{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329",
    "id": 1364093761,
    "node_id": "PR_kwDOAP4Jqs5RTmtB",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1329.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1329.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/4742310ff47a61373715e01b9330604114052aff",
    "number": 1329,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Replace ASM with CryptOpt generated",
    "user": {
      "login": "dderjoel",
      "id": 13455345,
      "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dderjoel",
      "html_url": "https://github.com/dderjoel",
      "followers_url": "https://api.github.com/users/dderjoel/followers",
      "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
      "organizations_url": "https://api.github.com/users/dderjoel/orgs",
      "repos_url": "https://api.github.com/users/dderjoel/repos",
      "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dderjoel/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In this PR the auto detection of  x86_64 is removed and the configure file will default to the C implementation.\r\nFurther, if asm has explicitly been requested with `--with-asm=x86_64`, \r\nthe `selfcheck` method check by calling the `cpuid` instruction, if the flags `BMI2` (bit 8) and `ADX` (bit 19) are set, and will exit early, if not. \r\n",
    "labels": [
      {
        "id": 165017692,
        "node_id": "MDU6TGFiZWwxNjUwMTc2OTI=",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/assurance",
        "name": "assurance",
        "description": "",
        "color": "A6DF3D",
        "default": false
      },
      {
        "id": 4975389731,
        "node_id": "LA_kwDOAP4Jqs8AAAABKI5sIw",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/performance",
        "name": "performance",
        "description": "",
        "color": "DE3CCC",
        "default": false
      }
    ],
    "created_at": "2023-05-25T05:02:29Z",
    "updated_at": "2023-07-07T00:45:19Z",
    "mergeable": true,
    "mergeable_state": "unstable",
    "merge_commit_sha": "fb48843707a12259dbeb8d5118db3a2a7d334201",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "dderjoel:only-asm",
      "ref": "only-asm",
      "sha": "4742310ff47a61373715e01b9330604114052aff",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 620160024,
        "node_id": "R_kgDOJPbkGA",
        "name": "secp256k1",
        "full_name": "dderjoel/secp256k1",
        "owner": {
          "login": "dderjoel",
          "id": 13455345,
          "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
          "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dderjoel",
          "html_url": "https://github.com/dderjoel",
          "followers_url": "https://api.github.com/users/dderjoel/followers",
          "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
          "organizations_url": "https://api.github.com/users/dderjoel/orgs",
          "repos_url": "https://api.github.com/users/dderjoel/repos",
          "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dderjoel/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/dderjoel/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/dderjoel/secp256k1",
        "archive_url": "https://api.github.com/repos/dderjoel/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dderjoel/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dderjoel/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dderjoel/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dderjoel/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dderjoel/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dderjoel/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dderjoel/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dderjoel/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dderjoel/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/dderjoel/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/dderjoel/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/dderjoel/secp256k1/events",
        "forks_url": "https://api.github.com/repos/dderjoel/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/dderjoel/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dderjoel/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dderjoel/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dderjoel/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/dderjoel/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dderjoel/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dderjoel/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dderjoel/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dderjoel/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dderjoel/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/dderjoel/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/dderjoel/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dderjoel/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dderjoel/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dderjoel/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:dderjoel/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/dderjoel/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/dderjoel/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dderjoel/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/dderjoel/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/dderjoel/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/dderjoel/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/dderjoel/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dderjoel/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/dderjoel/secp256k1/hooks",
        "svn_url": "https://github.com/dderjoel/secp256k1",
        "language": "C",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 10347,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-07T00:14:28Z",
        "created_at": "2023-03-28T06:31:21Z",
        "updated_at": "2023-03-28T08:05:44Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "c9ebca95f9184fcf25b1ed457c4e7241006f87df",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 956,
        "stargazers_count": 1789,
        "watchers_count": 1789,
        "size": 10319,
        "default_branch": "master",
        "open_issues_count": 141,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-07T00:14:33Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-07-06T09:36:46Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
      }
    },
    "author_association": "NONE",
    "draft": false,
    "additions": 363,
    "deletions": 495,
    "changed_files": 5,
    "commits": 3,
    "review_comments": 18,
    "comments": 14
  },
  "events": [
    {
      "event": "reviewed",
      "id": 1443087794,
      "node_id": "PRR_kwDOAP4Jqs5WA8Wy",
      "url": null,
      "actor": null,
      "commit_id": "183ebfafc5995da26aab0d0a73045dae5d3e21f3",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#pullrequestreview-1443087794",
      "submitted_at": "2023-05-25T05:05:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
    },
    {
      "event": "commented",
      "id": 1562531374,
      "node_id": "IC_kwDOAP4Jqs5dIlYu",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1562531374",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T08:53:12Z",
      "updated_at": "2023-05-25T08:53:12Z",
      "author_association": "NONE",
      "body": "Can someone help with those two errors? \r\nI can see that those runs exit with segmentation faults, but I cannot reproduce them on my machine. \r\nHow do you typically debug those (I have no experience with Cirrus.CI). Is there a Docker container that I can clone, or the binary I can run in a debugger locally?",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1562531374",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "commented",
      "id": 1562607757,
      "node_id": "IC_kwDOAP4Jqs5dI4CN",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1562607757",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T09:46:09Z",
      "updated_at": "2023-05-25T09:46:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Is there a Docker container that I can clone,\r\n\r\nYou can build the Docker image locally using `docker build . -f ci/linux-debian.Dockerfile` (add `--no-cache --pull` to force rebuilds).  ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1562607757",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "commented",
      "id": 1562612405,
      "node_id": "IC_kwDOAP4Jqs5dI5K1",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1562612405",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T09:49:39Z",
      "updated_at": "2023-05-25T09:49:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "But what's special about these builds is that they have `WIDEMUL:int128`.., Try `./configure --with-test-override-wide-multiply=int128`.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1562612405",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "reviewed",
      "id": 1446116239,
      "node_id": "PRR_kwDOAP4Jqs5WMfuP",
      "url": null,
      "actor": null,
      "commit_id": "5db0678b6a63095b0fdb97e83288958a0f65b04f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#pullrequestreview-1446116239",
      "submitted_at": "2023-05-26T12:21:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
    },
    {
      "event": "reviewed",
      "id": 1446132778,
      "node_id": "PRR_kwDOAP4Jqs5WMjwq",
      "url": null,
      "actor": null,
      "commit_id": "5db0678b6a63095b0fdb97e83288958a0f65b04f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#pullrequestreview-1446132778",
      "submitted_at": "2023-05-26T12:31:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
    },
    {
      "event": "commented",
      "id": 1566407536,
      "node_id": "IC_kwDOAP4Jqs5dXXtw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1566407536",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-29T02:29:01Z",
      "updated_at": "2023-05-29T02:29:01Z",
      "author_association": "NONE",
      "body": "> But what's special about these builds is that they have `WIDEMUL:int128`.., Try `./configure --with-test-override-wide-multiply=int128`.\r\n\r\nI actually did that locally, too but could not reproduce the issue. What worked was building the container and run the cirrus script in there with the given environment, as per cirrus logs.\r\n\r\nI could then reproduce and fix the issue, which I believe depends a bit on the compiler version.\r\nEssentially, the problem was that the assembly code relies on being a leaf function, i.e. assumes `rsp` pointing to the end of the stack, can use the red zone, will spill callee-save registers when needed and unspill them when done. As the code is potentially inlined (as in those tests), those assumptions are incorrect.\r\n\r\nI've changed the code by hand to not spill into rsp-based memory whatsoever, and instead use three tmp variables like the old code. Additionally, I used the `+D` and `+d` modifiers for the arguments.",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1566407536",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "commented",
      "id": 1566506134,
      "node_id": "IC_kwDOAP4Jqs5dXvyW",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1566506134",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-29T04:15:47Z",
      "updated_at": "2023-05-29T04:15:47Z",
      "author_association": "NONE",
      "body": "The currently failing tests don't seem to be related to the field arithmetic. Instead, they seem to fail at the self test when calling `./ctime`. \r\nAs far as I can see, it fails gracefully after the `secp256k1_selftest_passes` returns `0`, because the required CPU flags are not available. This however, does not seem to be caused by missing cpuflags, but rather [because of running CPUID in valgrind. ](https://stackoverflow.com/questions/48697579/valgrind-changes-cpuid-value#48736342)\r\n \r\n\r\nhttps://cirrus-ci.com/task/4534411765481472?logs=test#L237\r\n\r\n==3831== Process terminating with default action of signal 6 (SIGABRT): dumping core\r\n==3831==    at 0x49B2CE1: raise (raise.c:51)\r\n==3831==    by 0x499C536: abort (abort.c:79)\r\n==3831==    by 0x484B2E3: secp256k1_default_error_callback_fn (util.h:72)\r\n==3831==    by 0x4852C95: secp256k1_callback_call (util.h:60)\r\n==3831==    by 0x4852C95: secp256k1_selftest (secp256k1.c:87)\r\n==3831==    by 0x4852C95: secp256k1_selftest (secp256k1.c:85)\r\n==3831==    by 0x4852D9F: secp256k1_context_preallocated_create (secp256k1.c:121)\r\n==3831==    by 0x4852E37: secp256k1_context_create (secp256k1.c:143)\r\n==3831==    by 0x1091F2: main (ctime_tests.c:45)",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1566506134",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "commented",
      "id": 1566573932,
      "node_id": "IC_kwDOAP4Jqs5dYAVs",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1566573932",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-29T05:30:31Z",
      "updated_at": "2023-05-29T05:30:31Z",
      "author_association": "NONE",
      "body": "Nice, so I've changed the selftest such that it will not check the CPU flags, if it is running in valgrind. I've used `SECP256K1_CHECKMEM_RUNNING` for this, which I believe is also used in `./ctime_tests.c` to early abort if it is not running in valgrind.",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1566573932",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "ready_for_review",
      "id": 9366493731,
      "node_id": "RFRE_lADOAP4Jqs5m0szMzwAAAAIuSVoj",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9366493731",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-29T07:53:57Z"
    },
    {
      "event": "commented",
      "id": 1566726563,
      "node_id": "IC_kwDOAP4Jqs5dYlmj",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1566726563",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-29T08:04:38Z",
      "updated_at": "2023-05-29T08:04:38Z",
      "author_association": "NONE",
      "body": "Looks good to me now actually, but there are a couple points that I should point out:\r\n- CPUID in the self test is not checked when using valgrind.\r\n- The spilling / unspilling of callee-saved registers is removed from the assembly implementations and with\r\n- the spilling of three intermediate values is now handled by `CC` (using `%q0`..`%q2`). This, means that the code as it stands there, is not formally verified, because of the two changed just give. (It was not 100% before either, because we converted the verified Intel assembly to att syntax (by assembling though `nasm` to `objdump`ing it again as att)).\r\n- Using `--with-asm=auto` or not specifying that at all will now default to `--with-asm=no`. If `--with-asm=x86-64` is explicitly set, the CryptOpt generated version is used. The self check checks for presence of BMI2 and ADX flags and errors gracefully if not.",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1566726563",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "reviewed",
      "id": 1453725944,
      "node_id": "PRR_kwDOAP4Jqs5Wphj4",
      "url": null,
      "actor": null,
      "commit_id": "e28dd6804343b21c006d76b3d17e536d4bba6066",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#pullrequestreview-1453725944",
      "submitted_at": "2023-05-31T16:54:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
    },
    {
      "event": "commented",
      "id": 1581602976,
      "node_id": "IC_kwDOAP4Jqs5eRVig",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1581602976",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-07T22:38:13Z",
      "updated_at": "2023-06-07T22:38:13Z",
      "author_association": "NONE",
      "body": "Is there anything I can help with for this PR? What would the next steps be?",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1581602976",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "labeled",
      "id": 9494822028,
      "node_id": "LE_lADOAP4Jqs5m0szMzwAAAAI173yM",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9494822028",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-11T16:58:22Z",
      "label": {
        "name": "assurance",
        "color": "A6DF3D"
      }
    },
    {
      "event": "labeled",
      "id": 9494822030,
      "node_id": "LE_lADOAP4Jqs5m0szMzwAAAAI173yO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9494822030",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-11T16:58:22Z",
      "label": {
        "name": "performance",
        "color": "DE3CCC"
      }
    },
    {
      "event": "commented",
      "id": 1595788690,
      "node_id": "IC_kwDOAP4Jqs5fHc2S",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1595788690",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-17T15:32:09Z",
      "updated_at": "2023-06-17T15:32:09Z",
      "author_association": "NONE",
      "body": "Hey, we’d love to mention this at an upcoming conference (acknowledging your support; top event in heuristic optimization), but for that it would have to be merged by 28 June. Of course, we understand that you need to be convinced of the usefulness of the verified and optimized... and of course we understand that you have your own workflows and deadlines, too. Still, if there is anything we can do to push this further, please do let us know.\r\n\r\n\r\n",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1595788690",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "commented",
      "id": 1598946127,
      "node_id": "IC_kwDOAP4Jqs5fTftP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1598946127",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T14:51:47Z",
      "updated_at": "2023-06-20T14:51:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dderjoel A common strategy to find reviewers is to convince them that the benefits of the PR are worth the review time. The PR should be as simple as possible to review. Squash the commits into a single or more logical commits. Provide some context and guidance on the best way to review the changes. It seems to me that reviewing this is difficult.\r\n\r\nHowever, keep in mind that, as per the plan discussed [here](https://github.com/bitcoin-core/secp256k1/issues/1261#issue-1656695552), integrating the fiat-crypto C output code is currently a higher priority.\r\n",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1598946127",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "mentioned",
      "id": 9580718471,
      "node_id": "MEE_lADOAP4Jqs5m0szMzwAAAAI7DimH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9580718471",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T14:51:47Z"
    },
    {
      "event": "subscribed",
      "id": 9580718498,
      "node_id": "SE_lADOAP4Jqs5m0szMzwAAAAI7Dimi",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9580718498",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T14:51:47Z"
    },
    {
      "event": "reviewed",
      "id": 1489165158,
      "node_id": "PRR_kwDOAP4Jqs5Ywttm",
      "url": null,
      "actor": null,
      "commit_id": "57980c90b4e2b730506acc86f79ba7a5c74359e2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Indentation should be 4 spaces in C files. (Sometimes only 2 are used here.)\r\n\r\nI agree with @jonasnick, it will help to have clean and well separated commits. \r\n\r\nAnd yes, at least according to the plan we made, this is blocked on fiat-crypto C code. No matter if it's blocked or not, it's not realistic to get this merged by 28th. But I feel it's certainly fair to say that the code is under review and planned to be integrated (if this helps).",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#pullrequestreview-1489165158",
      "submitted_at": "2023-06-20T22:11:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9594675791,
      "node_id": "HRFPE_lADOAP4Jqs5m0szMzwAAAAI74yJP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9594675791",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-21T14:36:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9594852329,
      "node_id": "HRFPE_lADOAP4Jqs5m0szMzwAAAAI75dPp",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9594852329",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-21T14:49:39Z"
    },
    {
      "event": "commented",
      "id": 1600992388,
      "node_id": "IC_kwDOAP4Jqs5fbTSE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1600992388",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-21T14:54:51Z",
      "updated_at": "2023-06-21T14:54:51Z",
      "author_association": "NONE",
      "body": "Thanks for the feedback. I kept the commits in there to have the history and thought we may squash them on merge.\r\nI've rebased everything now from the current master, and renamed the commits, while incorporating the ideas from you all. \r\n",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1600992388",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9595315307,
      "node_id": "HRFPE_lADOAP4Jqs5m0szMzwAAAAI77ORr",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9595315307",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-21T15:25:07Z"
    },
    {
      "event": "commented",
      "id": 1610305286,
      "node_id": "IC_kwDOAP4Jqs5f-08G",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1610305286",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T22:27:55Z",
      "updated_at": "2023-06-27T22:27:55Z",
      "author_association": "NONE",
      "body": "Do not merge until tested with  `gcc -O3 -march=skylake` and `clang -march=skylake`\r\nSee https://github.com/mit-plv/fiat-crypto/issues/1560#issuecomment-1610288223",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1610305286",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "convert_to_draft",
      "id": 9657680831,
      "node_id": "CTDE_lADOAP4Jqs5m0szMzwAAAAI_pIO_",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9657680831",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T22:28:15Z"
    },
    {
      "event": "commented",
      "id": 1611014634,
      "node_id": "IC_kwDOAP4Jqs5gBiHq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1611014634",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T08:46:30Z",
      "updated_at": "2023-06-28T08:46:30Z",
      "author_association": "NONE",
      "body": "Problem seems indeed to be `rbp`. See [this comment](https://github.com/mit-plv/fiat-crypto/issues/1560#issuecomment-1610973298). I'm working on generating code without using `rbp`, tracked by [this issue](https://github.com/0xADE1A1DE/CryptOpt/issues/144). I'll try to get this sorted by next week. Then get some code and update the PR.",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1611014634",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9693600337,
      "node_id": "HRFPE_lADOAP4Jqs5m0szMzwAAAAJByJpR",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9693600337",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-01T04:24:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9693633567,
      "node_id": "HRFPE_lADOAP4Jqs5m0szMzwAAAAJByRwf",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9693633567",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-01T04:32:03Z"
    },
    {
      "event": "ready_for_review",
      "id": 9694865009,
      "node_id": "RFRE_lADOAP4Jqs5m0szMzwAAAAJB2-Zx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9694865009",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-01T08:30:55Z"
    },
    {
      "event": "reviewed",
      "id": 1509506502,
      "node_id": "PRR_kwDOAP4Jqs5Z-T3G",
      "url": null,
      "actor": null,
      "commit_id": "b160ddd00f9ccc37696b0fdf268d76ad85146453",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "khadem5677",
        "id": 138362141,
        "node_id": "U_kgDOCD89HQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/138362141?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/khadem5677",
        "html_url": "https://github.com/khadem5677",
        "followers_url": "https://api.github.com/users/khadem5677/followers",
        "following_url": "https://api.github.com/users/khadem5677/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/khadem5677/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/khadem5677/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/khadem5677/subscriptions",
        "organizations_url": "https://api.github.com/users/khadem5677/orgs",
        "repos_url": "https://api.github.com/users/khadem5677/repos",
        "events_url": "https://api.github.com/users/khadem5677/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/khadem5677/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#pullrequestreview-1509506502",
      "submitted_at": "2023-07-02T08:46:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
    },
    {
      "event": "reviewed",
      "id": 1509519214,
      "node_id": "PRR_kwDOAP4Jqs5Z-W9u",
      "url": null,
      "actor": null,
      "commit_id": "b160ddd00f9ccc37696b0fdf268d76ad85146453",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "khadem5677",
        "id": 138362141,
        "node_id": "U_kgDOCD89HQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/138362141?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/khadem5677",
        "html_url": "https://github.com/khadem5677",
        "followers_url": "https://api.github.com/users/khadem5677/followers",
        "following_url": "https://api.github.com/users/khadem5677/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/khadem5677/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/khadem5677/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/khadem5677/subscriptions",
        "organizations_url": "https://api.github.com/users/khadem5677/orgs",
        "repos_url": "https://api.github.com/users/khadem5677/repos",
        "events_url": "https://api.github.com/users/khadem5677/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/khadem5677/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#pullrequestreview-1509519214",
      "submitted_at": "2023-07-02T09:26:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
    },
    {
      "event": "reviewed",
      "id": 1509526709,
      "node_id": "PRR_kwDOAP4Jqs5Z-Yy1",
      "url": null,
      "actor": null,
      "commit_id": "b160ddd00f9ccc37696b0fdf268d76ad85146453",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "khadem5677",
        "id": 138362141,
        "node_id": "U_kgDOCD89HQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/138362141?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/khadem5677",
        "html_url": "https://github.com/khadem5677",
        "followers_url": "https://api.github.com/users/khadem5677/followers",
        "following_url": "https://api.github.com/users/khadem5677/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/khadem5677/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/khadem5677/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/khadem5677/subscriptions",
        "organizations_url": "https://api.github.com/users/khadem5677/orgs",
        "repos_url": "https://api.github.com/users/khadem5677/repos",
        "events_url": "https://api.github.com/users/khadem5677/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/khadem5677/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#pullrequestreview-1509526709",
      "submitted_at": "2023-07-02T09:55:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
    },
    {
      "event": "reviewed",
      "id": 1509639627,
      "node_id": "PRR_kwDOAP4Jqs5Z-0XL",
      "url": null,
      "actor": null,
      "commit_id": "b160ddd00f9ccc37696b0fdf268d76ad85146453",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "alokeutpal",
        "id": 110467466,
        "node_id": "U_kgDOBpWZig",
        "avatar_url": "https://avatars.githubusercontent.com/u/110467466?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alokeutpal",
        "html_url": "https://github.com/alokeutpal",
        "followers_url": "https://api.github.com/users/alokeutpal/followers",
        "following_url": "https://api.github.com/users/alokeutpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alokeutpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alokeutpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alokeutpal/subscriptions",
        "organizations_url": "https://api.github.com/users/alokeutpal/orgs",
        "repos_url": "https://api.github.com/users/alokeutpal/repos",
        "events_url": "https://api.github.com/users/alokeutpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alokeutpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#pullrequestreview-1509639627",
      "submitted_at": "2023-07-02T17:08:56Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGUwNDk0YWFmZDk4NTNiNTQ2MGQzMzhiNjUwMDQyOTgzNzU3MmMyNWY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/e0494aafd9853b5460d338b6500429837572c25f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/e0494aafd9853b5460d338b6500429837572c25f",
      "tree": {
        "sha": "7ba7f36a7b975852d96460b7834a309763d11fe5",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/7ba7f36a7b975852d96460b7834a309763d11fe5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/afd7eb4a55606bff640e30bb64bc3c43d1bb5b1c",
          "sha": "afd7eb4a55606bff640e30bb64bc3c43d1bb5b1c",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/afd7eb4a55606bff640e30bb64bc3c43d1bb5b1c"
        }
      ],
      "message": "build: not default to x64_asm. only use the asm if explicitly requested",
      "committer": {
        "name": "Joel",
        "email": "rootjdev@gmail.com",
        "date": "2023-07-07T00:10:47Z"
      },
      "author": {
        "name": "Joel",
        "email": "rootjdev@gmail.com",
        "date": "2023-06-21T14:49:12Z"
      },
      "sha": "e0494aafd9853b5460d338b6500429837572c25f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGQzOGFiMDdjMDFkOTNmOWMwMWM4NDgyNmZjMzIyZDA2NjU1YTE2Y2U",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d38ab07c01d93f9c01c84826fc322d06655a16ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d38ab07c01d93f9c01c84826fc322d06655a16ce",
      "tree": {
        "sha": "c54b4b6189cca0a1d2e44bd882f4b59814bd947a",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/c54b4b6189cca0a1d2e44bd882f4b59814bd947a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/e0494aafd9853b5460d338b6500429837572c25f",
          "sha": "e0494aafd9853b5460d338b6500429837572c25f",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/e0494aafd9853b5460d338b6500429837572c25f"
        }
      ],
      "message": "added runtime check for bmi2 and adx",
      "committer": {
        "name": "Joel",
        "email": "rootjdev@gmail.com",
        "date": "2023-07-07T00:13:25Z"
      },
      "author": {
        "name": "Joel",
        "email": "rootjdev@gmail.com",
        "date": "2023-07-07T00:13:25Z"
      },
      "sha": "d38ab07c01d93f9c01c84826fc322d06655a16ce"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDQ3NDIzMTBmZjQ3YTYxMzczNzE1ZTAxYjkzMzA2MDQxMTQwNTJhZmY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/4742310ff47a61373715e01b9330604114052aff",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/4742310ff47a61373715e01b9330604114052aff",
      "tree": {
        "sha": "652f64fc1dc077583ea282af69b87191e9c4a5d5",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/652f64fc1dc077583ea282af69b87191e9c4a5d5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d38ab07c01d93f9c01c84826fc322d06655a16ce",
          "sha": "d38ab07c01d93f9c01c84826fc322d06655a16ce",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d38ab07c01d93f9c01c84826fc322d06655a16ce"
        }
      ],
      "message": "replace the asm implementation for mul/square inner",
      "committer": {
        "name": "Joel",
        "email": "rootjdev@gmail.com",
        "date": "2023-07-07T00:14:16Z"
      },
      "author": {
        "name": "Joel",
        "email": "rootjdev@gmail.com",
        "date": "2023-07-07T00:14:16Z"
      },
      "sha": "4742310ff47a61373715e01b9330604114052aff"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9749256713,
      "node_id": "HRFPE_lADOAP4Jqs5m0szMzwAAAAJFGdoJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9749256713",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T00:14:32Z"
    },
    {
      "event": "commented",
      "id": 1624480083,
      "node_id": "IC_kwDOAP4Jqs5g05lT",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1624480083",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T00:45:19Z",
      "updated_at": "2023-07-07T00:45:19Z",
      "author_association": "NONE",
      "body": "Hi,\r\nCryptOpt has now two new features, one is to not use `rbp` and the other one is to value the potential memory overlap of the first two parameters, as @real-or-random  [said earlier](https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1246711142). Although this property is not yet formally checked ([tracked here](https://github.com/mit-plv/fiat-crypto/issues/1615)), manually checking it shows that it is present. It also yields very similar (a bit faster actually) performance results, see below.\r\n\r\nI've also rebased the branch on the current master, and changed the note in the Readme, that the assembly is no longer the hand optimized version, but the CryptOpt-generated one.\r\n\r\nThose numbers are with `clang -O3 -mtune=native -march=native` on my 10 different machines. (Making it comparable with the third table [in this comment](https://github.com/mit-plv/fiat-crypto/issues/1560#issuecomment-1615690066), showing that the `fiat_cryptopt` column is a tad better.\r\n\r\n\r\n\r\n|      implementation |    default_asm |      default_c |    default_c52 |         fiat_c |fiat_c_narrow_int |  fiat_cryptopt |\r\n|---------------------|----------------|----------------|----------------|----------------|----------------|----------------|\r\n|          ecmult_gen |        15.7082 |        15.2509 |        15.6863 |        14.9906 |         14.548 |        13.9724 |\r\n|        ecmult_const |        29.4523 |        28.0577 |        29.2846 |        27.2908 |        27.6586 |        26.3218 |\r\n|           ecmult_1p |        23.3684 |        22.0285 |        23.1136 |        21.5132 |        21.9431 |          21.08 |\r\n|         ecmult_0p_g |        17.0308 |        15.9766 |        16.5105 |        15.3775 |        16.4462 |        15.7157 |\r\n|         ecmult_1p_g |        13.6926 |        12.9288 |        13.5101 |        12.6087 |        12.8326 |        12.3297 |\r\n|          field_half |     0.00518338 |     0.00520039 |     0.00509803 |     0.00509937 |     0.00501453 |       0.005152 |\r\n|     field_normalize |     0.00479336 |     0.00478621 |     0.00480812 |     0.00474333 |     0.00473504 |     0.00474445 |\r\n|field_normalize_weak |     0.00284125 |     0.00284032 |     0.00284684 |      0.0028214 |     0.00281811 |     0.00281636 |\r\n|           field_sqr |      0.0136875 |       0.014248 |       0.014884 |      0.0135847 |      0.0117539 |      0.0119451 |\r\n|           field_mul |      0.0170591 |      0.0168615 |      0.0179167 |      0.0167125 |      0.0147756 |      0.0143076 |\r\n|       field_inverse |        1.52243 |        1.52486 |        1.52639 |         1.5235 |        1.51161 |        1.64494 |\r\n|   field_inverse_var |       0.927991 |       0.923316 |         0.9266 |       0.916022 |       0.913502 |       0.926668 |\r\n| field_is_square_var |        1.21713 |        1.22058 |        1.21377 |        1.20963 |        1.20327 |        1.22883 |\r\n|          field_sqrt |        3.83393 |        3.11757 |        3.34495 |        3.74102 |        3.31233 |        3.40706 |\r\n",
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#issuecomment-1624480083",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1329"
    },
    {
      "event": "mentioned",
      "id": 9749386245,
      "node_id": "MEE_lADOAP4Jqs5m0szMzwAAAAJFG9QF",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9749386245",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T00:45:19Z"
    },
    {
      "event": "subscribed",
      "id": 9749386255,
      "node_id": "SE_lADOAP4Jqs5m0szMzwAAAAJFG9QP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9749386255",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T00:45:19Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1204998777",
      "pull_request_review_id": 1443087794,
      "id": 1204998777,
      "node_id": "PRRC_kwDOAP4Jqs5H0tJ5",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%rbx,-0x80(%%rsp)\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%rbp,-0x78(%%rsp)\\n\"\n+      \"mov    %%r12,-0x70(%%rsp)\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rbp,%%rcx\\n\"\n+      \"adox   %%r8,%%r12\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r8,%%rbp\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%r13,-0x68(%%rsp)\\n\"\n+      \"mov    %%r14,-0x60(%%rsp)\\n\"\n+      \"mulx   0x18(%%rsi),%%r13,%%r14\\n\"\n+      \"adcx   %%r13,%%r10\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r11,%%r13\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mov    %%r15,-0x58(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x50(%%rsp)\\n\"\n+      \"mulx   (%%rsi),%%r15,%%rdi\\n\"\n+      \"add    %%r11,%%rcx\\n\"\n+      \"adcx   %%r12,%%r13\\n\"\n+      \"add    %%r15,%%rcx\\n\"\n+      \"adcx   %%r13,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r8,%%r12,%%r11\\n\"\n+      \"add    %%rcx,%%r12\\n\"\n+      \"adcx   %%r11,%%rdi\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r15,%%r13\\n\"\n+      \"mov    %%r12,%%rdx\\n\"\n+      \"shrd   $0x34,%%rdi,%%rdx\\n\"\n+      \"xor    %%r8,%%r8\\n\"\n+      \"adox   %%r9,%%r10\\n\"\n+      \"adox   %%r14,%%rbx\\n\"\n+      \"adcx   %%r15,%%r10\\n\"\n+      \"adcx   %%rbx,%%r13\\n\"\n+      \"mov    %%rdx,%%r9\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r14,%%rcx\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r14,%%r10\\n\"\n+      \"adox   %%r13,%%rcx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%r8,%%r11\\n\"\n+      \"adcx   %%r10,%%r9\\n\"\n+      \"adc    $0x0,%%rcx\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rdi,%%r15\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%rdi,%%r8\\n\"\n+      \"adox   %%r11,%%r15\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x18(%%rax),%%rbx,%%r13\\n\"\n+      \"movabs $0x1000003d10000,%%rdx\\n\"\n+      \"mulx   %%rbp,%%r14,%%r10\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rbp,%%r11\\n\"\n+      \"adcx   %%r9,%%r14\\n\"\n+      \"adcx   %%r10,%%rcx\\n\"\n+      \"movabs $0xfffffffffffff,%%rdx\\n\"\n+      \"mov    %%r14,%%r9\\n\"\n+      \"and    %%rdx,%%r9\\n\"\n+      \"adox   %%rbx,%%r8\\n\"\n+      \"adox   %%r15,%%r13\\n\"\n+      \"movabs $0xffffffffffff,%%rdi\\n\"\n+      \"mov    %%r9,%%r15\\n\"\n+      \"and    %%rdi,%%r15\\n\"\n+      \"adox   %%rbp,%%r8\\n\"\n+      \"adox   %%r13,%%r11\\n\"\n+      \"shrd   $0x34,%%rcx,%%r14\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%r8,%%r14\\n\"\n+      \"mov    $0x0,%%ebx\\n\"\n+      \"adox   %%rbx,%%r11\\n\"\n+      \"mov    %%r14,%%r10\\n\"\n+      \"and    %%rdx,%%r10\\n\"\n+      \"shl    $0x4,%%r10\\n\"\n+      \"shr    $0x30,%%r9\\n\"\n+      \"lea    (%%r10,%%r9,1),%%r10\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rcx\\n\"\n+      \"movabs $0x1000003d1,%%rdx\\n\"\n+      \"mulx   %%r10,%%r13,%%r8\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%r9,%%r10\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%rbx,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"adox   %%rdi,%%r10\\n\"\n+      \"mov    0x20(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%r9,%%rdi\\n\"\n+      \"adcx   %%r9,%%rbx\\n\"\n+      \"adcx   %%r10,%%rdi\\n\"\n+      \"shrd   $0x34,%%r11,%%r14\\n\"\n+      \"add    %%rbx,%%r14\\n\"\n+      \"adc    $0x0,%%rdi\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r11,%%r10\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x8(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%r15,-0x48(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x40(%%rsp)\\n\"\n+      \"mulx   (%%rax),%%r15,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%r11\\n\"\n+      \"adox   %%r10,%%rbx\\n\"\n+      \"adcx   %%rbp,%%r13\\n\"\n+      \"adcx   %%r8,%%rcx\\n\"\n+      \"mov    -0x40(%%rsp),%%rbp\\n\"\n+      \"mov    %%r14,%%r8\\n\"\n+      \"shrd   $0x34,%%rbp,%%r8\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%rbp,%%r10\\n\"\n+      \"mov    %%r13,%%rdx\\n\"\n+      \"shrd   $0x34,%%rcx,%%rdx\\n\"\n+      \"xor    %%r9,%%r9\\n\"\n+      \"adox   %%r11,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"mov    %%rdx,%%r11\\n\"\n+      \"mov    0x18(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rcx,%%r9\\n\"\n+      \"adcx   %%rbp,%%r15\\n\"\n+      \"adcx   %%rdi,%%r10\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%rdi,%%rbp\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rcx,%%rdi\\n\"\n+      \"adox   %%rbp,%%r9\\n\"\n+      \"adcx   %%rdi,%%r8\\n\"\n+      \"adc    $0x0,%%r9\\n\"\n+      \"movabs $0xfffffffffffff,%%rcx\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rdi\\n\"\n+      \"adox   %%rbp,%%r15\\n\"\n+      \"adox   %%r10,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r14,%%r10,%%rbp\\n\"\n+      \"adcx   %%r11,%%r10\\n\"\n+      \"adcx   %%rbp,%%rbx\\n\"\n+      \"mov    %%r10,%%r11\\n\"\n+      \"shrd   $0x34,%%rbx,%%r11\\n\"\n+      \"and    %%rcx,%%r10\\n\"\n+      \"mulx   %%r8,%%r14,%%rbp\\n\"\n+      \"movabs $0x1000003d10000,%%r8\\n\"\n+      \"mov    %%r9,%%rdx\\n\"\n+      \"mulx   %%r8,%%r9,%%rbx\\n\"\n+      \"adox   %%r15,%%r11\\n\"\n+      \"mov    $0x0,%%edx\\n\"\n+      \"adox   %%rdx,%%rdi\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"adcx   %%rbp,%%rdi\\n\"\n+      \"mov    %%r14,%%r15\\n\"\n+      \"shrd   $0x34,%%rdi,%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rbp\\n\"\n+      \"mov    %%r10,0x8(%%rbp)\\n\"\n+      \"and    %%rcx,%%r12\\n\"\n+      \"lea    (%%r12,%%r15,1),%%r12\\n\"\n+      \"adox   %%r12,%%r9\\n\"\n+      \"adox   %%rdx,%%rbx\\n\"\n+      \"and    %%rcx,%%r13\\n\"\n+      \"mov    %%r13,0x0(%%rbp)\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    %%r9,%%r10\\n\"\n+      \"shrd   $0x34,%%rbx,%%r10\\n\"\n+      \"mov    %%r14,0x10(%%rbp)\\n\"\n+      \"add    -0x48(%%rsp),%%r10\\n\"\n+      \"and    %%rcx,%%r9\\n\"\n+      \"mov    %%r10,0x20(%%rbp)\\n\"\n+      \"mov    %%r9,0x18(%%rbp)\\n\"\n+      \"mov    -0x80(%%rsp),%%rbx\\n\"\n+      \"mov    -0x78(%%rsp),%%rbp\\n\"\n+      \"mov    -0x70(%%rsp),%%r12\\n\"\n+      \"mov    -0x68(%%rsp),%%r13\\n\"\n+      \"mov    -0x60(%%rsp),%%r14\\n\"\n+      \"mov    -0x58(%%rsp),%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rdi\\n\"\n+      \"mov    %%rax,%%rdx\\n\"",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 203,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "183ebfafc5995da26aab0d0a73045dae5d3e21f3",
      "in_reply_to_id": null,
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa, re https://github.com/bitcoin-core/secp256k1/issues/1261#issuecomment-1557191247 and https://github.com/bitcoin-core/secp256k1/issues/1261#issuecomment-1558384738 those two instructions are sometimes not necessary. They are conservatively restoring the input variables.",
      "created_at": "2023-05-25T05:05:00Z",
      "updated_at": "2023-05-25T05:05:42Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1204998777",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1204998777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": 202,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1206703965",
      "pull_request_review_id": 1446116239,
      "id": 1206703965,
      "node_id": "PRRC_kwDOAP4Jqs5H7Ndd",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%rbx,-0x80(%%rsp)\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%rbp,-0x78(%%rsp)\\n\"\n+      \"mov    %%r12,-0x70(%%rsp)\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rbp,%%rcx\\n\"\n+      \"adox   %%r8,%%r12\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r8,%%rbp\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%r13,-0x68(%%rsp)\\n\"\n+      \"mov    %%r14,-0x60(%%rsp)\\n\"\n+      \"mulx   0x18(%%rsi),%%r13,%%r14\\n\"\n+      \"adcx   %%r13,%%r10\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r11,%%r13\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mov    %%r15,-0x58(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x50(%%rsp)\\n\"\n+      \"mulx   (%%rsi),%%r15,%%rdi\\n\"\n+      \"add    %%r11,%%rcx\\n\"\n+      \"adcx   %%r12,%%r13\\n\"\n+      \"add    %%r15,%%rcx\\n\"\n+      \"adcx   %%r13,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r8,%%r12,%%r11\\n\"\n+      \"add    %%rcx,%%r12\\n\"\n+      \"adcx   %%r11,%%rdi\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r15,%%r13\\n\"\n+      \"mov    %%r12,%%rdx\\n\"\n+      \"shrd   $0x34,%%rdi,%%rdx\\n\"\n+      \"xor    %%r8,%%r8\\n\"\n+      \"adox   %%r9,%%r10\\n\"\n+      \"adox   %%r14,%%rbx\\n\"\n+      \"adcx   %%r15,%%r10\\n\"\n+      \"adcx   %%rbx,%%r13\\n\"\n+      \"mov    %%rdx,%%r9\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r14,%%rcx\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r14,%%r10\\n\"\n+      \"adox   %%r13,%%rcx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%r8,%%r11\\n\"\n+      \"adcx   %%r10,%%r9\\n\"\n+      \"adc    $0x0,%%rcx\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rdi,%%r15\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%rdi,%%r8\\n\"\n+      \"adox   %%r11,%%r15\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x18(%%rax),%%rbx,%%r13\\n\"\n+      \"movabs $0x1000003d10000,%%rdx\\n\"\n+      \"mulx   %%rbp,%%r14,%%r10\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rbp,%%r11\\n\"\n+      \"adcx   %%r9,%%r14\\n\"\n+      \"adcx   %%r10,%%rcx\\n\"\n+      \"movabs $0xfffffffffffff,%%rdx\\n\"\n+      \"mov    %%r14,%%r9\\n\"\n+      \"and    %%rdx,%%r9\\n\"\n+      \"adox   %%rbx,%%r8\\n\"\n+      \"adox   %%r15,%%r13\\n\"\n+      \"movabs $0xffffffffffff,%%rdi\\n\"\n+      \"mov    %%r9,%%r15\\n\"\n+      \"and    %%rdi,%%r15\\n\"\n+      \"adox   %%rbp,%%r8\\n\"\n+      \"adox   %%r13,%%r11\\n\"\n+      \"shrd   $0x34,%%rcx,%%r14\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%r8,%%r14\\n\"\n+      \"mov    $0x0,%%ebx\\n\"\n+      \"adox   %%rbx,%%r11\\n\"\n+      \"mov    %%r14,%%r10\\n\"\n+      \"and    %%rdx,%%r10\\n\"\n+      \"shl    $0x4,%%r10\\n\"\n+      \"shr    $0x30,%%r9\\n\"\n+      \"lea    (%%r10,%%r9,1),%%r10\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rcx\\n\"\n+      \"movabs $0x1000003d1,%%rdx\\n\"\n+      \"mulx   %%r10,%%r13,%%r8\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%r9,%%r10\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%rbx,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"adox   %%rdi,%%r10\\n\"\n+      \"mov    0x20(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%r9,%%rdi\\n\"\n+      \"adcx   %%r9,%%rbx\\n\"\n+      \"adcx   %%r10,%%rdi\\n\"\n+      \"shrd   $0x34,%%r11,%%r14\\n\"\n+      \"add    %%rbx,%%r14\\n\"\n+      \"adc    $0x0,%%rdi\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r11,%%r10\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x8(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%r15,-0x48(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x40(%%rsp)\\n\"\n+      \"mulx   (%%rax),%%r15,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%r11\\n\"\n+      \"adox   %%r10,%%rbx\\n\"\n+      \"adcx   %%rbp,%%r13\\n\"\n+      \"adcx   %%r8,%%rcx\\n\"\n+      \"mov    -0x40(%%rsp),%%rbp\\n\"\n+      \"mov    %%r14,%%r8\\n\"\n+      \"shrd   $0x34,%%rbp,%%r8\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%rbp,%%r10\\n\"\n+      \"mov    %%r13,%%rdx\\n\"\n+      \"shrd   $0x34,%%rcx,%%rdx\\n\"\n+      \"xor    %%r9,%%r9\\n\"\n+      \"adox   %%r11,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"mov    %%rdx,%%r11\\n\"\n+      \"mov    0x18(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rcx,%%r9\\n\"\n+      \"adcx   %%rbp,%%r15\\n\"\n+      \"adcx   %%rdi,%%r10\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%rdi,%%rbp\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rcx,%%rdi\\n\"\n+      \"adox   %%rbp,%%r9\\n\"\n+      \"adcx   %%rdi,%%r8\\n\"\n+      \"adc    $0x0,%%r9\\n\"\n+      \"movabs $0xfffffffffffff,%%rcx\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rdi\\n\"\n+      \"adox   %%rbp,%%r15\\n\"\n+      \"adox   %%r10,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r14,%%r10,%%rbp\\n\"\n+      \"adcx   %%r11,%%r10\\n\"\n+      \"adcx   %%rbp,%%rbx\\n\"\n+      \"mov    %%r10,%%r11\\n\"\n+      \"shrd   $0x34,%%rbx,%%r11\\n\"\n+      \"and    %%rcx,%%r10\\n\"\n+      \"mulx   %%r8,%%r14,%%rbp\\n\"\n+      \"movabs $0x1000003d10000,%%r8\\n\"\n+      \"mov    %%r9,%%rdx\\n\"\n+      \"mulx   %%r8,%%r9,%%rbx\\n\"\n+      \"adox   %%r15,%%r11\\n\"\n+      \"mov    $0x0,%%edx\\n\"\n+      \"adox   %%rdx,%%rdi\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"adcx   %%rbp,%%rdi\\n\"\n+      \"mov    %%r14,%%r15\\n\"\n+      \"shrd   $0x34,%%rdi,%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rbp\\n\"\n+      \"mov    %%r10,0x8(%%rbp)\\n\"\n+      \"and    %%rcx,%%r12\\n\"\n+      \"lea    (%%r12,%%r15,1),%%r12\\n\"\n+      \"adox   %%r12,%%r9\\n\"\n+      \"adox   %%rdx,%%rbx\\n\"\n+      \"and    %%rcx,%%r13\\n\"\n+      \"mov    %%r13,0x0(%%rbp)\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    %%r9,%%r10\\n\"\n+      \"shrd   $0x34,%%rbx,%%r10\\n\"\n+      \"mov    %%r14,0x10(%%rbp)\\n\"\n+      \"add    -0x48(%%rsp),%%r10\\n\"\n+      \"and    %%rcx,%%r9\\n\"\n+      \"mov    %%r10,0x20(%%rbp)\\n\"\n+      \"mov    %%r9,0x18(%%rbp)\\n\"\n+      \"mov    -0x80(%%rsp),%%rbx\\n\"\n+      \"mov    -0x78(%%rsp),%%rbp\\n\"\n+      \"mov    -0x70(%%rsp),%%r12\\n\"\n+      \"mov    -0x68(%%rsp),%%r13\\n\"\n+      \"mov    -0x60(%%rsp),%%r14\\n\"\n+      \"mov    -0x58(%%rsp),%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rdi\\n\"\n+      \"mov    %%rax,%%rdx\\n\"\n+\n+      : \"=m\"(r[0]), \"=m\"(r[1]), \"=m\"(r[2]), \"=m\"(r[3]), \"=m\"(r[4])",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 205,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "5db0678b6a63095b0fdb97e83288958a0f65b04f",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You don't know which memory locations the compiler will assign to these variables. You need to use `%0`..`%4` to refer to them (or `%q0` through `%q4` if you need to be explicit about them being 64 bit values).",
      "created_at": "2023-05-26T12:21:21Z",
      "updated_at": "2023-05-26T12:21:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1206703965",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1206703965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1206706458",
      "pull_request_review_id": 1446120508,
      "id": 1206706458,
      "node_id": "PRRC_kwDOAP4Jqs5H7OEa",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%rbx,-0x80(%%rsp)\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%rbp,-0x78(%%rsp)\\n\"\n+      \"mov    %%r12,-0x70(%%rsp)\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rbp,%%rcx\\n\"\n+      \"adox   %%r8,%%r12\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r8,%%rbp\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%r13,-0x68(%%rsp)\\n\"\n+      \"mov    %%r14,-0x60(%%rsp)\\n\"\n+      \"mulx   0x18(%%rsi),%%r13,%%r14\\n\"\n+      \"adcx   %%r13,%%r10\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r11,%%r13\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mov    %%r15,-0x58(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x50(%%rsp)\\n\"\n+      \"mulx   (%%rsi),%%r15,%%rdi\\n\"\n+      \"add    %%r11,%%rcx\\n\"\n+      \"adcx   %%r12,%%r13\\n\"\n+      \"add    %%r15,%%rcx\\n\"\n+      \"adcx   %%r13,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r8,%%r12,%%r11\\n\"\n+      \"add    %%rcx,%%r12\\n\"\n+      \"adcx   %%r11,%%rdi\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r15,%%r13\\n\"\n+      \"mov    %%r12,%%rdx\\n\"\n+      \"shrd   $0x34,%%rdi,%%rdx\\n\"\n+      \"xor    %%r8,%%r8\\n\"\n+      \"adox   %%r9,%%r10\\n\"\n+      \"adox   %%r14,%%rbx\\n\"\n+      \"adcx   %%r15,%%r10\\n\"\n+      \"adcx   %%rbx,%%r13\\n\"\n+      \"mov    %%rdx,%%r9\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r14,%%rcx\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r14,%%r10\\n\"\n+      \"adox   %%r13,%%rcx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%r8,%%r11\\n\"\n+      \"adcx   %%r10,%%r9\\n\"\n+      \"adc    $0x0,%%rcx\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rdi,%%r15\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%rdi,%%r8\\n\"\n+      \"adox   %%r11,%%r15\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x18(%%rax),%%rbx,%%r13\\n\"\n+      \"movabs $0x1000003d10000,%%rdx\\n\"\n+      \"mulx   %%rbp,%%r14,%%r10\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rbp,%%r11\\n\"\n+      \"adcx   %%r9,%%r14\\n\"\n+      \"adcx   %%r10,%%rcx\\n\"\n+      \"movabs $0xfffffffffffff,%%rdx\\n\"\n+      \"mov    %%r14,%%r9\\n\"\n+      \"and    %%rdx,%%r9\\n\"\n+      \"adox   %%rbx,%%r8\\n\"\n+      \"adox   %%r15,%%r13\\n\"\n+      \"movabs $0xffffffffffff,%%rdi\\n\"\n+      \"mov    %%r9,%%r15\\n\"\n+      \"and    %%rdi,%%r15\\n\"\n+      \"adox   %%rbp,%%r8\\n\"\n+      \"adox   %%r13,%%r11\\n\"\n+      \"shrd   $0x34,%%rcx,%%r14\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%r8,%%r14\\n\"\n+      \"mov    $0x0,%%ebx\\n\"\n+      \"adox   %%rbx,%%r11\\n\"\n+      \"mov    %%r14,%%r10\\n\"\n+      \"and    %%rdx,%%r10\\n\"\n+      \"shl    $0x4,%%r10\\n\"\n+      \"shr    $0x30,%%r9\\n\"\n+      \"lea    (%%r10,%%r9,1),%%r10\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rcx\\n\"\n+      \"movabs $0x1000003d1,%%rdx\\n\"\n+      \"mulx   %%r10,%%r13,%%r8\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%r9,%%r10\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%rbx,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"adox   %%rdi,%%r10\\n\"\n+      \"mov    0x20(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%r9,%%rdi\\n\"\n+      \"adcx   %%r9,%%rbx\\n\"\n+      \"adcx   %%r10,%%rdi\\n\"\n+      \"shrd   $0x34,%%r11,%%r14\\n\"\n+      \"add    %%rbx,%%r14\\n\"\n+      \"adc    $0x0,%%rdi\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r11,%%r10\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x8(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%r15,-0x48(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x40(%%rsp)\\n\"\n+      \"mulx   (%%rax),%%r15,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%r11\\n\"\n+      \"adox   %%r10,%%rbx\\n\"\n+      \"adcx   %%rbp,%%r13\\n\"\n+      \"adcx   %%r8,%%rcx\\n\"\n+      \"mov    -0x40(%%rsp),%%rbp\\n\"\n+      \"mov    %%r14,%%r8\\n\"\n+      \"shrd   $0x34,%%rbp,%%r8\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%rbp,%%r10\\n\"\n+      \"mov    %%r13,%%rdx\\n\"\n+      \"shrd   $0x34,%%rcx,%%rdx\\n\"\n+      \"xor    %%r9,%%r9\\n\"\n+      \"adox   %%r11,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"mov    %%rdx,%%r11\\n\"\n+      \"mov    0x18(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rcx,%%r9\\n\"\n+      \"adcx   %%rbp,%%r15\\n\"\n+      \"adcx   %%rdi,%%r10\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%rdi,%%rbp\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rcx,%%rdi\\n\"\n+      \"adox   %%rbp,%%r9\\n\"\n+      \"adcx   %%rdi,%%r8\\n\"\n+      \"adc    $0x0,%%r9\\n\"\n+      \"movabs $0xfffffffffffff,%%rcx\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rdi\\n\"\n+      \"adox   %%rbp,%%r15\\n\"\n+      \"adox   %%r10,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r14,%%r10,%%rbp\\n\"\n+      \"adcx   %%r11,%%r10\\n\"\n+      \"adcx   %%rbp,%%rbx\\n\"\n+      \"mov    %%r10,%%r11\\n\"\n+      \"shrd   $0x34,%%rbx,%%r11\\n\"\n+      \"and    %%rcx,%%r10\\n\"\n+      \"mulx   %%r8,%%r14,%%rbp\\n\"\n+      \"movabs $0x1000003d10000,%%r8\\n\"\n+      \"mov    %%r9,%%rdx\\n\"\n+      \"mulx   %%r8,%%r9,%%rbx\\n\"\n+      \"adox   %%r15,%%r11\\n\"\n+      \"mov    $0x0,%%edx\\n\"\n+      \"adox   %%rdx,%%rdi\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"adcx   %%rbp,%%rdi\\n\"\n+      \"mov    %%r14,%%r15\\n\"\n+      \"shrd   $0x34,%%rdi,%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rbp\\n\"\n+      \"mov    %%r10,0x8(%%rbp)\\n\"\n+      \"and    %%rcx,%%r12\\n\"\n+      \"lea    (%%r12,%%r15,1),%%r12\\n\"\n+      \"adox   %%r12,%%r9\\n\"\n+      \"adox   %%rdx,%%rbx\\n\"\n+      \"and    %%rcx,%%r13\\n\"\n+      \"mov    %%r13,0x0(%%rbp)\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    %%r9,%%r10\\n\"\n+      \"shrd   $0x34,%%rbx,%%r10\\n\"\n+      \"mov    %%r14,0x10(%%rbp)\\n\"\n+      \"add    -0x48(%%rsp),%%r10\\n\"\n+      \"and    %%rcx,%%r9\\n\"\n+      \"mov    %%r10,0x20(%%rbp)\\n\"\n+      \"mov    %%r9,0x18(%%rbp)\\n\"\n+      \"mov    -0x80(%%rsp),%%rbx\\n\"\n+      \"mov    -0x78(%%rsp),%%rbp\\n\"\n+      \"mov    -0x70(%%rsp),%%r12\\n\"\n+      \"mov    -0x68(%%rsp),%%r13\\n\"\n+      \"mov    -0x60(%%rsp),%%r14\\n\"\n+      \"mov    -0x58(%%rsp),%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rdi\\n\"\n+      \"mov    %%rax,%%rdx\\n\"",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 203,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "183ebfafc5995da26aab0d0a73045dae5d3e21f3",
      "in_reply_to_id": 1204998777,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You shouldn't ever have a need to save or restore inputs in the assembly block; the compiler will produce entry/exit code around to make sure the asm block's view is exactly as you specify.\r\n\r\nIf you specify a C value as input to the asm block, and you overwrite that memory location or register, it needs to be specified as an input/output variable rather than as an input.",
      "created_at": "2023-05-26T12:23:38Z",
      "updated_at": "2023-05-26T12:23:38Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1206706458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1206706458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": 202,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1206714035",
      "pull_request_review_id": 1446132778,
      "id": 1206714035,
      "node_id": "PRRC_kwDOAP4Jqs5H7P6z",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%rbx,-0x80(%%rsp)\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%rbp,-0x78(%%rsp)\\n\"\n+      \"mov    %%r12,-0x70(%%rsp)\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rbp,%%rcx\\n\"\n+      \"adox   %%r8,%%r12\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r8,%%rbp\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%r13,-0x68(%%rsp)\\n\"\n+      \"mov    %%r14,-0x60(%%rsp)\\n\"\n+      \"mulx   0x18(%%rsi),%%r13,%%r14\\n\"\n+      \"adcx   %%r13,%%r10\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r11,%%r13\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mov    %%r15,-0x58(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x50(%%rsp)\\n\"\n+      \"mulx   (%%rsi),%%r15,%%rdi\\n\"\n+      \"add    %%r11,%%rcx\\n\"\n+      \"adcx   %%r12,%%r13\\n\"\n+      \"add    %%r15,%%rcx\\n\"\n+      \"adcx   %%r13,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r8,%%r12,%%r11\\n\"\n+      \"add    %%rcx,%%r12\\n\"\n+      \"adcx   %%r11,%%rdi\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r15,%%r13\\n\"\n+      \"mov    %%r12,%%rdx\\n\"\n+      \"shrd   $0x34,%%rdi,%%rdx\\n\"\n+      \"xor    %%r8,%%r8\\n\"\n+      \"adox   %%r9,%%r10\\n\"\n+      \"adox   %%r14,%%rbx\\n\"\n+      \"adcx   %%r15,%%r10\\n\"\n+      \"adcx   %%rbx,%%r13\\n\"\n+      \"mov    %%rdx,%%r9\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r14,%%rcx\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r14,%%r10\\n\"\n+      \"adox   %%r13,%%rcx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%r8,%%r11\\n\"\n+      \"adcx   %%r10,%%r9\\n\"\n+      \"adc    $0x0,%%rcx\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rdi,%%r15\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%rdi,%%r8\\n\"\n+      \"adox   %%r11,%%r15\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x18(%%rax),%%rbx,%%r13\\n\"\n+      \"movabs $0x1000003d10000,%%rdx\\n\"\n+      \"mulx   %%rbp,%%r14,%%r10\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rbp,%%r11\\n\"\n+      \"adcx   %%r9,%%r14\\n\"\n+      \"adcx   %%r10,%%rcx\\n\"\n+      \"movabs $0xfffffffffffff,%%rdx\\n\"\n+      \"mov    %%r14,%%r9\\n\"\n+      \"and    %%rdx,%%r9\\n\"\n+      \"adox   %%rbx,%%r8\\n\"\n+      \"adox   %%r15,%%r13\\n\"\n+      \"movabs $0xffffffffffff,%%rdi\\n\"\n+      \"mov    %%r9,%%r15\\n\"\n+      \"and    %%rdi,%%r15\\n\"\n+      \"adox   %%rbp,%%r8\\n\"\n+      \"adox   %%r13,%%r11\\n\"\n+      \"shrd   $0x34,%%rcx,%%r14\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%r8,%%r14\\n\"\n+      \"mov    $0x0,%%ebx\\n\"\n+      \"adox   %%rbx,%%r11\\n\"\n+      \"mov    %%r14,%%r10\\n\"\n+      \"and    %%rdx,%%r10\\n\"\n+      \"shl    $0x4,%%r10\\n\"\n+      \"shr    $0x30,%%r9\\n\"\n+      \"lea    (%%r10,%%r9,1),%%r10\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rcx\\n\"\n+      \"movabs $0x1000003d1,%%rdx\\n\"\n+      \"mulx   %%r10,%%r13,%%r8\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%r9,%%r10\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%rbx,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"adox   %%rdi,%%r10\\n\"\n+      \"mov    0x20(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%r9,%%rdi\\n\"\n+      \"adcx   %%r9,%%rbx\\n\"\n+      \"adcx   %%r10,%%rdi\\n\"\n+      \"shrd   $0x34,%%r11,%%r14\\n\"\n+      \"add    %%rbx,%%r14\\n\"\n+      \"adc    $0x0,%%rdi\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r11,%%r10\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x8(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%r15,-0x48(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x40(%%rsp)\\n\"\n+      \"mulx   (%%rax),%%r15,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%r11\\n\"\n+      \"adox   %%r10,%%rbx\\n\"\n+      \"adcx   %%rbp,%%r13\\n\"\n+      \"adcx   %%r8,%%rcx\\n\"\n+      \"mov    -0x40(%%rsp),%%rbp\\n\"\n+      \"mov    %%r14,%%r8\\n\"\n+      \"shrd   $0x34,%%rbp,%%r8\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%rbp,%%r10\\n\"\n+      \"mov    %%r13,%%rdx\\n\"\n+      \"shrd   $0x34,%%rcx,%%rdx\\n\"\n+      \"xor    %%r9,%%r9\\n\"\n+      \"adox   %%r11,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"mov    %%rdx,%%r11\\n\"\n+      \"mov    0x18(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rcx,%%r9\\n\"\n+      \"adcx   %%rbp,%%r15\\n\"\n+      \"adcx   %%rdi,%%r10\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%rdi,%%rbp\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rcx,%%rdi\\n\"\n+      \"adox   %%rbp,%%r9\\n\"\n+      \"adcx   %%rdi,%%r8\\n\"\n+      \"adc    $0x0,%%r9\\n\"\n+      \"movabs $0xfffffffffffff,%%rcx\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rdi\\n\"\n+      \"adox   %%rbp,%%r15\\n\"\n+      \"adox   %%r10,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r14,%%r10,%%rbp\\n\"\n+      \"adcx   %%r11,%%r10\\n\"\n+      \"adcx   %%rbp,%%rbx\\n\"\n+      \"mov    %%r10,%%r11\\n\"\n+      \"shrd   $0x34,%%rbx,%%r11\\n\"\n+      \"and    %%rcx,%%r10\\n\"\n+      \"mulx   %%r8,%%r14,%%rbp\\n\"\n+      \"movabs $0x1000003d10000,%%r8\\n\"\n+      \"mov    %%r9,%%rdx\\n\"\n+      \"mulx   %%r8,%%r9,%%rbx\\n\"\n+      \"adox   %%r15,%%r11\\n\"\n+      \"mov    $0x0,%%edx\\n\"\n+      \"adox   %%rdx,%%rdi\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"adcx   %%rbp,%%rdi\\n\"\n+      \"mov    %%r14,%%r15\\n\"\n+      \"shrd   $0x34,%%rdi,%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rbp\\n\"\n+      \"mov    %%r10,0x8(%%rbp)\\n\"\n+      \"and    %%rcx,%%r12\\n\"\n+      \"lea    (%%r12,%%r15,1),%%r12\\n\"\n+      \"adox   %%r12,%%r9\\n\"\n+      \"adox   %%rdx,%%rbx\\n\"\n+      \"and    %%rcx,%%r13\\n\"\n+      \"mov    %%r13,0x0(%%rbp)\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    %%r9,%%r10\\n\"\n+      \"shrd   $0x34,%%rbx,%%r10\\n\"\n+      \"mov    %%r14,0x10(%%rbp)\\n\"\n+      \"add    -0x48(%%rsp),%%r10\\n\"\n+      \"and    %%rcx,%%r9\\n\"\n+      \"mov    %%r10,0x20(%%rbp)\\n\"\n+      \"mov    %%r9,0x18(%%rbp)\\n\"\n+      \"mov    -0x80(%%rsp),%%rbx\\n\"\n+      \"mov    -0x78(%%rsp),%%rbp\\n\"\n+      \"mov    -0x70(%%rsp),%%r12\\n\"\n+      \"mov    -0x68(%%rsp),%%r13\\n\"\n+      \"mov    -0x60(%%rsp),%%r14\\n\"\n+      \"mov    -0x58(%%rsp),%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rdi\\n\"\n+      \"mov    %%rax,%%rdx\\n\"\n+\n+      : \"=m\"(r[0]), \"=m\"(r[1]), \"=m\"(r[2]), \"=m\"(r[3]), \"=m\"(r[4])\n+\n+      : \"D\"(r), \"S\"(a), \"d\"(b), \"m\"(a[0]), \"m\"(b[0]), \"m\"(a[1]), \"m\"(b[1]),",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 207,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "5db0678b6a63095b0fdb97e83288958a0f65b04f",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "One general comment: it's better to let the compiler do register assignment, so it has the freedom to make it match wherever these values are already held in the call sites.\r\n\r\nSo you'd specify values as `\"r\"` and refer to them in the asm block as `%i` (with i being the position in the combined inputs+outputs list). The existing asm code doesn't do this because it was written by hand and converted to inline asm, but in your situation it may be possible to be a bit more flexible.",
      "created_at": "2023-05-26T12:31:31Z",
      "updated_at": "2023-05-26T12:31:31Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1206714035",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1206714035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1208712187",
      "pull_request_review_id": 1448538308,
      "id": 1208712187,
      "node_id": "PRRC_kwDOAP4Jqs5IC3v7",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%rbx,-0x80(%%rsp)\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%rbp,-0x78(%%rsp)\\n\"\n+      \"mov    %%r12,-0x70(%%rsp)\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rbp,%%rcx\\n\"\n+      \"adox   %%r8,%%r12\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r8,%%rbp\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%r13,-0x68(%%rsp)\\n\"\n+      \"mov    %%r14,-0x60(%%rsp)\\n\"\n+      \"mulx   0x18(%%rsi),%%r13,%%r14\\n\"\n+      \"adcx   %%r13,%%r10\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r11,%%r13\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mov    %%r15,-0x58(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x50(%%rsp)\\n\"\n+      \"mulx   (%%rsi),%%r15,%%rdi\\n\"\n+      \"add    %%r11,%%rcx\\n\"\n+      \"adcx   %%r12,%%r13\\n\"\n+      \"add    %%r15,%%rcx\\n\"\n+      \"adcx   %%r13,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r8,%%r12,%%r11\\n\"\n+      \"add    %%rcx,%%r12\\n\"\n+      \"adcx   %%r11,%%rdi\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r15,%%r13\\n\"\n+      \"mov    %%r12,%%rdx\\n\"\n+      \"shrd   $0x34,%%rdi,%%rdx\\n\"\n+      \"xor    %%r8,%%r8\\n\"\n+      \"adox   %%r9,%%r10\\n\"\n+      \"adox   %%r14,%%rbx\\n\"\n+      \"adcx   %%r15,%%r10\\n\"\n+      \"adcx   %%rbx,%%r13\\n\"\n+      \"mov    %%rdx,%%r9\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r14,%%rcx\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r14,%%r10\\n\"\n+      \"adox   %%r13,%%rcx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%r8,%%r11\\n\"\n+      \"adcx   %%r10,%%r9\\n\"\n+      \"adc    $0x0,%%rcx\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rdi,%%r15\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%rdi,%%r8\\n\"\n+      \"adox   %%r11,%%r15\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x18(%%rax),%%rbx,%%r13\\n\"\n+      \"movabs $0x1000003d10000,%%rdx\\n\"\n+      \"mulx   %%rbp,%%r14,%%r10\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rbp,%%r11\\n\"\n+      \"adcx   %%r9,%%r14\\n\"\n+      \"adcx   %%r10,%%rcx\\n\"\n+      \"movabs $0xfffffffffffff,%%rdx\\n\"\n+      \"mov    %%r14,%%r9\\n\"\n+      \"and    %%rdx,%%r9\\n\"\n+      \"adox   %%rbx,%%r8\\n\"\n+      \"adox   %%r15,%%r13\\n\"\n+      \"movabs $0xffffffffffff,%%rdi\\n\"\n+      \"mov    %%r9,%%r15\\n\"\n+      \"and    %%rdi,%%r15\\n\"\n+      \"adox   %%rbp,%%r8\\n\"\n+      \"adox   %%r13,%%r11\\n\"\n+      \"shrd   $0x34,%%rcx,%%r14\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%r8,%%r14\\n\"\n+      \"mov    $0x0,%%ebx\\n\"\n+      \"adox   %%rbx,%%r11\\n\"\n+      \"mov    %%r14,%%r10\\n\"\n+      \"and    %%rdx,%%r10\\n\"\n+      \"shl    $0x4,%%r10\\n\"\n+      \"shr    $0x30,%%r9\\n\"\n+      \"lea    (%%r10,%%r9,1),%%r10\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rcx\\n\"\n+      \"movabs $0x1000003d1,%%rdx\\n\"\n+      \"mulx   %%r10,%%r13,%%r8\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%r9,%%r10\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%rbx,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"adox   %%rdi,%%r10\\n\"\n+      \"mov    0x20(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%r9,%%rdi\\n\"\n+      \"adcx   %%r9,%%rbx\\n\"\n+      \"adcx   %%r10,%%rdi\\n\"\n+      \"shrd   $0x34,%%r11,%%r14\\n\"\n+      \"add    %%rbx,%%r14\\n\"\n+      \"adc    $0x0,%%rdi\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r11,%%r10\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x8(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%r15,-0x48(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x40(%%rsp)\\n\"\n+      \"mulx   (%%rax),%%r15,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%r11\\n\"\n+      \"adox   %%r10,%%rbx\\n\"\n+      \"adcx   %%rbp,%%r13\\n\"\n+      \"adcx   %%r8,%%rcx\\n\"\n+      \"mov    -0x40(%%rsp),%%rbp\\n\"\n+      \"mov    %%r14,%%r8\\n\"\n+      \"shrd   $0x34,%%rbp,%%r8\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%rbp,%%r10\\n\"\n+      \"mov    %%r13,%%rdx\\n\"\n+      \"shrd   $0x34,%%rcx,%%rdx\\n\"\n+      \"xor    %%r9,%%r9\\n\"\n+      \"adox   %%r11,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"mov    %%rdx,%%r11\\n\"\n+      \"mov    0x18(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rcx,%%r9\\n\"\n+      \"adcx   %%rbp,%%r15\\n\"\n+      \"adcx   %%rdi,%%r10\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%rdi,%%rbp\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rcx,%%rdi\\n\"\n+      \"adox   %%rbp,%%r9\\n\"\n+      \"adcx   %%rdi,%%r8\\n\"\n+      \"adc    $0x0,%%r9\\n\"\n+      \"movabs $0xfffffffffffff,%%rcx\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rdi\\n\"\n+      \"adox   %%rbp,%%r15\\n\"\n+      \"adox   %%r10,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r14,%%r10,%%rbp\\n\"\n+      \"adcx   %%r11,%%r10\\n\"\n+      \"adcx   %%rbp,%%rbx\\n\"\n+      \"mov    %%r10,%%r11\\n\"\n+      \"shrd   $0x34,%%rbx,%%r11\\n\"\n+      \"and    %%rcx,%%r10\\n\"\n+      \"mulx   %%r8,%%r14,%%rbp\\n\"\n+      \"movabs $0x1000003d10000,%%r8\\n\"\n+      \"mov    %%r9,%%rdx\\n\"\n+      \"mulx   %%r8,%%r9,%%rbx\\n\"\n+      \"adox   %%r15,%%r11\\n\"\n+      \"mov    $0x0,%%edx\\n\"\n+      \"adox   %%rdx,%%rdi\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"adcx   %%rbp,%%rdi\\n\"\n+      \"mov    %%r14,%%r15\\n\"\n+      \"shrd   $0x34,%%rdi,%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rbp\\n\"\n+      \"mov    %%r10,0x8(%%rbp)\\n\"\n+      \"and    %%rcx,%%r12\\n\"\n+      \"lea    (%%r12,%%r15,1),%%r12\\n\"\n+      \"adox   %%r12,%%r9\\n\"\n+      \"adox   %%rdx,%%rbx\\n\"\n+      \"and    %%rcx,%%r13\\n\"\n+      \"mov    %%r13,0x0(%%rbp)\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    %%r9,%%r10\\n\"\n+      \"shrd   $0x34,%%rbx,%%r10\\n\"\n+      \"mov    %%r14,0x10(%%rbp)\\n\"\n+      \"add    -0x48(%%rsp),%%r10\\n\"\n+      \"and    %%rcx,%%r9\\n\"\n+      \"mov    %%r10,0x20(%%rbp)\\n\"\n+      \"mov    %%r9,0x18(%%rbp)\\n\"\n+      \"mov    -0x80(%%rsp),%%rbx\\n\"\n+      \"mov    -0x78(%%rsp),%%rbp\\n\"\n+      \"mov    -0x70(%%rsp),%%r12\\n\"\n+      \"mov    -0x68(%%rsp),%%r13\\n\"\n+      \"mov    -0x60(%%rsp),%%r14\\n\"\n+      \"mov    -0x58(%%rsp),%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rdi\\n\"\n+      \"mov    %%rax,%%rdx\\n\"\n+\n+      : \"=m\"(r[0]), \"=m\"(r[1]), \"=m\"(r[2]), \"=m\"(r[3]), \"=m\"(r[4])",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 205,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "5db0678b6a63095b0fdb97e83288958a0f65b04f",
      "in_reply_to_id": 1206703965,
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I just wanted to make the compiler aware, that I am writing to those values in the asm block, such that the compiler is not issuing a dirty read if it interleaves it with something else. I feel this is more of a precaution that I did because I kept getting segfaults. As I am not reading those values anyway, (i.e. use `%0`..`%4`, but rather have my constant offsets from `r`, `%rdi`), I think I can omit line 205 entirely.",
      "created_at": "2023-05-29T00:23:32Z",
      "updated_at": "2023-05-29T00:23:32Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1208712187",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1208712187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1208716178",
      "pull_request_review_id": 1448544149,
      "id": 1208716178,
      "node_id": "PRRC_kwDOAP4Jqs5IC4uS",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%rbx,-0x80(%%rsp)\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%rbp,-0x78(%%rsp)\\n\"\n+      \"mov    %%r12,-0x70(%%rsp)\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rbp,%%rcx\\n\"\n+      \"adox   %%r8,%%r12\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r8,%%rbp\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%r13,-0x68(%%rsp)\\n\"\n+      \"mov    %%r14,-0x60(%%rsp)\\n\"\n+      \"mulx   0x18(%%rsi),%%r13,%%r14\\n\"\n+      \"adcx   %%r13,%%r10\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r11,%%r13\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mov    %%r15,-0x58(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x50(%%rsp)\\n\"\n+      \"mulx   (%%rsi),%%r15,%%rdi\\n\"\n+      \"add    %%r11,%%rcx\\n\"\n+      \"adcx   %%r12,%%r13\\n\"\n+      \"add    %%r15,%%rcx\\n\"\n+      \"adcx   %%r13,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r8,%%r12,%%r11\\n\"\n+      \"add    %%rcx,%%r12\\n\"\n+      \"adcx   %%r11,%%rdi\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r15,%%r13\\n\"\n+      \"mov    %%r12,%%rdx\\n\"\n+      \"shrd   $0x34,%%rdi,%%rdx\\n\"\n+      \"xor    %%r8,%%r8\\n\"\n+      \"adox   %%r9,%%r10\\n\"\n+      \"adox   %%r14,%%rbx\\n\"\n+      \"adcx   %%r15,%%r10\\n\"\n+      \"adcx   %%rbx,%%r13\\n\"\n+      \"mov    %%rdx,%%r9\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r14,%%rcx\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r14,%%r10\\n\"\n+      \"adox   %%r13,%%rcx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%r8,%%r11\\n\"\n+      \"adcx   %%r10,%%r9\\n\"\n+      \"adc    $0x0,%%rcx\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rdi,%%r15\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%rdi,%%r8\\n\"\n+      \"adox   %%r11,%%r15\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x18(%%rax),%%rbx,%%r13\\n\"\n+      \"movabs $0x1000003d10000,%%rdx\\n\"\n+      \"mulx   %%rbp,%%r14,%%r10\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rbp,%%r11\\n\"\n+      \"adcx   %%r9,%%r14\\n\"\n+      \"adcx   %%r10,%%rcx\\n\"\n+      \"movabs $0xfffffffffffff,%%rdx\\n\"\n+      \"mov    %%r14,%%r9\\n\"\n+      \"and    %%rdx,%%r9\\n\"\n+      \"adox   %%rbx,%%r8\\n\"\n+      \"adox   %%r15,%%r13\\n\"\n+      \"movabs $0xffffffffffff,%%rdi\\n\"\n+      \"mov    %%r9,%%r15\\n\"\n+      \"and    %%rdi,%%r15\\n\"\n+      \"adox   %%rbp,%%r8\\n\"\n+      \"adox   %%r13,%%r11\\n\"\n+      \"shrd   $0x34,%%rcx,%%r14\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%r8,%%r14\\n\"\n+      \"mov    $0x0,%%ebx\\n\"\n+      \"adox   %%rbx,%%r11\\n\"\n+      \"mov    %%r14,%%r10\\n\"\n+      \"and    %%rdx,%%r10\\n\"\n+      \"shl    $0x4,%%r10\\n\"\n+      \"shr    $0x30,%%r9\\n\"\n+      \"lea    (%%r10,%%r9,1),%%r10\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rcx\\n\"\n+      \"movabs $0x1000003d1,%%rdx\\n\"\n+      \"mulx   %%r10,%%r13,%%r8\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%r9,%%r10\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%rbx,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"adox   %%rdi,%%r10\\n\"\n+      \"mov    0x20(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%r9,%%rdi\\n\"\n+      \"adcx   %%r9,%%rbx\\n\"\n+      \"adcx   %%r10,%%rdi\\n\"\n+      \"shrd   $0x34,%%r11,%%r14\\n\"\n+      \"add    %%rbx,%%r14\\n\"\n+      \"adc    $0x0,%%rdi\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r11,%%r10\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x8(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%r15,-0x48(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x40(%%rsp)\\n\"\n+      \"mulx   (%%rax),%%r15,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%r11\\n\"\n+      \"adox   %%r10,%%rbx\\n\"\n+      \"adcx   %%rbp,%%r13\\n\"\n+      \"adcx   %%r8,%%rcx\\n\"\n+      \"mov    -0x40(%%rsp),%%rbp\\n\"\n+      \"mov    %%r14,%%r8\\n\"\n+      \"shrd   $0x34,%%rbp,%%r8\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%rbp,%%r10\\n\"\n+      \"mov    %%r13,%%rdx\\n\"\n+      \"shrd   $0x34,%%rcx,%%rdx\\n\"\n+      \"xor    %%r9,%%r9\\n\"\n+      \"adox   %%r11,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"mov    %%rdx,%%r11\\n\"\n+      \"mov    0x18(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rcx,%%r9\\n\"\n+      \"adcx   %%rbp,%%r15\\n\"\n+      \"adcx   %%rdi,%%r10\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%rdi,%%rbp\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rcx,%%rdi\\n\"\n+      \"adox   %%rbp,%%r9\\n\"\n+      \"adcx   %%rdi,%%r8\\n\"\n+      \"adc    $0x0,%%r9\\n\"\n+      \"movabs $0xfffffffffffff,%%rcx\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rdi\\n\"\n+      \"adox   %%rbp,%%r15\\n\"\n+      \"adox   %%r10,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r14,%%r10,%%rbp\\n\"\n+      \"adcx   %%r11,%%r10\\n\"\n+      \"adcx   %%rbp,%%rbx\\n\"\n+      \"mov    %%r10,%%r11\\n\"\n+      \"shrd   $0x34,%%rbx,%%r11\\n\"\n+      \"and    %%rcx,%%r10\\n\"\n+      \"mulx   %%r8,%%r14,%%rbp\\n\"\n+      \"movabs $0x1000003d10000,%%r8\\n\"\n+      \"mov    %%r9,%%rdx\\n\"\n+      \"mulx   %%r8,%%r9,%%rbx\\n\"\n+      \"adox   %%r15,%%r11\\n\"\n+      \"mov    $0x0,%%edx\\n\"\n+      \"adox   %%rdx,%%rdi\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"adcx   %%rbp,%%rdi\\n\"\n+      \"mov    %%r14,%%r15\\n\"\n+      \"shrd   $0x34,%%rdi,%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rbp\\n\"\n+      \"mov    %%r10,0x8(%%rbp)\\n\"\n+      \"and    %%rcx,%%r12\\n\"\n+      \"lea    (%%r12,%%r15,1),%%r12\\n\"\n+      \"adox   %%r12,%%r9\\n\"\n+      \"adox   %%rdx,%%rbx\\n\"\n+      \"and    %%rcx,%%r13\\n\"\n+      \"mov    %%r13,0x0(%%rbp)\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    %%r9,%%r10\\n\"\n+      \"shrd   $0x34,%%rbx,%%r10\\n\"\n+      \"mov    %%r14,0x10(%%rbp)\\n\"\n+      \"add    -0x48(%%rsp),%%r10\\n\"\n+      \"and    %%rcx,%%r9\\n\"\n+      \"mov    %%r10,0x20(%%rbp)\\n\"\n+      \"mov    %%r9,0x18(%%rbp)\\n\"\n+      \"mov    -0x80(%%rsp),%%rbx\\n\"\n+      \"mov    -0x78(%%rsp),%%rbp\\n\"\n+      \"mov    -0x70(%%rsp),%%r12\\n\"\n+      \"mov    -0x68(%%rsp),%%r13\\n\"\n+      \"mov    -0x60(%%rsp),%%r14\\n\"\n+      \"mov    -0x58(%%rsp),%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rdi\\n\"\n+      \"mov    %%rax,%%rdx\\n\"\n+\n+      : \"=m\"(r[0]), \"=m\"(r[1]), \"=m\"(r[2]), \"=m\"(r[3]), \"=m\"(r[4])\n+\n+      : \"D\"(r), \"S\"(a), \"d\"(b), \"m\"(a[0]), \"m\"(b[0]), \"m\"(a[1]), \"m\"(b[1]),",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 207,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "5db0678b6a63095b0fdb97e83288958a0f65b04f",
      "in_reply_to_id": 1206714035,
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm, I see. I think I wanted to do this too, but I wasn't able to because of `%rdx` being special for `mulx`. Then I'd need some way of conditionally emitting instructions in the sense of: \"If the parameter is in `%rdx` then save it to something else before doing the `mulx`. Similar with the other registers. If the compiler decides which registers the parameters go into, I don't know in the hard coded parts, which registers to use for the intermediate values. And lastly, the more we change this existing code, the less confident we are of the formal correctness. (On that note, I'd actually prefer intel syntax, as that is the one actually verified by Fiat. But I remember that I couldn't get that to work either reliably with gcc / clang. Maybe that changed in recent versions though.)",
      "created_at": "2023-05-29T00:34:20Z",
      "updated_at": "2023-05-29T00:34:21Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1208716178",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1208716178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1208765862",
      "pull_request_review_id": 1448635603,
      "id": 1208765862,
      "node_id": "PRRC_kwDOAP4Jqs5IDE2m",
      "diff_hunk": "@@ -0,0 +1,367 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%rbx,-0x80(%%rsp)\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%rbp,-0x78(%%rsp)\\n\"\n+      \"mov    %%r12,-0x70(%%rsp)\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rbp,%%rcx\\n\"\n+      \"adox   %%r8,%%r12\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r8,%%rbp\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mov    %%r13,-0x68(%%rsp)\\n\"\n+      \"mov    %%r14,-0x60(%%rsp)\\n\"\n+      \"mulx   0x18(%%rsi),%%r13,%%r14\\n\"\n+      \"adcx   %%r13,%%r10\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r11,%%r13\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mov    %%r15,-0x58(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x50(%%rsp)\\n\"\n+      \"mulx   (%%rsi),%%r15,%%rdi\\n\"\n+      \"add    %%r11,%%rcx\\n\"\n+      \"adcx   %%r12,%%r13\\n\"\n+      \"add    %%r15,%%rcx\\n\"\n+      \"adcx   %%r13,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r8,%%r12,%%r11\\n\"\n+      \"add    %%rcx,%%r12\\n\"\n+      \"adcx   %%r11,%%rdi\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r15,%%r13\\n\"\n+      \"mov    %%r12,%%rdx\\n\"\n+      \"shrd   $0x34,%%rdi,%%rdx\\n\"\n+      \"xor    %%r8,%%r8\\n\"\n+      \"adox   %%r9,%%r10\\n\"\n+      \"adox   %%r14,%%rbx\\n\"\n+      \"adcx   %%r15,%%r10\\n\"\n+      \"adcx   %%rbx,%%r13\\n\"\n+      \"mov    %%rdx,%%r9\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%r14,%%rcx\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r14,%%r10\\n\"\n+      \"adox   %%r13,%%rcx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%r8,%%r11\\n\"\n+      \"adcx   %%r10,%%r9\\n\"\n+      \"adc    $0x0,%%rcx\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rdi,%%r15\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%rdi,%%r8\\n\"\n+      \"adox   %%r11,%%r15\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x18(%%rax),%%rbx,%%r13\\n\"\n+      \"movabs $0x1000003d10000,%%rdx\\n\"\n+      \"mulx   %%rbp,%%r14,%%r10\\n\"\n+      \"mov    0x8(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rbp,%%r11\\n\"\n+      \"adcx   %%r9,%%r14\\n\"\n+      \"adcx   %%r10,%%rcx\\n\"\n+      \"movabs $0xfffffffffffff,%%rdx\\n\"\n+      \"mov    %%r14,%%r9\\n\"\n+      \"and    %%rdx,%%r9\\n\"\n+      \"adox   %%rbx,%%r8\\n\"\n+      \"adox   %%r15,%%r13\\n\"\n+      \"movabs $0xffffffffffff,%%rdi\\n\"\n+      \"mov    %%r9,%%r15\\n\"\n+      \"and    %%rdi,%%r15\\n\"\n+      \"adox   %%rbp,%%r8\\n\"\n+      \"adox   %%r13,%%r11\\n\"\n+      \"shrd   $0x34,%%rcx,%%r14\\n\"\n+      \"test   %%al,%%al\\n\"\n+      \"adox   %%r8,%%r14\\n\"\n+      \"mov    $0x0,%%ebx\\n\"\n+      \"adox   %%rbx,%%r11\\n\"\n+      \"mov    %%r14,%%r10\\n\"\n+      \"and    %%rdx,%%r10\\n\"\n+      \"shl    $0x4,%%r10\\n\"\n+      \"shr    $0x30,%%r9\\n\"\n+      \"lea    (%%r10,%%r9,1),%%r10\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rcx\\n\"\n+      \"movabs $0x1000003d1,%%rdx\\n\"\n+      \"mulx   %%r10,%%r13,%%r8\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%r9,%%r10\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%rbx,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"adox   %%rdi,%%r10\\n\"\n+      \"mov    0x20(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%r9,%%rdi\\n\"\n+      \"adcx   %%r9,%%rbx\\n\"\n+      \"adcx   %%r10,%%rdi\\n\"\n+      \"shrd   $0x34,%%r11,%%r14\\n\"\n+      \"add    %%rbx,%%r14\\n\"\n+      \"adc    $0x0,%%rdi\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%r11,%%r10\\n\"\n+      \"mov    (%%rsi),%%rdx\\n\"\n+      \"mulx   0x8(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mov    %%r15,-0x48(%%rsp)\\n\"\n+      \"mov    %%rdi,-0x40(%%rsp)\\n\"\n+      \"mulx   (%%rax),%%r15,%%rdi\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%r9,%%r11\\n\"\n+      \"adox   %%r10,%%rbx\\n\"\n+      \"adcx   %%rbp,%%r13\\n\"\n+      \"adcx   %%r8,%%rcx\\n\"\n+      \"mov    -0x40(%%rsp),%%rbp\\n\"\n+      \"mov    %%r14,%%r8\\n\"\n+      \"shrd   $0x34,%%rbp,%%r8\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x8(%%rsi),%%rbp,%%r10\\n\"\n+      \"mov    %%r13,%%rdx\\n\"\n+      \"shrd   $0x34,%%rcx,%%rdx\\n\"\n+      \"xor    %%r9,%%r9\\n\"\n+      \"adox   %%r11,%%rdx\\n\"\n+      \"adox   %%r9,%%rbx\\n\"\n+      \"mov    %%rdx,%%r11\\n\"\n+      \"mov    0x18(%%rsi),%%rdx\\n\"\n+      \"mulx   0x20(%%rax),%%rcx,%%r9\\n\"\n+      \"adcx   %%rbp,%%r15\\n\"\n+      \"adcx   %%rdi,%%r10\\n\"\n+      \"mov    0x18(%%rax),%%rdx\\n\"\n+      \"mulx   0x20(%%rsi),%%rdi,%%rbp\\n\"\n+      \"xor    %%rdx,%%rdx\\n\"\n+      \"adox   %%rcx,%%rdi\\n\"\n+      \"adox   %%rbp,%%r9\\n\"\n+      \"adcx   %%rdi,%%r8\\n\"\n+      \"adc    $0x0,%%r9\\n\"\n+      \"movabs $0xfffffffffffff,%%rcx\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    0x10(%%rax),%%rdx\\n\"\n+      \"mulx   (%%rsi),%%rbp,%%rdi\\n\"\n+      \"adox   %%rbp,%%r15\\n\"\n+      \"adox   %%r10,%%rdi\\n\"\n+      \"movabs $0x1000003d10,%%rdx\\n\"\n+      \"mulx   %%r14,%%r10,%%rbp\\n\"\n+      \"adcx   %%r11,%%r10\\n\"\n+      \"adcx   %%rbp,%%rbx\\n\"\n+      \"mov    %%r10,%%r11\\n\"\n+      \"shrd   $0x34,%%rbx,%%r11\\n\"\n+      \"and    %%rcx,%%r10\\n\"\n+      \"mulx   %%r8,%%r14,%%rbp\\n\"\n+      \"movabs $0x1000003d10000,%%r8\\n\"\n+      \"mov    %%r9,%%rdx\\n\"\n+      \"mulx   %%r8,%%r9,%%rbx\\n\"\n+      \"adox   %%r15,%%r11\\n\"\n+      \"mov    $0x0,%%edx\\n\"\n+      \"adox   %%rdx,%%rdi\\n\"\n+      \"adcx   %%r11,%%r14\\n\"\n+      \"adcx   %%rbp,%%rdi\\n\"\n+      \"mov    %%r14,%%r15\\n\"\n+      \"shrd   $0x34,%%rdi,%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rbp\\n\"\n+      \"mov    %%r10,0x8(%%rbp)\\n\"\n+      \"and    %%rcx,%%r12\\n\"\n+      \"lea    (%%r12,%%r15,1),%%r12\\n\"\n+      \"adox   %%r12,%%r9\\n\"\n+      \"adox   %%rdx,%%rbx\\n\"\n+      \"and    %%rcx,%%r13\\n\"\n+      \"mov    %%r13,0x0(%%rbp)\\n\"\n+      \"and    %%rcx,%%r14\\n\"\n+      \"mov    %%r9,%%r10\\n\"\n+      \"shrd   $0x34,%%rbx,%%r10\\n\"\n+      \"mov    %%r14,0x10(%%rbp)\\n\"\n+      \"add    -0x48(%%rsp),%%r10\\n\"\n+      \"and    %%rcx,%%r9\\n\"\n+      \"mov    %%r10,0x20(%%rbp)\\n\"\n+      \"mov    %%r9,0x18(%%rbp)\\n\"\n+      \"mov    -0x80(%%rsp),%%rbx\\n\"\n+      \"mov    -0x78(%%rsp),%%rbp\\n\"\n+      \"mov    -0x70(%%rsp),%%r12\\n\"\n+      \"mov    -0x68(%%rsp),%%r13\\n\"\n+      \"mov    -0x60(%%rsp),%%r14\\n\"\n+      \"mov    -0x58(%%rsp),%%r15\\n\"\n+      \"mov    -0x50(%%rsp),%%rdi\\n\"\n+      \"mov    %%rax,%%rdx\\n\"",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 203,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "183ebfafc5995da26aab0d0a73045dae5d3e21f3",
      "in_reply_to_id": 1204998777,
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I understand. Using \r\n`\"+D\"(r), \"+d\"(b)` in the output and `\"S\"(a)`  in the input specification rather than `\"D\"(r), \"S\"(a), \"d\"(b)` in input works well.\r\n",
      "created_at": "2023-05-29T02:07:19Z",
      "updated_at": "2023-05-29T02:07:20Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1208765862",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1208765862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": 202,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1212025822",
      "pull_request_review_id": 1453725944,
      "id": 1212025822,
      "node_id": "PRRC_kwDOAP4Jqs5IPgve",
      "diff_hunk": "@@ -0,0 +1,343 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  uint64_t tmp1, tmp2, tmp3;\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 23,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "e28dd6804343b21c006d76b3d17e536d4bba6066",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is in RBP at this point?",
      "created_at": "2023-05-31T16:54:29Z",
      "updated_at": "2023-05-31T16:54:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1212025822",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1212025822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1213970814",
      "pull_request_review_id": 1456725165,
      "id": 1213970814,
      "node_id": "PRRC_kwDOAP4Jqs5IW7l-",
      "diff_hunk": "@@ -0,0 +1,343 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  uint64_t tmp1, tmp2, tmp3;\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 23,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "e28dd6804343b21c006d76b3d17e536d4bba6066",
      "in_reply_to_id": 1212025822,
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't know, will be overwritten, right? I've put rbp into the clobbers.",
      "created_at": "2023-06-02T06:22:16Z",
      "updated_at": "2023-06-02T06:22:16Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1213970814",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1213970814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1213972241",
      "pull_request_review_id": 1456727081,
      "id": 1213972241,
      "node_id": "PRRC_kwDOAP4Jqs5IW78R",
      "diff_hunk": "@@ -0,0 +1,343 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  uint64_t tmp1, tmp2, tmp3;\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 23,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "e28dd6804343b21c006d76b3d17e536d4bba6066",
      "in_reply_to_id": 1212025822,
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`rbp` and `r12` should contain `b[1] * a[2]`",
      "created_at": "2023-06-02T06:24:12Z",
      "updated_at": "2023-06-02T06:24:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1213972241",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1213972241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1226865379",
      "pull_request_review_id": 1475231480,
      "id": 1226865379,
      "node_id": "PRRC_kwDOAP4Jqs5JIHrj",
      "diff_hunk": "@@ -0,0 +1,343 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {\n+  uint64_t tmp1, tmp2, tmp3;\n+  __asm__ __volatile__(\n+      \"mov    %%rdx,%%rax\\n\"\n+      \"mov    0x20(%%rsi),%%rdx\\n\"\n+      \"mulx   (%%rax),%%r10,%%r11\\n\"\n+      \"mov    (%%rax),%%rdx\\n\"\n+      \"mulx   0x18(%%rsi),%%rcx,%%r8\\n\"\n+      \"mov    0x10(%%rsi),%%rdx\\n\"\n+      \"mulx   0x10(%%rax),%%r9,%%rbx\\n\"\n+      \"mov    0x8(%%rax),%%rdx\\n\"\n+      \"mulx   0x10(%%rsi),%%rbp,%%r12\\n\"",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 23,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "e28dd6804343b21c006d76b3d17e536d4bba6066",
      "in_reply_to_id": 1212025822,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, I see. I misunderstood the syntax, and thought `%rbp` was an input to `mulx`.",
      "created_at": "2023-06-12T15:38:44Z",
      "updated_at": "2023-06-12T15:38:45Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1226865379",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1226865379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1235938447",
      "pull_request_review_id": 1489165158,
      "id": 1235938447,
      "node_id": "PRRC_kwDOAP4Jqs5JquyP",
      "diff_hunk": "@@ -25,6 +25,22 @@ static int secp256k1_selftest_sha256(void) {\n     return secp256k1_memcmp_var(out, output32, 32) == 0;\n }\n \n+static int secp256k1_selftest_cpu_check_passes(void) {",
      "path": "src/selftest.h",
      "position": null,
      "original_position": 4,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "57980c90b4e2b730506acc86f79ba7a5c74359e2",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nstatic int secp256k1_selftest_cpuid(void) {\r\n```\r\n - `cpuid` says more\r\n - the reason `secp256k1_selftest_passes` has a \"passes\" suffix is mostly that `secp256k1_selftest` was already gone for the corresponding API function",
      "created_at": "2023-06-20T21:57:05Z",
      "updated_at": "2023-06-20T22:11:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1235938447",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1235938447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1235939896",
      "pull_request_review_id": 1489165158,
      "id": 1235939896,
      "node_id": "PRRC_kwDOAP4Jqs5JqvI4",
      "diff_hunk": "@@ -25,6 +25,22 @@ static int secp256k1_selftest_sha256(void) {\n     return secp256k1_memcmp_var(out, output32, 32) == 0;\n }\n \n+static int secp256k1_selftest_cpu_check_passes(void) {\n+  int ret = 1;\n+#if defined(USE_ASM_X86_64)\n+  __asm__ __volatile__(\"cpuid\\n\"\n+                       \"mov %%rbx, %%rax\\n\"\n+                       \"shr $19, %%rbx\\n\"\n+                       \"shr $8, %%rax\\n\"\n+                       \"and %%rbx, %%rax\\n\"\n+                       \"and $1, %%rax\\n\"\n+                       : \"=a\"(ret)\n+                       : \"a\"(7), \"c\"(0)\n+                       : \"rdx\", \"rbx\", \"cc\");",
      "path": "src/selftest.h",
      "position": null,
      "original_position": 15,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "57980c90b4e2b730506acc86f79ba7a5c74359e2",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": " - I think it would be better to reduce the asm part to just getting the CPUID value, and use normal C code to do the bit fiddling.\r\n - The bit fiddling part should explain what it checks for, i.e., ADX and BMI2.",
      "created_at": "2023-06-20T21:58:41Z",
      "updated_at": "2023-06-20T22:11:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1235939896",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1235939896"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1235945458",
      "pull_request_review_id": 1489165158,
      "id": 1235945458,
      "node_id": "PRRC_kwDOAP4Jqs5Jqwfy",
      "diff_hunk": "@@ -0,0 +1,343 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 12,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "57980c90b4e2b730506acc86f79ba7a5c74359e2",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": " - This can go on one line. (We don't have a fixed value for max length of lines, but they tend to be longer than shorter.)\r\n - I know you took the `SECP256K1_RESTRICT` from the old code, but I think it can be dropped. It's rather meaningless here. (What is the compiler supposed to optimize here?! It's just asm.) Or am I overlooking something?",
      "created_at": "2023-06-20T22:04:23Z",
      "updated_at": "2023-06-20T22:11:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1235945458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1235945458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1235947196",
      "pull_request_review_id": 1489165158,
      "id": 1235947196,
      "node_id": "PRRC_kwDOAP4Jqs5Jqw68",
      "diff_hunk": "",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": 1,
      "original_position": 1,
      "commit_id": "57980c90b4e2b730506acc86f79ba7a5c74359e2",
      "original_commit_id": "57980c90b4e2b730506acc86f79ba7a5c74359e2",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we could keep the old file name.",
      "created_at": "2023-06-20T22:07:02Z",
      "updated_at": "2023-06-20T22:11:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1235947196",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1235947196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1246609017",
      "pull_request_review_id": 1505279363,
      "id": 1246609017,
      "node_id": "PRRC_kwDOAP4Jqs5KTb55",
      "diff_hunk": "",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": 1,
      "original_position": 1,
      "commit_id": "57980c90b4e2b730506acc86f79ba7a5c74359e2",
      "original_commit_id": "57980c90b4e2b730506acc86f79ba7a5c74359e2",
      "in_reply_to_id": 1235947196,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry, I meant the entire name (including the path). No need to have a `third_party` dir. :)",
      "created_at": "2023-06-29T13:18:31Z",
      "updated_at": "2023-06-29T13:18:31Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1246609017",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1246609017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1246711142",
      "pull_request_review_id": 1505438897,
      "id": 1246711142,
      "node_id": "PRRC_kwDOAP4Jqs5KT01m",
      "diff_hunk": "@@ -0,0 +1,343 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 12,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "57980c90b4e2b730506acc86f79ba7a5c74359e2",
      "in_reply_to_id": 1235945458,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> * (What is the compiler supposed to optimize here?! It's just asm.)\r\n\r\nNow that I think about it again, I suggest leaving it in. It's there now, and whether to remove it is probably a separate discussion.\r\n\r\nBut in general, can you confirm that the code here is intended to stick to the rules laid out in `field.h`?\r\n```\r\n /* (...)\r\n * r and a may point to the same object, but neither can be equal to b. (...)\r\n */\r\nstatic void secp256k1_fe_mul(secp256k1_fe *r, const secp256k1_fe *a, const secp256k1_fe *b); \r\n``` ",
      "created_at": "2023-06-29T14:34:59Z",
      "updated_at": "2023-06-29T14:34:59Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1246711142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1246711142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1248476157",
      "pull_request_review_id": 1508206898,
      "id": 1248476157,
      "node_id": "PRRC_kwDOAP4Jqs5Kajv9",
      "diff_hunk": "@@ -0,0 +1,343 @@\n+/**\n+ * Generated by CryptOpt (https://github.com/0xADE1A1DE/CryptOpt)\n+ */\n+\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n+\n+#include \"../util.h\"\n+\n+SECP256K1_INLINE static void\n+secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a,\n+                       const uint64_t *SECP256K1_RESTRICT b) {",
      "path": "src/third_party/field_5x52_asm_impl_cryptopt.h",
      "position": null,
      "original_position": 12,
      "commit_id": "4742310ff47a61373715e01b9330604114052aff",
      "original_commit_id": "57980c90b4e2b730506acc86f79ba7a5c74359e2",
      "in_reply_to_id": 1235945458,
      "user": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Neither the Optimizer, nor the checker enforces that property. But manually checking it at the moment shows that it is the case. Maybe it's possible to check that on the fiat side. I'm tracking that in issue https://github.com/0xADE1A1DE/CryptOpt/issues/167 for the cryptopt side.",
      "created_at": "2023-07-01T04:44:02Z",
      "updated_at": "2023-07-01T04:44:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1329#discussion_r1248476157",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1248476157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1329"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    }
  ]
}