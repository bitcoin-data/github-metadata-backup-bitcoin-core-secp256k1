{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1674",
    "id": 2553170501,
    "node_id": "PR_kwDOAP4Jqs6YLkpF",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1674.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1674.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1674/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1674/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/3eef7362c45e5d4c0d4b06ec4d9af30be8642e5d",
    "number": 1674,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "build: Add SECP256K1_NO_EXPORTS option to avoid default visibility for static builds",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Yep, yet another visiblity PR :)\r\n\r\nNoticed this when building libbitcoinkernel for Linux. Core needs a way to link a static secp into a (shared or static) kernel without exporting the secp symbols.\r\n\r\nautotools defines `DLL_EXPORT` for dll builds. CMake mimics this behavior and defines `SECP256K1_DLL_EXPORT`.\r\n\r\nThis means that currently Windows builds only export their symbols for shared libraries, and all other platforms export for shared AND static.\r\n\r\nUnfortunately, there's no way to make autotools define a special variable when building for other platforms.\r\n\r\nCMake could define a variable for shared lib builds on all platforms, which the header could then use to decide whether or not to export symbols, but that would introduce a behavioral difference between the build-systems.\r\n\r\nInstead, provide an escape hatch via `SECP256K1_NO_EXPORTS` which can be used when building secp for non-Windows targets when exports are not desired (when building a static lib).",
    "labels": [
      {
        "id": 4975362431,
        "node_id": "LA_kwDOAP4Jqs8AAAABKI4Bfw",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/build",
        "name": "build",
        "description": "",
        "color": "2F66C4",
        "default": false
      },
      {
        "id": 5492448291,
        "node_id": "LA_kwDOAP4Jqs8AAAABR2AcIw",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/refactor/smell",
        "name": "refactor/smell",
        "description": "",
        "color": "FBCA04",
        "default": false
      }
    ],
    "created_at": "2025-05-29T20:31:00Z",
    "updated_at": "2025-06-05T19:15:20Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merged": false,
    "merge_commit_sha": "86f72c5804b8d6d89b1bfd9e87ae50be368a0677",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "theuni:extern-visibility",
      "ref": "extern-visibility",
      "sha": "3eef7362c45e5d4c0d4b06ec4d9af30be8642e5d",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 20003297,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMDAwMzI5Nw==",
        "name": "secp256k1",
        "full_name": "theuni/secp256k1",
        "owner": {
          "login": "theuni",
          "id": 417043,
          "node_id": "MDQ6VXNlcjQxNzA0Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/theuni",
          "html_url": "https://github.com/theuni",
          "followers_url": "https://api.github.com/users/theuni/followers",
          "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
          "organizations_url": "https://api.github.com/users/theuni/orgs",
          "repos_url": "https://api.github.com/users/theuni/repos",
          "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/theuni/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/theuni/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/theuni/secp256k1",
        "archive_url": "https://api.github.com/repos/theuni/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/theuni/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/theuni/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/theuni/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/theuni/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/theuni/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/theuni/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/theuni/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/theuni/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/theuni/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/theuni/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/theuni/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/theuni/secp256k1/events",
        "forks_url": "https://api.github.com/repos/theuni/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/theuni/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/theuni/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/theuni/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/theuni/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/theuni/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/theuni/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/theuni/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/theuni/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/theuni/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/theuni/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/theuni/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/theuni/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/theuni/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/theuni/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/theuni/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:theuni/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/theuni/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/theuni/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/theuni/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/theuni/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/theuni/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/theuni/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/theuni/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/theuni/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/theuni/secp256k1/hooks",
        "svn_url": "https://github.com/theuni/secp256k1",
        "language": "C",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 12634,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-05T17:56:10Z",
        "created_at": "2014-05-21T01:09:55Z",
        "updated_at": "2025-05-16T09:56:31Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "92394476e9b2d7ef4bb8dff7a9011c1e2e1db89f",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 1060,
        "stargazers_count": 2245,
        "watchers_count": 2245,
        "size": 12443,
        "default_branch": "master",
        "open_issues_count": 142,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-04T10:30:07Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2025-06-05T18:14:30Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1674"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 17,
    "deletions": 7,
    "changed_files": 4,
    "commits": 2,
    "review_comments": 3,
    "comments": 14
  },
  "events": [
    {
      "event": "subscribed",
      "id": 17875467629,
      "node_id": "SE_lADOAP4Jqs642-UXzwAAAAQpdf1t",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/17875467629",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T21:30:11Z"
    },
    {
      "event": "reviewed",
      "id": 2880638715,
      "node_id": "PRR_kwDOAP4Jqs6rsw77",
      "url": null,
      "actor": null,
      "commit_id": "86a6ecd1c64813d0bacdf51df5777f9865850297",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Sigh yeah.\r\n\r\nAlternatively, we could wrap the entire Windows logic in an `#ifndef SECP256K1_API`, like the non-Windows logic, giving the user an ultimate override. That's simpler. Is it better? I tend to say yes. ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#pullrequestreview-2880638715",
      "submitted_at": "2025-05-30T09:04:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1674"
    },
    {
      "event": "commented",
      "id": 2921723074,
      "node_id": "IC_kwDOAP4Jqs6uJfTC",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2921723074",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T09:09:01Z",
      "updated_at": "2025-05-30T09:09:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Okay, actually... Let me take a step back. What do we (as libsecp256k1) want for static builds in general? Or is this a question that just cannot be answered properly because it depends on the user because some users would want to reexport, some won't (e.g., kernel).\r\n \r\nBut even if the latter is true, it seems to me that the defaults should at least be consistent across platforms, no?",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2921723074",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2923102365,
      "node_id": "IC_kwDOAP4Jqs6uOwCd",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2923102365",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T18:24:07Z",
      "updated_at": "2025-05-30T18:24:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Okay, actually... Let me take a step back. What do we (as libsecp256k1) want for static builds in general? Or is this a question that just cannot be answered properly because it depends on the user because some users would want to reexport, some won't (e.g., kernel).\r\n> \r\n> But even if the latter is true, it seems to me that the defaults should at least be consistent across platforms, no?\r\n\r\nIMO static builds should always be hidden by default and shared should be exported:\r\n\r\nMy initial attempt was something like:\r\n```patch\r\ndiff --git a/include/secp256k1.h b/include/secp256k1.h\r\nindex 1d25a02a..8f718636 100644\r\n--- a/include/secp256k1.h\r\n+++ b/include/secp256k1.h\r\n@@ -129,10 +129,10 @@ typedef int (*secp256k1_nonce_function)(\r\n    * Attributes\" in the GCC manual and the recommendations in\r\n    * https://gcc.gnu.org/wiki/Visibility. */\r\n # if defined(SECP256K1_BUILD)\r\n-#  if defined(DLL_EXPORT) || defined(SECP256K1_DLL_EXPORT)\r\n+#  if defined(DLL_EXPORT) || defined(SECP256K1_EXPORT_SYMBOLS)\r\n     /* Building libsecp256k1 as a DLL.\r\n      * 1. If using Libtool, it defines DLL_EXPORT automatically.\r\n-     * 2. In other cases, SECP256K1_DLL_EXPORT must be defined. */\r\n+     * 2. In other cases, SECP256K1_EXPORT_SYMBOLS must be defined. */\r\n #   define SECP256K1_API extern __declspec (dllexport)\r\n #  else\r\n     /* Building libsecp256k1 as a static library on Windows.\r\n@@ -153,7 +153,7 @@ typedef int (*secp256k1_nonce_function)(\r\n #endif\r\n #ifndef SECP256K1_API\r\n /* All cases not captured by the Windows-specific logic. */\r\n-# if defined(__GNUC__) && (__GNUC__ >= 4) && defined(SECP256K1_BUILD)\r\n+# if defined(__GNUC__) && (__GNUC__ >= 4) && defined(SECP256K1_BUILD) && defined(SECP256K1_EXPORT_SYMBOLS)\r\n    /* Building libsecp256k1 using GCC or compatible. */\r\n #  define SECP256K1_API extern __attribute__ ((visibility (\"default\")))\r\n # else\r\ndiff --git a/src/CMakeLists.txt b/src/CMakeLists.txt\r\nindex f31b8c8f..57bb7dae 100644\r\n--- a/src/CMakeLists.txt\r\n+++ b/src/CMakeLists.txt\r\n@@ -20,11 +20,9 @@ if(SECP256K1_ASM STREQUAL \"arm32\")\r\n   target_link_libraries(secp256k1_asm INTERFACE secp256k1_asm_arm)\r\n endif()\r\n\r\n-if(WIN32)\r\n   # Define our export symbol only for shared libs.\r\n-  set_target_properties(secp256k1 PROPERTIES DEFINE_SYMBOL SECP256K1_DLL_EXPORT)\r\n+  set_target_properties(secp256k1 PROPERTIES DEFINE_SYMBOL SECP256K1_EXPORT_SYMBOLS)\r\n   target_compile_definitions(secp256k1 INTERFACE $<$<NOT:$<BOOL:${BUILD_SHARED_LIBS}>>:SECP256K1_STATIC>)\r\n-endif()\r\n\r\n # Object libs don't know if they're being built for a shared or static lib.\r\n # Grab the PIC property from secp256k1 which knows.\r\n```\r\n\r\nSadly, that would make the CMake and Autotools behaviors diverge as there's no way to get autotools to define anything for a shared build. But since Non-Windows+CMake is likely to be the most popular build config eventually (if it isn't already), maybe we could accept that divergence and provide an additional opt-out for autotools builders?\r\n\r\nIt's ideal though imo, as it does the right thing by default in all cases, and would allow `-DSECP256K1_EXPORT_SYMBOLS` to be manually specified for anyone building statically and wanting exports.\r\n\r\nAs mentioned above, I'm not sure there's any utility in allowing the opposite.. building shared and disabling exports.\r\n\r\n",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2923102365",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2923120998,
      "node_id": "IC_kwDOAP4Jqs6uO0lm",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2923120998",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T18:30:50Z",
      "updated_at": "2025-05-30T18:30:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Btw, this is only becoming an issue now because we (the kernel working group) were discussing a monolithic libbitcoinkernel.a yesterday, which would include secp: https://github.com/theuni/bitcoin/commit/4f43838247fa62b8495133b3924ebb64f08dd0ec\r\n\r\nWhile testing that, the shared version (`libbitcoinkernel.so`) is now comprised of the secp objects rather than `libsecp256k1.a`. That means that Core's trick of using `\"-Wl,--exclude-libs,ALL\"` to exclude secp's symbols no longer works, as it only applies to static libraries. With that config, we need a secp actually built with hidden symbols. Though I would argue that the fact that they're currently visible is a bug anyway.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2923120998",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2924581501,
      "node_id": "IC_kwDOAP4Jqs6uUZJ9",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2924581501",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T07:29:47Z",
      "updated_at": "2025-05-31T07:29:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "> While testing that, the shared version (`libbitcoinkernel.so`) is now comprised of the secp objects rather than `libsecp256k1.a`.\r\n\r\nIs this what you mean by monolithic? What would be the benefit of this?\r\n\r\nIt feels to me that if you consume the `.o` files directly (while I assume you have a perfectly fine reason to do this), this is a violation of libsecp interface, so I'm not sure if we should support this in general. Or, more pragmatically, this is too niche for us to support. (At least for other users, of course, our primary concern should be to support Core's use of libsecp256k1.) \r\n\r\n> Though I would argue that the fact that they're currently visible is a bug anyway.\r\n\r\nBut yes, I agree. I tend to agree that hidden is a sane default for static libs, and that reexporting should be asked for explicitly.\r\n\r\n---\r\n\r\nI tend to like your `SECP256K1_EXPORT_SYMBOLS` suggestion.\r\n\r\n> It's ideal though imo, as it does the right thing by default in all cases, and would allow -DSECP256K1_EXPORT_SYMBOLS to be manually specified for anyone building statically and wanting exports.\r\n\r\nIndeed. \r\n\r\n> Sadly, that would make the CMake and Autotools behaviors diverge as there's no way to get autotools to define anything for a shared build. But since Non-Windows+CMake is likely to be the most popular build config eventually (if it isn't already), maybe we could accept that divergence and provide an additional opt-out for autotools builders?\r\n\r\nThe question for our autotools build will be: Should it define `SECP256K1_EXPORT_SYMBOLS` or not? If we don't set it, any users who want to reexport will have a problem. (Are there any?)  If we set it, then we have a non-optimal default. But we could make it configurable. While this adds a knob, it's a simple one and it would also keep the two build systems on par.\r\n\r\n---\r\n\r\nBy the way, for anyone wondering what visibility is supposed to do anyway in a static build (because visibility is a concept that applies only to shared libs): The only way visibility influences a static lib is that the visibility information is kept in the static lib, solely for the potential case that this static library will be linked into a shared lib (and the visibility will apply there again). \r\nPlease see this excellent answer on SO: https://stackoverflow.com/a/67473340/2725281",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2924581501",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2924582611,
      "node_id": "IC_kwDOAP4Jqs6uUZbT",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2924582611",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T07:30:27Z",
      "updated_at": "2025-05-31T07:30:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "cc @hebasto ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2924582611",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "mentioned",
      "id": 17898010037,
      "node_id": "MEE_lADOAP4Jqs642-UXzwAAAAQqzfW1",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/17898010037",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T07:30:28Z"
    },
    {
      "event": "subscribed",
      "id": 17898010042,
      "node_id": "SE_lADOAP4Jqs642-UXzwAAAAQqzfW6",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/17898010042",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T07:30:29Z"
    },
    {
      "event": "labeled",
      "id": 17898010587,
      "node_id": "LE_lADOAP4Jqs642-UXzwAAAAQqzffb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/17898010587",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T07:30:41Z",
      "label": {
        "name": "build",
        "color": "2F66C4"
      }
    },
    {
      "event": "labeled",
      "id": 17898010588,
      "node_id": "LE_lADOAP4Jqs642-UXzwAAAAQqzffc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/17898010588",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T07:30:41Z",
      "label": {
        "name": "refactor/smell",
        "color": "FBCA04"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGM1ZjJiNDYxODUzZjU2MmI4NzQ2ZmI3NWEwOTFmYzQ5MzJiM2Y3ZjE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/c5f2b461853f562b8746fb75a091fc4932b3f7f1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/c5f2b461853f562b8746fb75a091fc4932b3f7f1",
      "tree": {
        "sha": "98bdacd6f7f4e7a582c7fb722cf2d3814eec5c0f",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/98bdacd6f7f4e7a582c7fb722cf2d3814eec5c0f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/92394476e9b2d7ef4bb8dff7a9011c1e2e1db89f",
          "sha": "92394476e9b2d7ef4bb8dff7a9011c1e2e1db89f",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/92394476e9b2d7ef4bb8dff7a9011c1e2e1db89f"
        }
      ],
      "message": "cmake: don't set default visibility for static builds\n\ndefine SECP256K1_CMAKE_SHARED_BUILD for all CMake shared lib builds, not just\nWindows. This allows us to only set default symbol visibility for shared lib builds.\n\nFor static libs built with CMake, or Autotools builds for Windows, static\nbuilds will prefer to hide symbols by default. Autotools does not have the\nability to set a define for non-Windows shared builds, so the best we can do\nthere is guess. SECP256K1_NO_EXPORT_SYMBOLS can be defined as an escape-hatch\nin case a non-Windows CMake builder wants default visibility.",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-06-02T19:07:27Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-06-02T17:51:40Z"
      },
      "sha": "c5f2b461853f562b8746fb75a091fc4932b3f7f1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDNlZWY3MzYyYzQ1ZTVkNGMwZDRiMDZlYzRkOWFmMzBiZTg2NDJlNWQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/3eef7362c45e5d4c0d4b06ec4d9af30be8642e5d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/3eef7362c45e5d4c0d4b06ec4d9af30be8642e5d",
      "tree": {
        "sha": "09d38d73f9cda1b99659d37a80801c2802cc55a0",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/09d38d73f9cda1b99659d37a80801c2802cc55a0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/c5f2b461853f562b8746fb75a091fc4932b3f7f1",
          "sha": "c5f2b461853f562b8746fb75a091fc4932b3f7f1",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/c5f2b461853f562b8746fb75a091fc4932b3f7f1"
        }
      ],
      "message": "Revert \"build: Drop no longer needed  `-fvisibility=hidden` compiler option\"\n\nThis reverts commit d1478763a5f400fafb42af5911db4a9460dd4a5d.\n\nHidden visiblity is still useful for builders including a static libsecp.",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-06-02T19:09:13Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-06-02T18:51:32Z"
      },
      "sha": "3eef7362c45e5d4c0d4b06ec4d9af30be8642e5d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17941395476,
      "node_id": "HRFPE_lADOAP4Jqs642-UXzwAAAAQtY_gU",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/17941395476",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3eef7362c45e5d4c0d4b06ec4d9af30be8642e5d",
      "commit_url": "https://api.github.com/repos/theuni/secp256k1/commits/3eef7362c45e5d4c0d4b06ec4d9af30be8642e5d",
      "created_at": "2025-06-02T19:19:51Z"
    },
    {
      "event": "commented",
      "id": 2932117632,
      "node_id": "IC_kwDOAP4Jqs6uxJCA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2932117632",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-02T19:19:53Z",
      "updated_at": "2025-06-02T19:19:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > While testing that, the shared version (`libbitcoinkernel.so`) is now comprised of the secp objects rather than `libsecp256k1.a`.\r\n> \r\n> Is this what you mean by monolithic? What would be the benefit of this?\r\n> \r\n> It feels to me that if you consume the `.o` files directly (while I assume you have a perfectly fine reason to do this), this is a violation of libsecp interface, so I'm not sure if we should support this in general. Or, more pragmatically, this is too niche for us to support. (At least for other users, of course, our primary concern should be to support Core's use of libsecp256k1.)\r\n\r\nSee the commit linked above. This came out of a discussion about having a self-contained `libbitcoinkernel.a` which requires no other dependencies. As things stand right now, when you build a static kernel in Core and try to use it (for a new binary or shared lib), you have to link in the other static libs as well at that time. Sadly, CMake won't \"link\" (combine) one static lib into another, it simply notes the dependency. For our internal libs (crypto, leveldb, etc.) that's easily solvable by linking them in as objects instead. \r\n\r\nThe only solution that seems to work is to do the same with secp: linking in its objects. I agree this is a violation of the interface as Core shouldn't have to know anything about secp's internals. Ideally there would be a convenience library to handle this, something like `secp256k1_objects`. I've pushed a demo commit for that here: https://github.com/theuni/secp256k1/commit/8bb10fe04908041a104a66d8ceab2dd97395e314 . That lets Core's kernel lib link against secp's objects without having to know anything about them. What do you think about PRing that here?\r\n\r\n> \r\n> > Though I would argue that the fact that they're currently visible is a bug anyway.\r\n> \r\n> But yes, I agree. I tend to agree that hidden is a sane default for static libs, and that reexporting should be asked for explicitly.\r\n> \r\n> I tend to like your `SECP256K1_EXPORT_SYMBOLS` suggestion.\r\n> \r\n> > It's ideal though imo, as it does the right thing by default in all cases, and would allow -DSECP256K1_EXPORT_SYMBOLS to be manually specified for anyone building statically and wanting exports.\r\n> \r\n> Indeed.\r\n> \r\n> > Sadly, that would make the CMake and Autotools behaviors diverge as there's no way to get autotools to define anything for a shared build. But since Non-Windows+CMake is likely to be the most popular build config eventually (if it isn't already), maybe we could accept that divergence and provide an additional opt-out for autotools builders?\r\n> \r\n> The question for our autotools build will be: Should it define `SECP256K1_EXPORT_SYMBOLS` or not? If we don't set it, any users who want to reexport will have a problem. (Are there any?) If we set it, then we have a non-optimal default. But we could make it configurable. While this adds a knob, it's a simple one and it would also keep the two build systems on par.\r\n> \r\n\r\nI've pushed a revised version of this. It guesses that non-Windows Autotools builders always want default visibility, and provides an opt-out to override.\r\n\r\n`SECP256K1_EXPORT_SYMBOLS` was becoming overloaded, so I changed the defines to describe the actual conditions instead: `SECP256K1_CMAKE_SHARED_BUILD`, `SECP256K1_AUTOTOOLS_BUILD`, and `SECP256K1_NO_EXPORT_SYMBOLS` (the opt-out for both). `SECP256K1_DLL_EXPORT` is retained.\r\n\r\n> By the way, for anyone wondering what visibility is supposed to do anyway in a static build (because visibility is a concept that applies only to shared libs): The only way visibility influences a static lib is that the visibility information is kept in the static lib, solely for the potential case that this static library will be linked into a shared lib (and the visibility will apply there again). Please see this excellent answer on SO: https://stackoverflow.com/a/67473340/2725281\r\n\r\nYes, exactly, thanks for the link :)\r\n\r\nAdditionally, d1478763a5f400fafb42af5911db4a9460dd4a5d is reverted here as that's needed to actually do the hiding.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2932117632",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2934779631,
      "node_id": "IC_kwDOAP4Jqs6u7S7v",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2934779631",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T11:24:15Z",
      "updated_at": "2025-06-03T11:25:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Additionally, [d147876](https://github.com/bitcoin-core/secp256k1/commit/d1478763a5f400fafb42af5911db4a9460dd4a5d) is reverted here as that's needed to actually do the hiding.\r\n\r\nWait. This is the story on non-Windows:\r\n1. So first we had `-fvisibility=hidden` to set gcc's default to \"hidden\" together with `__attribute__ ((visibility (\"default\")))` to override it for our API exports.\r\n2. Then https://github.com/bitcoin-core/secp256k1/pull/1359/commits/88548058b3e88f7f1ce7c1abbe12da8105a858cc got rid of the `-fvisibility=hidden` default by adding  `__attribute__ ((visibility (\"hidden\")))` to all non-static definitions that should not be exported. \r\n\r\nBut this means we also won't need to set `__attribute__ ((visibility (\"default\")))` anywhere. This makes it much simpler... See #1677.\r\n\r\n<details>\r\n<summary>For posterity, it is possible to check whether a shared library is built by libtool.</summary>\r\n This is an earlier attempt of mine:\r\n\r\n```c\r\n# if defined(__GNUC__) && (__GNUC__ >= 4) && defined(SECP256K1_BUILD)\r\n   /* Building libsecp256k1 using GCC or compatible.\r\n    *\r\n    * We would like to set default visibility if building a shared library and\r\n    * hidden visibility if building a static library.\r\n    * 1. Libtool has a builtin -DPIC (and -fPIC on targets that support it).\r\n    * 2. Our CMake build defines SECP256K1_SHARED_BUILD automatically.\r\n    * 3. In all other cases, we guess based on __PIC__, which is (always defined\r\n    *    and) greater than 0 if -fpic or -fPIC is used. */\r\n#  if defined(PIC) || defined(SECP256K1_EXPORT_SYMBOLS) || (defined(__PIC__) && __PIC__ > 0)\r\n#   define SECP256K1_API extern __attribute__ ((visibility (\"default\")))\r\n#  elif defined(SECP256K1_NO_EXPORT_SYMBOLS)\r\n#   define SECP256K1_API extern __attribute__ ((visibility (\"hidden\")))\r\n#  endif\r\n# endif\r\n```\r\n\r\n</details>",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2934779631",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2934819801,
      "node_id": "IC_kwDOAP4Jqs6u7cvZ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2934819801",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T11:34:20Z",
      "updated_at": "2025-06-03T11:34:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The only solution that seems to work is to do the same with secp: linking in its objects. I agree this is a violation of the interface as Core shouldn't have to know anything about secp's internals. Ideally there would be a convenience library to handle this, something like `secp256k1_objects`. I've pushed a demo commit for that here: [theuni@8bb10fe](https://github.com/theuni/secp256k1/commit/8bb10fe04908041a104a66d8ceab2dd97395e314) . That lets Core's kernel lib link against secp's objects without having to know anything about them. What do you think about PRing that here?\r\n\r\nYeah, why not. If Core needs this somewhere, then it's easier to maintain it here.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2934819801",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2936139702,
      "node_id": "IC_kwDOAP4Jqs6vAe-2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2936139702",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T16:07:02Z",
      "updated_at": "2025-06-03T16:07:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Additionally, [d147876](https://github.com/bitcoin-core/secp256k1/commit/d1478763a5f400fafb42af5911db4a9460dd4a5d) is reverted here as that's needed to actually do the hiding.\r\n> \r\n> Wait. This is the story on non-Windows:\r\n> \r\n>     1. So first we had `-fvisibility=hidden` to set gcc's default to \"hidden\" together with `__attribute__ ((visibility (\"default\")))` to override it for our API exports.\r\n> \r\n>     2. Then [8854805](https://github.com/bitcoin-core/secp256k1/commit/88548058b3e88f7f1ce7c1abbe12da8105a858cc) got rid of the `-fvisibility=hidden` default by adding  `__attribute__ ((visibility (\"hidden\")))` to all non-static definitions that should not be exported.\r\n> \r\n> \r\n> But this means we also won't need to set `__attribute__ ((visibility (\"default\")))` anywhere. This makes it much simpler... See #1677.\r\n\r\nYep, I agree with everything here. As I mentioned in #1677, this would generally do the right thing, but it would _break_ builds for shared lib builders who compile with `-fvisibility=hidden`. Though that's unnecessary for secp, it's pretty common :(",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2936139702",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2936195434,
      "node_id": "IC_kwDOAP4Jqs6vAslq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2936195434",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T16:20:38Z",
      "updated_at": "2025-06-03T16:20:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "> For posterity, it is possible to check whether a shared library is built by libtool.\r\nThis is an earlier attempt of mine: \r\n\r\nUnfortunately, PIC isn't reliable for detecting shared libs either :(\r\n\r\nSee Core's autoconf depends builds for example: https://github.com/bitcoin/bitcoin/blob/master/depends/funcs.mk#L187\r\n\r\nEven when building static libs, we need to compile PIC as the objects will eventually be used in PIE binaries.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2936195434",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2936729077,
      "node_id": "IC_kwDOAP4Jqs6vCu31",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2936729077",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T18:49:45Z",
      "updated_at": "2025-06-03T18:49:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Unfortunately, PIC isn't reliable for detecting shared libs either :(\r\n\r\nGood point. Though I still think that `defined(PIC)`, which seems to be a separate libtool (legacy?) thing, would make it possible to detect libtool shared builds. Note that this is just `-DPIC` on the command line, and entirely separate from `__PIC__` which represents the `-fPIC` flag.\r\n\r\n  I agree that checking `__PIC__` is just a bad heuristic. You wouldn't only get false positives as in the example mention,  but possibly also false negative. On some platforms, you can have shared libs without PIC. So if you can't resist the temptation to guess based on `__PIC__`, you'll need a two-sided manual override in addition to it...\r\n\r\nAnyway, let's just avoid the need to detect shared builds. ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2936729077",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2938943049,
      "node_id": "IC_kwDOAP4Jqs6vLLZJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2938943049",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T07:35:23Z",
      "updated_at": "2025-06-04T07:35:45Z",
      "author_association": "MEMBER",
      "body": "> The only solution that seems to work is to do the same with secp: linking in its objects. I agree this is a violation of the interface as Core shouldn't have to know anything about secp's internals. Ideally there would be a convenience library to handle this, something like `secp256k1_objects`.\r\n\r\nCMake’s `OBJECT` library is a drop-in replacement for Libtool’s \"convenience\" library, isn’t it? Neither is intended for installation, nor can either be regarded as part of a package’s public interface.\r\n\r\nBoth also work well when a parent project integrates a subproject at the build system level.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2938943049",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2944963429,
      "node_id": "IC_kwDOAP4Jqs6viJNl",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2944963429",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T15:19:15Z",
      "updated_at": "2025-06-05T15:19:15Z",
      "author_association": "MEMBER",
      "body": "I haven't tested it, but this seems like a plausible approach: `set(CMAKE_C_VISIBILITY_PRESET hidden)` in the parent project that consumes the static library, and make no changes in this repo?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2944963429",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    },
    {
      "event": "commented",
      "id": 2945790067,
      "node_id": "IC_kwDOAP4Jqs6vlTBz",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2945790067",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T19:15:19Z",
      "updated_at": "2025-06-05T19:15:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I haven't tested it, but this seems like a plausible approach: `set(CMAKE_C_VISIBILITY_PRESET hidden)` in the parent project that consumes the static library, and make no changes in this repo?\r\n\r\nI doubt that will work. If you set `set(CMAKE_C_VISIBILITY_PRESET hidden)`, then you'll get `-fvisibility=hidden` on the command line. But if we don't change the library here, the API symbols will have an `__attribute__((visbility(\"default\"))` which overrides the `-fvisibility=hidden`.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#issuecomment-2945790067",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1674"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2115446912",
      "pull_request_review_id": 2880638715,
      "id": 2115446912,
      "node_id": "PRRC_kwDOAP4Jqs5-FyiA",
      "diff_hunk": "@@ -132,7 +132,7 @@ typedef int (*secp256k1_nonce_function)(\n #  if defined(DLL_EXPORT) || defined(SECP256K1_DLL_EXPORT)\n     /* Building libsecp256k1 as a DLL.\n      * 1. If using Libtool, it defines DLL_EXPORT automatically.\n-     * 2. In other cases, SECP256K1_DLL_EXPORT must be defined. */\n+     * 2. If using CMake, it defines SECP256K1_DLL_EXPORT automatically. */",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 5,
      "commit_id": "3eef7362c45e5d4c0d4b06ec4d9af30be8642e5d",
      "original_commit_id": "86a6ecd1c64813d0bacdf51df5777f9865850297",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think what I had in mind here is rather this (and I agree this isn't clear from the comment):\r\n```\r\n     * 1. Libtool has a built-in -DDLL_EXPORT for all builds of DLLs.\r\n     * 2. Non-libtool builds should define SECP256K1_DLL_EXPORT. */\r\n```\r\n(... as we do in CMakeLists.txt)",
      "created_at": "2025-05-30T08:57:09Z",
      "updated_at": "2025-05-30T09:04:41Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#discussion_r2115446912",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2115446912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1674"
        }
      },
      "start_line": null,
      "original_start_line": 134,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2115451354",
      "pull_request_review_id": 2880638715,
      "id": 2115451354,
      "node_id": "PRRC_kwDOAP4Jqs5-Fzna",
      "diff_hunk": "@@ -153,7 +153,7 @@ typedef int (*secp256k1_nonce_function)(\n #endif\n #ifndef SECP256K1_API\n /* All cases not captured by the Windows-specific logic. */\n-# if defined(__GNUC__) && (__GNUC__ >= 4) && defined(SECP256K1_BUILD)\n+# if defined(__GNUC__) && (__GNUC__ >= 4) && defined(SECP256K1_BUILD) && !defined(SECP256K1_NO_EXPORTS)",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 14,
      "commit_id": "3eef7362c45e5d4c0d4b06ec4d9af30be8642e5d",
      "original_commit_id": "86a6ecd1c64813d0bacdf51df5777f9865850297",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think `&& !defined(SECP256K1_NO_EXPORTS)` should also be added to line 131 for Windows. (If you set this for whatever reason, you probably expect it to work also on Windows.) \r\n\r\nnit: `SECP256K1_NO_EXPORT` is a slightly better name because it matches  `(SECP256K1)_DLL_EXPORT`.",
      "created_at": "2025-05-30T08:58:58Z",
      "updated_at": "2025-05-30T09:04:41Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#discussion_r2115451354",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2115451354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1674"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2116365980",
      "pull_request_review_id": 2882062351,
      "id": 2116365980,
      "node_id": "PRRC_kwDOAP4Jqs5-JS6c",
      "diff_hunk": "@@ -153,7 +153,7 @@ typedef int (*secp256k1_nonce_function)(\n #endif\n #ifndef SECP256K1_API\n /* All cases not captured by the Windows-specific logic. */\n-# if defined(__GNUC__) && (__GNUC__ >= 4) && defined(SECP256K1_BUILD)\n+# if defined(__GNUC__) && (__GNUC__ >= 4) && defined(SECP256K1_BUILD) && !defined(SECP256K1_NO_EXPORTS)",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 14,
      "commit_id": "3eef7362c45e5d4c0d4b06ec4d9af30be8642e5d",
      "original_commit_id": "86a6ecd1c64813d0bacdf51df5777f9865850297",
      "in_reply_to_id": 2115451354,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I added that to begin with but removed it because we can only reach this when building a Windows DLL, and it doesn't make sense to do so without exporting.\r\n\r\nI can add it back for symmetry if you'd like, but I'm not sure there's any actual use for it?",
      "created_at": "2025-05-30T18:08:42Z",
      "updated_at": "2025-05-30T18:08:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1674#discussion_r2116365980",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2116365980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1674"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 156,
      "side": "RIGHT"
    }
  ]
}