{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518",
    "id": 1826054084,
    "node_id": "PR_kwDOAP4Jqs5s11_E",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1518.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1518.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1518",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1518/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
    "number": 1518,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Add secp256k1_pubkey_sort",
    "user": {
      "login": "jonasnick",
      "id": 2582071,
      "node_id": "MDQ6VXNlcjI1ODIwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasnick",
      "html_url": "https://github.com/jonasnick",
      "followers_url": "https://api.github.com/users/jonasnick/followers",
      "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasnick/orgs",
      "repos_url": "https://api.github.com/users/jonasnick/repos",
      "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasnick/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR adds a  `secp256k1_pubkey_sort` function the the public API which was originally part of the musig PR (#1479). However, I opened a separate PR because it adds internal functions that are also used by the WIP silent payments module. ",
    "labels": [
      {
        "id": 4975353639,
        "node_id": "LA_kwDOAP4Jqs8AAAABKI3fJw",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/feature",
        "name": "feature",
        "description": "",
        "color": "731E95",
        "default": false
      }
    ],
    "created_at": "2024-04-16T19:29:04Z",
    "updated_at": "2024-05-06T15:37:04Z",
    "closed_at": "2024-05-06T15:18:34Z",
    "mergeable_state": "unknown",
    "merged_at": "2024-05-06T15:18:34Z",
    "merge_commit_sha": "bb528cfb08761fde75c68751de7ded747ed51e84",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jonasnick:pubkey-sort",
      "ref": "pubkey-sort",
      "sha": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 57937974,
        "node_id": "MDEwOlJlcG9zaXRvcnk1NzkzNzk3NA==",
        "name": "secp256k1",
        "full_name": "jonasnick/secp256k1",
        "owner": {
          "login": "jonasnick",
          "id": 2582071,
          "node_id": "MDQ6VXNlcjI1ODIwNzE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasnick",
          "html_url": "https://github.com/jonasnick",
          "followers_url": "https://api.github.com/users/jonasnick/followers",
          "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasnick/orgs",
          "repos_url": "https://api.github.com/users/jonasnick/repos",
          "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasnick/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasnick/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/jonasnick/secp256k1",
        "archive_url": "https://api.github.com/repos/jonasnick/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasnick/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasnick/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasnick/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasnick/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasnick/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasnick/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasnick/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasnick/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/jonasnick/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/jonasnick/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/jonasnick/secp256k1/events",
        "forks_url": "https://api.github.com/repos/jonasnick/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/jonasnick/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasnick/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasnick/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasnick/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasnick/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasnick/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasnick/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/jonasnick/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/jonasnick/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasnick/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasnick/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasnick/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasnick/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/jonasnick/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasnick/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasnick/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasnick/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/jonasnick/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/jonasnick/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/jonasnick/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasnick/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/jonasnick/secp256k1/hooks",
        "svn_url": "https://github.com/jonasnick/secp256k1",
        "language": "C",
        "forks_count": 4,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 12539,
        "default_branch": "master",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-04-25T20:23:53Z",
        "created_at": "2016-05-03T03:14:21Z",
        "updated_at": "2023-03-16T11:44:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "da515074e3ebc8abc85a4fff3a31d7694ecf897b",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 962,
        "stargazers_count": 1968,
        "watchers_count": 1968,
        "size": 10880,
        "default_branch": "master",
        "open_issues_count": 136,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-06T15:59:45Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2024-05-06T15:18:38Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 437,
    "deletions": 0,
    "changed_files": 7,
    "commits": 1,
    "review_comments": 38,
    "comments": 8
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-16T19:30:06Z",
      "updated_at": "2024-04-16T19:30:06Z",
      "source": {
        "issue": {
          "id": 2068828241,
          "node_id": "PR_kwDOAP4Jqs5jZAdS",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1479",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1479/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1479/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1479/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1479",
          "number": 1479,
          "state": "open",
          "state_reason": null,
          "title": "Add module \"musig\" that implements MuSig2 multi-signatures (BIP 327)",
          "body": "EDIT: based on #1518. Closes #1452. Most of the code is a copy from [libsecp256k1-zkp](https://github.com/BlockstreamResearch/secp256k1-zkp). The API added in this PR is identical with the exception of two modifications:\r\n\r\n1. I removed the unused `scratch_space` argument from `secp256k1_musig_pubkey_agg`. This argument was intended to allow using `ecmult_multi` algorithms for key aggregation in the future. But at this point it's unclear whether the `scratch_space` object will remain in its current form (see #1302).\r\n2. Support for adaptor signatures was removed and therefore the `adaptor` argument of `musig_nonce_process` was also removed.\r\n\r\nIn contrast to the module in libsecp256k1-zkp, the module is non-experimental. I slightly cleaned up parts of the module, adjusted the code to the new definition of the VERIFY_CHECK macro and applied some simplifications that were possible because the module is now in the upstream repo (`ge_from_bytes`, `ge_to_bytes`). You can follow the changes I made to the libsecp256k1-zkp module at https://github.com/jonasnick/secp256k1-zkp/commits/musig2-upstream/.\r\n",
          "user": {
            "login": "jonasnick",
            "id": 2582071,
            "node_id": "MDQ6VXNlcjI1ODIwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasnick",
            "html_url": "https://github.com/jonasnick",
            "followers_url": "https://api.github.com/users/jonasnick/followers",
            "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasnick/orgs",
            "repos_url": "https://api.github.com/users/jonasnick/repos",
            "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasnick/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 4975353639,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI3fJw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/feature",
              "name": "feature",
              "description": "",
              "color": "731E95",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1479",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1479",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1479.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1479.patch"
          },
          "created_at": "2024-01-06T20:40:28Z",
          "updated_at": "2024-04-16T19:32:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 2060078960,
      "node_id": "IC_kwDOAP4Jqs56yk9w",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2060078960",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-16T23:43:51Z",
      "updated_at": "2024-04-16T23:43:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. This is useful independently of MuSig and Silent Payments. Also for users with no standard library, e.g., on hardware wallets.\r\n\r\ncc @roconnor-blockstream who wrote most of this code\r\n\r\n---\r\n\r\nJust out of curiosity, I checked what glibc actually does. They have Quicksort, Insertionsort, Mergesort, and Heapsort in their code base. [If malloc fails, they'll always fall back to Heapsort.](https://github.com/bminor/glibc/blob/14e56bd4ce15ac2d1cc43f762eb2e6b83fec1afe/stdlib/qsort.c#L361-L368) I think they had been using Quicksort and Mergesort for decades (perhaps selected depending on the platform?), but they changed their mind quite often lately, and this was indeed related to degenerate and adversarially constructed inputs: \r\n -  Oct 2023: They added Heapsort and used it to implement Introsort. Introsort is basically Quicksort two fallbacks: 1) a fallback on some O(n log n) sorting algorithm in degenerate cases, and 2) a fallback on Insertion sort for small arrays (https://github.com/bminor/glibc/commit/274a46c9b25ab733a1fb9fb1497f1beecae30193). They had also removed Mergesort, making Introsort the algorithm used everywhere. (https://github.com/bminor/glibc/commit/03bf8357e8291857a435afcc3048e0b697b6cc04)\r\n -  Nov 2023: The logic for the fallback to Heapsort was tightened, and a test with a degerate array. (https://github.com/bminor/glibc/commit/64e4acf24da15c11cb83f933947df3b2e8a700cd: \"To avoid a denial-of-service condition with adversarial input, it is necessary to fall over to heapsort if tail-recursing deeply, too [...]\")\r\n - Jan 2024: They reverted to Mergesort because it turns out that people rely on the sorting being stable, even though this is not guaranteed by the standard, and even though their Heapsort fallback won't guarantee it anyway. (https://github.com/bminor/glibc/commit/709fbd3ec3595f2d1076b4fec09a739327459288)\r\n\r\nThis means that the current libc is probably fine. But old versions may be problematic, and other implementations of the standard library may also be problematic. If anything, all of this confirms that Heapsort is a good choice, and that we should not rely on the standard library here.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#issuecomment-2060078960",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1518"
    },
    {
      "event": "mentioned",
      "id": 12498256248,
      "node_id": "MEE_lADOAP4Jqs6F6qfPzwAAAALo9EF4",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12498256248",
      "actor": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-16T23:43:53Z"
    },
    {
      "event": "subscribed",
      "id": 12498256257,
      "node_id": "SE_lADOAP4Jqs6F6qfPzwAAAALo9EGB",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12498256257",
      "actor": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-16T23:43:53Z"
    },
    {
      "event": "labeled",
      "id": 12498261028,
      "node_id": "LE_lADOAP4Jqs6F6qfPzwAAAALo9FQk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12498261028",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-16T23:44:25Z",
      "label": {
        "name": "feature",
        "color": "731E95"
      }
    },
    {
      "event": "reviewed",
      "id": 2004756608,
      "node_id": "PRR_kwDOAP4Jqs53fiiA",
      "url": null,
      "actor": null,
      "commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2004756608",
      "submitted_at": "2024-04-16T23:48:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "reviewed",
      "id": 2005797434,
      "node_id": "PRR_kwDOAP4Jqs53jgo6",
      "url": null,
      "actor": null,
      "commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. This is particularly useful for the silent payments module in that we are able to hide a lot of complexity from the caller. In addition, I agree with Tim's assessment that this is a generally useful thing to have (not specific to Musig2/Silent payments).\r\n\r\nLeft a small nit regarding documentation but overall I found this pretty easy to work with as implemented when creating a custom `cmp` for silent payments.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2005797434",
      "submitted_at": "2024-04-17T11:34:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "reviewed",
      "id": 2006486591,
      "node_id": "PRR_kwDOAP4Jqs53mI4_",
      "url": null,
      "actor": null,
      "commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2006486591",
      "submitted_at": "2024-04-17T16:13:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "renamed",
      "id": 12511852697,
      "node_id": "RTE_lADOAP4Jqs6F6qfPzwAAAALpw7iZ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12511852697",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-17T17:36:02Z",
      "rename": {
        "from": "extrakeys: add secp256k1_pubkey_sort",
        "to": "Add secp256k1_pubkey_sort"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12511940468,
      "node_id": "HRFPE_lADOAP4Jqs6F6qfPzwAAAALpxQ90",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12511940468",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-17T17:43:52Z"
    },
    {
      "event": "reviewed",
      "id": 2006839168,
      "node_id": "PRR_kwDOAP4Jqs53ne-A",
      "url": null,
      "actor": null,
      "commit_id": "137ed38a10e720f4a4b111e9dae1b8fba9402702",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2006839168",
      "submitted_at": "2024-04-17T18:24:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12512615538,
      "node_id": "HRFPE_lADOAP4Jqs6F6qfPzwAAAALpz1xy",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12512615538",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-17T18:43:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12512623318,
      "node_id": "HRFPE_lADOAP4Jqs6F6qfPzwAAAALpz3rW",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12512623318",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-17T18:44:10Z"
    },
    {
      "event": "reviewed",
      "id": 2007458413,
      "node_id": "PRR_kwDOAP4Jqs53p2Jt",
      "url": null,
      "actor": null,
      "commit_id": "4520d7527c8831e657ef0e5e8711aefe0a0f82bb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2007458413",
      "submitted_at": "2024-04-17T22:45:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "reviewed",
      "id": 2008720121,
      "node_id": "PRR_kwDOAP4Jqs53uqL5",
      "url": null,
      "actor": null,
      "commit_id": "4520d7527c8831e657ef0e5e8711aefe0a0f82bb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2008720121",
      "submitted_at": "2024-04-18T12:14:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "commented",
      "id": 2064343757,
      "node_id": "IC_kwDOAP4Jqs57C2LN",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2064343757",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-18T15:55:38Z",
      "updated_at": "2024-04-18T16:02:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "A wild idea:\nWhat if we used something simple(like shellsort or even bubblesort) that is very easy to verify, and has good performance in the best case (when it's already sorted) and then we recommend users that use huge list of pub keys to sort them before passing them in with the stdlib sort function of the platform their using.\n\nNeeding to reimplement and maintaining highly efficient in place sorting every time is very sad\n\nAbout it being useful, I'll say that embedded rust still gives you sorting via libcore, and I think every embedded C toolkit has some sort of sorting utility, but I might be wrong on this",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#issuecomment-2064343757",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1518"
    },
    {
      "event": "commented",
      "id": 2066066367,
      "node_id": "IC_kwDOAP4Jqs57Jau_",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2066066367",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-19T08:14:48Z",
      "updated_at": "2024-04-19T08:14:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "> A wild idea: What if we used something simple(like shellsort or even bubblesort) that is very easy to verify, and has good performance in the best case (when it's already sorted) and then we recommend users that use huge list of pub keys to sort them before passing them in with the stdlib sort function of the platform their using.\r\n\r\nHm, I think this gives us the worst of both worlds in the end:\r\n - We have to maintain the implementation of sorting algorithm.\r\n - We still tell users to rely on the stdlib.\r\n\r\nAlso, I doubt that Shellsort or Bubblesort are much easier to implement than Heapsort. (And look at the nature of the bug I found: The swap was wrong, not the Heapsort itself. And you'll need a swap for every algorithm.)\r\n\r\n> \r\n> Needing to reimplement and maintaining highly efficient in place sorting every time is very sad\r\n\r\nYeah, but that's because C is sad (sometimes).",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#issuecomment-2066066367",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1518"
    },
    {
      "event": "commented",
      "id": 2066425008,
      "node_id": "IC_kwDOAP4Jqs57KySw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2066425008",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-19T12:01:23Z",
      "updated_at": "2024-04-19T12:01:23Z",
      "author_association": "MEMBER",
      "body": "I'll echo @real-or-random 's point and add:\r\n\r\n> and then we recommend users that use huge list of pub keys to sort them before passing them in with the stdlib sort function of the platform their using.\r\n\r\nI think this is fine if the sorting step is a convenience, but in the case of the silent payments module sorting is a required step for generating the outputs correctly. For this, I think it's far better to have sorting handled inside the module vs requiring the user to sort before passing the public keys. Doing the sorting for the users eliminates a difficult to catch error and we'd need to sort anyways to be able to detect and alert the user that they did not sort (or sorted incorrectly).",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#issuecomment-2066425008",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1518"
    },
    {
      "event": "mentioned",
      "id": 12537676242,
      "node_id": "MEE_lADOAP4Jqs6F6qfPzwAAAALrTcHS",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12537676242",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-19T12:01:24Z"
    },
    {
      "event": "subscribed",
      "id": 12537676266,
      "node_id": "SE_lADOAP4Jqs6F6qfPzwAAAALrTcHq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12537676266",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-19T12:01:24Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-19T14:21:15Z",
      "updated_at": "2024-04-19T14:21:15Z",
      "source": {
        "issue": {
          "id": 2253145172,
          "node_id": "PR_kwDOAP4Jqs5tLkKm",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1519",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1519/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1519/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1519/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1519",
          "number": 1519,
          "state": "open",
          "state_reason": null,
          "title": "Add BIP352 `silentpayments` module",
          "body": "Depends on https://github.com/bitcoin-core/secp256k1/pull/1518\r\n\r\n---\r\n\r\nThis PR adds a new Silent Payments ([BIP352](https://github.com/bitcoin/bips/pull/1458)) module to secp256k1. It is a continuation of the work started in https://github.com/bitcoin-core/secp256k1/pull/1471.\r\n\r\nThe module implements the full protocol, except for transaction input filtering and silent payment address encoding / decoding as those will be the responsibility of the wallet software. It is organized with functions for sending (prefixed with `_sender`) and receiving (prefixed by `_recipient`).\r\n\r\n#### For sending\r\n\r\n1. Collect private keys into two lists: `taproot_seckeys` and `plain_seckeys`\r\n    Two lists are used since the `taproot_seckeys` may need negation. `taproot_seckeys` are passed as keypairs to avoid the function needing to compute the public key to determine parity. `plain_seckeys` are passed as just secret keys\r\n2. Create the `_silentpayment_recipient` objects\r\n    These structs hold the scan and spend public key and an index for remembering the original ordering. It is expected that a caller will start with a list of silent payment addresses (with the desired amounts), convert these into an array of `recipients` and then match the generated outputs back to the original silent payment addresses. The index is used to return the generated outputs in the original order\r\n3. Call `silentpayments_sender_create_outputs` to generate the xonly public keys for the recipients\r\n    This function can be called with one or more recipients. The same recipient may be repeated to generate multiple outputs for the same recipient\r\n    \r\n#### For scanning\r\n\r\n1. Collect the public keys into two lists `taproot_pubkeys` and `plain_pubeys`\r\n    This avoids the caller needing to convert taproot public keys into compressed public keys (and vice versa)\r\n2. Compute the input data needed, i.e. sum the public keys and compute the `input_hash`\r\n    This is done as a separate step to allow the caller to reuse this output if scanning for multiple scan keys. It also allows a caller to use this function for aggregating the transaction inputs and storing them in an index to vend to light clients later (or for faster rescans when recovering a wallet)\r\n4. Call `silentpayments_recipient_scan_outputs` to scan the transaction outputs and return the tweak data (and optionally label information) needed for spending later\r\n\r\nIn addition, a few utility functions for labels are provided for the recipient for creating a label tweak and tweaked spend public key for their address. Finally, two functions are exposed in the API for supporting light clients, `_recipient_created_shared_secret` and `_recipient_create_output_pubkey`. These functions enable incremental scanning for scenarios where the caller does not have access to the transaction outputs:\r\n\r\n1. Calculating a shared secret\r\n    This is done as a separate step to allow the caller to reuse the shared secret result when creating outputs and avoid needing to do a costly ECDH every time they need to check for an additional output\r\n3. Generate an output (with `k = 0`)\r\n5. Check if the output exists in the UTXO set (using their preferred light client protocol)\r\n6. If the output exists, proceed by generating a new output from the shared secret with `k++`\r\n\r\nSee `examples/silentpayments.c` for a demonstration of how the API is expected to be used.\r\n\r\n### Note for reviewers\r\n\r\nMy immediate goal is to get feedback on the API so that I can pull this module into https://github.com/bitcoin/bitcoin/pull/28122 (silent payments in the bitcoin core wallet). That unblocks from finishing the bitcoin core PRs while work continues on this module.\r\n\r\n#### Notable differences between this PR and the previous version\r\n\r\nSee https://github.com/bitcoin-core/secp256k1/issues/1427 and https://github.com/bitcoin-core/secp256k1/pull/1471 for discussions on the API design. This iteration of the module attempts to be much more high level and incorporate the feedback from #1471. I also added a `secp256k1_silentpayments_public_data` opaque data type, which contains the summed public key and the input_hash. My motivation here was:\r\n\r\n1. I caught myself mixing up the order of arguments between `A_sum` and `recipient_spend_key`, which was impossible to catch with `ARG_CHECKS` and would result in the scanning process finishing without errors, but not finding any outputs\r\n2. Combining public key and input_hash into the same data type allows for completely hiding `input_hash` from the caller, which makes for an overall simpler API IMO\r\n\r\nI also removed the need for the recipient to generate a shared secret before using the `secp256k1_silentpayments_recipient_scan_outputs` function and instead create the shared secret inside the function.\r\n\r\n### Outstanding work\r\n\r\n- [ ] clean up the testing code\r\n- [ ] improve test coverage (currently only using the BIP352 test vectors)\r\n- [ ] optimize the implementation, where possible",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 4975353639,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI3fJw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/feature",
              "name": "feature",
              "description": "",
              "color": "731E95",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1519",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1519",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1519.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1519.patch"
          },
          "created_at": "2024-04-19T14:21:15Z",
          "updated_at": "2024-05-03T11:17:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 2011814857,
      "node_id": "PRR_kwDOAP4Jqs536dvJ",
      "url": null,
      "actor": null,
      "commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK mod nits, I've inspected the code and the proofs again.\r\n\r\nNew improved tests are nice. ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2011814857",
      "submitted_at": "2024-04-19T16:08:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "commented",
      "id": 2067101244,
      "node_id": "IC_kwDOAP4Jqs57NXY8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2067101244",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-19T18:38:08Z",
      "updated_at": "2024-04-19T18:38:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "I added a description of the interface to the hsort doc. Apparently mac OS [uses a different order of arguments](https://stackoverflow.com/questions/39560773/different-declarations-of-qsort-r-on-mac-and-linux).",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#issuecomment-2067101244",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1518"
    },
    {
      "event": "reviewed",
      "id": 2012213781,
      "node_id": "PRR_kwDOAP4Jqs537_IV",
      "url": null,
      "actor": null,
      "commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2012213781",
      "submitted_at": "2024-04-19T19:26:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "commented",
      "id": 2067223954,
      "node_id": "IC_kwDOAP4Jqs57N1WS",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2067223954",
      "actor": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-19T20:14:14Z",
      "updated_at": "2024-04-19T20:14:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Doing the sorting for the users eliminates a difficult to catch error and we'd need to sort anyways to be able to detect and alert the user that they did not sort (or sorted incorrectly).\r\n\r\nYou can test that a list is sorted in O(n) time, but sorting (by comparisons) take O(n log n) time\r\n\r\nThat said, I do agree that we should just sort ourselves, in O(n log n) worst case time, with constant memory overhead.",
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#issuecomment-2067223954",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1518"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12561736429,
      "node_id": "HRFPE_lADOAP4Jqs6F6qfPzwAAAALsvOLt",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12561736429",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-22T15:22:53Z"
    },
    {
      "event": "commented",
      "id": 2069872148,
      "node_id": "IC_kwDOAP4Jqs57X74U",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2069872148",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-22T15:23:16Z",
      "updated_at": "2024-04-22T15:23:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on master and added change log entry.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#issuecomment-2069872148",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1518"
    },
    {
      "event": "reviewed",
      "id": 2020260426,
      "node_id": "PRR_kwDOAP4Jqs54arpK",
      "url": null,
      "actor": null,
      "commit_id": "b764ca84f98cee6314b0f5891051c87c1e33c82c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2020260426",
      "submitted_at": "2024-04-24T15:47:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDdkMjU5MWNlMTJkOGE5Yjg1ZjIxMGNmOWQ2NzhlOTFjZWUxMjVlZTk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "tree": {
        "sha": "f563c2105865a61e9d71fd517579d2057660784d",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/f563c2105865a61e9d71fd517579d2057660784d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f563c2105865a61e9d71fd517579d2057660784d\nparent da515074e3ebc8abc85a4fff3a31d7694ecf897b\nauthor Jonas Nick <jonasd.nick@gmail.com> 1713375231 +0000\ncommitter Jonas Nick <jonasd.nick@gmail.com> 1714076611 +0000\n\nAdd secp256k1_pubkey_sort\n\nCo-authored-by: Tim Ruffing <crypto@timruffing.de>\nCo-authored-by: Russell O'Connor <roconnor@blockstream.io>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEES7uEWm9aZaad+uwjSGHb8mISNgUFAmYqu8YACgkQSGHb8mIS\nNgUJkg//Y/wWjoxfBO6IXigbzWTCkuR79VPgomwnlR0bx/pihPR+SzJ4GCAhPm8C\nXOL3I7HXE/q4hnQ5w04nMAd9OTCnIq3ndQKbVnGAGFG3quu0ytP8lejOszexrm0c\nFosPU74ySSltuTst+yUEE6mbncmkDT0qN7N27qLOO5tOpFxbWTIDpxj0oT+hLhT9\ncBApRbWUnt3vrucZI0IQBdja/3Ie0IuqQ0U6C4GpuTbtjVV+zyaW+fBG0f2cmCvJ\nmQTj0CxElQT9/yvFpZ/3e5NieGHItSz4Kos697/MyL27yNU90dvLuu8royOCAD2s\nnGoc5MGzYZB6KNnKR4vxAblWJ7u6xY4Z96rZENHPcZPI11DsS5XP/R6rxTGPrhoO\nv7J33ITrpPGKkPxAmLOx4D4Unimsu0djy1QU/J7UAjgWgZs7M6u/bjS7GJ6qUQ4a\nbCWcmyhzfsKuu3Zp722rd+5C6pHCpg3euiF61di+mgrmdYYwSUzV/X44RXQiaLdp\nCFWwkED1598CCaUW/qWpMrCYG8Rogbh9XRZksOy/a0m+tV9iLlpDo/BoM4U+/wDr\n6ShlnJ8X12RuIZNkTLgyXFlO3IcPkyD4oA1RQQsECEZkkxl6Hw+GAEBF1a1s6uy/\nWaNELgdo4q1O+yILK96VklAsIwCWemvYCeQniUweV0IcOwl/eIU=\n=70I5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/da515074e3ebc8abc85a4fff3a31d7694ecf897b",
          "sha": "da515074e3ebc8abc85a4fff3a31d7694ecf897b",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/da515074e3ebc8abc85a4fff3a31d7694ecf897b"
        }
      ],
      "message": "Add secp256k1_pubkey_sort\n\nCo-authored-by: Tim Ruffing <crypto@timruffing.de>\nCo-authored-by: Russell O'Connor <roconnor@blockstream.io>",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2024-04-25T20:23:31Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2024-04-17T17:33:51Z"
      },
      "sha": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12615076163,
      "node_id": "HRFPE_lADOAP4Jqs6F6qfPzwAAAALv6slD",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12615076163",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T20:23:54Z"
    },
    {
      "event": "reviewed",
      "id": 2037959866,
      "node_id": "PRR_kwDOAP4Jqs55eMy6",
      "url": null,
      "actor": null,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK https://github.com/bitcoin-core/secp256k1/pull/1518/commits/7d2591ce12d8a9b85f210cf9d678e91cee125ee9\r\n\r\nDon't have much to offer on the `hsort` side, but did review the `secp256k1` specific parts and have been using this commit in #1519 without any issues.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2037959866",
      "submitted_at": "2024-05-03T11:40:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "commented",
      "id": 2093258801,
      "node_id": "IC_kwDOAP4Jqs58xJgx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2093258801",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T15:35:58Z",
      "updated_at": "2024-05-03T15:35:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#issuecomment-2093258801",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1518"
    },
    {
      "event": "reviewed",
      "id": 2040996963,
      "node_id": "PRR_kwDOAP4Jqs55pyRj",
      "url": null,
      "actor": null,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#pullrequestreview-2040996963",
      "submitted_at": "2024-05-06T15:00:29Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
    },
    {
      "event": "merged",
      "id": 12716573338,
      "node_id": "ME_lADOAP4Jqs6F6qfPzwAAAAL194Ka",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12716573338",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bb528cfb08761fde75c68751de7ded747ed51e84",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/bb528cfb08761fde75c68751de7ded747ed51e84",
      "created_at": "2024-05-06T15:18:34Z"
    },
    {
      "event": "closed",
      "id": 12716573363,
      "node_id": "CE_lADOAP4Jqs6F6qfPzwAAAAL194Kz",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/12716573363",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T15:18:34Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1568045647",
      "pull_request_review_id": 2004756608,
      "id": 1568045647,
      "node_id": "PRRC_kwDOAP4Jqs5ddnpP",
      "diff_hunk": "",
      "path": "src/modules/extrakeys/Makefile.am.include",
      "position": 1,
      "original_position": 1,
      "commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "original_commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: No need to touch this file. Is this a leftover diff from when the sorting function was still in extrakeys (see https://github.com/bitcoin-core/secp256k1/pull/1479#discussion_r1457727273)? Also, the commit message still mentions \"extrakeys\".",
      "created_at": "2024-04-16T23:46:17Z",
      "updated_at": "2024-04-16T23:48:57Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1568045647",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1568045647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1568695096",
      "pull_request_review_id": 2005797434,
      "id": 1568695096,
      "node_id": "PRRC_kwDOAP4Jqs5dgGM4",
      "diff_hunk": "@@ -0,0 +1,22 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_H\n+#define SECP256K1_HSORT_H\n+\n+#include <stddef.h>\n+#include <string.h>\n+\n+/* In-place, iterative heapsort with an interface matching glibc's qsort_r. This\n+ * is preferred over standard library implementations because they generally\n+ * make no guarantee about being fast for malicious inputs.\n+ *\n+ * See the qsort_r manpage for a description of the interface.\n+ */",
      "path": "src/hsort.h",
      "position": null,
      "original_position": 18,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Might be worth leaving a small reminder to the user that `hsort` is unstable. I had forgotten this detail, which caused me quite a bit of confusion. A small comment would either a) remind the user or b) prompt them to look up what that means before using and hopefully save some headaches.",
      "created_at": "2024-04-17T11:32:24Z",
      "updated_at": "2024-04-17T11:34:53Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1568695096",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1568695096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": 13,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1568886231",
      "pull_request_review_id": 2006117196,
      "id": 1568886231,
      "node_id": "PRRC_kwDOAP4Jqs5dg03X",
      "diff_hunk": "@@ -0,0 +1,22 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_H\n+#define SECP256K1_HSORT_H\n+\n+#include <stddef.h>\n+#include <string.h>\n+\n+/* In-place, iterative heapsort with an interface matching glibc's qsort_r. This\n+ * is preferred over standard library implementations because they generally\n+ * make no guarantee about being fast for malicious inputs.\n+ *\n+ * See the qsort_r manpage for a description of the interface.\n+ */",
      "path": "src/hsort.h",
      "position": null,
      "original_position": 18,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "in_reply_to_id": 1568695096,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> * See the qsort_r manpage for a description of the interface.\r\n\r\nBy the way, we could also just spell out the interface in the comment. But the current version is also fine, it's an internal function in the end.",
      "created_at": "2024-04-17T13:52:16Z",
      "updated_at": "2024-04-17T13:52:16Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1568886231",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1568886231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": 13,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569112045",
      "pull_request_review_id": 2006486591,
      "id": 1569112045,
      "node_id": "PRRC_kwDOAP4Jqs5dhr_t",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t child1(size_t i) {",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 16,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "in_reply_to_id": null,
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do we need to prefix all these functions with `secp256k1_`?",
      "created_at": "2024-04-17T16:13:47Z",
      "updated_at": "2024-04-17T16:13:58Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1569112045",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569112045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569152052",
      "pull_request_review_id": 2006591305,
      "id": 1569152052,
      "node_id": "PRRC_kwDOAP4Jqs5dh1w0",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t child1(size_t i) {",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 16,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "in_reply_to_id": 1569112045,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep, the child1/child2 functions should probably also get an additional `_heap` prefix, e.g., `secp256k1_heap_child1`",
      "created_at": "2024-04-17T16:45:05Z",
      "updated_at": "2024-04-17T16:45:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1569152052",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569152052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569230096",
      "pull_request_review_id": 2006720173,
      "id": 1569230096,
      "node_id": "PRRC_kwDOAP4Jqs5diI0Q",
      "diff_hunk": "",
      "path": "src/modules/extrakeys/Makefile.am.include",
      "position": 1,
      "original_position": 1,
      "commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "original_commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "in_reply_to_id": 1568045647,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "removed the file and the mention of extrakeys",
      "created_at": "2024-04-17T17:44:15Z",
      "updated_at": "2024-04-17T17:44:15Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1569230096",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569230096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569230864",
      "pull_request_review_id": 2006721131,
      "id": 1569230864,
      "node_id": "PRRC_kwDOAP4Jqs5diJAQ",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t child1(size_t i) {",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 16,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "cc7d18a8a85c8d1e377acf72701dd8fc286c2d03",
      "in_reply_to_id": 1569112045,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-04-17T17:44:48Z",
      "updated_at": "2024-04-17T17:44:48Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1569230864",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569230864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569286965",
      "pull_request_review_id": 2006839168,
      "id": 1569286965,
      "node_id": "PRRC_kwDOAP4Jqs5diWs1",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child1(size_t i) {\n+    VERIFY_CHECK(i <= (SIZE_MAX - 1)/2);\n+    return 2*i + 1;\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child2(size_t i) {\n+    VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+    return secp256k1_heap_child1(i)+1;\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap64(unsigned char *a, size_t i, size_t j, size_t stride) {\n+    unsigned char tmp[64];\n+    VERIFY_CHECK(stride <= 64);\n+    memcpy(tmp, a + i*stride, stride);\n+    memmove(a + i*stride, a + j*stride, stride);\n+    memcpy(a + j*stride, tmp, stride);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap(unsigned char *a, size_t i, size_t j, size_t stride) {\n+    while (64 < stride) {\n+        secp256k1_heap_swap64(a + (stride - 64), i, j, 64);\n+        stride -= 64;\n+    }\n+    secp256k1_heap_swap64(a, i, j, stride);\n+}\n+\n+static SECP256K1_INLINE void heap_down(unsigned char *a, size_t i, size_t heap_size, size_t stride,",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 42,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "137ed38a10e720f4a4b111e9dae1b8fba9402702",
      "in_reply_to_id": null,
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This needs a `secp256k1_` prefix too.",
      "created_at": "2024-04-17T18:24:57Z",
      "updated_at": "2024-04-17T18:24:57Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1569286965",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569286965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569627523",
      "pull_request_review_id": 2007458413,
      "id": 1569627523,
      "node_id": "PRRC_kwDOAP4Jqs5djp2D",
      "diff_hunk": "@@ -474,6 +474,20 @@ SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_cmp(\n     const secp256k1_pubkey *pubkey2\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n+/** Sort public keys keys using lexicographic (of compressed serialization) order",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 4,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "4520d7527c8831e657ef0e5e8711aefe0a0f82bb",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n/** Sort public keys using lexicographic (of compressed serialization) order\r\n```",
      "created_at": "2024-04-17T22:45:30Z",
      "updated_at": "2024-04-17T22:45:57Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1569627523",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1569627523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 477,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1570608863",
      "pull_request_review_id": 2008720121,
      "id": 1570608863,
      "node_id": "PRRC_kwDOAP4Jqs5dnZbf",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child1(size_t i) {\n+    VERIFY_CHECK(i <= (SIZE_MAX - 1)/2);\n+    return 2*i + 1;\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child2(size_t i) {\n+    VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+    return secp256k1_heap_child1(i)+1;\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap64(unsigned char *a, size_t i, size_t j, size_t stride) {\n+    unsigned char tmp[64];\n+    VERIFY_CHECK(stride <= 64);\n+    memcpy(tmp, a + i*stride, stride);\n+    memmove(a + i*stride, a + j*stride, stride);\n+    memcpy(a + j*stride, tmp, stride);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap(unsigned char *a, size_t i, size_t j, size_t stride) {\n+    while (64 < stride) {\n+        secp256k1_heap_swap64(a + (stride - 64), i, j, 64);\n+        stride -= 64;\n+    }\n+    secp256k1_heap_swap64(a, i, j, stride);\n+}",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 40,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "4520d7527c8831e657ef0e5e8711aefe0a0f82bb",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`secp256k1_heap_swap` is incorrect for `stride > 64`. See https://github.com/real-or-random/secp256k1/commit/95138ca6c1336bcd20ef332dd742f8a5f0f7cf75 for a fix and a test. This was overlooked because we never use such a stride, not even in the tests.\r\n\r\nAlternatively, we could drop `secp256k1_heap_swap` entirely. `secp256k1_heap_swap64` appears to be correct. But I'd say let's just keep it if my fix looks good.\r\n\r\n",
      "created_at": "2024-04-18T12:14:37Z",
      "updated_at": "2024-04-18T12:14:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1570608863",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1570608863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": 34,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1571088701",
      "pull_request_review_id": 2009420545,
      "id": 1571088701,
      "node_id": "PRRC_kwDOAP4Jqs5dpOk9",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child1(size_t i) {\n+    VERIFY_CHECK(i <= (SIZE_MAX - 1)/2);\n+    return 2*i + 1;\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child2(size_t i) {\n+    VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+    return secp256k1_heap_child1(i)+1;\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap64(unsigned char *a, size_t i, size_t j, size_t stride) {\n+    unsigned char tmp[64];\n+    VERIFY_CHECK(stride <= 64);\n+    memcpy(tmp, a + i*stride, stride);\n+    memmove(a + i*stride, a + j*stride, stride);\n+    memcpy(a + j*stride, tmp, stride);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap(unsigned char *a, size_t i, size_t j, size_t stride) {\n+    while (64 < stride) {\n+        secp256k1_heap_swap64(a + (stride - 64), i, j, 64);\n+        stride -= 64;\n+    }\n+    secp256k1_heap_swap64(a, i, j, stride);\n+}",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 40,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "4520d7527c8831e657ef0e5e8711aefe0a0f82bb",
      "in_reply_to_id": 1570608863,
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "FWIW, below is more like what I intended to write:\r\n\r\n```c\r\nstatic SECP256K1_INLINE void swap64(unsigned char *a, unsigned char *b, size_t len) {\r\n    unsigned char tmp[64];\r\n    VERIFY_CHECK(len <= 64);\r\n    memcpy(tmp, a, len);\r\n    memmove(a, b, len);\r\n    memcpy(b, tmp, len);\r\n}\r\n\r\nstatic SECP256K1_INLINE void swap(unsigned char *arr, unsigned char *a, size_t stride) {\r\n    unsigned char *a = arr + i*stride;\r\n    unsigned char *b = arr + j*stride;\r\n    size_t len = stride;\r\n    while (64 < len) {\r\n        swap64(a + (len - 64), b + (len - 64), 64);\r\n        len -= 64;\r\n    }\r\n    swap64(a, b, len);\r\n}\r\n```\r\n\r\nObviously I've gotten this wrong before, so take it with a grain of salt.",
      "created_at": "2024-04-18T16:51:54Z",
      "updated_at": "2024-04-18T16:51:55Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1571088701",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1571088701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": 34,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1571997714",
      "pull_request_review_id": 2010801965,
      "id": 1571997714,
      "node_id": "PRRC_kwDOAP4Jqs5dssgS",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child1(size_t i) {\n+    VERIFY_CHECK(i <= (SIZE_MAX - 1)/2);\n+    return 2*i + 1;\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child2(size_t i) {\n+    VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+    return secp256k1_heap_child1(i)+1;\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap64(unsigned char *a, size_t i, size_t j, size_t stride) {\n+    unsigned char tmp[64];\n+    VERIFY_CHECK(stride <= 64);\n+    memcpy(tmp, a + i*stride, stride);\n+    memmove(a + i*stride, a + j*stride, stride);\n+    memcpy(a + j*stride, tmp, stride);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap(unsigned char *a, size_t i, size_t j, size_t stride) {\n+    while (64 < stride) {\n+        secp256k1_heap_swap64(a + (stride - 64), i, j, 64);\n+        stride -= 64;\n+    }\n+    secp256k1_heap_swap64(a, i, j, stride);\n+}",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 40,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "4520d7527c8831e657ef0e5e8711aefe0a0f82bb",
      "in_reply_to_id": 1570608863,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks correct (except that `i` and `j` should be in the parameter instead of `a`) to me, and is easier to read than my version, I think. ",
      "created_at": "2024-04-19T08:07:49Z",
      "updated_at": "2024-04-19T08:07:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1571997714",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1571997714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": 34,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572457870",
      "pull_request_review_id": 2011576784,
      "id": 1572457870,
      "node_id": "PRRC_kwDOAP4Jqs5duc2O",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child1(size_t i) {\n+    VERIFY_CHECK(i <= (SIZE_MAX - 1)/2);\n+    return 2*i + 1;\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child2(size_t i) {\n+    VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+    return secp256k1_heap_child1(i)+1;\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap64(unsigned char *a, size_t i, size_t j, size_t stride) {\n+    unsigned char tmp[64];\n+    VERIFY_CHECK(stride <= 64);\n+    memcpy(tmp, a + i*stride, stride);\n+    memmove(a + i*stride, a + j*stride, stride);\n+    memcpy(a + j*stride, tmp, stride);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap(unsigned char *a, size_t i, size_t j, size_t stride) {\n+    while (64 < stride) {\n+        secp256k1_heap_swap64(a + (stride - 64), i, j, 64);\n+        stride -= 64;\n+    }\n+    secp256k1_heap_swap64(a, i, j, stride);\n+}",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 40,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "4520d7527c8831e657ef0e5e8711aefe0a0f82bb",
      "in_reply_to_id": 1570608863,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops. Good catch @real-or-random. I cherry picked your test, copied @roconnor-blockstream's fix and improved the existing test.",
      "created_at": "2024-04-19T14:23:34Z",
      "updated_at": "2024-04-19T14:23:34Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1572457870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572457870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": 34,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572592643",
      "pull_request_review_id": 2011814857,
      "id": 1572592643,
      "node_id": "PRRC_kwDOAP4Jqs5du9wD",
      "diff_hunk": "@@ -3675,6 +3675,77 @@ static void run_inverse_tests(void)\n     }\n }\n \n+/***** HSORT TESTS *****/\n+\n+static void test_heap_swap(void) {\n+    unsigned char a[600];\n+    unsigned char e[sizeof(a)];\n+    memset(a,       21, 200);\n+    memset(a + 200, 99, 200);\n+    memset(a + 400, 42, 200);\n+    memset(e,       42, 200);\n+    memset(e + 200, 99, 200);\n+    memset(e + 400, 21, 200);\n+    secp256k1_heap_swap(a, 0, 2, 200);\n+    CHECK(secp256k1_memcmp_var(a, e, sizeof(a)) == 0);\n+}\n+\n+static void test_hsort_is_sorted(unsigned char *elements, size_t n, size_t len) {\n+    size_t i;\n+    for (i = 1; i < n; i++) {\n+        CHECK(memcmp(&elements[(i-1) * len], &elements[i * len], len) <= 0);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 22,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `secp256k1_memcmp_var` according to CONTRIBUTING.md (or add a rule that says we can skip in tests, I'll ACK)",
      "created_at": "2024-04-19T15:58:29Z",
      "updated_at": "2024-04-19T16:08:58Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1572592643",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572592643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3696,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572593725",
      "pull_request_review_id": 2011814857,
      "id": 1572593725,
      "node_id": "PRRC_kwDOAP4Jqs5du-A9",
      "diff_hunk": "@@ -3675,6 +3675,77 @@ static void run_inverse_tests(void)\n     }\n }\n \n+/***** HSORT TESTS *****/\n+\n+static void test_heap_swap(void) {\n+    unsigned char a[600];\n+    unsigned char e[sizeof(a)];\n+    memset(a,       21, 200);\n+    memset(a + 200, 99, 200);\n+    memset(a + 400, 42, 200);\n+    memset(e,       42, 200);\n+    memset(e + 200, 99, 200);\n+    memset(e + 400, 21, 200);\n+    secp256k1_heap_swap(a, 0, 2, 200);\n+    CHECK(secp256k1_memcmp_var(a, e, sizeof(a)) == 0);\n+}\n+\n+static void test_hsort_is_sorted(unsigned char *elements, size_t n, size_t len) {\n+    size_t i;\n+    for (i = 1; i < n; i++) {\n+        CHECK(memcmp(&elements[(i-1) * len], &elements[i * len], len) <= 0);\n+    }\n+}\n+\n+struct test_hsort_cmp_data {\n+    size_t counter;\n+    size_t element_len;\n+};\n+\n+static int test_hsort_cmp(const void *ele1, const void *ele2, void *data) {\n+  struct test_hsort_cmp_data *d = (struct test_hsort_cmp_data *) data;\n+  d->counter += 1;\n+  return memcmp((unsigned char *)ele1, (unsigned char *)ele2, d->element_len);\n+}",
      "path": "src/tests.c",
      "position": null,
      "original_position": 35,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": " - indentation\r\n - `secp256k1_memcmp_var`",
      "created_at": "2024-04-19T15:58:46Z",
      "updated_at": "2024-04-19T16:08:58Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1572593725",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572593725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": 3705,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3711,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572595731",
      "pull_request_review_id": 2011814857,
      "id": 1572595731,
      "node_id": "PRRC_kwDOAP4Jqs5du-gT",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child1(size_t i) {\n+    VERIFY_CHECK(i <= (SIZE_MAX - 1)/2);\n+    return 2*i + 1;\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child2(size_t i) {\n+    VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+    return secp256k1_heap_child1(i)+1;\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap64(unsigned char *a, unsigned char *b, size_t len) {\n+    unsigned char tmp[64];\n+    VERIFY_CHECK(len <= 64);\n+    memcpy(tmp, a, len);\n+    memmove(a, b, len);\n+    memcpy(b, tmp, len);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap(unsigned char *arr, size_t i, size_t j, size_t stride) {\n+    unsigned char *a = arr + i*stride;\n+    unsigned char *b = arr + j*stride;\n+    size_t len = stride;\n+    while (64 < len) {\n+        secp256k1_heap_swap64(a + (len - 64), b + (len - 64), 64);\n+        len -= 64;\n+    }\n+    secp256k1_heap_swap64(a, b, len);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_down(unsigned char *arr, size_t i, size_t heap_size, size_t stride,\n+                            int (*cmp)(const void *, const void *, void *), void *cmp_data) {\n+    while (i < heap_size/2) {\n+        VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+        /* Proof:\n+         * i < heap_size/2\n+         * i + 1 <= heap_size/2\n+         * 2*i + 2 <= heap_size <= SIZE_MAX\n+         * 2*i <= SIZE_MAX - 2\n+         */\n+\n+        VERIFY_CHECK(secp256k1_heap_child1(i) < heap_size);\n+        /* Proof:\n+         * i < heap_size/2\n+         * i + 1 <= heap_size/2\n+         * 2*i + 2 <= heap_size\n+         * 2*i + 1 < heap_size\n+         * child1(i) < heap_size\n+         */\n+\n+        /* Let [x] be notation for the contents at a[x*stride].\n+         *\n+         * If [child1(i)] > [i] and [child2(i)] > [i],\n+         *   swap [i] with the larger child to ensure the new parent is larger\n+         *   than both children. When [child1(i)] == [child2(i)], swap [i] with\n+         *   [child2(i)].\n+         * Else if [child1(i)] > [i], swap [i] with [child1(i)].\n+         * Else if [child2(i)] > [i], swap [i] with [child2(i)].\n+         */\n+        if (secp256k1_heap_child2(i) < heap_size\n+                && 0 <= cmp(arr + secp256k1_heap_child2(i)*stride, arr + secp256k1_heap_child1(i)*stride, cmp_data)) {\n+            if (0 < cmp(arr + secp256k1_heap_child2(i)*stride, arr +         i*stride, cmp_data)) {\n+                secp256k1_heap_swap(arr, i, secp256k1_heap_child2(i), stride);\n+                i = secp256k1_heap_child2(i);\n+            } else {\n+                /* At this point we have [child2(i)] >= [child1(i)] and we have\n+                 * [child2(i)] <= [i], and thus [child1(i)] <= [i] which means\n+                 * that the next comparison can be skipped. */\n+                return;\n+            }\n+        } else if (0 < cmp(arr + secp256k1_heap_child1(i)*stride, arr +         i*stride, cmp_data)) {\n+            secp256k1_heap_swap(arr, i, secp256k1_heap_child1(i), stride);\n+            i = secp256k1_heap_child1(i);\n+        } else {\n+            return;\n+        }\n+    }\n+    /* heap_size/2 <= i\n+     * heap_size/2 < i + 1\n+     * heap_size < 2*i + 2\n+     * heap_size <= 2*i + 1\n+     * heap_size <= child1(i)\n+     * Thus child1(i) and child2(i) are now out of bounds and we are at a leaf.\n+     */\n+}\n+\n+/* In-place heap sort. */\n+static void secp256k1_hsort(void *ptr, size_t count, size_t size,\n+                            int (*cmp)(const void *, const void *, void *),\n+                            void *cmp_data ) {\n+    size_t i;\n+\n+    for(i = count/2; 0 < i; --i) {\n+        secp256k1_heap_down(ptr, i-1, count, size, cmp, cmp_data);\n+    }\n+    for(i = count; 1 < i; --i) {",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 110,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "spacing micronits\r\n```suggestion\r\n                            void *cmp_data) {\r\n    size_t i;\r\n\r\n    for (i = count/2; 0 < i; --i) {\r\n        secp256k1_heap_down(ptr, i-1, count, size, cmp, cmp_data);\r\n    }\r\n    for (i = count; 1 < i; --i) {\r\n```\r\n",
      "created_at": "2024-04-19T15:59:54Z",
      "updated_at": "2024-04-19T16:08:58Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1572595731",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572595731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": 104,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572598518",
      "pull_request_review_id": 2011814857,
      "id": 1572598518,
      "node_id": "PRRC_kwDOAP4Jqs5du_L2",
      "diff_hunk": "@@ -3675,6 +3675,77 @@ static void run_inverse_tests(void)\n     }\n }\n \n+/***** HSORT TESTS *****/\n+\n+static void test_heap_swap(void) {\n+    unsigned char a[600];\n+    unsigned char e[sizeof(a)];\n+    memset(a,       21, 200);\n+    memset(a + 200, 99, 200);\n+    memset(a + 400, 42, 200);\n+    memset(e,       42, 200);\n+    memset(e + 200, 99, 200);\n+    memset(e + 400, 21, 200);\n+    secp256k1_heap_swap(a, 0, 2, 200);\n+    CHECK(secp256k1_memcmp_var(a, e, sizeof(a)) == 0);\n+}\n+\n+static void test_hsort_is_sorted(unsigned char *elements, size_t n, size_t len) {\n+    size_t i;\n+    for (i = 1; i < n; i++) {\n+        CHECK(memcmp(&elements[(i-1) * len], &elements[i * len], len) <= 0);\n+    }\n+}\n+\n+struct test_hsort_cmp_data {\n+    size_t counter;\n+    size_t element_len;\n+};\n+\n+static int test_hsort_cmp(const void *ele1, const void *ele2, void *data) {\n+  struct test_hsort_cmp_data *d = (struct test_hsort_cmp_data *) data;\n+  d->counter += 1;\n+  return memcmp((unsigned char *)ele1, (unsigned char *)ele2, d->element_len);\n+}\n+\n+#define NUM 65\n+#define MAX_ELEMENT_LEN 65\n+static void test_hsort(size_t element_len) {\n+    unsigned char elements[NUM * MAX_ELEMENT_LEN] = { 0 };\n+    struct test_hsort_cmp_data data;\n+    int i;\n+\n+    VERIFY_CHECK(element_len <= MAX_ELEMENT_LEN);\n+    data.counter = 0;\n+    data.element_len = element_len;\n+\n+    secp256k1_hsort(elements, 0, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, 1, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, NUM, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter >= NUM);\n+    test_hsort_is_sorted(elements, NUM, element_len);\n+\n+    /* Test hsort with array of random length n */\n+    for (i = 0; i < COUNT; i++) {\n+        int n = secp256k1_testrand_int(NUM);\n+        secp256k1_testrand_bytes_test(elements, n*element_len);\n+        secp256k1_hsort(elements, n, element_len, test_hsort_cmp, &data);\n+        test_hsort_is_sorted(elements, n, element_len);\n+    }",
      "path": "src/tests.c",
      "position": 63,
      "original_position": 62,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "suggestion: Also call the C library `qsort_r` and compare the results. This is a very effective test at the cost of just a handful of code lines. ",
      "created_at": "2024-04-19T16:01:35Z",
      "updated_at": "2024-04-19T16:08:58Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1572598518",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572598518"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 3732,
      "original_start_line": 3730,
      "start_side": "RIGHT",
      "line": 3738,
      "original_line": 3738,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572608994",
      "pull_request_review_id": 2011814857,
      "id": 1572608994,
      "node_id": "PRRC_kwDOAP4Jqs5dvBvi",
      "diff_hunk": "@@ -6607,6 +6678,161 @@ static void run_pubkey_comparison(void) {\n     CHECK(secp256k1_ec_pubkey_cmp(CTX, &pk2, &pk1) > 0);\n }\n \n+static void test_sort_helper(secp256k1_pubkey *pk, size_t *pk_order, size_t n_pk) {\n+    size_t i;\n+    const secp256k1_pubkey *pk_test[5];\n+\n+    for (i = 0; i < n_pk; i++) {\n+        pk_test[i] = &pk[pk_order[i]];\n+    }\n+    secp256k1_ec_pubkey_sort(CTX, pk_test, n_pk);\n+    for (i = 0; i < n_pk; i++) {\n+        CHECK(secp256k1_memcmp_var(pk_test[i], &pk[i], sizeof(*pk_test[i])) == 0);\n+    }\n+}\n+\n+static void permute(size_t *arr, size_t n) {\n+    size_t i;\n+    for (i = n - 1; i >= 1; i--) {\n+        size_t tmp, j;\n+        j = secp256k1_testrand_int(i + 1);\n+        tmp = arr[i];\n+        arr[i] = arr[j];\n+        arr[j] = tmp;\n+    }\n+}\n+\n+static void rand_pk(secp256k1_pubkey *pk) {\n+    unsigned char seckey[32];\n+    secp256k1_keypair keypair;\n+    secp256k1_testrand256(seckey);\n+    CHECK(secp256k1_keypair_create(CTX, &keypair, seckey) == 1);\n+    CHECK(secp256k1_keypair_pub(CTX, pk, &keypair) == 1);\n+}\n+\n+static void test_sort_api(void) {\n+    secp256k1_pubkey pks[2];\n+    const secp256k1_pubkey *pks_ptr[2];\n+\n+    pks_ptr[0] = &pks[0];\n+    pks_ptr[1] = &pks[1];\n+\n+    rand_pk(&pks[0]);\n+    rand_pk(&pks[1]);\n+\n+    CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 2) == 1);\n+    CHECK_ILLEGAL(CTX, secp256k1_ec_pubkey_sort(CTX, NULL, 2));\n+    CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 0) == 1);\n+    /* Test illegal public keys */\n+    memset(&pks[0], 0, sizeof(pks[0]));\n+    CHECK_ILLEGAL_VOID(CTX, CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 2) == 1));\n+    memset(&pks[1], 0, sizeof(pks[1]));\n+    {\n+        int32_t ecount = 0;\n+        secp256k1_context_set_illegal_callback(CTX, counting_callback_fn, &ecount);\n+        CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 2) == 1);\n+        CHECK(ecount == 2);\n+        secp256k1_context_set_illegal_callback(CTX, NULL, NULL);\n+    }",
      "path": "src/tests.c",
      "position": 138,
      "original_position": 137,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not exactly this PR, but do you think it's worth noting in the API docs that callbacks may be triggered more than once  per API call? This may be interesting in the case of the illegal callback because you wouldn't need to crash necessarily for this type of callback (e.g., thinking of python bindings that could choose to raise). If yes, we could track this separately.",
      "created_at": "2024-04-19T16:07:41Z",
      "updated_at": "2024-04-19T16:08:58Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1572608994",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572608994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 6753,
      "original_start_line": 6730,
      "start_side": "RIGHT",
      "line": 6759,
      "original_line": 6759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572739132",
      "pull_request_review_id": 2012063069,
      "id": 1572739132,
      "node_id": "PRRC_kwDOAP4Jqs5dvhg8",
      "diff_hunk": "@@ -3675,6 +3675,77 @@ static void run_inverse_tests(void)\n     }\n }\n \n+/***** HSORT TESTS *****/\n+\n+static void test_heap_swap(void) {\n+    unsigned char a[600];\n+    unsigned char e[sizeof(a)];\n+    memset(a,       21, 200);\n+    memset(a + 200, 99, 200);\n+    memset(a + 400, 42, 200);\n+    memset(e,       42, 200);\n+    memset(e + 200, 99, 200);\n+    memset(e + 400, 21, 200);\n+    secp256k1_heap_swap(a, 0, 2, 200);\n+    CHECK(secp256k1_memcmp_var(a, e, sizeof(a)) == 0);\n+}\n+\n+static void test_hsort_is_sorted(unsigned char *elements, size_t n, size_t len) {\n+    size_t i;\n+    for (i = 1; i < n; i++) {\n+        CHECK(memcmp(&elements[(i-1) * len], &elements[i * len], len) <= 0);\n+    }\n+}\n+\n+struct test_hsort_cmp_data {\n+    size_t counter;\n+    size_t element_len;\n+};\n+\n+static int test_hsort_cmp(const void *ele1, const void *ele2, void *data) {\n+  struct test_hsort_cmp_data *d = (struct test_hsort_cmp_data *) data;\n+  d->counter += 1;\n+  return memcmp((unsigned char *)ele1, (unsigned char *)ele2, d->element_len);\n+}\n+\n+#define NUM 65\n+#define MAX_ELEMENT_LEN 65\n+static void test_hsort(size_t element_len) {\n+    unsigned char elements[NUM * MAX_ELEMENT_LEN] = { 0 };\n+    struct test_hsort_cmp_data data;\n+    int i;\n+\n+    VERIFY_CHECK(element_len <= MAX_ELEMENT_LEN);\n+    data.counter = 0;\n+    data.element_len = element_len;\n+\n+    secp256k1_hsort(elements, 0, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, 1, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, NUM, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter >= NUM);\n+    test_hsort_is_sorted(elements, NUM, element_len);\n+\n+    /* Test hsort with array of random length n */\n+    for (i = 0; i < COUNT; i++) {\n+        int n = secp256k1_testrand_int(NUM);\n+        secp256k1_testrand_bytes_test(elements, n*element_len);\n+        secp256k1_hsort(elements, n, element_len, test_hsort_cmp, &data);\n+        test_hsort_is_sorted(elements, n, element_len);\n+    }",
      "path": "src/tests.c",
      "position": 63,
      "original_position": 62,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": 1572598518,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To test that giving exactly the same arguments to `qsort_r` gives the same result? Unfortunately, `qsort_r` is not part of the standard lib.",
      "created_at": "2024-04-19T18:10:25Z",
      "updated_at": "2024-04-19T18:10:25Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1572739132",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572739132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 3732,
      "original_start_line": 3730,
      "start_side": "RIGHT",
      "line": 3738,
      "original_line": 3738,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572779534",
      "pull_request_review_id": 2012130157,
      "id": 1572779534,
      "node_id": "PRRC_kwDOAP4Jqs5dvrYO",
      "diff_hunk": "@@ -6607,6 +6678,161 @@ static void run_pubkey_comparison(void) {\n     CHECK(secp256k1_ec_pubkey_cmp(CTX, &pk2, &pk1) > 0);\n }\n \n+static void test_sort_helper(secp256k1_pubkey *pk, size_t *pk_order, size_t n_pk) {\n+    size_t i;\n+    const secp256k1_pubkey *pk_test[5];\n+\n+    for (i = 0; i < n_pk; i++) {\n+        pk_test[i] = &pk[pk_order[i]];\n+    }\n+    secp256k1_ec_pubkey_sort(CTX, pk_test, n_pk);\n+    for (i = 0; i < n_pk; i++) {\n+        CHECK(secp256k1_memcmp_var(pk_test[i], &pk[i], sizeof(*pk_test[i])) == 0);\n+    }\n+}\n+\n+static void permute(size_t *arr, size_t n) {\n+    size_t i;\n+    for (i = n - 1; i >= 1; i--) {\n+        size_t tmp, j;\n+        j = secp256k1_testrand_int(i + 1);\n+        tmp = arr[i];\n+        arr[i] = arr[j];\n+        arr[j] = tmp;\n+    }\n+}\n+\n+static void rand_pk(secp256k1_pubkey *pk) {\n+    unsigned char seckey[32];\n+    secp256k1_keypair keypair;\n+    secp256k1_testrand256(seckey);\n+    CHECK(secp256k1_keypair_create(CTX, &keypair, seckey) == 1);\n+    CHECK(secp256k1_keypair_pub(CTX, pk, &keypair) == 1);\n+}\n+\n+static void test_sort_api(void) {\n+    secp256k1_pubkey pks[2];\n+    const secp256k1_pubkey *pks_ptr[2];\n+\n+    pks_ptr[0] = &pks[0];\n+    pks_ptr[1] = &pks[1];\n+\n+    rand_pk(&pks[0]);\n+    rand_pk(&pks[1]);\n+\n+    CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 2) == 1);\n+    CHECK_ILLEGAL(CTX, secp256k1_ec_pubkey_sort(CTX, NULL, 2));\n+    CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 0) == 1);\n+    /* Test illegal public keys */\n+    memset(&pks[0], 0, sizeof(pks[0]));\n+    CHECK_ILLEGAL_VOID(CTX, CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 2) == 1));\n+    memset(&pks[1], 0, sizeof(pks[1]));\n+    {\n+        int32_t ecount = 0;\n+        secp256k1_context_set_illegal_callback(CTX, counting_callback_fn, &ecount);\n+        CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 2) == 1);\n+        CHECK(ecount == 2);\n+        secp256k1_context_set_illegal_callback(CTX, NULL, NULL);\n+    }",
      "path": "src/tests.c",
      "position": 138,
      "original_position": 137,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": 1572608994,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm good point. But if we think that calling the callback multiple times causes problems, it may makes more sense to fix/change that because it's unlikely someone will read this and take it into account.\r\n\r\nFor the error callback the documentation says \"After this callback returns, anything may happen, including crashing.\" and for the illegal callback  \"When this callback is triggered, the API function called is guaranteed not to cause a crash, though its return value and output arguments are undefined.\"\r\n",
      "created_at": "2024-04-19T18:46:46Z",
      "updated_at": "2024-04-19T18:46:46Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1572779534",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572779534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 6753,
      "original_start_line": 6730,
      "start_side": "RIGHT",
      "line": 6759,
      "original_line": 6759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572830550",
      "pull_request_review_id": 2012213781,
      "id": 1572830550,
      "node_id": "PRRC_kwDOAP4Jqs5dv31W",
      "diff_hunk": "@@ -3675,6 +3675,77 @@ static void run_inverse_tests(void)\n     }\n }\n \n+/***** HSORT TESTS *****/\n+\n+static void test_heap_swap(void) {\n+    unsigned char a[600];\n+    unsigned char e[sizeof(a)];\n+    memset(a,       21, 200);\n+    memset(a + 200, 99, 200);\n+    memset(a + 400, 42, 200);\n+    memset(e,       42, 200);\n+    memset(e + 200, 99, 200);\n+    memset(e + 400, 21, 200);\n+    secp256k1_heap_swap(a, 0, 2, 200);\n+    CHECK(secp256k1_memcmp_var(a, e, sizeof(a)) == 0);\n+}\n+\n+static void test_hsort_is_sorted(unsigned char *elements, size_t n, size_t len) {\n+    size_t i;\n+    for (i = 1; i < n; i++) {\n+        CHECK(memcmp(&elements[(i-1) * len], &elements[i * len], len) <= 0);\n+    }\n+}\n+\n+struct test_hsort_cmp_data {\n+    size_t counter;\n+    size_t element_len;\n+};\n+\n+static int test_hsort_cmp(const void *ele1, const void *ele2, void *data) {\n+  struct test_hsort_cmp_data *d = (struct test_hsort_cmp_data *) data;\n+  d->counter += 1;\n+  return memcmp((unsigned char *)ele1, (unsigned char *)ele2, d->element_len);\n+}\n+\n+#define NUM 65\n+#define MAX_ELEMENT_LEN 65\n+static void test_hsort(size_t element_len) {\n+    unsigned char elements[NUM * MAX_ELEMENT_LEN] = { 0 };\n+    struct test_hsort_cmp_data data;\n+    int i;\n+\n+    VERIFY_CHECK(element_len <= MAX_ELEMENT_LEN);\n+    data.counter = 0;\n+    data.element_len = element_len;\n+\n+    secp256k1_hsort(elements, 0, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, 1, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, NUM, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter >= NUM);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 53,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": null,
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not entirely sure what we are trying to do with this check, but if we are thinking of hsort as a black box sorting function, the minimum number of comparisons is `NUM-1` (min 0).\r\n\r\nIf we are thinking of hsort as a white box heap sort, then the minimum number of comparisons is larger, on the order of (3/2 n) or so.  We can probably figure it out if that's your intention.",
      "created_at": "2024-04-19T19:26:24Z",
      "updated_at": "2024-04-19T19:29:38Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1572830550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1572830550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3727,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1573884229",
      "pull_request_review_id": 2013499265,
      "id": 1573884229,
      "node_id": "PRRC_kwDOAP4Jqs5dz5FF",
      "diff_hunk": "@@ -3675,6 +3675,77 @@ static void run_inverse_tests(void)\n     }\n }\n \n+/***** HSORT TESTS *****/\n+\n+static void test_heap_swap(void) {\n+    unsigned char a[600];\n+    unsigned char e[sizeof(a)];\n+    memset(a,       21, 200);\n+    memset(a + 200, 99, 200);\n+    memset(a + 400, 42, 200);\n+    memset(e,       42, 200);\n+    memset(e + 200, 99, 200);\n+    memset(e + 400, 21, 200);\n+    secp256k1_heap_swap(a, 0, 2, 200);\n+    CHECK(secp256k1_memcmp_var(a, e, sizeof(a)) == 0);\n+}\n+\n+static void test_hsort_is_sorted(unsigned char *elements, size_t n, size_t len) {\n+    size_t i;\n+    for (i = 1; i < n; i++) {\n+        CHECK(memcmp(&elements[(i-1) * len], &elements[i * len], len) <= 0);\n+    }\n+}\n+\n+struct test_hsort_cmp_data {\n+    size_t counter;\n+    size_t element_len;\n+};\n+\n+static int test_hsort_cmp(const void *ele1, const void *ele2, void *data) {\n+  struct test_hsort_cmp_data *d = (struct test_hsort_cmp_data *) data;\n+  d->counter += 1;\n+  return memcmp((unsigned char *)ele1, (unsigned char *)ele2, d->element_len);\n+}\n+\n+#define NUM 65\n+#define MAX_ELEMENT_LEN 65\n+static void test_hsort(size_t element_len) {\n+    unsigned char elements[NUM * MAX_ELEMENT_LEN] = { 0 };\n+    struct test_hsort_cmp_data data;\n+    int i;\n+\n+    VERIFY_CHECK(element_len <= MAX_ELEMENT_LEN);\n+    data.counter = 0;\n+    data.element_len = element_len;\n+\n+    secp256k1_hsort(elements, 0, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, 1, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, NUM, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter >= NUM);\n+    test_hsort_is_sorted(elements, NUM, element_len);\n+\n+    /* Test hsort with array of random length n */\n+    for (i = 0; i < COUNT; i++) {\n+        int n = secp256k1_testrand_int(NUM);\n+        secp256k1_testrand_bytes_test(elements, n*element_len);\n+        secp256k1_hsort(elements, n, element_len, test_hsort_cmp, &data);\n+        test_hsort_is_sorted(elements, n, element_len);\n+    }",
      "path": "src/tests.c",
      "position": 63,
      "original_position": 62,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": 1572598518,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Unfortunately, `qsort_r` is not part of the standard lib.\r\n\r\nYes, okay, I see. I think we could implement a test also with `qsort` if we add an adapter comparison function. But then it's a few lines of code more. It certainly won't hurt, but then it's not entirely clear if it's worth the hassle and gives us much more than the simple check that the output array is sorted. ",
      "created_at": "2024-04-21T18:51:37Z",
      "updated_at": "2024-04-21T18:51:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1573884229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1573884229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 3732,
      "original_start_line": 3730,
      "start_side": "RIGHT",
      "line": 3738,
      "original_line": 3738,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1573884510",
      "pull_request_review_id": 2013499406,
      "id": 1573884510,
      "node_id": "PRRC_kwDOAP4Jqs5dz5Je",
      "diff_hunk": "@@ -6607,6 +6678,161 @@ static void run_pubkey_comparison(void) {\n     CHECK(secp256k1_ec_pubkey_cmp(CTX, &pk2, &pk1) > 0);\n }\n \n+static void test_sort_helper(secp256k1_pubkey *pk, size_t *pk_order, size_t n_pk) {\n+    size_t i;\n+    const secp256k1_pubkey *pk_test[5];\n+\n+    for (i = 0; i < n_pk; i++) {\n+        pk_test[i] = &pk[pk_order[i]];\n+    }\n+    secp256k1_ec_pubkey_sort(CTX, pk_test, n_pk);\n+    for (i = 0; i < n_pk; i++) {\n+        CHECK(secp256k1_memcmp_var(pk_test[i], &pk[i], sizeof(*pk_test[i])) == 0);\n+    }\n+}\n+\n+static void permute(size_t *arr, size_t n) {\n+    size_t i;\n+    for (i = n - 1; i >= 1; i--) {\n+        size_t tmp, j;\n+        j = secp256k1_testrand_int(i + 1);\n+        tmp = arr[i];\n+        arr[i] = arr[j];\n+        arr[j] = tmp;\n+    }\n+}\n+\n+static void rand_pk(secp256k1_pubkey *pk) {\n+    unsigned char seckey[32];\n+    secp256k1_keypair keypair;\n+    secp256k1_testrand256(seckey);\n+    CHECK(secp256k1_keypair_create(CTX, &keypair, seckey) == 1);\n+    CHECK(secp256k1_keypair_pub(CTX, pk, &keypair) == 1);\n+}\n+\n+static void test_sort_api(void) {\n+    secp256k1_pubkey pks[2];\n+    const secp256k1_pubkey *pks_ptr[2];\n+\n+    pks_ptr[0] = &pks[0];\n+    pks_ptr[1] = &pks[1];\n+\n+    rand_pk(&pks[0]);\n+    rand_pk(&pks[1]);\n+\n+    CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 2) == 1);\n+    CHECK_ILLEGAL(CTX, secp256k1_ec_pubkey_sort(CTX, NULL, 2));\n+    CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 0) == 1);\n+    /* Test illegal public keys */\n+    memset(&pks[0], 0, sizeof(pks[0]));\n+    CHECK_ILLEGAL_VOID(CTX, CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 2) == 1));\n+    memset(&pks[1], 0, sizeof(pks[1]));\n+    {\n+        int32_t ecount = 0;\n+        secp256k1_context_set_illegal_callback(CTX, counting_callback_fn, &ecount);\n+        CHECK(secp256k1_ec_pubkey_sort(CTX, pks_ptr, 2) == 1);\n+        CHECK(ecount == 2);\n+        secp256k1_context_set_illegal_callback(CTX, NULL, NULL);\n+    }",
      "path": "src/tests.c",
      "position": 138,
      "original_position": 137,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": 1572608994,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> But if we think that calling the callback multiple times causes problems, it may makes more sense to fix/change that because it's unlikely someone will read this and take it into account.\r\n\r\nLet's maybe track this in a separate issue. It's certainly not great to call the callback twice, but last time when I tried to \"fix\" it, I wasn't happy with the added code complexity.",
      "created_at": "2024-04-21T18:52:49Z",
      "updated_at": "2024-04-21T18:52:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1573884510",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1573884510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 6753,
      "original_start_line": 6730,
      "start_side": "RIGHT",
      "line": 6759,
      "original_line": 6759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1574953819",
      "pull_request_review_id": 2015107735,
      "id": 1574953819,
      "node_id": "PRRC_kwDOAP4Jqs5d3-Nb",
      "diff_hunk": "@@ -3675,6 +3675,77 @@ static void run_inverse_tests(void)\n     }\n }\n \n+/***** HSORT TESTS *****/\n+\n+static void test_heap_swap(void) {\n+    unsigned char a[600];\n+    unsigned char e[sizeof(a)];\n+    memset(a,       21, 200);\n+    memset(a + 200, 99, 200);\n+    memset(a + 400, 42, 200);\n+    memset(e,       42, 200);\n+    memset(e + 200, 99, 200);\n+    memset(e + 400, 21, 200);\n+    secp256k1_heap_swap(a, 0, 2, 200);\n+    CHECK(secp256k1_memcmp_var(a, e, sizeof(a)) == 0);\n+}\n+\n+static void test_hsort_is_sorted(unsigned char *elements, size_t n, size_t len) {\n+    size_t i;\n+    for (i = 1; i < n; i++) {\n+        CHECK(memcmp(&elements[(i-1) * len], &elements[i * len], len) <= 0);\n+    }\n+}\n+\n+struct test_hsort_cmp_data {\n+    size_t counter;\n+    size_t element_len;\n+};\n+\n+static int test_hsort_cmp(const void *ele1, const void *ele2, void *data) {\n+  struct test_hsort_cmp_data *d = (struct test_hsort_cmp_data *) data;\n+  d->counter += 1;\n+  return memcmp((unsigned char *)ele1, (unsigned char *)ele2, d->element_len);\n+}\n+\n+#define NUM 65\n+#define MAX_ELEMENT_LEN 65\n+static void test_hsort(size_t element_len) {\n+    unsigned char elements[NUM * MAX_ELEMENT_LEN] = { 0 };\n+    struct test_hsort_cmp_data data;\n+    int i;\n+\n+    VERIFY_CHECK(element_len <= MAX_ELEMENT_LEN);\n+    data.counter = 0;\n+    data.element_len = element_len;\n+\n+    secp256k1_hsort(elements, 0, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, 1, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, NUM, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter >= NUM);\n+    test_hsort_is_sorted(elements, NUM, element_len);\n+\n+    /* Test hsort with array of random length n */\n+    for (i = 0; i < COUNT; i++) {\n+        int n = secp256k1_testrand_int(NUM);\n+        secp256k1_testrand_bytes_test(elements, n*element_len);\n+        secp256k1_hsort(elements, n, element_len, test_hsort_cmp, &data);\n+        test_hsort_is_sorted(elements, n, element_len);\n+    }",
      "path": "src/tests.c",
      "position": 63,
      "original_position": 62,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": 1572598518,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If we can't test against the API of `qsort_r` then I doubt that's worth it. Note that we now spell out the interface of hsort explicitly instead of referring to `qsort_r`.",
      "created_at": "2024-04-22T15:25:46Z",
      "updated_at": "2024-04-22T15:25:46Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1574953819",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1574953819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 3732,
      "original_start_line": 3730,
      "start_side": "RIGHT",
      "line": 3738,
      "original_line": 3738,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1575097166",
      "pull_request_review_id": 2015362095,
      "id": 1575097166,
      "node_id": "PRRC_kwDOAP4Jqs5d4hNO",
      "diff_hunk": "@@ -3675,6 +3675,77 @@ static void run_inverse_tests(void)\n     }\n }\n \n+/***** HSORT TESTS *****/\n+\n+static void test_heap_swap(void) {\n+    unsigned char a[600];\n+    unsigned char e[sizeof(a)];\n+    memset(a,       21, 200);\n+    memset(a + 200, 99, 200);\n+    memset(a + 400, 42, 200);\n+    memset(e,       42, 200);\n+    memset(e + 200, 99, 200);\n+    memset(e + 400, 21, 200);\n+    secp256k1_heap_swap(a, 0, 2, 200);\n+    CHECK(secp256k1_memcmp_var(a, e, sizeof(a)) == 0);\n+}\n+\n+static void test_hsort_is_sorted(unsigned char *elements, size_t n, size_t len) {\n+    size_t i;\n+    for (i = 1; i < n; i++) {\n+        CHECK(memcmp(&elements[(i-1) * len], &elements[i * len], len) <= 0);\n+    }\n+}\n+\n+struct test_hsort_cmp_data {\n+    size_t counter;\n+    size_t element_len;\n+};\n+\n+static int test_hsort_cmp(const void *ele1, const void *ele2, void *data) {\n+  struct test_hsort_cmp_data *d = (struct test_hsort_cmp_data *) data;\n+  d->counter += 1;\n+  return memcmp((unsigned char *)ele1, (unsigned char *)ele2, d->element_len);\n+}\n+\n+#define NUM 65\n+#define MAX_ELEMENT_LEN 65\n+static void test_hsort(size_t element_len) {\n+    unsigned char elements[NUM * MAX_ELEMENT_LEN] = { 0 };\n+    struct test_hsort_cmp_data data;\n+    int i;\n+\n+    VERIFY_CHECK(element_len <= MAX_ELEMENT_LEN);\n+    data.counter = 0;\n+    data.element_len = element_len;\n+\n+    secp256k1_hsort(elements, 0, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, 1, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, NUM, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter >= NUM);\n+    test_hsort_is_sorted(elements, NUM, element_len);\n+\n+    /* Test hsort with array of random length n */\n+    for (i = 0; i < COUNT; i++) {\n+        int n = secp256k1_testrand_int(NUM);\n+        secp256k1_testrand_bytes_test(elements, n*element_len);\n+        secp256k1_hsort(elements, n, element_len, test_hsort_cmp, &data);\n+        test_hsort_is_sorted(elements, n, element_len);\n+    }",
      "path": "src/tests.c",
      "position": 63,
      "original_position": 62,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": 1572598518,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sounds reasonable",
      "created_at": "2024-04-22T17:06:55Z",
      "updated_at": "2024-04-22T17:06:55Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1575097166",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1575097166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 3732,
      "original_start_line": 3730,
      "start_side": "RIGHT",
      "line": 3738,
      "original_line": 3738,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1578121243",
      "pull_request_review_id": 2020260426,
      "id": 1578121243,
      "node_id": "PRRC_kwDOAP4Jqs5eEDgb",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child1(size_t i) {\n+    VERIFY_CHECK(i <= (SIZE_MAX - 1)/2);\n+    return 2*i + 1;\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child2(size_t i) {\n+    VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+    return secp256k1_heap_child1(i)+1;\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap64(unsigned char *a, unsigned char *b, size_t len) {\n+    unsigned char tmp[64];\n+    VERIFY_CHECK(len <= 64);\n+    memcpy(tmp, a, len);\n+    memmove(a, b, len);\n+    memcpy(b, tmp, len);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap(unsigned char *arr, size_t i, size_t j, size_t stride) {\n+    unsigned char *a = arr + i*stride;\n+    unsigned char *b = arr + j*stride;\n+    size_t len = stride;\n+    while (64 < len) {\n+        secp256k1_heap_swap64(a + (len - 64), b + (len - 64), 64);\n+        len -= 64;\n+    }\n+    secp256k1_heap_swap64(a, b, len);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_down(unsigned char *arr, size_t i, size_t heap_size, size_t stride,\n+                            int (*cmp)(const void *, const void *, void *), void *cmp_data) {\n+    while (i < heap_size/2) {\n+        VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+        /* Proof:\n+         * i < heap_size/2\n+         * i + 1 <= heap_size/2\n+         * 2*i + 2 <= heap_size <= SIZE_MAX\n+         * 2*i <= SIZE_MAX - 2\n+         */\n+\n+        VERIFY_CHECK(secp256k1_heap_child1(i) < heap_size);\n+        /* Proof:\n+         * i < heap_size/2\n+         * i + 1 <= heap_size/2\n+         * 2*i + 2 <= heap_size\n+         * 2*i + 1 < heap_size\n+         * child1(i) < heap_size\n+         */\n+\n+        /* Let [x] be notation for the contents at a[x*stride].\n+         *\n+         * If [child1(i)] > [i] and [child2(i)] > [i],\n+         *   swap [i] with the larger child to ensure the new parent is larger\n+         *   than both children. When [child1(i)] == [child2(i)], swap [i] with\n+         *   [child2(i)].\n+         * Else if [child1(i)] > [i], swap [i] with [child1(i)].\n+         * Else if [child2(i)] > [i], swap [i] with [child2(i)].\n+         */\n+        if (secp256k1_heap_child2(i) < heap_size\n+                && 0 <= cmp(arr + secp256k1_heap_child2(i)*stride, arr + secp256k1_heap_child1(i)*stride, cmp_data)) {\n+            if (0 < cmp(arr + secp256k1_heap_child2(i)*stride, arr +         i*stride, cmp_data)) {",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 76,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "b764ca84f98cee6314b0f5891051c87c1e33c82c",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Strange indentation.",
      "created_at": "2024-04-24T15:44:40Z",
      "updated_at": "2024-04-24T15:47:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1578121243",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1578121243"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1578123557",
      "pull_request_review_id": 2020260426,
      "id": 1578123557,
      "node_id": "PRRC_kwDOAP4Jqs5eEEEl",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child1(size_t i) {\n+    VERIFY_CHECK(i <= (SIZE_MAX - 1)/2);\n+    return 2*i + 1;\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child2(size_t i) {\n+    VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+    return secp256k1_heap_child1(i)+1;\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap64(unsigned char *a, unsigned char *b, size_t len) {\n+    unsigned char tmp[64];\n+    VERIFY_CHECK(len <= 64);\n+    memcpy(tmp, a, len);\n+    memmove(a, b, len);\n+    memcpy(b, tmp, len);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap(unsigned char *arr, size_t i, size_t j, size_t stride) {\n+    unsigned char *a = arr + i*stride;\n+    unsigned char *b = arr + j*stride;\n+    size_t len = stride;\n+    while (64 < len) {\n+        secp256k1_heap_swap64(a + (len - 64), b + (len - 64), 64);\n+        len -= 64;\n+    }\n+    secp256k1_heap_swap64(a, b, len);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_down(unsigned char *arr, size_t i, size_t heap_size, size_t stride,",
      "path": "src/hsort_impl.h",
      "position": 51,
      "original_position": 45,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "b764ca84f98cee6314b0f5891051c87c1e33c82c",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe add a one-line description, like \"Given an array arr of length heap_size strides, of which all elements >i satisfy the max-heap property, update it so all elements >=i satisfy the max-heap property\"?",
      "created_at": "2024-04-24T15:46:25Z",
      "updated_at": "2024-04-24T15:47:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1578123557",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1578123557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1578124289",
      "pull_request_review_id": 2020260426,
      "id": 1578124289,
      "node_id": "PRRC_kwDOAP4Jqs5eEEQB",
      "diff_hunk": "@@ -325,6 +326,40 @@ int secp256k1_ec_pubkey_cmp(const secp256k1_context* ctx, const secp256k1_pubkey\n     return secp256k1_memcmp_var(out[0], out[1], sizeof(out[0]));\n }\n \n+/* This struct wraps a const context pointer to satisfy the secp256k1_hsort api",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 12,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "b764ca84f98cee6314b0f5891051c87c1e33c82c",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That sounds like an unnecessary indirection to me, just to avoid casting away a `const`?",
      "created_at": "2024-04-24T15:46:58Z",
      "updated_at": "2024-04-24T15:47:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1578124289",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1578124289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1580081761",
      "pull_request_review_id": 2023508030,
      "id": 1580081761,
      "node_id": "PRRC_kwDOAP4Jqs5eLiJh",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child1(size_t i) {\n+    VERIFY_CHECK(i <= (SIZE_MAX - 1)/2);\n+    return 2*i + 1;\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child2(size_t i) {\n+    VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+    return secp256k1_heap_child1(i)+1;\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap64(unsigned char *a, unsigned char *b, size_t len) {\n+    unsigned char tmp[64];\n+    VERIFY_CHECK(len <= 64);\n+    memcpy(tmp, a, len);\n+    memmove(a, b, len);\n+    memcpy(b, tmp, len);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap(unsigned char *arr, size_t i, size_t j, size_t stride) {\n+    unsigned char *a = arr + i*stride;\n+    unsigned char *b = arr + j*stride;\n+    size_t len = stride;\n+    while (64 < len) {\n+        secp256k1_heap_swap64(a + (len - 64), b + (len - 64), 64);\n+        len -= 64;\n+    }\n+    secp256k1_heap_swap64(a, b, len);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_down(unsigned char *arr, size_t i, size_t heap_size, size_t stride,\n+                            int (*cmp)(const void *, const void *, void *), void *cmp_data) {\n+    while (i < heap_size/2) {\n+        VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+        /* Proof:\n+         * i < heap_size/2\n+         * i + 1 <= heap_size/2\n+         * 2*i + 2 <= heap_size <= SIZE_MAX\n+         * 2*i <= SIZE_MAX - 2\n+         */\n+\n+        VERIFY_CHECK(secp256k1_heap_child1(i) < heap_size);\n+        /* Proof:\n+         * i < heap_size/2\n+         * i + 1 <= heap_size/2\n+         * 2*i + 2 <= heap_size\n+         * 2*i + 1 < heap_size\n+         * child1(i) < heap_size\n+         */\n+\n+        /* Let [x] be notation for the contents at a[x*stride].\n+         *\n+         * If [child1(i)] > [i] and [child2(i)] > [i],\n+         *   swap [i] with the larger child to ensure the new parent is larger\n+         *   than both children. When [child1(i)] == [child2(i)], swap [i] with\n+         *   [child2(i)].\n+         * Else if [child1(i)] > [i], swap [i] with [child1(i)].\n+         * Else if [child2(i)] > [i], swap [i] with [child2(i)].\n+         */\n+        if (secp256k1_heap_child2(i) < heap_size\n+                && 0 <= cmp(arr + secp256k1_heap_child2(i)*stride, arr + secp256k1_heap_child1(i)*stride, cmp_data)) {\n+            if (0 < cmp(arr + secp256k1_heap_child2(i)*stride, arr +         i*stride, cmp_data)) {",
      "path": "src/hsort_impl.h",
      "position": null,
      "original_position": 76,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "b764ca84f98cee6314b0f5891051c87c1e33c82c",
      "in_reply_to_id": 1578121243,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2024-04-25T20:24:07Z",
      "updated_at": "2024-04-25T20:24:07Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1580081761",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1580081761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1580081885",
      "pull_request_review_id": 2023508192,
      "id": 1580081885,
      "node_id": "PRRC_kwDOAP4Jqs5eLiLd",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+/***********************************************************************\n+ * Copyright (c) 2021 Russell O'Connor, Jonas Nick                     *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_HSORT_IMPL_H\n+#define SECP256K1_HSORT_IMPL_H\n+\n+#include \"hsort.h\"\n+\n+/* An array is a heap when, for all non-zero indexes i, the element at index i\n+ * compares as less than or equal to the element at index parent(i) = (i-1)/2.\n+ */\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child1(size_t i) {\n+    VERIFY_CHECK(i <= (SIZE_MAX - 1)/2);\n+    return 2*i + 1;\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_heap_child2(size_t i) {\n+    VERIFY_CHECK(i <= SIZE_MAX/2 - 1);\n+    return secp256k1_heap_child1(i)+1;\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap64(unsigned char *a, unsigned char *b, size_t len) {\n+    unsigned char tmp[64];\n+    VERIFY_CHECK(len <= 64);\n+    memcpy(tmp, a, len);\n+    memmove(a, b, len);\n+    memcpy(b, tmp, len);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_swap(unsigned char *arr, size_t i, size_t j, size_t stride) {\n+    unsigned char *a = arr + i*stride;\n+    unsigned char *b = arr + j*stride;\n+    size_t len = stride;\n+    while (64 < len) {\n+        secp256k1_heap_swap64(a + (len - 64), b + (len - 64), 64);\n+        len -= 64;\n+    }\n+    secp256k1_heap_swap64(a, b, len);\n+}\n+\n+static SECP256K1_INLINE void secp256k1_heap_down(unsigned char *arr, size_t i, size_t heap_size, size_t stride,",
      "path": "src/hsort_impl.h",
      "position": 51,
      "original_position": 45,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "b764ca84f98cee6314b0f5891051c87c1e33c82c",
      "in_reply_to_id": 1578123557,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-04-25T20:24:13Z",
      "updated_at": "2024-04-25T20:24:14Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1580081885",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1580081885"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1580082754",
      "pull_request_review_id": 2023509553,
      "id": 1580082754,
      "node_id": "PRRC_kwDOAP4Jqs5eLiZC",
      "diff_hunk": "@@ -325,6 +326,40 @@ int secp256k1_ec_pubkey_cmp(const secp256k1_context* ctx, const secp256k1_pubkey\n     return secp256k1_memcmp_var(out[0], out[1], sizeof(out[0]));\n }\n \n+/* This struct wraps a const context pointer to satisfy the secp256k1_hsort api",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 12,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "b764ca84f98cee6314b0f5891051c87c1e33c82c",
      "in_reply_to_id": 1578124289,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed it to just cast away const now.",
      "created_at": "2024-04-25T20:25:08Z",
      "updated_at": "2024-04-25T20:25:08Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1580082754",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1580082754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1589089314",
      "pull_request_review_id": 2037959866,
      "id": 1589089314,
      "node_id": "PRRC_kwDOAP4Jqs5et5Qi",
      "diff_hunk": "@@ -325,6 +326,34 @@ int secp256k1_ec_pubkey_cmp(const secp256k1_context* ctx, const secp256k1_pubkey\n     return secp256k1_memcmp_var(out[0], out[1], sizeof(out[0]));\n }\n \n+static int secp256k1_ec_pubkey_sort_cmp(const void* pk1, const void* pk2, void *ctx) {\n+    return secp256k1_ec_pubkey_cmp((secp256k1_context *)ctx,\n+                                     *(secp256k1_pubkey **)pk1,\n+                                     *(secp256k1_pubkey **)pk2);",
      "path": "src/secp256k1.c",
      "position": 15,
      "original_position": 15,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In #1519, I initially created a `secp256k1_silentpayments_recipient_sort_cmp` function using `(secp256k1_silentpayments_recipient *)r->scan_pubkey` instead of `*(secp256k1_silentpayments_recipient **)r->scan_pubkey`. Everything compiled fine, but the end result was my array was not sorted correctly. Took me awhile to figure out that it was due to using `(typedef *)` instead of `*(typedef **)`.\r\n\r\nThis could just be a me problem in not having a strong C background, but wanted to mention it in case its worth documenting.",
      "created_at": "2024-05-03T11:37:12Z",
      "updated_at": "2024-05-03T11:40:27Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1589089314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1589089314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 329,
      "original_start_line": 329,
      "start_side": "RIGHT",
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1590613482",
      "pull_request_review_id": 2040119099,
      "id": 1590613482,
      "node_id": "PRRC_kwDOAP4Jqs5eztXq",
      "diff_hunk": "@@ -3675,6 +3675,77 @@ static void run_inverse_tests(void)\n     }\n }\n \n+/***** HSORT TESTS *****/\n+\n+static void test_heap_swap(void) {\n+    unsigned char a[600];\n+    unsigned char e[sizeof(a)];\n+    memset(a,       21, 200);\n+    memset(a + 200, 99, 200);\n+    memset(a + 400, 42, 200);\n+    memset(e,       42, 200);\n+    memset(e + 200, 99, 200);\n+    memset(e + 400, 21, 200);\n+    secp256k1_heap_swap(a, 0, 2, 200);\n+    CHECK(secp256k1_memcmp_var(a, e, sizeof(a)) == 0);\n+}\n+\n+static void test_hsort_is_sorted(unsigned char *elements, size_t n, size_t len) {\n+    size_t i;\n+    for (i = 1; i < n; i++) {\n+        CHECK(memcmp(&elements[(i-1) * len], &elements[i * len], len) <= 0);\n+    }\n+}\n+\n+struct test_hsort_cmp_data {\n+    size_t counter;\n+    size_t element_len;\n+};\n+\n+static int test_hsort_cmp(const void *ele1, const void *ele2, void *data) {\n+  struct test_hsort_cmp_data *d = (struct test_hsort_cmp_data *) data;\n+  d->counter += 1;\n+  return memcmp((unsigned char *)ele1, (unsigned char *)ele2, d->element_len);\n+}\n+\n+#define NUM 65\n+#define MAX_ELEMENT_LEN 65\n+static void test_hsort(size_t element_len) {\n+    unsigned char elements[NUM * MAX_ELEMENT_LEN] = { 0 };\n+    struct test_hsort_cmp_data data;\n+    int i;\n+\n+    VERIFY_CHECK(element_len <= MAX_ELEMENT_LEN);\n+    data.counter = 0;\n+    data.element_len = element_len;\n+\n+    secp256k1_hsort(elements, 0, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, 1, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter == 0);\n+    secp256k1_hsort(elements, NUM, element_len, test_hsort_cmp, &data);\n+    CHECK(data.counter >= NUM);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 53,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "2bb0baf63d1173929068e040345bb240af420601",
      "in_reply_to_id": 1572830550,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to `NUM-1`.",
      "created_at": "2024-05-06T07:02:05Z",
      "updated_at": "2024-05-06T07:02:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1590613482",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1590613482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3727,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1591091783",
      "pull_request_review_id": 2040914603,
      "id": 1591091783,
      "node_id": "PRRC_kwDOAP4Jqs5e1iJH",
      "diff_hunk": "@@ -325,6 +326,34 @@ int secp256k1_ec_pubkey_cmp(const secp256k1_context* ctx, const secp256k1_pubkey\n     return secp256k1_memcmp_var(out[0], out[1], sizeof(out[0]));\n }\n \n+static int secp256k1_ec_pubkey_sort_cmp(const void* pk1, const void* pk2, void *ctx) {\n+    return secp256k1_ec_pubkey_cmp((secp256k1_context *)ctx,\n+                                     *(secp256k1_pubkey **)pk1,\n+                                     *(secp256k1_pubkey **)pk2);",
      "path": "src/secp256k1.c",
      "position": 15,
      "original_position": 15,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "in_reply_to_id": 1589089314,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm, this is documented. The hsort doc says \"comparison function is called with two arguments that point to the objects being compared\" (which was copied from the qsort_r manpage). If the array you give to hsort consists of elements of type `secp256k1_silentpayments_recipient *`, the comparison function is called with pointers to the elements (`secp256k1_silentpayments_recipient **`).",
      "created_at": "2024-05-06T14:24:28Z",
      "updated_at": "2024-05-06T14:24:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1591091783",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1591091783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 329,
      "original_start_line": 329,
      "start_side": "RIGHT",
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1591118259",
      "pull_request_review_id": 2040956455,
      "id": 1591118259,
      "node_id": "PRRC_kwDOAP4Jqs5e1omz",
      "diff_hunk": "@@ -325,6 +326,34 @@ int secp256k1_ec_pubkey_cmp(const secp256k1_context* ctx, const secp256k1_pubkey\n     return secp256k1_memcmp_var(out[0], out[1], sizeof(out[0]));\n }\n \n+static int secp256k1_ec_pubkey_sort_cmp(const void* pk1, const void* pk2, void *ctx) {\n+    return secp256k1_ec_pubkey_cmp((secp256k1_context *)ctx,\n+                                     *(secp256k1_pubkey **)pk1,\n+                                     *(secp256k1_pubkey **)pk2);",
      "path": "src/secp256k1.c",
      "position": 15,
      "original_position": 15,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "in_reply_to_id": 1589089314,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess seeing stuff like `*(secp256k1_pubkey **)pk1` can be confusing even to seasoned C programmers at first glance, due to the asterisk being used for two related but different things here (first as a dereference operator and then in the cast for indicating a pointer type). But yeah, I don't think we can do anything to improve this. ",
      "created_at": "2024-05-06T14:42:47Z",
      "updated_at": "2024-05-06T14:42:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1591118259",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1591118259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 329,
      "original_start_line": 329,
      "start_side": "RIGHT",
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1591143147",
      "pull_request_review_id": 2040996963,
      "id": 1591143147,
      "node_id": "PRRC_kwDOAP4Jqs5e1urr",
      "diff_hunk": "@@ -325,6 +326,34 @@ int secp256k1_ec_pubkey_cmp(const secp256k1_context* ctx, const secp256k1_pubkey\n     return secp256k1_memcmp_var(out[0], out[1], sizeof(out[0]));\n }\n \n+static int secp256k1_ec_pubkey_sort_cmp(const void* pk1, const void* pk2, void *ctx) {\n+    return secp256k1_ec_pubkey_cmp((secp256k1_context *)ctx,\n+                                     *(secp256k1_pubkey **)pk1,\n+                                     *(secp256k1_pubkey **)pk2);\n+}\n+\n+int secp256k1_ec_pubkey_sort(const secp256k1_context* ctx, const secp256k1_pubkey **pubkeys, size_t n_pubkeys) {\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(pubkeys != NULL);\n+\n+    /* Suppress wrong warning (fixed in MSVC 19.33) */\n+    #if defined(_MSC_VER) && (_MSC_VER < 1933)\n+    #pragma warning(push)\n+    #pragma warning(disable: 4090)\n+    #endif\n+\n+    /* Casting away const is fine because neither secp256k1_hsort nor\n+     * secp256k1_ec_pubkey_sort_cmp modify the data pointed to by the cmp_data\n+     * argument. */\n+    secp256k1_hsort(pubkeys, n_pubkeys, sizeof(*pubkeys), secp256k1_ec_pubkey_sort_cmp, (void *)ctx);\n+\n+    #if defined(_MSC_VER) && (_MSC_VER < 1933)\n+    #pragma warning(pop)\n+    #endif",
      "path": "src/secp256k1.c",
      "position": 35,
      "original_position": 35,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I verified that the pragmas are still necessary now that the call to secp256k1_hsort was changed. See https://godbolt.org/z/13MY3acP1 .",
      "created_at": "2024-05-06T15:00:15Z",
      "updated_at": "2024-05-06T15:00:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1591143147",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1591143147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 339,
      "original_start_line": 339,
      "start_side": "RIGHT",
      "line": 352,
      "original_line": 352,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1591188467",
      "pull_request_review_id": 2041077572,
      "id": 1591188467,
      "node_id": "PRRC_kwDOAP4Jqs5e15vz",
      "diff_hunk": "@@ -325,6 +326,34 @@ int secp256k1_ec_pubkey_cmp(const secp256k1_context* ctx, const secp256k1_pubkey\n     return secp256k1_memcmp_var(out[0], out[1], sizeof(out[0]));\n }\n \n+static int secp256k1_ec_pubkey_sort_cmp(const void* pk1, const void* pk2, void *ctx) {\n+    return secp256k1_ec_pubkey_cmp((secp256k1_context *)ctx,\n+                                     *(secp256k1_pubkey **)pk1,\n+                                     *(secp256k1_pubkey **)pk2);",
      "path": "src/secp256k1.c",
      "position": 15,
      "original_position": 15,
      "commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "original_commit_id": "7d2591ce12d8a9b85f210cf9d678e91cee125ee9",
      "in_reply_to_id": 1589089314,
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "should this be `*(const secp256k1_pubkey * const *)pk1` or something?",
      "created_at": "2024-05-06T15:37:03Z",
      "updated_at": "2024-05-06T15:37:04Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1518#discussion_r1591188467",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1591188467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1518"
        }
      },
      "start_line": 329,
      "original_start_line": 329,
      "start_side": "RIGHT",
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    }
  ]
}