{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710",
    "id": 361677238,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYxNjc3MjM4",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/710.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/710.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/7b50483ad789081ba158799e5b94330f62932607",
    "number": 710,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Eliminate harmless non-constant time operations on secret data.",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There were several places where the code was non-constant time\r\n for invalid secret inputs.  These are harmless under sane use\r\n but get in the way of automatic const-time validation.\r\n\r\n(Nonce overflow in signing is not addressed, nor is s==0 in signing)\r\n",
    "labels": [],
    "created_at": "2020-01-11T01:07:17Z",
    "updated_at": "2020-02-24T13:05:03Z",
    "closed_at": "2020-02-24T13:05:03Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-02-24T13:05:03Z",
    "merge_commit_sha": "96d8ccbd16090551aa003bfa4acd108b0496cb89",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "gmaxwell:202001_ctimefixes",
      "ref": "202001_ctimefixes",
      "sha": "7b50483ad789081ba158799e5b94330f62932607",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "856a01d6ad60c70fd92bdd44fa8584493b87594d",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 948,
        "stargazers_count": 1768,
        "watchers_count": 1768,
        "size": 10062,
        "default_branch": "master",
        "open_issues_count": 142,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-12T16:38:48Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-06-12T17:38:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 197,
    "deletions": 114,
    "changed_files": 20,
    "commits": 2,
    "review_comments": 63,
    "comments": 13
  },
  "events": [
    {
      "event": "commented",
      "id": 573263123,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzI2MzEyMw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/573263123",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-11T01:10:21Z",
      "updated_at": "2020-01-11T14:24:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Only the \"Eliminate harmless\" \"declassify\" commits are new, the rest are in other PRs.\r\n\r\nThis also doesn't touch the privkey tweak functions yet, because I had forgotten about them.\r\n\r\nWith this PR the valgrind test is totally clean except for overflow and s==0 in signing (and except for whatever functions like the tweak that should be tested but aren't tested yet).\r\n\r\nNonce overflow is a real non-constant timeness but security irrelevant because it never happens.\r\n\r\ns==0 test is not actually a branch on secret data, but is instead a false positive owing to the fact that I haven't put in anything yet to tell valgrind that the data is no longer secret at that point-- though that will be easy to do.\r\n\r\nThis was made somewhat more complicated by preserving the output-zeroization on failure.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-573263123",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "commented",
      "id": 573317745,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzMxNzc0NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/573317745",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-11T13:38:08Z",
      "updated_at": "2020-01-11T13:38:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "With the latest commit the tests run clean.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-573317745",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "renamed",
      "id": 2951863286,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50Mjk1MTg2MzI4Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2951863286",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-15T18:29:36Z",
      "rename": {
        "from": "[WIP] Eliminate harmless non-constant time operations on secret data.",
        "to": "Eliminate harmless non-constant time operations on secret data."
      }
    },
    {
      "event": "commented",
      "id": 574792535,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDc5MjUzNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/574792535",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-15T18:33:01Z",
      "updated_at": "2020-01-15T18:55:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "I added a fixups commit which fixes the seckey verify and tweak operations which were previously not tested.\r\n\r\nThere is a remaining issue that the the scalar code uses \"th += (c0 < tl) ? 1 : 0;\"  which doesn't always compile to constant time code. E.g. 32-bit scalar on power9 w/ GCC 9.2.1 turns some of the muladds into branches  (e.g. src/scalar_8x32_impl.h:444).",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-574792535",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "commented",
      "id": 574800793,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDgwMDc5Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/574800793",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-15T18:54:40Z",
      "updated_at": "2020-01-15T18:58:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "I could use some help figuring out an alternative for that sort of carry which is equally fast and doesn't sometimes get turned into branches.\r\n\r\nSimilarly, testing this with different compilers/build-options/arches would be useful to learn if there are any other missed cases.\r\n\r\nI think this is probably enough progress to merge-- it does at least make the tests clean on my desktop--, if people would like I can drop off the tester commit and I could work towards merging this much even though there are a few platform/compiler specific issues remaining.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-574800793",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "commented",
      "id": 578439413,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODQzOTQxMw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/578439413",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-25T20:16:59Z",
      "updated_at": "2020-01-25T20:16:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Anyone here?",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-578439413",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "mentioned",
      "id": 2979819251,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjk3OTgxOTI1MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2979819251",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-26T10:15:10Z"
    },
    {
      "event": "subscribed",
      "id": 2979819252,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5Nzk4MTkyNTI=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2979819252",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-26T10:15:10Z"
    },
    {
      "event": "reviewed",
      "id": 348369268,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzY5MjY4",
      "url": null,
      "actor": null,
      "commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I reviewed all the cmov implementations in godbolt with latest 3 versions of gcc,clang,icc and WINE MSVC 2017 x64\r\n\r\nPersonally I'd prefer to split between the changes and the valgrind addition./\r\n\r\nI like that the valgrind call is wrapped in `#if defined(VALGRIND)` but Idk about the addition of int to the context just for this, but I don't feel knowledgeable enough to comment on this seriously.",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#pullrequestreview-348369268",
      "submitted_at": "2020-01-26T11:02:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
    },
    {
      "event": "mentioned",
      "id": 2998916767,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjk5ODkxNjc2Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2998916767",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-01T00:24:52Z"
    },
    {
      "event": "subscribed",
      "id": 2998916768,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5OTg5MTY3Njg=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2998916768",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-01T00:24:52Z"
    },
    {
      "event": "mentioned",
      "id": 2998916770,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjk5ODkxNjc3MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2998916770",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-01T00:24:52Z"
    },
    {
      "event": "subscribed",
      "id": 2998916772,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5OTg5MTY3NzI=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2998916772",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-01T00:24:52Z"
    },
    {
      "event": "reviewed",
      "id": 351845504,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODQ1NTA0",
      "url": null,
      "actor": null,
      "commit_id": "4f720541eb3bdc0bc597fe62cbde52e5b35e96eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, nothing seems painfully invasive here or detrimental to performance.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#pullrequestreview-351845504",
      "submitted_at": "2020-02-01T01:08:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
    },
    {
      "event": "commented",
      "id": 581039961,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTAzOTk2MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/581039961",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-01T15:22:41Z",
      "updated_at": "2020-02-01T15:22:41Z",
      "author_association": "MEMBER",
      "body": "I'll have a closer look next week.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-581039961",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "mentioned",
      "id": 2999554936,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjk5OTU1NDkzNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2999554936",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-01T19:48:55Z"
    },
    {
      "event": "subscribed",
      "id": 2999554938,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5OTk1NTQ5Mzg=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2999554938",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-01T19:48:55Z"
    },
    {
      "event": "mentioned",
      "id": 2999557568,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjk5OTU1NzU2OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2999557568",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-01T19:54:18Z"
    },
    {
      "event": "subscribed",
      "id": 2999557570,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5OTk1NTc1NzA=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2999557570",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-01T19:54:18Z"
    },
    {
      "event": "mentioned",
      "id": 3000917278,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzAwMDkxNzI3OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3000917278",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-03T06:34:51Z"
    },
    {
      "event": "subscribed",
      "id": 3000917280,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwMDA5MTcyODA=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3000917280",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-03T06:34:51Z"
    },
    {
      "event": "reviewed",
      "id": 352339527,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMzM5NTI3",
      "url": null,
      "actor": null,
      "commit_id": "bf40d0f1b6a0f3de351044ae24ee20db74122f5b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Let me repeat that this great stuff and very helpful.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#pullrequestreview-352339527",
      "submitted_at": "2020-02-03T19:09:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
    },
    {
      "event": "reviewed",
      "id": 356302554,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzAyNTU0",
      "url": null,
      "actor": null,
      "commit_id": "bf3baf72d018d7d220abc2ff88c60eb1a7285c87",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Needs rebase, but otherwise looks good to me.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#pullrequestreview-356302554",
      "submitted_at": "2020-02-10T22:11:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
    },
    {
      "event": "commented",
      "id": 584438988,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDQzODk4OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/584438988",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T01:20:43Z",
      "updated_at": "2020-02-11T01:20:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Dropped the testing commit, it's now only in #708 which is rebased on top of this branch. I'll keep rebasing 708 based on this one now.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-584438988",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "commented",
      "id": 584485042,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDQ4NTA0Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/584485042",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T05:38:40Z",
      "updated_at": "2020-02-11T05:38:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think I've lost track of where this is in review. I fixed some things, explained some things, closed some comments,  but feel kind of lost.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-584485042",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "mentioned",
      "id": 3026111522,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzAyNjExMTUyMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3026111522",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T11:10:57Z"
    },
    {
      "event": "subscribed",
      "id": 3026111523,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwMjYxMTE1MjM=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3026111523",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T11:10:57Z"
    },
    {
      "event": "mentioned",
      "id": 3026111759,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzAyNjExMTc1OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3026111759",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T11:11:02Z"
    },
    {
      "event": "subscribed",
      "id": 3026111775,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwMjYxMTE3NzU=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3026111775",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T11:11:02Z"
    },
    {
      "event": "commented",
      "id": 584586856,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDU4Njg1Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/584586856",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T11:15:27Z",
      "updated_at": "2020-02-11T11:15:27Z",
      "author_association": "MEMBER",
      "body": "> I think I've lost track of where this is in review. I fixed some things, explained some things, closed some comments, but feel kind of lost.\r\n\r\nI understand... I always feel lost when looking at this PR because the comments are on many different commits... I pinged you on the two conversations which you haven't addressed. They're both not crucial, it's just my try of making everyone feel less lost and organize the PR.\r\n\r\nThere's nothing else from my side, I can ACK this after your reply.  ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-584586856",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "commented",
      "id": 584614969,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDYxNDk2OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/584614969",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T12:38:17Z",
      "updated_at": "2020-02-11T12:38:17Z",
      "author_association": "MEMBER",
      "body": "I think you also missed that one:\r\nhttps://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373744796",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-584614969",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "commented",
      "id": 584617680,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDYxNzY4MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/584617680",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T12:46:00Z",
      "updated_at": "2020-02-11T12:46:00Z",
      "author_association": "CONTRIBUTOR",
      "body": ":-/  In fact I didn't miss it, I made the change and then must have lost it in a rebase.  I wonder if I lost any other changes at the same time.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-584617680",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "reviewed",
      "id": 356663391,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NjYzMzkx",
      "url": null,
      "actor": null,
      "commit_id": "3eb69f6d1a917079131b415c4e92ea45259ec641",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 3eb69f6d1a917079131b415c4e92ea45259ec641",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#pullrequestreview-356663391",
      "submitted_at": "2020-02-11T13:42:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
    },
    {
      "event": "reviewed",
      "id": 357425903,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NDI1OTAz",
      "url": null,
      "actor": null,
      "commit_id": "3eb69f6d1a917079131b415c4e92ea45259ec641",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#pullrequestreview-357425903",
      "submitted_at": "2020-02-12T13:01:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
    },
    {
      "event": "reviewed",
      "id": 357433699,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NDMzNjk5",
      "url": null,
      "actor": null,
      "commit_id": "3eb69f6d1a917079131b415c4e92ea45259ec641",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#pullrequestreview-357433699",
      "submitted_at": "2020-02-12T13:04:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6MzRhNjdjNzczYjA4NzFlNTc5N2M3YWI1MDZkMDA0ZTgwOTExZjEyMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/34a67c773b0871e5797c7ab506d004e80911f120",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/34a67c773b0871e5797c7ab506d004e80911f120",
      "tree": {
        "sha": "583dbba9a12fe76e380356610873f8b22d2545e7",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/583dbba9a12fe76e380356610873f8b22d2545e7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/856a01d6ad60c70fd92bdd44fa8584493b87594d",
          "sha": "856a01d6ad60c70fd92bdd44fa8584493b87594d",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/856a01d6ad60c70fd92bdd44fa8584493b87594d"
        }
      ],
      "message": "Eliminate harmless non-constant time operations on secret data.\n\nThere were several places where the code was non-constant time\n for invalid secret inputs.  These are harmless under sane use\n but get in the way of automatic const-time validation.\n\n(Nonce overflow in signing is not addressed, nor is s==0 in\n signing)",
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2020-02-20T17:27:03Z"
      },
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2020-01-11T01:01:05Z"
      },
      "sha": "34a67c773b0871e5797c7ab506d004e80911f120"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6N2I1MDQ4M2FkNzg5MDgxYmExNTg3OTllNWI5NDMzMGY2MjkzMjYwNw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/7b50483ad789081ba158799e5b94330f62932607",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/7b50483ad789081ba158799e5b94330f62932607",
      "tree": {
        "sha": "6a7d869823dd54972240730ea50275aac47495d3",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/6a7d869823dd54972240730ea50275aac47495d3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/34a67c773b0871e5797c7ab506d004e80911f120",
          "sha": "34a67c773b0871e5797c7ab506d004e80911f120",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/34a67c773b0871e5797c7ab506d004e80911f120"
        }
      ],
      "message": "Adds a declassify operation to aid constant-time analysis.\n\nECDSA signing has a retry loop for the exceptionally unlikely case\n that S==0.  S is not a secret at this point and this case is so\n rare that it will never be observed but branching on it will trip\n up tools analysing if the code is constant time with respect to\n secrets.\n\nDerandomized ECDSA can also loop on k being zero or overflowing,\n and while k is a secret these cases are too rare (1:2^255) to\n ever observe and are also of no concern.\n\nThis adds a function for marking memory as no-longer-secret and\n sets it up for use with the valgrind memcheck constant-time\n test.",
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2020-02-20T17:27:26Z"
      },
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2020-01-11T13:31:50Z"
      },
      "sha": "7b50483ad789081ba158799e5b94330f62932607"
    },
    {
      "event": "reviewed",
      "id": 362514980,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTE0OTgw",
      "url": null,
      "actor": null,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "reACK 7b50483ad789081ba158799e5b94330f62932607",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#pullrequestreview-362514980",
      "submitted_at": "2020-02-21T09:56:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
    },
    {
      "event": "commented",
      "id": 589917504,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTkxNzUwNA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/589917504",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-22T04:34:19Z",
      "updated_at": "2020-02-22T04:34:19Z",
      "author_association": "MEMBER",
      "body": "utACK 7b50483ad789081ba158799e5b94330f62932607",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-589917504",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "commented",
      "id": 590308937,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDMwODkzNw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/590308937",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-24T13:01:47Z",
      "updated_at": "2020-02-24T13:01:47Z",
      "author_association": "MEMBER",
      "body": "ACK 7b50483ad789081ba158799e5b94330f62932607 I read the code carefully and tested it",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#issuecomment-590308937",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/710"
    },
    {
      "event": "reviewed",
      "id": 363371623,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMzcxNjIz",
      "url": null,
      "actor": null,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#pullrequestreview-363371623",
      "submitted_at": "2020-02-24T13:02:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
    },
    {
      "event": "merged",
      "id": 3065276623,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzA2NTI3NjYyMw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3065276623",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "96d8ccbd16090551aa003bfa4acd108b0496cb89",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/96d8ccbd16090551aa003bfa4acd108b0496cb89",
      "created_at": "2020-02-24T13:05:03Z"
    },
    {
      "event": "closed",
      "id": 3065276631,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzA2NTI3NjYzMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3065276631",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-24T13:05:03Z"
    },
    {
      "event": "referenced",
      "id": 3420145195,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0MjAxNDUxOTU=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3420145195",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2ed54da18add295668ec71c91534b640d2cc029b",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/2ed54da18add295668ec71c91534b640d2cc029b",
      "created_at": "2020-06-08T13:46:19Z"
    },
    {
      "event": "referenced",
      "id": 3440347769,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDAzNDc3Njk=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3440347769",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8c97780db8c9dd33efed134385573ba97e9cd165",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c97780db8c9dd33efed134385573ba97e9cd165",
      "created_at": "2020-06-13T01:50:52Z"
    },
    {
      "event": "referenced",
      "id": 3440492953,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDA0OTI5NTM=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3440492953",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8a3a072968d77b420b8856a8d98600f0d67dbf66",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/8a3a072968d77b420b8856a8d98600f0d67dbf66",
      "created_at": "2020-06-13T05:45:50Z"
    },
    {
      "event": "referenced",
      "id": 3447518330,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDc1MTgzMzA=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3447518330",
      "actor": {
        "login": "ComputerCraftr",
        "id": 27882076,
        "node_id": "MDQ6VXNlcjI3ODgyMDc2",
        "avatar_url": "https://avatars.githubusercontent.com/u/27882076?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ComputerCraftr",
        "html_url": "https://github.com/ComputerCraftr",
        "followers_url": "https://api.github.com/users/ComputerCraftr/followers",
        "following_url": "https://api.github.com/users/ComputerCraftr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ComputerCraftr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ComputerCraftr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ComputerCraftr/subscriptions",
        "organizations_url": "https://api.github.com/users/ComputerCraftr/orgs",
        "repos_url": "https://api.github.com/users/ComputerCraftr/repos",
        "events_url": "https://api.github.com/users/ComputerCraftr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ComputerCraftr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b98f1c6e6c3320ba34f8bb9f1fea4b4a99f94546",
      "commit_url": "https://api.github.com/repos/ComputerCraftr/bitcoin/commits/b98f1c6e6c3320ba34f8bb9f1fea4b4a99f94546",
      "created_at": "2020-06-16T07:03:04Z"
    },
    {
      "event": "referenced",
      "id": 5138104942,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMzgxMDQ5NDI=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5138104942",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9d36ba6570acfaa4935874dcd2ef750295ed0bbb",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/9d36ba6570acfaa4935874dcd2ef750295ed0bbb",
      "created_at": "2021-08-10T22:21:59Z"
    },
    {
      "event": "referenced",
      "id": 5149897620,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDk4OTc2MjA=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5149897620",
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8ded2caa74d5150cbce899749fbe02b49784d17a",
      "commit_url": "https://api.github.com/repos/5tefan/dash/commits/8ded2caa74d5150cbce899749fbe02b49784d17a",
      "created_at": "2021-08-12T14:39:46Z"
    },
    {
      "event": "referenced",
      "id": 6568857288,
      "node_id": "REFE_lADOAP4Jqs4gr0ipzwAAAAGHiM7I",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6568857288",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d855cc511dd608b3e58e0387cd3826f2fba4fa0a",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/d855cc511dd608b3e58e0387cd3826f2fba4fa0a",
      "created_at": "2022-05-08T16:47:43Z"
    },
    {
      "event": "referenced",
      "id": 9393493733,
      "node_id": "REFE_lADOAP4Jqs4gr0ipzwAAAAIv5Vbl",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9393493733",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "debf3e5c08ab7a60e8d06f767b6cb3131c722e7c",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/debf3e5c08ab7a60e8d06f767b6cb3131c722e7c",
      "created_at": "2023-05-31T17:39:11Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370986680",
      "pull_request_review_id": 348369268,
      "id": 370986680,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4NjY4MA==",
      "diff_hunk": "@@ -183,21 +183,18 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     }\n     secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, seed32 ? 64 : 32);\n     memset(keydata, 0, sizeof(keydata));\n-    /* Retry for out of range results to achieve uniformity. */\n-    do {\n-        secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-        retry = !secp256k1_fe_set_b32(&s, nonce32);\n-        retry = retry || secp256k1_fe_is_zero(&s);\n-    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > Fp. */\n+    /* Accept unobservably small non-uniformity. */\n+    secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+    range = !secp256k1_fe_set_b32(&s, nonce32);\n+    range |= secp256k1_fe_is_zero(&s);\n+    secp256k1_fe_cmov(&s, &secp256k1_fe_one, range);",
      "path": "src/ecmult_gen_impl.h",
      "position": null,
      "original_position": 23,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why set to one instead of just letting it overflow?",
      "created_at": "2020-01-26T10:01:10Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370986680",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370986680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370987001",
      "pull_request_review_id": 348369268,
      "id": 370987001,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4NzAwMQ==",
      "diff_hunk": "@@ -183,21 +183,18 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     }\n     secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, seed32 ? 64 : 32);\n     memset(keydata, 0, sizeof(keydata));\n-    /* Retry for out of range results to achieve uniformity. */\n-    do {\n-        secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-        retry = !secp256k1_fe_set_b32(&s, nonce32);\n-        retry = retry || secp256k1_fe_is_zero(&s);\n-    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > Fp. */\n+    /* Accept unobservably small non-uniformity. */\n+    secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+    range = !secp256k1_fe_set_b32(&s, nonce32);\n+    range |= secp256k1_fe_is_zero(&s);\n+    secp256k1_fe_cmov(&s, &secp256k1_fe_one, range);\n     /* Randomize the projection to defend against multiplier sidechannels. */\n     secp256k1_gej_rescale(&ctx->initial, &s);\n     secp256k1_fe_clear(&s);\n-    do {\n-        secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-        secp256k1_scalar_set_b32(&b, nonce32, &retry);\n-        /* A blinding value of 0 works, but would undermine the projection hardening. */\n-        retry = retry || secp256k1_scalar_is_zero(&b);\n-    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > order. */\n+    secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+    secp256k1_scalar_set_b32(&b, nonce32, NULL);\n+    /* A blinding value of 0 works, but would undermine the projection hardening. */\n+    secp256k1_scalar_cmov(&b, &secp256k1_scalar_one, secp256k1_scalar_is_zero(&b));",
      "path": "src/ecmult_gen_impl.h",
      "position": 36,
      "original_position": 36,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same",
      "created_at": "2020-01-26T10:06:42Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370987001",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370987001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 197,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370987035",
      "pull_request_review_id": 348369268,
      "id": 370987035,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4NzAzNQ==",
      "diff_hunk": "@@ -331,15 +332,15 @@ static int secp256k1_fe_set_b32(secp256k1_fe *r, const unsigned char *a) {\n     r->n[8] = (uint32_t)a[5] | ((uint32_t)a[4] << 8) | ((uint32_t)a[3] << 16) | ((uint32_t)(a[2] & 0x3) << 24);\n     r->n[9] = (uint32_t)((a[2] >> 2) & 0x3f) | ((uint32_t)a[1] << 6) | ((uint32_t)a[0] << 14);\n \n-    if (r->n[9] == 0x3FFFFFUL && (r->n[8] & r->n[7] & r->n[6] & r->n[5] & r->n[4] & r->n[3] & r->n[2]) == 0x3FFFFFFUL && (r->n[1] + 0x40UL + ((r->n[0] + 0x3D1UL) >> 26)) > 0x3FFFFFFUL) {\n-        return 0;\n-    }\n+    ret = !((r->n[9] == 0x3FFFFFUL) & ((r->n[8] & r->n[7] & r->n[6] & r->n[5] & r->n[4] & r->n[3] & r->n[2]) == 0x3FFFFFFUL) & ((r->n[1] + 0x40UL + ((r->n[0] + 0x3D1UL) >> 26)) > 0x3FFFFFFUL));",
      "path": "src/field_10x26_impl.h",
      "position": 15,
      "original_position": 15,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't `.. > 0x3FFFFFFUL` still a branch?",
      "created_at": "2020-01-26T10:07:29Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370987035",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370987035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370987083",
      "pull_request_review_id": 348369268,
      "id": 370987083,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4NzA4Mw==",
      "diff_hunk": "@@ -317,15 +318,15 @@ static int secp256k1_fe_set_b32(secp256k1_fe *r, const unsigned char *a) {\n             | ((uint64_t)a[2] << 24)\n             | ((uint64_t)a[1] << 32)\n             | ((uint64_t)a[0] << 40);\n-    if (r->n[4] == 0x0FFFFFFFFFFFFULL && (r->n[3] & r->n[2] & r->n[1]) == 0xFFFFFFFFFFFFFULL && r->n[0] >= 0xFFFFEFFFFFC2FULL) {\n-        return 0;\n-    }\n+    ret = !((r->n[4] == 0x0FFFFFFFFFFFFULL) & ((r->n[3] & r->n[2] & r->n[1]) == 0xFFFFFFFFFFFFFULL) & (r->n[0] >= 0xFFFFEFFFFFC2FULL));",
      "path": "src/field_5x52_impl.h",
      "position": 15,
      "original_position": 15,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same for >= 0xFFFFEFFFFFC2FULL",
      "created_at": "2020-01-26T10:08:19Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370987083",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370987083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 321,
      "original_line": 321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370987476",
      "pull_request_review_id": 348369268,
      "id": 370987476,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4NzQ3Ng==",
      "diff_hunk": "@@ -32,36 +32,40 @@ int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *output, const se\n     secp256k1_gej res;\n     secp256k1_ge pt;\n     secp256k1_scalar s;\n+    unsigned char x[32];\n+    unsigned char y[32];\n+\n     VERIFY_CHECK(ctx != NULL);\n     ARG_CHECK(output != NULL);\n     ARG_CHECK(point != NULL);\n     ARG_CHECK(scalar != NULL);\n+\n     if (hashfp == NULL) {\n         hashfp = secp256k1_ecdh_hash_function_default;\n     }\n \n     secp256k1_pubkey_load(ctx, &pt, point);\n     secp256k1_scalar_set_b32(&s, scalar, &overflow);\n-    if (overflow || secp256k1_scalar_is_zero(&s)) {\n-        ret = 0;\n-    } else {\n-        unsigned char x[32];\n-        unsigned char y[32];\n-\n-        secp256k1_ecmult_const(&res, &pt, &s, 256);\n-        secp256k1_ge_set_gej(&pt, &res);\n-\n-        /* Compute a hash of the point */\n-        secp256k1_fe_normalize(&pt.x);\n-        secp256k1_fe_normalize(&pt.y);\n-        secp256k1_fe_get_b32(x, &pt.x);\n-        secp256k1_fe_get_b32(y, &pt.y);\n-\n-        ret = hashfp(output, x, y, data);\n-    }\n \n+    overflow |= secp256k1_scalar_is_zero(&s);\n+    secp256k1_scalar_cmov(&s, &secp256k1_scalar_one, overflow);\n+\n+    secp256k1_ecmult_const(&res, &pt, &s, 256);\n+    secp256k1_ge_set_gej(&pt, &res);\n+\n+    /* Compute a hash of the point */\n+    secp256k1_fe_normalize(&pt.x);\n+    secp256k1_fe_normalize(&pt.y);\n+    secp256k1_fe_get_b32(x, &pt.x);\n+    secp256k1_fe_get_b32(y, &pt.y);\n+\n+    ret = hashfp(output, x, y, data);\n+\n+    memset(x, 0, 32);\n+    memset(y, 0, 32);\n     secp256k1_scalar_clear(&s);\n-    return ret;\n+\n+    return !!ret & !overflow;",
      "path": "src/modules/ecdh/main_impl.h",
      "position": 55,
      "original_position": 55,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "FYI this is a change in behavior.\r\nbefore that we returned ret as is, here we check if ret>1 or not.\r\ni.e. if someone passes `hashfp` that returned 5 this function will now return 1 instead of 5\r\n(we use this behavior in rust-secp https://github.com/rust-bitcoin/rust-secp256k1/blob/master/src/ecdh.rs#L162 @apoelstra)",
      "created_at": "2020-01-26T10:15:09Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370987476",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370987476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370988889",
      "pull_request_review_id": 348369268,
      "id": 370988889,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4ODg4OQ==",
      "diff_hunk": "@@ -718,4 +718,18 @@ SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r,\n     secp256k1_scalar_cadd_bit(r, 0, (l[(shift - 1) >> 5] >> ((shift - 1) & 0x1f)) & 1);\n }\n \n+static SECP256K1_INLINE void secp256k1_scalar_cmov(secp256k1_scalar *r, const secp256k1_scalar *a, int flag) {",
      "path": "src/scalar_8x32_impl.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~icc 19.0.1 produces branching in this function https://godbolt.org/z/882jPA~ (seems to be a check for overlaps and then it either uses vector ops or \"regular\" ops)\r\nand gcc(trunk) with `-O3 -march=native` uses `vmovdqu` which might be variable time on AMD Bolldozer according to https://www.agner.org/optimize/instruction_tables.pdf",
      "created_at": "2020-01-26T10:40:02Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370988889",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370988889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 721,
      "original_line": 721,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370989287",
      "pull_request_review_id": 348369268,
      "id": 370989287,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4OTI4Nw==",
      "diff_hunk": "@@ -946,4 +946,14 @@ SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r,\n     secp256k1_scalar_cadd_bit(r, 0, (l[(shift - 1) >> 6] >> ((shift - 1) & 0x3f)) & 1);\n }\n \n+static SECP256K1_INLINE void secp256k1_scalar_cmov(secp256k1_scalar *r, const secp256k1_scalar *a, int flag) {",
      "path": "src/scalar_4x64_impl.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same as below. gcc(trunk) with `-O3 -march=native` uses `vmovdqu64` which might be variable time on AMD bolldozer",
      "created_at": "2020-01-26T10:47:13Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370989287",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370989287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 949,
      "original_line": 949,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370989592",
      "pull_request_review_id": 348369268,
      "id": 370989592,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4OTU5Mg==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {",
      "path": "src/secp256k1.c",
      "position": 90,
      "original_position": 90,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why not `cmov` on this too? (or just let it overflow? altough that will be a behavior change)\r\nif `koverflow` put 1 into the k and sign, but then clear and return 0",
      "created_at": "2020-01-26T10:53:24Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370989592",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370989592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 501,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370989735",
      "pull_request_review_id": 348369268,
      "id": 370989735,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4OTczNQ==",
      "diff_hunk": "@@ -160,4 +160,16 @@ static SECP256K1_INLINE void *manual_alloc(void** prealloc_ptr, size_t alloc_siz\n SECP256K1_GNUC_EXT typedef unsigned __int128 uint128_t;\n #endif\n \n+/* Zero memory if flag == 1. Constant time. */\n+static SECP256K1_INLINE void memczero(void *s, size_t len, int flag) {",
      "path": "src/util.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why not just `unsigned char flag`? why int and then case? ",
      "created_at": "2020-01-26T10:56:12Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370989735",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370989735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370989773",
      "pull_request_review_id": 348369268,
      "id": 370989773,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4OTc3Mw==",
      "diff_hunk": "@@ -160,4 +160,16 @@ static SECP256K1_INLINE void *manual_alloc(void** prealloc_ptr, size_t alloc_siz\n SECP256K1_GNUC_EXT typedef unsigned __int128 uint128_t;\n #endif\n \n+/* Zero memory if flag == 1. Constant time. */\n+static SECP256K1_INLINE void memczero(void *s, size_t len, int flag) {",
      "path": "src/util.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989735,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "And I like the idea here :)",
      "created_at": "2020-01-26T10:56:41Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370989773",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370989773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370989840",
      "pull_request_review_id": 348369268,
      "id": 370989840,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4OTg0MA==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            int success = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret. */\n+            declassify(ctx, &success, sizeof(success));\n+            if (success) {\n                 break;\n             }\n-            secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n-            if (!overflow && !secp256k1_scalar_is_zero(&non)) {\n-                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {\n-                    break;\n-                }\n-            }\n-            count++;\n         }\n-        memset(nonce32, 0, 32);\n-        secp256k1_scalar_clear(&msg);\n-        secp256k1_scalar_clear(&non);\n-        secp256k1_scalar_clear(&sec);\n-    }\n-    if (ret) {\n-        secp256k1_ecdsa_signature_save(signature, &r, &s);\n-    } else {\n-        memset(signature, 0, sizeof(*signature));\n+        count++;\n     }\n-    return ret;\n+    memset(nonce32, 0, 32);\n+    secp256k1_scalar_clear(&msg);\n+    secp256k1_scalar_clear(&non);\n+    secp256k1_scalar_clear(&sec);\n+    secp256k1_ecdsa_signature_save(signature, &r, &s);\n+    memczero(signature, sizeof(*signature), (!ret) | overflow);\n+    return !!ret & !overflow;",
      "path": "src/secp256k1.c",
      "position": 124,
      "original_position": 123,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same behavior change on `ret`",
      "created_at": "2020-01-26T10:57:50Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r370989840",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/370989840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 518,
      "original_line": 518,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371028630",
      "pull_request_review_id": 348404328,
      "id": 371028630,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyODYzMA==",
      "diff_hunk": "@@ -331,15 +332,15 @@ static int secp256k1_fe_set_b32(secp256k1_fe *r, const unsigned char *a) {\n     r->n[8] = (uint32_t)a[5] | ((uint32_t)a[4] << 8) | ((uint32_t)a[3] << 16) | ((uint32_t)(a[2] & 0x3) << 24);\n     r->n[9] = (uint32_t)((a[2] >> 2) & 0x3f) | ((uint32_t)a[1] << 6) | ((uint32_t)a[0] << 14);\n \n-    if (r->n[9] == 0x3FFFFFUL && (r->n[8] & r->n[7] & r->n[6] & r->n[5] & r->n[4] & r->n[3] & r->n[2]) == 0x3FFFFFFUL && (r->n[1] + 0x40UL + ((r->n[0] + 0x3D1UL) >> 26)) > 0x3FFFFFFUL) {\n-        return 0;\n-    }\n+    ret = !((r->n[9] == 0x3FFFFFUL) & ((r->n[8] & r->n[7] & r->n[6] & r->n[5] & r->n[4] & r->n[3] & r->n[2]) == 0x3FFFFFFUL) & ((r->n[1] + 0x40UL + ((r->n[0] + 0x3D1UL) >> 26)) > 0x3FFFFFFUL));",
      "path": "src/field_10x26_impl.h",
      "position": 15,
      "original_position": 15,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370987035,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not on any compilers, platforms I tested it on. AFAICT. If it is, a LOT of the code is screwed.",
      "created_at": "2020-01-26T20:55:15Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r371028630",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371028630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371029012",
      "pull_request_review_id": 348404644,
      "id": 371029012,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyOTAxMg==",
      "diff_hunk": "@@ -32,36 +32,40 @@ int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *output, const se\n     secp256k1_gej res;\n     secp256k1_ge pt;\n     secp256k1_scalar s;\n+    unsigned char x[32];\n+    unsigned char y[32];\n+\n     VERIFY_CHECK(ctx != NULL);\n     ARG_CHECK(output != NULL);\n     ARG_CHECK(point != NULL);\n     ARG_CHECK(scalar != NULL);\n+\n     if (hashfp == NULL) {\n         hashfp = secp256k1_ecdh_hash_function_default;\n     }\n \n     secp256k1_pubkey_load(ctx, &pt, point);\n     secp256k1_scalar_set_b32(&s, scalar, &overflow);\n-    if (overflow || secp256k1_scalar_is_zero(&s)) {\n-        ret = 0;\n-    } else {\n-        unsigned char x[32];\n-        unsigned char y[32];\n-\n-        secp256k1_ecmult_const(&res, &pt, &s, 256);\n-        secp256k1_ge_set_gej(&pt, &res);\n-\n-        /* Compute a hash of the point */\n-        secp256k1_fe_normalize(&pt.x);\n-        secp256k1_fe_normalize(&pt.y);\n-        secp256k1_fe_get_b32(x, &pt.x);\n-        secp256k1_fe_get_b32(y, &pt.y);\n-\n-        ret = hashfp(output, x, y, data);\n-    }\n \n+    overflow |= secp256k1_scalar_is_zero(&s);\n+    secp256k1_scalar_cmov(&s, &secp256k1_scalar_one, overflow);\n+\n+    secp256k1_ecmult_const(&res, &pt, &s, 256);\n+    secp256k1_ge_set_gej(&pt, &res);\n+\n+    /* Compute a hash of the point */\n+    secp256k1_fe_normalize(&pt.x);\n+    secp256k1_fe_normalize(&pt.y);\n+    secp256k1_fe_get_b32(x, &pt.x);\n+    secp256k1_fe_get_b32(y, &pt.y);\n+\n+    ret = hashfp(output, x, y, data);\n+\n+    memset(x, 0, 32);\n+    memset(y, 0, 32);\n     secp256k1_scalar_clear(&s);\n-    return ret;\n+\n+    return !!ret & !overflow;",
      "path": "src/modules/ecdh/main_impl.h",
      "position": 55,
      "original_position": 55,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370987476,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You are relying on behavior that directly contradicts the documentation and isn't tested.\r\n\r\n *  Returns: 1: exponentiation was successful\r\n *           0: scalar was invalid (zero or overflow)\r\n\r\nNonce functions have an opaque data, so they can return information in other ways...\r\n\r\nIn either case the interface should be tested.   I knew I was tightening up the behavior to better match the public interface but didn't consider the existence of bespoke nonce functions that would return something else only that further changes might accidentally return non-0/1 values.\r\n\r\nThanks for noticing this!  I consider the return values not agreeing with the docs to be a pretty serious bug, and it's unfortunate that there aren't tests for cases where the nonce function induces it.  That said, the noncefp docs specify that the return is 0 or 1 too: \" * Returns: 1 if a nonce was successfully generated. 0 will cause signing to fail.\"",
      "created_at": "2020-01-26T21:01:23Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r371029012",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371029012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371029655",
      "pull_request_review_id": 348405177,
      "id": 371029655,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyOTY1NQ==",
      "diff_hunk": "@@ -718,4 +718,18 @@ SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r,\n     secp256k1_scalar_cadd_bit(r, 0, (l[(shift - 1) >> 5] >> ((shift - 1) & 0x1f)) & 1);\n }\n \n+static SECP256K1_INLINE void secp256k1_scalar_cmov(secp256k1_scalar *r, const secp256k1_scalar *a, int flag) {",
      "path": "src/scalar_8x32_impl.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370988889,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Many of the vector/memory load store instructions can be variable time based on _alignment_, which wouldn't be a problem for us. In any case, that code emits vmovdqu32 which is an avx512 instruction, it doesn't exist on bulldozer.",
      "created_at": "2020-01-26T21:11:57Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r371029655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371029655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 721,
      "original_line": 721,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371029682",
      "pull_request_review_id": 348405199,
      "id": 371029682,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyOTY4Mg==",
      "diff_hunk": "@@ -946,4 +946,14 @@ SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r,\n     secp256k1_scalar_cadd_bit(r, 0, (l[(shift - 1) >> 6] >> ((shift - 1) & 0x3f)) & 1);\n }\n \n+static SECP256K1_INLINE void secp256k1_scalar_cmov(secp256k1_scalar *r, const secp256k1_scalar *a, int flag) {",
      "path": "src/scalar_4x64_impl.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989287,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Again. That is an AVX512 instruction, it doesn't exist on bulldozer.",
      "created_at": "2020-01-26T21:12:30Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r371029682",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371029682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 949,
      "original_line": 949,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371030133",
      "pull_request_review_id": 348405568,
      "id": 371030133,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAzMDEzMw==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {",
      "path": "src/secp256k1.c",
      "position": 90,
      "original_position": 90,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989592,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Letting it overflow would bias the nonce, which is *extremely* bad for security.  The order of secp256k1 is fortunately such that the bias would not actually be a problem, though this isn't the case for many other curves.  Personally, if I were auditing an someone elses crypto code and saw it producing biased nonces like that I would instant fail the audit and not bother looking at anything else because the software was clearly written people by people who didn't notice or didn't heed the pile of dead bodies of their forebearers that thought leaving nonces a little biased was okay.\r\n\r\nThere isn't much point in cmoving there because the loop must run again that case, making the function take a non-constant time. So the cmov would just be constant time theatre with no improvement. It would _still_ have to be declassified too,  since constant time analysis would notice the loop being conditioned on it-- so the cmov would be just pure theater, not actually improve the constant timeness and just adding code.\r\n",
      "created_at": "2020-01-26T21:19:46Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r371030133",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371030133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 501,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371030254",
      "pull_request_review_id": 348405663,
      "id": 371030254,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAzMDI1NA==",
      "diff_hunk": "@@ -160,4 +160,16 @@ static SECP256K1_INLINE void *manual_alloc(void** prealloc_ptr, size_t alloc_siz\n SECP256K1_GNUC_EXT typedef unsigned __int128 uint128_t;\n #endif\n \n+/* Zero memory if flag == 1. Constant time. */\n+static SECP256K1_INLINE void memczero(void *s, size_t len, int flag) {",
      "path": "src/util.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989735,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "int is more efficient on many platforms than char (which would require masking), and this is a consistent interface with cmov.",
      "created_at": "2020-01-26T21:21:24Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r371030254",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371030254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371030469",
      "pull_request_review_id": 348405854,
      "id": 371030469,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAzMDQ2OQ==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            int success = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret. */\n+            declassify(ctx, &success, sizeof(success));\n+            if (success) {\n                 break;\n             }\n-            secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n-            if (!overflow && !secp256k1_scalar_is_zero(&non)) {\n-                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {\n-                    break;\n-                }\n-            }\n-            count++;\n         }\n-        memset(nonce32, 0, 32);\n-        secp256k1_scalar_clear(&msg);\n-        secp256k1_scalar_clear(&non);\n-        secp256k1_scalar_clear(&sec);\n-    }\n-    if (ret) {\n-        secp256k1_ecdsa_signature_save(signature, &r, &s);\n-    } else {\n-        memset(signature, 0, sizeof(*signature));\n+        count++;\n     }\n-    return ret;\n+    memset(nonce32, 0, 32);\n+    secp256k1_scalar_clear(&msg);\n+    secp256k1_scalar_clear(&non);\n+    secp256k1_scalar_clear(&sec);\n+    secp256k1_ecdsa_signature_save(signature, &r, &s);\n+    memczero(signature, sizeof(*signature), (!ret) | overflow);\n+    return !!ret & !overflow;",
      "path": "src/secp256k1.c",
      "position": 124,
      "original_position": 123,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989840,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> *  Returns: 1: signature created\r\n>  *           0: the nonce generation function failed, or the private key was invalid.\r\n\r\nFixes a bug.  Like above behavior should get a test.\r\n",
      "created_at": "2020-01-26T21:25:27Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r371030469",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/371030469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 518,
      "original_line": 518,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373739275",
      "pull_request_review_id": 351845504,
      "id": 373739275,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczOTI3NQ==",
      "diff_hunk": "@@ -183,21 +183,18 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     }\n     secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, seed32 ? 64 : 32);\n     memset(keydata, 0, sizeof(keydata));\n-    /* Retry for out of range results to achieve uniformity. */\n-    do {\n-        secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-        retry = !secp256k1_fe_set_b32(&s, nonce32);\n-        retry = retry || secp256k1_fe_is_zero(&s);\n-    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > Fp. */\n+    /* Accept unobservably small non-uniformity. */\n+    secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+    range = !secp256k1_fe_set_b32(&s, nonce32);\n+    range |= secp256k1_fe_is_zero(&s);\n+    secp256k1_fe_cmov(&s, &secp256k1_fe_one, range);",
      "path": "src/ecmult_gen_impl.h",
      "position": null,
      "original_position": 23,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370986680,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@elichai `s` remains uninitialized if `secp256k1_fe_set_b32` fails; doing anything on it can cause failure (and it actually can in practice in debug mode, because the magnitude/normalized flags will be garbage).\r\n\r\n@gmaxwell I think you also can't call `secp256k1_fe_is_zero` in case `secp256k1_fe_set_b32` above fails. Perhaps it's easiest to call `secp256k1_fe_clear` on `s` before the set_b32?",
      "created_at": "2020-02-01T00:24:52Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373739275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373739275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373742995",
      "pull_request_review_id": 351845504,
      "id": 373742995,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0Mjk5NQ==",
      "diff_hunk": "@@ -32,36 +32,40 @@ int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *output, const se\n     secp256k1_gej res;\n     secp256k1_ge pt;\n     secp256k1_scalar s;\n+    unsigned char x[32];\n+    unsigned char y[32];\n+\n     VERIFY_CHECK(ctx != NULL);\n     ARG_CHECK(output != NULL);\n     ARG_CHECK(point != NULL);\n     ARG_CHECK(scalar != NULL);\n+\n     if (hashfp == NULL) {\n         hashfp = secp256k1_ecdh_hash_function_default;\n     }\n \n     secp256k1_pubkey_load(ctx, &pt, point);\n     secp256k1_scalar_set_b32(&s, scalar, &overflow);\n-    if (overflow || secp256k1_scalar_is_zero(&s)) {\n-        ret = 0;\n-    } else {\n-        unsigned char x[32];\n-        unsigned char y[32];\n-\n-        secp256k1_ecmult_const(&res, &pt, &s, 256);\n-        secp256k1_ge_set_gej(&pt, &res);\n-\n-        /* Compute a hash of the point */\n-        secp256k1_fe_normalize(&pt.x);\n-        secp256k1_fe_normalize(&pt.y);\n-        secp256k1_fe_get_b32(x, &pt.x);\n-        secp256k1_fe_get_b32(y, &pt.y);\n-\n-        ret = hashfp(output, x, y, data);\n-    }\n \n+    overflow |= secp256k1_scalar_is_zero(&s);\n+    secp256k1_scalar_cmov(&s, &secp256k1_scalar_one, overflow);\n+\n+    secp256k1_ecmult_const(&res, &pt, &s, 256);\n+    secp256k1_ge_set_gej(&pt, &res);\n+\n+    /* Compute a hash of the point */\n+    secp256k1_fe_normalize(&pt.x);\n+    secp256k1_fe_normalize(&pt.y);\n+    secp256k1_fe_get_b32(x, &pt.x);\n+    secp256k1_fe_get_b32(y, &pt.y);\n+\n+    ret = hashfp(output, x, y, data);\n+\n+    memset(x, 0, 32);\n+    memset(y, 0, 32);\n     secp256k1_scalar_clear(&s);\n-    return ret;\n+\n+    return !!ret & !overflow;",
      "path": "src/modules/ecdh/main_impl.h",
      "position": 55,
      "original_position": 55,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370987476,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~Opened an issue here: https://github.com/bitcoin-core/secp256k1/pull/710~\r\n\r\nEDIT: I mean here: https://github.com/rust-bitcoin/rust-secp256k1/issues/196",
      "created_at": "2020-02-01T00:52:18Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373742995",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373742995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373744796",
      "pull_request_review_id": 351845504,
      "id": 373744796,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0NDc5Ng==",
      "diff_hunk": "@@ -474,8 +495,14 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n             break;\n         }\n         secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n-        if (!koverflow && !secp256k1_scalar_is_zero(&non)) {\n-            if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            int success = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret. */",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 68,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "7c28ecc152d7e8730c7b15a317441937e536dbf7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: while true, it's not the signature that's being declassified here, but whether or not one was produced.",
      "created_at": "2020-02-01T01:07:00Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373744796",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373744796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373783745",
      "pull_request_review_id": 351887790,
      "id": 373783745,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4Mzc0NQ==",
      "diff_hunk": "@@ -32,36 +32,40 @@ int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *output, const se\n     secp256k1_gej res;\n     secp256k1_ge pt;\n     secp256k1_scalar s;\n+    unsigned char x[32];\n+    unsigned char y[32];\n+\n     VERIFY_CHECK(ctx != NULL);\n     ARG_CHECK(output != NULL);\n     ARG_CHECK(point != NULL);\n     ARG_CHECK(scalar != NULL);\n+\n     if (hashfp == NULL) {\n         hashfp = secp256k1_ecdh_hash_function_default;\n     }\n \n     secp256k1_pubkey_load(ctx, &pt, point);\n     secp256k1_scalar_set_b32(&s, scalar, &overflow);\n-    if (overflow || secp256k1_scalar_is_zero(&s)) {\n-        ret = 0;\n-    } else {\n-        unsigned char x[32];\n-        unsigned char y[32];\n-\n-        secp256k1_ecmult_const(&res, &pt, &s, 256);\n-        secp256k1_ge_set_gej(&pt, &res);\n-\n-        /* Compute a hash of the point */\n-        secp256k1_fe_normalize(&pt.x);\n-        secp256k1_fe_normalize(&pt.y);\n-        secp256k1_fe_get_b32(x, &pt.x);\n-        secp256k1_fe_get_b32(y, &pt.y);\n-\n-        ret = hashfp(output, x, y, data);\n-    }\n \n+    overflow |= secp256k1_scalar_is_zero(&s);\n+    secp256k1_scalar_cmov(&s, &secp256k1_scalar_one, overflow);\n+\n+    secp256k1_ecmult_const(&res, &pt, &s, 256);\n+    secp256k1_ge_set_gej(&pt, &res);\n+\n+    /* Compute a hash of the point */\n+    secp256k1_fe_normalize(&pt.x);\n+    secp256k1_fe_normalize(&pt.y);\n+    secp256k1_fe_get_b32(x, &pt.x);\n+    secp256k1_fe_get_b32(y, &pt.y);\n+\n+    ret = hashfp(output, x, y, data);\n+\n+    memset(x, 0, 32);\n+    memset(y, 0, 32);\n     secp256k1_scalar_clear(&s);\n-    return ret;\n+\n+    return !!ret & !overflow;",
      "path": "src/modules/ecdh/main_impl.h",
      "position": 55,
      "original_position": 55,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370987476,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Opened an issue here: #710\r\n\r\nThis is a link to this PR here and also I don't see any other new issue.\r\n",
      "created_at": "2020-02-01T14:51:14Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373783745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373783745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373785248",
      "pull_request_review_id": 351889070,
      "id": 373785248,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4NTI0OA==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {",
      "path": "src/secp256k1.c",
      "position": 90,
      "original_position": 90,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989592,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Personally, if I were auditing an someone elses crypto code and saw it producing biased nonces like that I would instant fail the audit and not bother looking at anything else because the software was clearly written people by people who didn't notice or didn't heed the pile of dead bodies of their forebearers that thought leaving nonces a little biased was okay.\r\n\r\nWe ignore the overflow in the BIP 340 draft by the way. :X ",
      "created_at": "2020-02-01T15:22:13Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373785248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373785248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 501,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373790224",
      "pull_request_review_id": 351893714,
      "id": 373790224,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MDIyNA==",
      "diff_hunk": "@@ -32,36 +32,40 @@ int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *output, const se\n     secp256k1_gej res;\n     secp256k1_ge pt;\n     secp256k1_scalar s;\n+    unsigned char x[32];\n+    unsigned char y[32];\n+\n     VERIFY_CHECK(ctx != NULL);\n     ARG_CHECK(output != NULL);\n     ARG_CHECK(point != NULL);\n     ARG_CHECK(scalar != NULL);\n+\n     if (hashfp == NULL) {\n         hashfp = secp256k1_ecdh_hash_function_default;\n     }\n \n     secp256k1_pubkey_load(ctx, &pt, point);\n     secp256k1_scalar_set_b32(&s, scalar, &overflow);\n-    if (overflow || secp256k1_scalar_is_zero(&s)) {\n-        ret = 0;\n-    } else {\n-        unsigned char x[32];\n-        unsigned char y[32];\n-\n-        secp256k1_ecmult_const(&res, &pt, &s, 256);\n-        secp256k1_ge_set_gej(&pt, &res);\n-\n-        /* Compute a hash of the point */\n-        secp256k1_fe_normalize(&pt.x);\n-        secp256k1_fe_normalize(&pt.y);\n-        secp256k1_fe_get_b32(x, &pt.x);\n-        secp256k1_fe_get_b32(y, &pt.y);\n-\n-        ret = hashfp(output, x, y, data);\n-    }\n \n+    overflow |= secp256k1_scalar_is_zero(&s);\n+    secp256k1_scalar_cmov(&s, &secp256k1_scalar_one, overflow);\n+\n+    secp256k1_ecmult_const(&res, &pt, &s, 256);\n+    secp256k1_ge_set_gej(&pt, &res);\n+\n+    /* Compute a hash of the point */\n+    secp256k1_fe_normalize(&pt.x);\n+    secp256k1_fe_normalize(&pt.y);\n+    secp256k1_fe_get_b32(x, &pt.x);\n+    secp256k1_fe_get_b32(y, &pt.y);\n+\n+    ret = hashfp(output, x, y, data);\n+\n+    memset(x, 0, 32);\n+    memset(y, 0, 32);\n     secp256k1_scalar_clear(&s);\n-    return ret;\n+\n+    return !!ret & !overflow;",
      "path": "src/modules/ecdh/main_impl.h",
      "position": 55,
      "original_position": 55,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370987476,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice catch. I don't think I ever considered that a nonce function might return a non-0/1 value. This certainly wasn't deliberate behaviour in rust-secp, at least on my part.",
      "created_at": "2020-02-01T17:05:14Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373790224",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373790224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373790586",
      "pull_request_review_id": 351894025,
      "id": 373790586,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MDU4Ng==",
      "diff_hunk": "@@ -32,36 +32,40 @@ int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *output, const se\n     secp256k1_gej res;\n     secp256k1_ge pt;\n     secp256k1_scalar s;\n+    unsigned char x[32];\n+    unsigned char y[32];\n+\n     VERIFY_CHECK(ctx != NULL);\n     ARG_CHECK(output != NULL);\n     ARG_CHECK(point != NULL);\n     ARG_CHECK(scalar != NULL);\n+\n     if (hashfp == NULL) {\n         hashfp = secp256k1_ecdh_hash_function_default;\n     }\n \n     secp256k1_pubkey_load(ctx, &pt, point);\n     secp256k1_scalar_set_b32(&s, scalar, &overflow);\n-    if (overflow || secp256k1_scalar_is_zero(&s)) {\n-        ret = 0;\n-    } else {\n-        unsigned char x[32];\n-        unsigned char y[32];\n-\n-        secp256k1_ecmult_const(&res, &pt, &s, 256);\n-        secp256k1_ge_set_gej(&pt, &res);\n-\n-        /* Compute a hash of the point */\n-        secp256k1_fe_normalize(&pt.x);\n-        secp256k1_fe_normalize(&pt.y);\n-        secp256k1_fe_get_b32(x, &pt.x);\n-        secp256k1_fe_get_b32(y, &pt.y);\n-\n-        ret = hashfp(output, x, y, data);\n-    }\n \n+    overflow |= secp256k1_scalar_is_zero(&s);\n+    secp256k1_scalar_cmov(&s, &secp256k1_scalar_one, overflow);\n+\n+    secp256k1_ecmult_const(&res, &pt, &s, 256);\n+    secp256k1_ge_set_gej(&pt, &res);\n+\n+    /* Compute a hash of the point */\n+    secp256k1_fe_normalize(&pt.x);\n+    secp256k1_fe_normalize(&pt.y);\n+    secp256k1_fe_get_b32(x, &pt.x);\n+    secp256k1_fe_get_b32(y, &pt.y);\n+\n+    ret = hashfp(output, x, y, data);\n+\n+    memset(x, 0, 32);\n+    memset(y, 0, 32);\n     secp256k1_scalar_clear(&s);\n-    return ret;\n+\n+    return !!ret & !overflow;",
      "path": "src/modules/ecdh/main_impl.h",
      "position": 55,
      "original_position": 55,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370987476,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Honestly I thought it was intentional, but I was wrong. Should've read the docs more carefully ",
      "created_at": "2020-02-01T17:11:49Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373790586",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373790586"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373798432",
      "pull_request_review_id": 351901123,
      "id": 373798432,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5ODQzMg==",
      "diff_hunk": "@@ -32,36 +32,40 @@ int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *output, const se\n     secp256k1_gej res;\n     secp256k1_ge pt;\n     secp256k1_scalar s;\n+    unsigned char x[32];\n+    unsigned char y[32];\n+\n     VERIFY_CHECK(ctx != NULL);\n     ARG_CHECK(output != NULL);\n     ARG_CHECK(point != NULL);\n     ARG_CHECK(scalar != NULL);\n+\n     if (hashfp == NULL) {\n         hashfp = secp256k1_ecdh_hash_function_default;\n     }\n \n     secp256k1_pubkey_load(ctx, &pt, point);\n     secp256k1_scalar_set_b32(&s, scalar, &overflow);\n-    if (overflow || secp256k1_scalar_is_zero(&s)) {\n-        ret = 0;\n-    } else {\n-        unsigned char x[32];\n-        unsigned char y[32];\n-\n-        secp256k1_ecmult_const(&res, &pt, &s, 256);\n-        secp256k1_ge_set_gej(&pt, &res);\n-\n-        /* Compute a hash of the point */\n-        secp256k1_fe_normalize(&pt.x);\n-        secp256k1_fe_normalize(&pt.y);\n-        secp256k1_fe_get_b32(x, &pt.x);\n-        secp256k1_fe_get_b32(y, &pt.y);\n-\n-        ret = hashfp(output, x, y, data);\n-    }\n \n+    overflow |= secp256k1_scalar_is_zero(&s);\n+    secp256k1_scalar_cmov(&s, &secp256k1_scalar_one, overflow);\n+\n+    secp256k1_ecmult_const(&res, &pt, &s, 256);\n+    secp256k1_ge_set_gej(&pt, &res);\n+\n+    /* Compute a hash of the point */\n+    secp256k1_fe_normalize(&pt.x);\n+    secp256k1_fe_normalize(&pt.y);\n+    secp256k1_fe_get_b32(x, &pt.x);\n+    secp256k1_fe_get_b32(y, &pt.y);\n+\n+    ret = hashfp(output, x, y, data);\n+\n+    memset(x, 0, 32);\n+    memset(y, 0, 32);\n     secp256k1_scalar_clear(&s);\n-    return ret;\n+\n+    return !!ret & !overflow;",
      "path": "src/modules/ecdh/main_impl.h",
      "position": 55,
      "original_position": 55,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370987476,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@real-or-random Fixed, it's https://github.com/rust-bitcoin/rust-secp256k1/issues/196",
      "created_at": "2020-02-01T19:48:55Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373798432",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373798432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373798697",
      "pull_request_review_id": 351901374,
      "id": 373798697,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5ODY5Nw==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {",
      "path": "src/secp256k1.c",
      "position": 90,
      "original_position": 90,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989592,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@real-or-random I think the situation is a little different in BIP340, because it's not using a generic retrying PRG-based approach, but a specified scheme (and curve) specific algorithm, with a rationale explaining that this approach is only safe because the order is so close to 2^256.\r\n\r\nIf we'd decide that's worrisome because it may end up being reused for another curve, I'd prefer the EdDSA approach (hash to twice the width, and then modulo reduce it) over an iterative approach.",
      "created_at": "2020-02-01T19:54:18Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373798697",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373798697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 501,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373939623",
      "pull_request_review_id": 352042435,
      "id": 373939623,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkzOTYyMw==",
      "diff_hunk": "@@ -183,21 +183,18 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     }\n     secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, seed32 ? 64 : 32);\n     memset(keydata, 0, sizeof(keydata));\n-    /* Retry for out of range results to achieve uniformity. */\n-    do {\n-        secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-        retry = !secp256k1_fe_set_b32(&s, nonce32);\n-        retry = retry || secp256k1_fe_is_zero(&s);\n-    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > Fp. */\n+    /* Accept unobservably small non-uniformity. */\n+    secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+    range = !secp256k1_fe_set_b32(&s, nonce32);\n+    range |= secp256k1_fe_is_zero(&s);\n+    secp256k1_fe_cmov(&s, &secp256k1_fe_one, range);",
      "path": "src/ecmult_gen_impl.h",
      "position": null,
      "original_position": 23,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370986680,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa so I took another approach:  I made the cmovs propagate the actual magnitude rather than the worst case.   This reduces test sensitivity a little but I think it's cleaner. Your thoughts?",
      "created_at": "2020-02-03T06:34:51Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373939623",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373939623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373939883",
      "pull_request_review_id": 352042721,
      "id": 373939883,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkzOTg4Mw==",
      "diff_hunk": "@@ -183,21 +183,18 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     }\n     secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, seed32 ? 64 : 32);\n     memset(keydata, 0, sizeof(keydata));\n-    /* Retry for out of range results to achieve uniformity. */\n-    do {\n-        secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-        retry = !secp256k1_fe_set_b32(&s, nonce32);\n-        retry = retry || secp256k1_fe_is_zero(&s);\n-    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > Fp. */\n+    /* Accept unobservably small non-uniformity. */\n+    secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+    range = !secp256k1_fe_set_b32(&s, nonce32);\n+    range |= secp256k1_fe_is_zero(&s);\n+    secp256k1_fe_cmov(&s, &secp256k1_fe_one, range);",
      "path": "src/ecmult_gen_impl.h",
      "position": null,
      "original_position": 23,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370986680,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See the fixups commit.",
      "created_at": "2020-02-03T06:35:52Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r373939883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/373939883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374167521",
      "pull_request_review_id": 352339527,
      "id": 374167521,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE2NzUyMQ==",
      "diff_hunk": "@@ -75,12 +75,11 @@ static int secp256k1_eckey_pubkey_tweak_add(const secp256k1_ecmult_context *ctx,\n }\n \n static int secp256k1_eckey_privkey_tweak_mul(secp256k1_scalar *key, const secp256k1_scalar *tweak) {\n-    if (secp256k1_scalar_is_zero(tweak)) {\n-        return 0;\n-    }\n+    int ret;\n+    ret = !secp256k1_scalar_is_zero(tweak);\n \n     secp256k1_scalar_mul(key, key, tweak);\n-    return 1;\n+    return ret;",
      "path": "src/eckey_impl.h",
      "position": 12,
      "original_position": 12,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "bf40d0f1b6a0f3de351044ae24ee20db74122f5b",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "note: This is superficially related to https://github.com/bitcoin-core/secp256k1/pull/701 because now this does the tweaking even if the tweak is zero, which funnily zeroizes the key then (even if we will decide that the public wrapper function won't.)",
      "created_at": "2020-02-03T15:28:38Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374167521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374167521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374170022",
      "pull_request_review_id": 352339527,
      "id": 374170022,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE3MDAyMg==",
      "diff_hunk": "@@ -304,16 +305,12 @@ static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, sec\n     secp256k1_scalar_clear(&n);\n     secp256k1_gej_clear(&rp);\n     secp256k1_ge_clear(&r);\n-    if (secp256k1_scalar_is_zero(sigs)) {\n-        return 0;\n-    }\n-    if (secp256k1_scalar_is_high(sigs)) {\n-        secp256k1_scalar_negate(sigs, sigs);\n-        if (recid) {\n-            *recid ^= 1;\n-        }\n+    high = secp256k1_scalar_is_high(sigs);\n+    secp256k1_scalar_cond_negate(sigs, high);\n+    if (recid) {\n+            *recid ^= high;",
      "path": "src/ecdsa_impl.h",
      "position": 32,
      "original_position": 32,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "bf40d0f1b6a0f3de351044ae24ee20db74122f5b",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is another instance where we assume that a function (`secp256k1_scalar_is_high`) returns only 0/1. In general, it would be good to document this and have simple explicit tests for this. ",
      "created_at": "2020-02-03T15:32:38Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374170022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374170022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 311,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374202789",
      "pull_request_review_id": 352339527,
      "id": 374202789,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIwMjc4OQ==",
      "diff_hunk": "@@ -304,16 +305,12 @@ static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, sec\n     secp256k1_scalar_clear(&n);\n     secp256k1_gej_clear(&rp);\n     secp256k1_ge_clear(&r);\n-    if (secp256k1_scalar_is_zero(sigs)) {\n-        return 0;\n-    }\n-    if (secp256k1_scalar_is_high(sigs)) {\n-        secp256k1_scalar_negate(sigs, sigs);\n-        if (recid) {\n-            *recid ^= 1;\n-        }\n+    high = secp256k1_scalar_is_high(sigs);\n+    secp256k1_scalar_cond_negate(sigs, high);\n+    if (recid) {\n+            *recid ^= high;",
      "path": "src/ecdsa_impl.h",
      "position": 32,
      "original_position": 32,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "bf40d0f1b6a0f3de351044ae24ee20db74122f5b",
      "in_reply_to_id": 374170022,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually, is this a general convention for every \"boolean\" function in the codebase?",
      "created_at": "2020-02-03T16:27:08Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374202789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374202789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 311,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374217161",
      "pull_request_review_id": 352339527,
      "id": 374217161,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzE2MQ==",
      "diff_hunk": "@@ -24,6 +24,9 @@\n #error \"Please select scalar implementation\"\n #endif\n \n+static const secp256k1_scalar secp256k1_scalar_one = SECP256K1_SCALAR_CONST(0, 0, 0, 0, 0, 0, 0, 1);\n+static const secp256k1_scalar secp256k1_scalar_zero = SECP256K1_SCALAR_CONST(0, 0, 0, 0, 0, 0, 0, 0);",
      "path": "src/scalar_impl.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is the zero used anywhere?",
      "created_at": "2020-02-03T16:51:50Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374217161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374217161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374225848",
      "pull_request_review_id": 352339527,
      "id": 374225848,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIyNTg0OA==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {",
      "path": "src/secp256k1.c",
      "position": 90,
      "original_position": 90,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989592,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well I personally think it's okay to assume in the context of a specific curve in the end. I'm just not sure if there's a real difference to BIP340 because here also assume a specific curve.",
      "created_at": "2020-02-03T17:07:49Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374225848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374225848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 501,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374273434",
      "pull_request_review_id": 352339527,
      "id": 374273434,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3MzQzNA==",
      "diff_hunk": "@@ -183,21 +183,18 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     }\n     secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, seed32 ? 64 : 32);\n     memset(keydata, 0, sizeof(keydata));\n-    /* Retry for out of range results to achieve uniformity. */\n-    do {\n-        secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-        retry = !secp256k1_fe_set_b32(&s, nonce32);\n-        retry = retry || secp256k1_fe_is_zero(&s);\n-    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > Fp. */\n+    /* Accept unobservably small non-uniformity. */\n+    secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+    range = !secp256k1_fe_set_b32(&s, nonce32);\n+    range |= secp256k1_fe_is_zero(&s);\n+    secp256k1_fe_cmov(&s, &secp256k1_fe_one, range);",
      "path": "src/ecmult_gen_impl.h",
      "position": null,
      "original_position": 23,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370986680,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think either way is fine but why do you think it's cleaner?",
      "created_at": "2020-02-03T18:44:46Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374273434",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374273434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374274759",
      "pull_request_review_id": 352339527,
      "id": 374274759,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NDc1OQ==",
      "diff_hunk": "@@ -132,6 +138,7 @@ secp256k1_context* secp256k1_context_preallocated_create(void* prealloc, unsigne\n     if (flags & SECP256K1_FLAGS_BIT_CONTEXT_VERIFY) {\n         secp256k1_ecmult_context_build(&ret->ecmult_ctx, &prealloc);\n     }\n+    ret->declassify = !!(flags & SECP256K1_FLAGS_BIT_CONTEXT_DECLASSIFY);",
      "path": "src/secp256k1.c",
      "position": 32,
      "original_position": 32,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: you don't need the `!!` here",
      "created_at": "2020-02-03T18:47:29Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374274759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374274759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374275095",
      "pull_request_review_id": 352339527,
      "id": 374275095,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NTA5NQ==",
      "diff_hunk": "@@ -215,6 +222,20 @@ void secp256k1_scratch_space_destroy(const secp256k1_context *ctx, secp256k1_scr\n     secp256k1_scratch_destroy(&ctx->error_callback, scratch);\n }\n \n+/* Mark memory as no-longer-secret for the purpose of analysing constant-time behaviour\n+ *  of the software. This is setup for use with valgrind but could be substituted with\n+ *  the appropriate instrumentation for other analysis tools.\n+ */\n+static SECP256K1_INLINE void declassify(const secp256k1_context* ctx, void *p, size_t len) {",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 44,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this should be called `secp256k1_declassify`. Or maybe not? We also don't have the prefix in util.h, hm.",
      "created_at": "2020-02-03T18:48:11Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374275095",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374275095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374275231",
      "pull_request_review_id": 352339527,
      "id": 374275231,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NTIzMQ==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {",
      "path": "src/secp256k1.c",
      "position": 90,
      "original_position": 90,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989592,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd also be fine with the more radical approach of eliminating the loop. This does not need to be done by ignoring the overflow, we could alternatively simply fail.",
      "created_at": "2020-02-03T18:48:29Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374275231",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374275231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 501,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374280315",
      "pull_request_review_id": 352339527,
      "id": 374280315,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI4MDMxNQ==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            int success = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret. */\n+            declassify(ctx, &success, sizeof(success));",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 93,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here we have `success  == ret`.\r\nSo we could simply get rid of `success` (or alternatively VERIFY that `success  == ret`).\r\nI think this matters here for the reader because we also \"declassify\" ret in a sense but that's not obvious.",
      "created_at": "2020-02-03T18:58:45Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374280315",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374280315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 490,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374281769",
      "pull_request_review_id": 352339527,
      "id": 374281769,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI4MTc2OQ==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            int success = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret. */\n+            declassify(ctx, &success, sizeof(success));\n+            if (success) {\n                 break;\n             }\n-            secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n-            if (!overflow && !secp256k1_scalar_is_zero(&non)) {\n-                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {\n-                    break;\n-                }\n-            }\n-            count++;\n         }\n-        memset(nonce32, 0, 32);\n-        secp256k1_scalar_clear(&msg);\n-        secp256k1_scalar_clear(&non);\n-        secp256k1_scalar_clear(&sec);\n-    }\n-    if (ret) {\n-        secp256k1_ecdsa_signature_save(signature, &r, &s);\n-    } else {\n-        memset(signature, 0, sizeof(*signature));\n+        count++;\n     }\n-    return ret;\n+    memset(nonce32, 0, 32);\n+    secp256k1_scalar_clear(&msg);\n+    secp256k1_scalar_clear(&non);\n+    secp256k1_scalar_clear(&sec);\n+    secp256k1_ecdsa_signature_save(signature, &r, &s);\n+    memczero(signature, sizeof(*signature), (!ret) | overflow);",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 122,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If we declassify `!ret | overflow` here, then we can get rid of the call to `memczero`, which is probably not for free. Is there a reason why you preferred the call?\r\nIt's easy to see that the declassification is not an issue. `ret` is already declassified (see my comment above) and `overflow` will anyway be zero. ",
      "created_at": "2020-02-03T19:01:49Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374281769",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374281769"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374285408",
      "pull_request_review_id": 352339527,
      "id": 374285408,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI4NTQwOA==",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+/**********************************************************************\n+ * Copyright (c) 2020 Gregory Maxwell                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#include <valgrind/memcheck.h>\n+#include \"include/secp256k1.h\"\n+#include \"util.h\"\n+\n+#if ENABLE_MODULE_ECDH\n+# include \"include/secp256k1_ecdh.h\"\n+#endif\n+\n+int main(void) {\n+    secp256k1_context* ctx;\n+    secp256k1_ecdsa_signature signature;\n+    secp256k1_pubkey pubkey;\n+    size_t siglen = 74;\n+    size_t outputlen = 33;\n+    int i;\n+    int ret;\n+    unsigned char msg[32];\n+    unsigned char key[32];\n+    unsigned char sig[74];\n+    unsigned char spubkey[33];\n+\n+    if (!RUNNING_ON_VALGRIND) {\n+        fprintf(stderr, \"This test can only usefully be run inside valgrind.\\n\");\n+        fprintf(stderr, \"Usage: libtool --mode=execute valgrind ./valgrind_ctime_test\\n\");\n+        exit(1);\n+    }\n+\n+    /** In theory, testing with a single secret input should be sufficient:",
      "path": "src/valgrind_ctime_test.c",
      "position": null,
      "original_position": 34,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "True but here you set the message, which is not a secret input.",
      "created_at": "2020-02-03T19:09:18Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374285408",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374285408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374507295",
      "pull_request_review_id": 352764074,
      "id": 374507295,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNzI5NQ==",
      "diff_hunk": "@@ -304,16 +305,12 @@ static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, sec\n     secp256k1_scalar_clear(&n);\n     secp256k1_gej_clear(&rp);\n     secp256k1_ge_clear(&r);\n-    if (secp256k1_scalar_is_zero(sigs)) {\n-        return 0;\n-    }\n-    if (secp256k1_scalar_is_high(sigs)) {\n-        secp256k1_scalar_negate(sigs, sigs);\n-        if (recid) {\n-            *recid ^= 1;\n-        }\n+    high = secp256k1_scalar_is_high(sigs);\n+    secp256k1_scalar_cond_negate(sigs, high);\n+    if (recid) {\n+            *recid ^= high;",
      "path": "src/ecdsa_impl.h",
      "position": 32,
      "original_position": 32,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "bf40d0f1b6a0f3de351044ae24ee20db74122f5b",
      "in_reply_to_id": 374170022,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. And the tests do check that:\r\n\r\n        /* Check that comparison with the half order is equal to testing for high scalar. */\r\n        CHECK(secp256k1_scalar_is_high(&s) == (secp256k1_num_cmp(&snum, &half_order) > 0));\r\n        /* Check that comparison with the half order is equal to testing for high scalar after negation. */\r\n        CHECK(secp256k1_scalar_is_high(&neg) == (secp256k1_num_cmp(&negnum, &half_order) > 0));\r\n\r\n\r\nFor an \"_is_\" function is there any other logical return that might show up?",
      "created_at": "2020-02-04T07:21:15Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374507295",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374507295"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 311,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374507483",
      "pull_request_review_id": 352764283,
      "id": 374507483,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNzQ4Mw==",
      "diff_hunk": "@@ -24,6 +24,9 @@\n #error \"Please select scalar implementation\"\n #endif\n \n+static const secp256k1_scalar secp256k1_scalar_one = SECP256K1_SCALAR_CONST(0, 0, 0, 0, 0, 0, 0, 1);\n+static const secp256k1_scalar secp256k1_scalar_zero = SECP256K1_SCALAR_CONST(0, 0, 0, 0, 0, 0, 0, 0);",
      "path": "src/scalar_impl.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374217161,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "src/secp256k1.c:    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_zero, !ret);\r\nsrc/secp256k1.c:    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_zero, !ret);\r\n",
      "created_at": "2020-02-04T07:21:53Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374507483",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374507483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374507986",
      "pull_request_review_id": 352764905,
      "id": 374507986,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNzk4Ng==",
      "diff_hunk": "@@ -215,6 +222,20 @@ void secp256k1_scratch_space_destroy(const secp256k1_context *ctx, secp256k1_scr\n     secp256k1_scratch_destroy(&ctx->error_callback, scratch);\n }\n \n+/* Mark memory as no-longer-secret for the purpose of analysing constant-time behaviour\n+ *  of the software. This is setup for use with valgrind but could be substituted with\n+ *  the appropriate instrumentation for other analysis tools.\n+ */\n+static SECP256K1_INLINE void declassify(const secp256k1_context* ctx, void *p, size_t len) {",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 44,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374275095,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's static inline, so it shouldn't matter. I don't care one way or another, utility functions don't seem to be.",
      "created_at": "2020-02-04T07:23:37Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374507986",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374507986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374510230",
      "pull_request_review_id": 352767753,
      "id": 374510230,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUxMDIzMA==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            int success = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret. */\n+            declassify(ctx, &success, sizeof(success));\n+            if (success) {\n                 break;\n             }\n-            secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n-            if (!overflow && !secp256k1_scalar_is_zero(&non)) {\n-                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {\n-                    break;\n-                }\n-            }\n-            count++;\n         }\n-        memset(nonce32, 0, 32);\n-        secp256k1_scalar_clear(&msg);\n-        secp256k1_scalar_clear(&non);\n-        secp256k1_scalar_clear(&sec);\n-    }\n-    if (ret) {\n-        secp256k1_ecdsa_signature_save(signature, &r, &s);\n-    } else {\n-        memset(signature, 0, sizeof(*signature));\n+        count++;\n     }\n-    return ret;\n+    memset(nonce32, 0, 32);\n+    secp256k1_scalar_clear(&msg);\n+    secp256k1_scalar_clear(&non);\n+    secp256k1_scalar_clear(&sec);\n+    secp256k1_ecdsa_signature_save(signature, &r, &s);\n+    memczero(signature, sizeof(*signature), (!ret) | overflow);",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 122,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374281769,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would then be replaced with a regular memset which I doubt would be significantly slower. My preference was to make it actually constant time unless it had a non-trivial cost.\r\n\r\nI can give a contrived attack against secret overflow: If I can give you a tweak that you apply to you secret key with naive addition, and I can query you log(n) times, I can use the time signing takes to read off your secret key. It's contrived not only because of the bad tweak function, but also because it assumes I can't distinguish your failures by some way other than time.",
      "created_at": "2020-02-04T07:30:49Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374510230",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374510230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374510727",
      "pull_request_review_id": 352768326,
      "id": 374510727,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUxMDcyNw==",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+/**********************************************************************\n+ * Copyright (c) 2020 Gregory Maxwell                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#include <valgrind/memcheck.h>\n+#include \"include/secp256k1.h\"\n+#include \"util.h\"\n+\n+#if ENABLE_MODULE_ECDH\n+# include \"include/secp256k1_ecdh.h\"\n+#endif\n+\n+int main(void) {\n+    secp256k1_context* ctx;\n+    secp256k1_ecdsa_signature signature;\n+    secp256k1_pubkey pubkey;\n+    size_t siglen = 74;\n+    size_t outputlen = 33;\n+    int i;\n+    int ret;\n+    unsigned char msg[32];\n+    unsigned char key[32];\n+    unsigned char sig[74];\n+    unsigned char spubkey[33];\n+\n+    if (!RUNNING_ON_VALGRIND) {\n+        fprintf(stderr, \"This test can only usefully be run inside valgrind.\\n\");\n+        fprintf(stderr, \"Usage: libtool --mode=execute valgrind ./valgrind_ctime_test\\n\");\n+        exit(1);\n+    }\n+\n+    /** In theory, testing with a single secret input should be sufficient:",
      "path": "src/valgrind_ctime_test.c",
      "position": null,
      "original_position": 34,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374285408,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Other PR. :)",
      "created_at": "2020-02-04T07:32:21Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r374510727",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/374510727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/375910886",
      "pull_request_review_id": 354551250,
      "id": 375910886,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkxMDg4Ng==",
      "diff_hunk": "@@ -304,16 +305,12 @@ static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, sec\n     secp256k1_scalar_clear(&n);\n     secp256k1_gej_clear(&rp);\n     secp256k1_ge_clear(&r);\n-    if (secp256k1_scalar_is_zero(sigs)) {\n-        return 0;\n-    }\n-    if (secp256k1_scalar_is_high(sigs)) {\n-        secp256k1_scalar_negate(sigs, sigs);\n-        if (recid) {\n-            *recid ^= 1;\n-        }\n+    high = secp256k1_scalar_is_high(sigs);\n+    secp256k1_scalar_cond_negate(sigs, high);\n+    if (recid) {\n+            *recid ^= high;",
      "path": "src/ecdsa_impl.h",
      "position": 32,
      "original_position": 32,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "bf40d0f1b6a0f3de351044ae24ee20db74122f5b",
      "in_reply_to_id": 374170022,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> For an \"_is_\" function is there any other logical return that might show up?\r\nI think a lot of C code doesn't bother to return exactly 1 and will be fine with every non-zero value instead, which is not an unreasonable choice.\r\n\r\nGeneral convention: Okay, then we should double-check this and document it... (another PR of course).\r\n\r\nTests: Yes, I've seen those. My feeling was that it's not very explicit but yes, it's there.\r\n",
      "created_at": "2020-02-06T15:41:07Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r375910886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/375910886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 311,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/376413008",
      "pull_request_review_id": 355185641,
      "id": 376413008,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQxMzAwOA==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {",
      "path": "src/secp256k1.c",
      "position": 90,
      "original_position": 90,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989592,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The schnorrsig implementation matches the BIP and does not fail nor retry on overflow (but on 0). That means as is, we wouldn't necessarily need to declassify in `schnorrsig_sign` and could instead continue with the 0 nonce and `memczero` the signature before returning 0.",
      "created_at": "2020-02-07T14:19:09Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r376413008",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/376413008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 501,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/376684678",
      "pull_request_review_id": 355527889,
      "id": 376684678,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NDY3OA==",
      "diff_hunk": "@@ -183,21 +183,18 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     }\n     secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, seed32 ? 64 : 32);\n     memset(keydata, 0, sizeof(keydata));\n-    /* Retry for out of range results to achieve uniformity. */\n-    do {\n-        secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-        retry = !secp256k1_fe_set_b32(&s, nonce32);\n-        retry = retry || secp256k1_fe_is_zero(&s);\n-    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > Fp. */\n+    /* Accept unobservably small non-uniformity. */\n+    secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+    range = !secp256k1_fe_set_b32(&s, nonce32);\n+    range |= secp256k1_fe_is_zero(&s);\n+    secp256k1_fe_cmov(&s, &secp256k1_fe_one, range);",
      "path": "src/ecmult_gen_impl.h",
      "position": null,
      "original_position": 23,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370986680,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because it makes the cmov behave how I thought it behaved, also less code.",
      "created_at": "2020-02-08T03:52:01Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r376684678",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/376684678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/376699264",
      "pull_request_review_id": 355539420,
      "id": 376699264,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5OTI2NA==",
      "diff_hunk": "@@ -215,6 +222,20 @@ void secp256k1_scratch_space_destroy(const secp256k1_context *ctx, secp256k1_scr\n     secp256k1_scratch_destroy(&ctx->error_callback, scratch);\n }\n \n+/* Mark memory as no-longer-secret for the purpose of analysing constant-time behaviour\n+ *  of the software. This is setup for use with valgrind but could be substituted with\n+ *  the appropriate instrumentation for other analysis tools.\n+ */\n+static SECP256K1_INLINE void declassify(const secp256k1_context* ctx, void *p, size_t len) {",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 44,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374275095,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suggest moving this to `util.h` then.",
      "created_at": "2020-02-08T09:28:10Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r376699264",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/376699264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/376699412",
      "pull_request_review_id": 355539547,
      "id": 376699412,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5OTQxMg==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            int success = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret. */\n+            declassify(ctx, &success, sizeof(success));\n+            if (success) {\n                 break;\n             }\n-            secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n-            if (!overflow && !secp256k1_scalar_is_zero(&non)) {\n-                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {\n-                    break;\n-                }\n-            }\n-            count++;\n         }\n-        memset(nonce32, 0, 32);\n-        secp256k1_scalar_clear(&msg);\n-        secp256k1_scalar_clear(&non);\n-        secp256k1_scalar_clear(&sec);\n-    }\n-    if (ret) {\n-        secp256k1_ecdsa_signature_save(signature, &r, &s);\n-    } else {\n-        memset(signature, 0, sizeof(*signature));\n+        count++;\n     }\n-    return ret;\n+    memset(nonce32, 0, 32);\n+    secp256k1_scalar_clear(&msg);\n+    secp256k1_scalar_clear(&non);\n+    secp256k1_scalar_clear(&sec);\n+    secp256k1_ecdsa_signature_save(signature, &r, &s);\n+    memczero(signature, sizeof(*signature), (!ret) | overflow);",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 122,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374281769,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> It would then be replaced with a regular memset which I doubt would be significantly slower. My preference was to make it actually constant time unless it had a non-trivial cost.\r\n\r\nMakes sense to me.\r\n\r\n",
      "created_at": "2020-02-08T09:32:05Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r376699412",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/376699412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377405007",
      "pull_request_review_id": 356370576,
      "id": 377405007,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQwNTAwNw==",
      "diff_hunk": "@@ -215,6 +222,20 @@ void secp256k1_scratch_space_destroy(const secp256k1_context *ctx, secp256k1_scr\n     secp256k1_scratch_destroy(&ctx->error_callback, scratch);\n }\n \n+/* Mark memory as no-longer-secret for the purpose of analysing constant-time behaviour\n+ *  of the software. This is setup for use with valgrind but could be substituted with\n+ *  the appropriate instrumentation for other analysis tools.\n+ */\n+static SECP256K1_INLINE void declassify(const secp256k1_context* ctx, void *p, size_t len) {",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 44,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374275095,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "okay.",
      "created_at": "2020-02-11T01:01:43Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r377405007",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377405007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377408251",
      "pull_request_review_id": 356374242,
      "id": 377408251,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQwODI1MQ==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            int success = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret. */\n+            declassify(ctx, &success, sizeof(success));\n+            if (success) {\n                 break;\n             }\n-            secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n-            if (!overflow && !secp256k1_scalar_is_zero(&non)) {\n-                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {\n-                    break;\n-                }\n-            }\n-            count++;\n         }\n-        memset(nonce32, 0, 32);\n-        secp256k1_scalar_clear(&msg);\n-        secp256k1_scalar_clear(&non);\n-        secp256k1_scalar_clear(&sec);\n-    }\n-    if (ret) {\n-        secp256k1_ecdsa_signature_save(signature, &r, &s);\n-    } else {\n-        memset(signature, 0, sizeof(*signature));\n+        count++;\n     }\n-    return ret;\n+    memset(nonce32, 0, 32);\n+    secp256k1_scalar_clear(&msg);\n+    secp256k1_scalar_clear(&non);\n+    secp256k1_scalar_clear(&sec);\n+    secp256k1_ecdsa_signature_save(signature, &r, &s);\n+    memczero(signature, sizeof(*signature), (!ret) | overflow);\n+    return !!ret & !overflow;",
      "path": "src/secp256k1.c",
      "position": 124,
      "original_position": 123,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "82989f565c0e45006b27a2f78c9f2b67006a8e80",
      "in_reply_to_id": 370989840,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I opened an issue.",
      "created_at": "2020-02-11T01:14:45Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r377408251",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377408251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 518,
      "original_line": 518,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377570524",
      "pull_request_review_id": 356573503,
      "id": 377570524,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3MDUyNA==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            int success = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret. */\n+            declassify(ctx, &success, sizeof(success));",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 93,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374280315,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@gmaxwell Can you reply to this one?",
      "created_at": "2020-02-11T11:10:57Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r377570524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377570524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 490,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377570560",
      "pull_request_review_id": 356573548,
      "id": 377570560,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3MDU2MA==",
      "diff_hunk": "@@ -132,6 +138,7 @@ secp256k1_context* secp256k1_context_preallocated_create(void* prealloc, unsigne\n     if (flags & SECP256K1_FLAGS_BIT_CONTEXT_VERIFY) {\n         secp256k1_ecmult_context_build(&ret->ecmult_ctx, &prealloc);\n     }\n+    ret->declassify = !!(flags & SECP256K1_FLAGS_BIT_CONTEXT_DECLASSIFY);",
      "path": "src/secp256k1.c",
      "position": 32,
      "original_position": 32,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374274759,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@gmaxwell Can you reply to this one? Ignoring it by clicking \"resolve conversation\" counts as a reply. :)",
      "created_at": "2020-02-11T11:11:01Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r377570560",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377570560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377604720",
      "pull_request_review_id": 356617577,
      "id": 377604720,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYwNDcyMA==",
      "diff_hunk": "@@ -132,6 +138,7 @@ secp256k1_context* secp256k1_context_preallocated_create(void* prealloc, unsigne\n     if (flags & SECP256K1_FLAGS_BIT_CONTEXT_VERIFY) {\n         secp256k1_ecmult_context_build(&ret->ecmult_ctx, &prealloc);\n     }\n+    ret->declassify = !!(flags & SECP256K1_FLAGS_BIT_CONTEXT_DECLASSIFY);",
      "path": "src/secp256k1.c",
      "position": 32,
      "original_position": 32,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374274759,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "lol Github was helpfully hiding this one from me, I only found it because you said two... :)\r\n\r\nI don't like having an apparently boolean variable have its truth value be other than one.  It would totally be fine to not !! here with the current code,  but then later we go and refactor something and the boolean test gets turned into an ==1 or used in an arithmetic expression and it works incorrectly.\r\n\r\nSo in general, I usually tend to boolenize  a boolean variable unless its never used outside of a single scope, or in some performance critical inner loop where the single test opcode might actually matter.  Though for flags the more ordinary way to booleanize is (flags & flag) == flag.",
      "created_at": "2020-02-11T12:29:40Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r377604720",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377604720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377605460",
      "pull_request_review_id": 356618581,
      "id": 377605460,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYwNTQ2MA==",
      "diff_hunk": "@@ -132,6 +138,7 @@ secp256k1_context* secp256k1_context_preallocated_create(void* prealloc, unsigne\n     if (flags & SECP256K1_FLAGS_BIT_CONTEXT_VERIFY) {\n         secp256k1_ecmult_context_build(&ret->ecmult_ctx, &prealloc);\n     }\n+    ret->declassify = !!(flags & SECP256K1_FLAGS_BIT_CONTEXT_DECLASSIFY);",
      "path": "src/secp256k1.c",
      "position": 32,
      "original_position": 32,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374274759,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nevermind, I got the semantics wrong here.",
      "created_at": "2020-02-11T12:31:29Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r377605460",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377605460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377611246",
      "pull_request_review_id": 356626062,
      "id": 377611246,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYxMTI0Ng==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            int success = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret. */\n+            declassify(ctx, &success, sizeof(success));",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 93,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374280315,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "okay, I didn't understand your comment at first because I was (and am) completely unable to get github to display any context for it. I understand it now, reasonable enough.",
      "created_at": "2020-02-11T12:44:49Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r377611246",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377611246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 490,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377623480",
      "pull_request_review_id": 356642054,
      "id": 377623480,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYyMzQ4MA==",
      "diff_hunk": "@@ -215,6 +222,20 @@ void secp256k1_scratch_space_destroy(const secp256k1_context *ctx, secp256k1_scr\n     secp256k1_scratch_destroy(&ctx->error_callback, scratch);\n }\n \n+/* Mark memory as no-longer-secret for the purpose of analysing constant-time behaviour\n+ *  of the software. This is setup for use with valgrind but could be substituted with\n+ *  the appropriate instrumentation for other analysis tools.\n+ */\n+static SECP256K1_INLINE void declassify(const secp256k1_context* ctx, void *p, size_t len) {",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 44,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "2a81949b9e7d1d0e84e717868fe484cd37770aa3",
      "in_reply_to_id": 374275095,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "un-okay:  I changed this and blew CI up... ctx is an opaque type in util.h when util.h is being used in benchmarks and such, causing them to fail to compile.  I didn't like hoisting out the ctx-> dereference because I want that compiled out when not compiled with DVALGRIND, and changing things so util.h could see the non-opaque type made a mess when I briefly attempted it.   When I said okay, I didn't really care either way. I found reasons to care.",
      "created_at": "2020-02-11T13:10:39Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r377623480",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/377623480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/378230934",
      "pull_request_review_id": 357425903,
      "id": 378230934,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzMDkzNA==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        secp256k1_declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            ret = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret, nor is the fact that we were successful or not. */\n+            secp256k1_declassify(ctx, &ret, sizeof(ret));\n+            if (ret) {\n                 break;\n             }\n-            secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n-            if (!overflow && !secp256k1_scalar_is_zero(&non)) {\n-                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {\n-                    break;\n-                }\n-            }\n-            count++;\n         }\n-        memset(nonce32, 0, 32);\n-        secp256k1_scalar_clear(&msg);\n-        secp256k1_scalar_clear(&non);\n-        secp256k1_scalar_clear(&sec);\n-    }\n-    if (ret) {\n-        secp256k1_ecdsa_signature_save(signature, &r, &s);\n-    } else {\n-        memset(signature, 0, sizeof(*signature));\n+        count++;\n     }\n-    return ret;\n+    memset(nonce32, 0, 32);\n+    secp256k1_scalar_clear(&msg);\n+    secp256k1_scalar_clear(&non);\n+    secp256k1_scalar_clear(&sec);\n+    secp256k1_ecdsa_signature_save(signature, &r, &s);",
      "path": "src/secp256k1.c",
      "position": 123,
      "original_position": 121,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "3eb69f6d1a917079131b415c4e92ea45259ec641",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This reads uninitialized memory if the nonce function returned 0.\r\n\r\nWe could now start a long discussion if this yields UB (see in https://github.com/bitcoin-core/secp256k1/pull/699#issuecomment-569413087). But I think it's preferable to just avoid the situation entirely by cmoving zero scalars into `r` and `s` before calling `secp256k1_ecdsa_signature_save` instead of cmoving zero bytes afterwards. ",
      "created_at": "2020-02-12T12:52:01Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r378230934",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/378230934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 517,
      "original_line": 517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/378236889",
      "pull_request_review_id": 357433699,
      "id": 378236889,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzNjg4OQ==",
      "diff_hunk": "@@ -183,21 +183,18 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     }\n     secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, seed32 ? 64 : 32);\n     memset(keydata, 0, sizeof(keydata));\n-    /* Retry for out of range results to achieve uniformity. */\n-    do {\n-        secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-        retry = !secp256k1_fe_set_b32(&s, nonce32);\n-        retry = retry || secp256k1_fe_is_zero(&s);\n-    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > Fp. */\n+    /* Accept unobservably small non-uniformity. */\n+    secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+    range = !secp256k1_fe_set_b32(&s, nonce32);",
      "path": "src/ecmult_gen_impl.h",
      "position": null,
      "original_position": 21,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "3eb69f6d1a917079131b415c4e92ea45259ec641",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `range` is typically called `overflow` in other code here. `range` is a somewhat ambiguous identifier because it's not clear whether it means \"in range\" or \"out of range\".",
      "created_at": "2020-02-12T13:04:46Z",
      "updated_at": "2020-02-20T17:32:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r378236889",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/378236889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/382151126",
      "pull_request_review_id": 362097613,
      "id": 382151126,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1MTEyNg==",
      "diff_hunk": "@@ -462,34 +485,36 @@ int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        unsigned char nonce32[32];\n-        unsigned int count = 0;\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n-            if (!ret) {\n+    overflow |= secp256k1_scalar_is_zero(&sec);\n+    secp256k1_scalar_cmov(&sec, &secp256k1_scalar_one, overflow);\n+    secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+    while (1) {\n+        int koverflow;\n+        ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &koverflow);\n+        koverflow |= secp256k1_scalar_is_zero(&non);\n+        /* The nonce is still secret here, but it overflowing or being zero is is less likely than 1:2^255. */\n+        secp256k1_declassify(ctx, &koverflow, sizeof(koverflow));\n+        if (!koverflow) {\n+            ret = secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL);\n+            /* The final signature is no longer a secret, nor is the fact that we were successful or not. */\n+            secp256k1_declassify(ctx, &ret, sizeof(ret));\n+            if (ret) {\n                 break;\n             }\n-            secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n-            if (!overflow && !secp256k1_scalar_is_zero(&non)) {\n-                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {\n-                    break;\n-                }\n-            }\n-            count++;\n         }\n-        memset(nonce32, 0, 32);\n-        secp256k1_scalar_clear(&msg);\n-        secp256k1_scalar_clear(&non);\n-        secp256k1_scalar_clear(&sec);\n-    }\n-    if (ret) {\n-        secp256k1_ecdsa_signature_save(signature, &r, &s);\n-    } else {\n-        memset(signature, 0, sizeof(*signature));\n+        count++;\n     }\n-    return ret;\n+    memset(nonce32, 0, 32);\n+    secp256k1_scalar_clear(&msg);\n+    secp256k1_scalar_clear(&non);\n+    secp256k1_scalar_clear(&sec);\n+    secp256k1_ecdsa_signature_save(signature, &r, &s);",
      "path": "src/secp256k1.c",
      "position": 123,
      "original_position": 121,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "3eb69f6d1a917079131b415c4e92ea45259ec641",
      "in_reply_to_id": 378230934,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be a bad use of the internal api to send it uninitialized data regardless. Thanks for noticing this, fixed.",
      "created_at": "2020-02-20T17:34:28Z",
      "updated_at": "2020-02-20T17:34:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r382151126",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/382151126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 517,
      "original_line": 517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/382151258",
      "pull_request_review_id": 362097771,
      "id": 382151258,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1MTI1OA==",
      "diff_hunk": "@@ -183,21 +183,18 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     }\n     secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, seed32 ? 64 : 32);\n     memset(keydata, 0, sizeof(keydata));\n-    /* Retry for out of range results to achieve uniformity. */\n-    do {\n-        secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-        retry = !secp256k1_fe_set_b32(&s, nonce32);\n-        retry = retry || secp256k1_fe_is_zero(&s);\n-    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > Fp. */\n+    /* Accept unobservably small non-uniformity. */\n+    secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+    range = !secp256k1_fe_set_b32(&s, nonce32);",
      "path": "src/ecmult_gen_impl.h",
      "position": null,
      "original_position": 21,
      "commit_id": "7b50483ad789081ba158799e5b94330f62932607",
      "original_commit_id": "3eb69f6d1a917079131b415c4e92ea45259ec641",
      "in_reply_to_id": 378236889,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fair enough.",
      "created_at": "2020-02-20T17:34:44Z",
      "updated_at": "2020-02-20T17:34:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/710#discussion_r382151258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/382151258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/710"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    }
  ]
}