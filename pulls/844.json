{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844",
    "id": 514273928,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTE0MjczOTI4",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/844.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/844.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
    "number": 844,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "schnorrsig API overhaul",
    "user": {
      "login": "jonasnick",
      "id": 2582071,
      "node_id": "MDQ6VXNlcjI1ODIwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasnick",
      "html_url": "https://github.com/jonasnick",
      "followers_url": "https://api.github.com/users/jonasnick/followers",
      "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasnick/orgs",
      "repos_url": "https://api.github.com/users/jonasnick/repos",
      "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasnick/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a work in progress because I wanted to put this up for discussion before writing tests. It addresses the TODOs that didn't make it in the schnorrsig PR and changes the APIs of `schnorrsig_sign`, `schnorrsig_verify` and `hardened_nonce_function`.\r\n\r\n- Ideally, the new `aux_rand32` argument for `sign` would be const, but didn't find a solution I was happy with.\r\n- Support for variable length message signing and verification supports the [suggested BIP amendment](https://github.com/sipa/bips/issues/207#issuecomment-673681901) for such messages.\r\n- ~~`sign_custom` with its opaque config object allows adding more arguments later without having to change the API again. Perhaps there are other sensible customization options, but I'm thinking of [sign-to-contract/covert-channel](https://github.com/bitcoin-core/secp256k1/pull/590) in particular. It would require adding the fields `unsigned char *s2c_data32` and `secp256k1_s2c_opening *s2c_opening` to the config struct. The former is the data to commit to and the latter is written to by `sign_custom`.~~ (EDIT: see below)\r\n",
    "labels": [],
    "created_at": "2020-11-02T19:34:33Z",
    "updated_at": "2021-07-05T08:42:15Z",
    "closed_at": "2021-07-03T09:45:41Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-07-03T09:45:41Z",
    "merge_commit_sha": "0440945fb5ce69d335fed32827b5166e84b02e05",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "jonasnick:schnorrsig-api",
      "ref": "schnorrsig-api",
      "sha": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 57937974,
        "node_id": "MDEwOlJlcG9zaXRvcnk1NzkzNzk3NA==",
        "name": "secp256k1",
        "full_name": "jonasnick/secp256k1",
        "owner": {
          "login": "jonasnick",
          "id": 2582071,
          "node_id": "MDQ6VXNlcjI1ODIwNzE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasnick",
          "html_url": "https://github.com/jonasnick",
          "followers_url": "https://api.github.com/users/jonasnick/followers",
          "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasnick/orgs",
          "repos_url": "https://api.github.com/users/jonasnick/repos",
          "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasnick/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasnick/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/jonasnick/secp256k1",
        "archive_url": "https://api.github.com/repos/jonasnick/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasnick/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasnick/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasnick/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasnick/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasnick/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasnick/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasnick/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasnick/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/jonasnick/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/jonasnick/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/jonasnick/secp256k1/events",
        "forks_url": "https://api.github.com/repos/jonasnick/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/jonasnick/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasnick/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasnick/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasnick/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasnick/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasnick/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasnick/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/jonasnick/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/jonasnick/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasnick/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasnick/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasnick/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasnick/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/jonasnick/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasnick/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasnick/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasnick/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/jonasnick/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/jonasnick/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/jonasnick/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasnick/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/jonasnick/secp256k1/hooks",
        "svn_url": "https://github.com/jonasnick/secp256k1",
        "language": "C",
        "forks_count": 4,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 11430,
        "default_branch": "master",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-24T13:49:16Z",
        "created_at": "2016-05-03T03:14:21Z",
        "updated_at": "2023-03-16T11:44:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "8ae56e33e749e16880dbfb4444fdae238b4426ac",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 948,
        "stargazers_count": 1768,
        "watchers_count": 1768,
        "size": 10062,
        "default_branch": "master",
        "open_issues_count": 142,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-12T16:38:48Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-06-12T17:38:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 380,
    "deletions": 138,
    "changed_files": 10,
    "commits": 9,
    "review_comments": 51,
    "comments": 26
  },
  "events": [
    {
      "event": "commented",
      "id": 744604090,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDYwNDA5MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/744604090",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-14T17:49:53Z",
      "updated_at": "2020-12-14T17:49:53Z",
      "author_association": "MEMBER",
      "body": "ping :)",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-744604090",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "reviewed",
      "id": 551903522,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTAzNTIy",
      "url": null,
      "actor": null,
      "commit_id": "14565fbee051e9f001a74efb73d30a5ac4b7b67b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-551903522",
      "submitted_at": "2020-12-14T21:22:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "commented",
      "id": 748239928,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODIzOTkyOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/748239928",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-18T18:14:58Z",
      "updated_at": "2020-12-18T18:14:58Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-748239928",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "commented",
      "id": 748446452,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODQ0NjQ1Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/748446452",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-19T09:10:54Z",
      "updated_at": "2020-12-19T09:10:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Can we use an opaque \"array\" struct for the config instead of using malloc? this will still allow us to extend the struct while also supporting platforms without heap allocation",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-748446452",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "commented",
      "id": 749773838,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTc3MzgzOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/749773838",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-22T21:00:31Z",
      "updated_at": "2020-12-22T21:00:31Z",
      "author_association": "MEMBER",
      "body": "@elichai Yeah good point, I agree that we should avoid dynamic memory allocation... and was hoping for suggestions :)\r\n\r\nThe opaque array struct wouldn't be fully backwards compatible because it only works if the caller is linked to the correct version of libsecp. In my limited understanding, I can count three reasonable options if we want to avoid malloc and be binary backwards compatible:\r\n\r\n1. Use a versioned struct [as in the Linux kernel](https://lkml.org/lkml/2015/7/30/117). I implemented [this variant](https://stackoverflow.com/questions/25947997/how-does-sizeofstruct-help-provide-abi-compatibility#comment40623725_25947997) in a [branch](https://github.com/jonasnick/secp256k1/commits/schnorrsig-api-static) but I don't know enough of the implications, i.e. how well this works with [ffi](https://github.com/ElementsProject/secp256k1-zkp/pull/37).\r\n2. Make space for future additions in the object by making the opaque byte array extra large or adding dummy members if we'd use a public struct instead.\r\n3. Allocate it on the scratch space and work on optionally providing stack space to the scratch space (instead of having it malloc). That's not exactly backwards compatible either because the provided scratch space may become to small.\r\n\r\nIn case 1 and 2 we should document that the struct size may change between versions such that no one relies on this (otherwise it seems like this would become super [complex](https://sourceware.org/glibc/wiki/Development/Versioning_A_Structure))\r\n",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-749773838",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "mentioned",
      "id": 4141752676,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE0MTc1MjY3Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4141752676",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-22T21:00:31Z"
    },
    {
      "event": "subscribed",
      "id": 4141752680,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNDE3NTI2ODA=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4141752680",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-22T21:00:31Z"
    },
    {
      "event": "reviewed",
      "id": 561806701,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxODA2NzAx",
      "url": null,
      "actor": null,
      "commit_id": "14565fbee051e9f001a74efb73d30a5ac4b7b67b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Am I right that the user can still create config objects simply on the stack? This should be the case, we shouldn't force the user to have malloc.\r\n\r\nBut if the answer to this question is yes, then I think we could get rid of the create/destroy functions entirely. Config objects will be small, it's fine and natural to use the stack. And if the user really wants dynamic memory, she can call still call malloc.  \r\n\r\n\r\nOr do we think the size of the config object isn't statically given?  This is true for example for the context object. Here, the size depends on the flags. (Although you could argue that there are only four types of contexts with known static sizes...) But here I don't think this will be case for config objects.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-561806701",
      "submitted_at": "2021-01-05T14:10:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "commented",
      "id": 754668959,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY2ODk1OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/754668959",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-05T14:28:43Z",
      "updated_at": "2021-01-05T14:28:43Z",
      "author_association": "MEMBER",
      "body": "Ah sorry, I haven't seen your previous comment @jonasnick.\r\n\r\nI think what I have in mind is similar to 1. but even simpler.\r\n\r\nAs long as we keep this an opaque object with manipulation functions provided by us, and we give the caller a way to figure out it's size (e.g. for FFI/dynamic alloc), versioning should not be necessary. Am I right?",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-754668959",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "mentioned",
      "id": 4170076876,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE3MDA3Njg3Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4170076876",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-05T14:28:44Z"
    },
    {
      "event": "subscribed",
      "id": 4170076881,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNzAwNzY4ODE=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4170076881",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-05T14:28:44Z"
    },
    {
      "event": "commented",
      "id": 754766598,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDc2NjU5OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/754766598",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-05T17:04:48Z",
      "updated_at": "2021-01-05T17:04:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "@real-or-random the problem is that the \"manipulation functions provided by us\" need to use malloc.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-754766598",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "mentioned",
      "id": 4170904621,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE3MDkwNDYyMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4170904621",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-05T17:04:48Z"
    },
    {
      "event": "subscribed",
      "id": 4170904629,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNzA5MDQ2Mjk=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4170904629",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-05T17:04:49Z"
    },
    {
      "event": "commented",
      "id": 757037190,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzAzNzE5MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/757037190",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-08T22:51:23Z",
      "updated_at": "2021-01-08T22:51:23Z",
      "author_association": "MEMBER",
      "body": "I implemented & pushed option 1, the versioned struct, after playing with it [here](https://github.com/jonasnick/versioned-param). The only downside is that if we add fields, we have to make sure that the new struct is in fact larger than the old one - on all supported compilers and platforms. We already make an assumption on the biggest alignment, so that should help figuring out when to add dummy fields.\r\n\r\nI also mentioned above that there would be issues with FFI, but there are actually none. The concern in the issue I linked to was essentially that a struct could change out from under the bindings, but that's exactly what versioned structs prevent.\r\n\r\nI'll add the missing tests and documentation.\r\n\r\n> As long as we keep this an opaque object\r\n\r\n@real-or-random callers can't put an opaque object on the stack because they can't statically determine its size.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-757037190",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "mentioned",
      "id": 4186353018,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE4NjM1MzAxOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4186353018",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-08T22:51:23Z"
    },
    {
      "event": "subscribed",
      "id": 4186353022,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxODYzNTMwMjI=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4186353022",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-08T22:51:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4186354838,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE4NjM1NDgzOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4186354838",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-08T22:52:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4240717832,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDI0MDcxNzgzMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4240717832",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-22T22:57:44Z"
    },
    {
      "event": "commented",
      "id": 765732776,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTczMjc3Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/765732776",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-22T22:58:28Z",
      "updated_at": "2021-01-22T23:00:35Z",
      "author_association": "MEMBER",
      "body": "I pushed a new version of this PR with two major changes:\r\n\r\n1. The versioned struct for extra sign_custom parameters is removed. Versioned structs are useful for forward compatibility (i.e. application expecting newer library actually calls older library), but it's not clear what to do in case we add sign to contract members to the struct, but the library doesn't understand S2C yet. We can abort, but that's not really forward compatibility. Instead it's a simple struct now with a magic value which can be used to achieve backward compatibility. If we decide to change the struct, we also change the magic which then acts as a version number and allows libsecp to distinguish between different structs.\r\n2. The `schnorrsig_sign` function only accepts 32-byte messages again. Also, I added the public `secp256k1_tagged_sha256` function to create tagged hashes according to BIP-340. The `schnorrsig_sign` doc explains that for messages that are not 32 bytes, one should use `secp256k1_tagged_sha256` with a domain seperator. `schnorrsig_sign_custom` still allows truly signing variable length messages. As such, with libsecp both methods for variable length messages can be used, but one is clearly recommended to not confuse users and that's the one that currently has the most adoption (Taproot, DLCs, Lightning offers). And the additional tag argument to `secp256k1_tagged_sha256` makes it harder to miss domain separation.\r\n\r\nI also added tests and docs. Since this PR doesn't contradict the discussed BIP-340 changes, I removed the WIP status.\r\n",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-765732776",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "renamed",
      "id": 4240720053,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDI0MDcyMDA1Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4240720053",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-22T22:58:45Z",
      "rename": {
        "from": "WIP: schnorrsig API overhaul",
        "to": "schnorrsig API overhaul"
      }
    },
    {
      "event": "reviewed",
      "id": 592753216,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNzUzMjE2",
      "url": null,
      "actor": null,
      "commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-592753216",
      "submitted_at": "2021-02-18T00:55:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "reviewed",
      "id": 592760925,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNzYwOTI1",
      "url": null,
      "actor": null,
      "commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-592760925",
      "submitted_at": "2021-02-18T01:01:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "reviewed",
      "id": 592762362,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNzYyMzYy",
      "url": null,
      "actor": null,
      "commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-592762362",
      "submitted_at": "2021-02-18T01:02:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "reviewed",
      "id": 592762752,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNzYyNzUy",
      "url": null,
      "actor": null,
      "commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-592762752",
      "submitted_at": "2021-02-18T01:02:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "reviewed",
      "id": 594491142,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NDkxMTQy",
      "url": null,
      "actor": null,
      "commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-594491142",
      "submitted_at": "2021-02-19T19:17:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "referenced",
      "id": 4369012238,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNjkwMTIyMzg=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4369012238",
      "actor": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "640418998f2f68b4121f15c4d047fe5bfc233b58",
      "commit_url": "https://api.github.com/repos/jesseposner/secp256k1-zkp/commits/640418998f2f68b4121f15c4d047fe5bfc233b58",
      "created_at": "2021-02-24T06:08:45Z"
    },
    {
      "event": "referenced",
      "id": 4374905090,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNzQ5MDUwOTA=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4374905090",
      "actor": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0f84518bff495df90ebf53d6444f337e2eff200e",
      "commit_url": "https://api.github.com/repos/jesseposner/secp256k1-zkp/commits/0f84518bff495df90ebf53d6444f337e2eff200e",
      "created_at": "2021-02-25T07:10:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4378604761,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM3ODYwNDc2MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4378604761",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-25T20:30:52Z"
    },
    {
      "event": "commented",
      "id": 786184674,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjE4NDY3NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/786184674",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-25T20:31:58Z",
      "updated_at": "2021-02-25T20:31:58Z",
      "author_association": "MEMBER",
      "body": "Rebased on top of master because cirrus wasn't included in this branch.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-786184674",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "reviewed",
      "id": 611117459,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjExMTE3NDU5",
      "url": null,
      "actor": null,
      "commit_id": "64503686a26e21dda422fe5377537601d0f86aa6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ack 64503686a26e21dda422fe5377537601d0f86aa6\r\n",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-611117459",
      "submitted_at": "2021-03-12T20:12:06Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "commented",
      "id": 800780506,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDc4MDUwNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/800780506",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T04:15:48Z",
      "updated_at": "2021-03-17T04:15:48Z",
      "author_association": "MEMBER",
      "body": "API looks good, code review ACK. Feel like squashing in the fixup?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-800780506",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4469231032,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ2OTIzMTAzMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4469231032",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T10:01:21Z"
    },
    {
      "event": "commented",
      "id": 800954101,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDk1NDEwMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/800954101",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T10:01:26Z",
      "updated_at": "2021-03-17T10:01:26Z",
      "author_association": "MEMBER",
      "body": "Done.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-800954101",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "reviewed",
      "id": 614209119,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0MjA5MTE5",
      "url": null,
      "actor": null,
      "commit_id": "0cda011bb00c72c4a3f72f70dcf48981346acaa1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I like this approach.  \r\n\r\nCan you a explain how the extraparams struct is now forward-compatible or not? (Here on even as comments in the source?) ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-614209119",
      "submitted_at": "2021-03-17T13:56:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "commented",
      "id": 802895978,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjg5NTk3OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/802895978",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-19T14:59:30Z",
      "updated_at": "2021-03-19T14:59:30Z",
      "author_association": "MEMBER",
      "body": "There's _no_ forward compatibility, i.e. applications expecting a newer library than installed won't work. Adding a new field to the extraparams requires a bump of the minor version. Then, applications which need that feature can demand at least that version.\r\n",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-802895978",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4483982143,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ4Mzk4MjE0Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4483982143",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-19T19:40:07Z"
    },
    {
      "event": "commented",
      "id": 803070712,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzA3MDcxMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/803070712",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-19T19:41:07Z",
      "updated_at": "2021-03-19T19:41:07Z",
      "author_association": "MEMBER",
      "body": "Rebased to (hopefully) fix CI which was complaining about invalid bignum selection.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-803070712",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "commented",
      "id": 803306571,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzMwNjU3MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/803306571",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-20T12:30:04Z",
      "updated_at": "2021-03-20T12:32:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not sure I understand the problems this new API is solving\r\n1. What's the point of exposing `secp256k1_tagged_sha256`? we currently don't expose regular sha256 so why should we expose a tagged one?.\r\n2. What does the new `secp256k1_schnorrsig_extraparams` struct help solve? why is it better over the old API? (noncefp+ndata).\r\n\r\nThanks! (Other than that the implementation looks good)\r\n\r\nEDIT I guess with regards to 2, it allows us to add new optional fields to the struct in a backwards compatible manner.",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-803306571",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "commented",
      "id": 803358839,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzM1ODgzOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/803358839",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-20T14:19:41Z",
      "updated_at": "2021-03-20T14:19:41Z",
      "author_association": "MEMBER",
      "body": "> What's the point of exposing secp256k1_tagged_sha256?\r\n\r\nBecause the recommended signing procedure is to hash the message with a context-specific tag and then sign that. If we didn't expose `secp256k1_tagged_sha256`, that would be unnecessarily difficult for users.\r\n\r\n> What does the new secp256k1_schnorrsig_extraparams struct help solve?  I guess [...] it allows us to add new optional fields\r\n\r\nRight, for example, we may want to use the extraparams to allow adding a sign-to-contract commitment to the signature or change the exact signing algorithm in other ways. The same could be achieved without extraparams by just adding entirely new signing functions `sign_1, ..., sign_n` with ever growing argument lists.\r\n",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-803358839",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "commented",
      "id": 803365185,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzM2NTE4NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/803365185",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-20T14:40:48Z",
      "updated_at": "2021-03-20T14:41:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Because the recommended signing procedure is to hash the message with a context-specific tag and then sign that. If we didn't expose `secp256k1_tagged_sha256`, that would be unnecessarily difficult for users.\r\n\r\nSo the use case is something like the following?\r\n```c\r\ntypedef struct {const secp256k1_context* ctx; unsigned char[32] hash;} custom_data;\r\n// This function is used as `secp256k1_nonce_function_hardened`\r\nint my_custom_nonce_func(unsigned char *nonce32, const unsigned char *msg, size_t msglen, const unsigned char *key32, const unsigned char *xonly_pk32, const unsigned char *algo, size_t algolen, void *data) {\r\n    // Do custom own processing and result in a full message in the pair `(should_sign_ptr, should_sign_len)`.\r\n    // ...\r\n    custom_data* my_custom_data = (custom_data*)data;\r\n    return secp256k1_tagged_sha256(my_custom_data->ctx, my_custom_data->hash, MY_OWN_APP_TAG, sizeof(MY_OWN_APP_TAG), should_sign_ptr, should_sign_len);\r\n}\r\n```",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-803365185",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "commented",
      "id": 803432943,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzQzMjk0Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/803432943",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-20T17:45:24Z",
      "updated_at": "2021-03-20T17:45:24Z",
      "author_association": "MEMBER",
      "body": "The intended use case is simply signing non-32-byte messages:\r\n\r\n```\r\nunsigned char msg[33] = {0};\r\nunsigned char msghash[32];\r\nsecp256k1_tagged_sha256(ctx, msghash, MY_OWN_APP_TAG, sizeof(MY_OWN_APP_TAG), msg, sizeof(msg));\r\nsecp256k1_schnorrsig_sign(ctx, ..., msghash, ...);\r\n```\r\n\r\nYou could also use `sign_custom` with `msglen = 33` but as mentioned above \"one is clearly recommended to not confuse users and that's the one that currently has the most adoption (Taproot, DLCs, Lightning offers). And the additional tag argument to secp256k1_tagged_sha256 makes it harder to miss domain separation.\"",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-803432943",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "reviewed",
      "id": 618591077,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE4NTkxMDc3",
      "url": null,
      "actor": null,
      "commit_id": "48917040578bdf9248f4f637fd4e9ed1b6e926e2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-618591077",
      "submitted_at": "2021-03-23T13:32:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "commented",
      "id": 804906914,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDkwNjkxNA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/804906914",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-23T13:34:06Z",
      "updated_at": "2021-03-23T13:34:06Z",
      "author_association": "MEMBER",
      "body": "Fixups are all  good, fine  to squash from my side.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-804906914",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4496430595,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ5NjQzMDU5NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4496430595",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-23T14:14:09Z"
    },
    {
      "event": "commented",
      "id": 804937168,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwNDkzNzE2OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/804937168",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-23T14:14:19Z",
      "updated_at": "2021-03-23T14:14:19Z",
      "author_association": "MEMBER",
      "body": "squashed",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-804937168",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "commented",
      "id": 848004639,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0ODAwNDYzOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/848004639",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T16:09:45Z",
      "updated_at": "2021-05-25T16:09:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Needs rebase",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-848004639",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6OTllODYxNDgxMmJmMjM3OThhNDhjNTM2NDk5NTdlMjZlNWIxMmY0YQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/99e8614812bf23798a48c53649957e26e5b12f4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/99e8614812bf23798a48c53649957e26e5b12f4a",
      "tree": {
        "sha": "e30f3feb34f6493e67f590b3394cebb54f1e3692",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/e30f3feb34f6493e67f590b3394cebb54f1e3692"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/3dc8c072b6d84845820c1483a2ee21094fb87cc3",
          "sha": "3dc8c072b6d84845820c1483a2ee21094fb87cc3",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/3dc8c072b6d84845820c1483a2ee21094fb87cc3"
        }
      ],
      "message": "README: mention schnorrsig module",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-05-28T11:40:52Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2020-10-30T20:36:18Z"
      },
      "sha": "99e8614812bf23798a48c53649957e26e5b12f4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6ZGYzYmZhMTJjM2I3MjgyNDFkM2U2MWQxM2Y4Yzk3NjcxOWEzZGU0MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/df3bfa12c3b728241d3e61d13f8c976719a3de41",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/df3bfa12c3b728241d3e61d13f8c976719a3de41",
      "tree": {
        "sha": "d5e6c3488af081377fa29d4c8f37680eb7f0d469",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/d5e6c3488af081377fa29d4c8f37680eb7f0d469"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/99e8614812bf23798a48c53649957e26e5b12f4a",
          "sha": "99e8614812bf23798a48c53649957e26e5b12f4a",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/99e8614812bf23798a48c53649957e26e5b12f4a"
        }
      ],
      "message": "schnorrsig: clarify result of calling nonce_function_bip340 without data",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-05-28T11:40:52Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2020-10-30T20:39:48Z"
      },
      "sha": "df3bfa12c3b728241d3e61d13f8c976719a3de41"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6NDQyY2VlNWJhZmJkNzQxOWFjYWRmMjAzY2ExMTU2OWUzNzFmMWY4NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/442cee5bafbd7419acadf203ca11569e371f1f85",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/442cee5bafbd7419acadf203ca11569e371f1f85",
      "tree": {
        "sha": "23650e29cc133e14fd82203728b61aefbf7feda4",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/23650e29cc133e14fd82203728b61aefbf7feda4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/df3bfa12c3b728241d3e61d13f8c976719a3de41",
          "sha": "df3bfa12c3b728241d3e61d13f8c976719a3de41",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/df3bfa12c3b728241d3e61d13f8c976719a3de41"
        }
      ],
      "message": "schnorrsig: add algolen argument to nonce_function_hardened\n\nThis avoids having to remove trailing NUL bytes in the nonce function",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-05-28T11:40:52Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-01-15T21:43:23Z"
      },
      "sha": "442cee5bafbd7419acadf203ca11569e371f1f85"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4811934726,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDgxMTkzNDcyNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4811934726",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-28T11:41:06Z"
    },
    {
      "event": "commented",
      "id": 850358809,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDM1ODgwOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/850358809",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-28T11:41:21Z",
      "updated_at": "2021-05-28T11:41:21Z",
      "author_association": "MEMBER",
      "body": "rebased",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-850358809",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4813920336,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDgxMzkyMDMzNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4813920336",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-28T17:37:24Z"
    },
    {
      "event": "commented",
      "id": 850569650,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDU2OTY1MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/850569650",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-28T17:37:42Z",
      "updated_at": "2021-05-28T17:37:42Z",
      "author_association": "MEMBER",
      "body": "The new leak sanitizer in CI detected a missing `context_destroy` in the `tagged_sha256_tests`. Fixed & squashed.\r\n",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-850569650",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "reviewed",
      "id": 680930727,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjgwOTMwNzI3",
      "url": null,
      "actor": null,
      "commit_id": "439ed2ff2fa3fe38bb0aeb26213d7f2263eca701",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ack 439ed2ff2fa3fe38bb0aeb26213d7f2263eca701\r\n\r\nGlad we came to a \"resolution\" on the forward-compat issue.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-680930727",
      "submitted_at": "2021-06-10T15:25:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "reviewed",
      "id": 690665860,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjkwNjY1ODYw",
      "url": null,
      "actor": null,
      "commit_id": "442cee5bafbd7419acadf203ca11569e371f1f85",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Mostly nits, SGTM",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-690665860",
      "submitted_at": "2021-06-23T14:49:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "commented",
      "id": 868003116,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg2ODAwMzExNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/868003116",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-24T22:46:32Z",
      "updated_at": "2021-06-24T22:46:32Z",
      "author_association": "NONE",
      "body": "utACK 66ff2fa6\r\n\r\nThanks for taking the nits.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-868003116",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "commented",
      "id": 868870556,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg2ODg3MDU1Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/868870556",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-25T22:52:15Z",
      "updated_at": "2021-06-25T22:52:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK the fixup commit",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-868870556",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4944288737,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDk0NDI4ODczNw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4944288737",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-27T20:25:07Z"
    },
    {
      "event": "commented",
      "id": 869219415,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTIxOTQxNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/869219415",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-27T20:25:40Z",
      "updated_at": "2021-06-27T20:25:40Z",
      "author_association": "MEMBER",
      "body": "squashed the comment fixup commit",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-869219415",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6YjZjMGI3MmZiMDZlM2MzMTEyMWYxZWY0NDAzZDJhMjI5YTMxZWMxYw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/b6c0b72fb06e3c31121f1ef4403d2a229a31ec1c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/b6c0b72fb06e3c31121f1ef4403d2a229a31ec1c",
      "tree": {
        "sha": "e511939499316131964a63269108a2a7fa73d956",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/e511939499316131964a63269108a2a7fa73d956"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/442cee5bafbd7419acadf203ca11569e371f1f85",
          "sha": "442cee5bafbd7419acadf203ca11569e371f1f85",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/442cee5bafbd7419acadf203ca11569e371f1f85"
        }
      ],
      "message": "schnorrsig: remove noncefp args from sign; add sign_custom function\n\nThis makes the default sign function easier to use while allowing more granular\ncontrol through sign_custom.\n\nTests for sign_custom follow in a later commit.",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-06-27T20:26:15Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2020-10-30T17:48:16Z"
      },
      "sha": "b6c0b72fb06e3c31121f1ef4403d2a229a31ec1c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6NWE4ZTQ5OTFhZDQ0M2NjMGNjNjEzZDgwMzgwYTJkYjgwMmE0Y2JjZQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5a8e4991ad443cc0cc613d80380a2db802a4cbce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5a8e4991ad443cc0cc613d80380a2db802a4cbce",
      "tree": {
        "sha": "98d3ea2b8119a0fc12b061bb432accb28ee881ad",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/98d3ea2b8119a0fc12b061bb432accb28ee881ad"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/b6c0b72fb06e3c31121f1ef4403d2a229a31ec1c",
          "sha": "b6c0b72fb06e3c31121f1ef4403d2a229a31ec1c",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/b6c0b72fb06e3c31121f1ef4403d2a229a31ec1c"
        }
      ],
      "message": "Add secp256k1_tagged_sha256 as defined in BIP-340\n\nGives users the ability to hash messages to 32 byte before they are signed while\nallowing efficient domain separation through the tag.",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-06-27T20:26:15Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-01-15T20:58:01Z"
      },
      "sha": "5a8e4991ad443cc0cc613d80380a2db802a4cbce"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6YTBjM2ZjMTc3ZjdmNDM1ZTU5Mzk2MjUwNDE4MmMzODYxYzQ3ZDFiZQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/a0c3fc177f7f435e593962504182c3861c47d1be",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/a0c3fc177f7f435e593962504182c3861c47d1be",
      "tree": {
        "sha": "329c9843cc5d4b9bf81e7ab55540d4ae6e4e55f1",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/329c9843cc5d4b9bf81e7ab55540d4ae6e4e55f1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5a8e4991ad443cc0cc613d80380a2db802a4cbce",
          "sha": "5a8e4991ad443cc0cc613d80380a2db802a4cbce",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5a8e4991ad443cc0cc613d80380a2db802a4cbce"
        }
      ],
      "message": "schnorrsig: allow signing and verification of variable length msgs\n\nVarlen message support for the default sign function comes from recommending\ntagged_sha256. sign_custom on the other hand gets the ability to directly sign\nmessage of any length. This also implies signing and verification support for\nthe empty message (NULL) with msglen 0.\n\nTests for variable lengths follow in a later commit.",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-06-27T20:26:15Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-01-15T21:19:34Z"
      },
      "sha": "a0c3fc177f7f435e593962504182c3861c47d1be"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6ZDhkODA2YWFmMzg2YzdlYWQ5NDMxNjQ5Zjg5OWZmODJiMDE4NWFhZQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d8d806aaf386c7ead9431649f899ff82b0185aae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d8d806aaf386c7ead9431649f899ff82b0185aae",
      "tree": {
        "sha": "f3a92d91bceded1216148b037ad69ed563ee61cf",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/f3a92d91bceded1216148b037ad69ed563ee61cf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/a0c3fc177f7f435e593962504182c3861c47d1be",
          "sha": "a0c3fc177f7f435e593962504182c3861c47d1be",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/a0c3fc177f7f435e593962504182c3861c47d1be"
        }
      ],
      "message": "schnorrsig: add extra parameter struct for sign_custom\n\nThis simplifies the interface of sign_custom and allows adding more parameters\nlater in a backward compatible way.",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-06-27T20:26:15Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2020-11-02T14:41:25Z"
      },
      "sha": "d8d806aaf386c7ead9431649f899ff82b0185aae"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6ZmRkMDZiNzk2NzE5NmEzYjM0ZjczYTViMTk2MzI2MzdiNGJkZTkwYQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/fdd06b7967196a3b34f73a5b19632637b4bde90a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/fdd06b7967196a3b34f73a5b19632637b4bde90a",
      "tree": {
        "sha": "cb10265dc07c461ad58874682388dd2755782310",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/cb10265dc07c461ad58874682388dd2755782310"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d8d806aaf386c7ead9431649f899ff82b0185aae",
          "sha": "d8d806aaf386c7ead9431649f899ff82b0185aae",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d8d806aaf386c7ead9431649f899ff82b0185aae"
        }
      ],
      "message": "schnorrsig: add tests for sign_custom and varlen msg verification",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-06-27T20:26:15Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-01-21T22:23:04Z"
      },
      "sha": "fdd06b7967196a3b34f73a5b19632637b4bde90a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6NWY2Y2VhZmNmYTQ2YTY5ZTkwMWJlZDg3ZTJjNWYzMjNiMDNiMWU4Yw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "tree": {
        "sha": "8dffc829ce65e2ce393707644e4594032d2737ad",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/8dffc829ce65e2ce393707644e4594032d2737ad"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/fdd06b7967196a3b34f73a5b19632637b4bde90a",
          "sha": "fdd06b7967196a3b34f73a5b19632637b4bde90a",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/fdd06b7967196a3b34f73a5b19632637b4bde90a"
        }
      ],
      "message": "schnorrsig: allow setting MSGLEN != 32 in benchmark",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-06-27T20:26:15Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2021-03-18T22:43:54Z"
      },
      "sha": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c"
    },
    {
      "event": "review_requested",
      "id": 4945734305,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50NDk0NTczNDMwNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4945734305",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-28T07:53:22Z",
      "requested_reviewer": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 695286909,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njk1Mjg2OTA5",
      "url": null,
      "actor": null,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ack 5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c\r\n",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-695286909",
      "submitted_at": "2021-06-29T17:02:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "commented",
      "id": 871364506,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTM2NDUwNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/871364506",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-30T12:35:31Z",
      "updated_at": "2021-06-30T12:35:31Z",
      "author_association": "NONE",
      "body": "utACK 5f6ceaf",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#issuecomment-871364506",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/844"
    },
    {
      "event": "reviewed",
      "id": 696706652,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njk2NzA2NjUy",
      "url": null,
      "actor": null,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "utACK 5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "user": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#pullrequestreview-696706652",
      "submitted_at": "2021-07-01T00:01:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
    },
    {
      "event": "merged",
      "id": 4974038475,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDk3NDAzODQ3NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4974038475",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0440945fb5ce69d335fed32827b5166e84b02e05",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/0440945fb5ce69d335fed32827b5166e84b02e05",
      "created_at": "2021-07-03T09:45:41Z"
    },
    {
      "event": "closed",
      "id": 4974038478,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDk3NDAzODQ3OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4974038478",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-03T09:45:41Z"
    },
    {
      "event": "referenced",
      "id": 5102538571,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMDI1Mzg1NzE=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5102538571",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "71797beec54d36a055d5e172ecbf2141fa984428",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/71797beec54d36a055d5e172ecbf2141fa984428",
      "created_at": "2021-08-03T05:15:40Z"
    },
    {
      "event": "referenced",
      "id": 5108646110,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMDg2NDYxMTA=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5108646110",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ce5d5632a3931429752b5feb255df7afd231bfef",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/ce5d5632a3931429752b5feb255df7afd231bfef",
      "created_at": "2021-08-04T04:49:22Z"
    },
    {
      "event": "referenced",
      "id": 5138105107,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMzgxMDUxMDc=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5138105107",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "54f3b669026998fa86ec9c72970f709e9cb27eb7",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/54f3b669026998fa86ec9c72970f709e9cb27eb7",
      "created_at": "2021-08-10T22:22:01Z"
    },
    {
      "event": "referenced",
      "id": 5149897936,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDk4OTc5MzY=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5149897936",
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "235da293a2334858a2ef7e397c2c0b95ea13ea8c",
      "commit_url": "https://api.github.com/repos/5tefan/dash/commits/235da293a2334858a2ef7e397c2c0b95ea13ea8c",
      "created_at": "2021-08-12T14:39:48Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/542803430",
      "pull_request_review_id": 551903522,
      "id": 542803430,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgwMzQzMA==",
      "diff_hunk": "@@ -50,59 +52,125 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo16 argument must be non-NULL, otherwise the function will\n+ *  fail and return 0. The hash will be tagged with algo16 after removing all\n+ *  terminating null bytes. Therefore, to create BIP-340 compliant signatures,\n+ *  algo16 must be set to \"BIP0340/nonce\\0\\0\\0\"\n  */\n SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_function_bip340;\n \n+/** Opaque data structure that holds additional arguments for schnorrsig signing.\n+ */\n+typedef struct secp256k1_schnorrsig_config_struct secp256k1_schnorrsig_config;\n+\n /** Create a Schnorr signature.\n  *\n  *  Does _not_ strictly follow BIP-340 because it does not verify the resulting\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n- *\n  *  Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:   sig64: pointer to a 64-byte array to store the serialized signature (cannot be NULL)\n- *  In:    msg32: the 32-byte message being signed (cannot be NULL)\n+ *  In:      msg: the message being signed (cannot be NULL)\n+ *       msg_len: length of the message\n  *       keypair: pointer to an initialized keypair (cannot be NULL)\n- *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bip340 is used\n- *         ndata: pointer to arbitrary data used by the nonce generation\n- *                function (can be NULL). If it is non-NULL and\n- *                secp256k1_nonce_function_bip340 is used, then ndata must be a\n- *                pointer to 32-byte auxiliary randomness as per BIP-340.\n+ *    aux_rand32: 32 bytes of fresh randomness. While recommended to provide\n+ *                this, it is only supplemental to security and can be NULL. See\n+ *                BIP-340 for a full explanation of this argument and for\n+ *                guidance if randomness is expensive.\n  */\n SECP256K1_API int secp256k1_schnorrsig_sign(\n     const secp256k1_context* ctx,\n     unsigned char *sig64,\n-    const unsigned char *msg32,\n+    const unsigned char *msg,\n+    size_t msg_len,\n     const secp256k1_keypair *keypair,\n+    unsigned char *aux_rand32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(5);\n+\n+/** Create a schnorrsig config (in dynamically allocated memory).\n+ *\n+ *  This function uses malloc to allocate memory. It is guaranteed that malloc is\n+ *  called at most once for every call of this function.\n+ *\n+ *  The allocated memory must be freed with secp256k1_schnorrsig_config_destroy.\n+ *\n+ *  Returns: a newly created schnorrsig config\n+ *  Args: ctx:  an existing context object (cannot be NULL)\n+ */\n+SECP256K1_API secp256k1_schnorrsig_config* secp256k1_schnorrsig_config_create(\n+    const secp256k1_context* ctx\n+) SECP256K1_ARG_NONNULL(1);\n+\n+/** Destroy a schnorrsig config (created in dynamically allocated memory).\n+ *\n+ *  The config pointer may not be used afterwards.\n+ *  Args:  ctx: a secp256k1 context object\n+ *  In: config: the config to destroy\n+ */\n+SECP256K1_API void secp256k1_schnorrsig_config_destroy(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig_config *config\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2);\n+\n+/** Set nonce function pointer and nonce data of a config object\n+ *\n+ *  Returns: 1 if the arguments are valid. 0 otherwise\n+ *  Args:  ctx: a secp256k1 context object\n+ *  In: config: the config to set the noncefp and ndata for\n+ *     noncefp: the nonce function pointer to set\n+ *       ndata: the nonce data to set\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_config_set_nonce(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig_config *config,\n     secp256k1_nonce_function_hardened noncefp,\n     void *ndata\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2);\n+\n+/** Create a Schnorr signature with a more flexible API.\n+ *\n+ *  Same arguments as secp256k1_schnorrsig_sign except that it accepts a pointer\n+ *  to a config object that allows customizing signing by passing additional\n+ *  arguments.\n+ *\n+ *  In: noncefp: pointer to a nonce generation function. If NULL,\n+ *               secp256k1_nonce_function_bip340 is used\n+ *        ndata: pointer to arbitrary data used by the nonce generation function\n+ *               (can be NULL). If it is non-NULL and\n+ *               secp256k1_nonce_function_bip340 is used, then ndata must be a\n+ *               pointer to 32-byte auxiliary randomness as per BIP-340.\n+ *       config: pointer to a config object.\n+ */",
      "path": "include/secp256k1_schnorrsig.h",
      "position": 139,
      "original_position": 132,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "14565fbee051e9f001a74efb73d30a5ac4b7b67b",
      "in_reply_to_id": null,
      "user": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps I am misunderstanding the doc comment syntax but something is not quite right here. It should say something like \"instead of `aux_rand32` it accepts a custom config...\". I think then the only \"In\" should be the config?",
      "created_at": "2020-12-14T21:22:06Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r542803430",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/542803430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 138,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/543579176",
      "pull_request_review_id": 552741988,
      "id": 543579176,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3OTE3Ng==",
      "diff_hunk": "@@ -50,59 +52,125 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo16 argument must be non-NULL, otherwise the function will\n+ *  fail and return 0. The hash will be tagged with algo16 after removing all\n+ *  terminating null bytes. Therefore, to create BIP-340 compliant signatures,\n+ *  algo16 must be set to \"BIP0340/nonce\\0\\0\\0\"\n  */\n SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_function_bip340;\n \n+/** Opaque data structure that holds additional arguments for schnorrsig signing.\n+ */\n+typedef struct secp256k1_schnorrsig_config_struct secp256k1_schnorrsig_config;\n+\n /** Create a Schnorr signature.\n  *\n  *  Does _not_ strictly follow BIP-340 because it does not verify the resulting\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n- *\n  *  Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:   sig64: pointer to a 64-byte array to store the serialized signature (cannot be NULL)\n- *  In:    msg32: the 32-byte message being signed (cannot be NULL)\n+ *  In:      msg: the message being signed (cannot be NULL)\n+ *       msg_len: length of the message\n  *       keypair: pointer to an initialized keypair (cannot be NULL)\n- *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bip340 is used\n- *         ndata: pointer to arbitrary data used by the nonce generation\n- *                function (can be NULL). If it is non-NULL and\n- *                secp256k1_nonce_function_bip340 is used, then ndata must be a\n- *                pointer to 32-byte auxiliary randomness as per BIP-340.\n+ *    aux_rand32: 32 bytes of fresh randomness. While recommended to provide\n+ *                this, it is only supplemental to security and can be NULL. See\n+ *                BIP-340 for a full explanation of this argument and for\n+ *                guidance if randomness is expensive.\n  */\n SECP256K1_API int secp256k1_schnorrsig_sign(\n     const secp256k1_context* ctx,\n     unsigned char *sig64,\n-    const unsigned char *msg32,\n+    const unsigned char *msg,\n+    size_t msg_len,\n     const secp256k1_keypair *keypair,\n+    unsigned char *aux_rand32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(5);\n+\n+/** Create a schnorrsig config (in dynamically allocated memory).\n+ *\n+ *  This function uses malloc to allocate memory. It is guaranteed that malloc is\n+ *  called at most once for every call of this function.\n+ *\n+ *  The allocated memory must be freed with secp256k1_schnorrsig_config_destroy.\n+ *\n+ *  Returns: a newly created schnorrsig config\n+ *  Args: ctx:  an existing context object (cannot be NULL)\n+ */\n+SECP256K1_API secp256k1_schnorrsig_config* secp256k1_schnorrsig_config_create(\n+    const secp256k1_context* ctx\n+) SECP256K1_ARG_NONNULL(1);\n+\n+/** Destroy a schnorrsig config (created in dynamically allocated memory).\n+ *\n+ *  The config pointer may not be used afterwards.\n+ *  Args:  ctx: a secp256k1 context object\n+ *  In: config: the config to destroy\n+ */\n+SECP256K1_API void secp256k1_schnorrsig_config_destroy(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig_config *config\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2);\n+\n+/** Set nonce function pointer and nonce data of a config object\n+ *\n+ *  Returns: 1 if the arguments are valid. 0 otherwise\n+ *  Args:  ctx: a secp256k1 context object\n+ *  In: config: the config to set the noncefp and ndata for\n+ *     noncefp: the nonce function pointer to set\n+ *       ndata: the nonce data to set\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_config_set_nonce(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig_config *config,\n     secp256k1_nonce_function_hardened noncefp,\n     void *ndata\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2);\n+\n+/** Create a Schnorr signature with a more flexible API.\n+ *\n+ *  Same arguments as secp256k1_schnorrsig_sign except that it accepts a pointer\n+ *  to a config object that allows customizing signing by passing additional\n+ *  arguments.\n+ *\n+ *  In: noncefp: pointer to a nonce generation function. If NULL,\n+ *               secp256k1_nonce_function_bip340 is used\n+ *        ndata: pointer to arbitrary data used by the nonce generation function\n+ *               (can be NULL). If it is non-NULL and\n+ *               secp256k1_nonce_function_bip340 is used, then ndata must be a\n+ *               pointer to 32-byte auxiliary randomness as per BIP-340.\n+ *       config: pointer to a config object.\n+ */",
      "path": "include/secp256k1_schnorrsig.h",
      "position": 139,
      "original_position": 132,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "14565fbee051e9f001a74efb73d30a5ac4b7b67b",
      "in_reply_to_id": 542803430,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right, the doc for `ndata` and `noncefp` here should be removed in the last commit.",
      "created_at": "2020-12-15T18:20:53Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r543579176",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/543579176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 138,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/551946984",
      "pull_request_review_id": 561806701,
      "id": 551946984,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0Njk4NA==",
      "diff_hunk": "@@ -187,7 +187,48 @@ int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, unsigned char *sig64\n     return ret;\n }\n \n-int secp256k1_schnorrsig_verify(const secp256k1_context* ctx, const unsigned char *sig64, const unsigned char *msg32, const secp256k1_xonly_pubkey *pubkey) {\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, unsigned char *sig64, const unsigned char *msg, size_t msg_len, const secp256k1_keypair *keypair, unsigned char *aux_rand32) {\n+    return secp256k1_schnorrsig_sign_internal(ctx, sig64, msg, msg_len, keypair, secp256k1_nonce_function_bip340, aux_rand32);\n+}\n+\n+struct secp256k1_schnorrsig_config_struct {\n+    secp256k1_nonce_function_hardened noncefp;\n+    void *ndata;\n+};\n+\n+secp256k1_schnorrsig_config* secp256k1_schnorrsig_config_create(const secp256k1_context* ctx) {\n+    secp256k1_schnorrsig_config *config;\n+    config = (secp256k1_schnorrsig_config*)checked_malloc(&ctx->error_callback, sizeof(secp256k1_schnorrsig_config));\n+    config->noncefp = NULL;\n+    config->ndata = NULL;\n+    return config;\n+}\n+\n+void secp256k1_schnorrsig_config_destroy(const secp256k1_context* ctx, secp256k1_schnorrsig_config *config) {\n+    VERIFY_CHECK(ctx != NULL);\n+\n+    if (config != NULL) {\n+        free(config);",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": null,
      "original_position": 100,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "14565fbee051e9f001a74efb73d30a5ac4b7b67b",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fwiw, you don't need to check for NULL\r\nhttp://port70.net/~nsz/c/c89/c89-draft.html#4.10.3.2",
      "created_at": "2021-01-05T13:57:18Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r551946984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/551946984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 212,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/551949698",
      "pull_request_review_id": 561806701,
      "id": 551949698,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0OTY5OA==",
      "diff_hunk": "@@ -50,59 +52,125 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo16 argument must be non-NULL, otherwise the function will\n+ *  fail and return 0. The hash will be tagged with algo16 after removing all\n+ *  terminating null bytes. Therefore, to create BIP-340 compliant signatures,\n+ *  algo16 must be set to \"BIP0340/nonce\\0\\0\\0\"",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 33,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "14565fbee051e9f001a74efb73d30a5ac4b7b67b",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe it's easier than having a length but I think if we have a length arg for the message, we can have it here too. `\\0\\0\\0` is somewhat strange. I mean it works but stripping trailing \\0 bytes is very unconventional, I haven't seen this anywhere else. \r\n",
      "created_at": "2021-01-05T14:02:10Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r551949698",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/551949698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/562961153",
      "pull_request_review_id": 574682344,
      "id": 562961153,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjk2MTE1Mw==",
      "diff_hunk": "@@ -50,59 +52,125 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo16 argument must be non-NULL, otherwise the function will\n+ *  fail and return 0. The hash will be tagged with algo16 after removing all\n+ *  terminating null bytes. Therefore, to create BIP-340 compliant signatures,\n+ *  algo16 must be set to \"BIP0340/nonce\\0\\0\\0\"\n  */\n SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_function_bip340;\n \n+/** Opaque data structure that holds additional arguments for schnorrsig signing.\n+ */\n+typedef struct secp256k1_schnorrsig_config_struct secp256k1_schnorrsig_config;\n+\n /** Create a Schnorr signature.\n  *\n  *  Does _not_ strictly follow BIP-340 because it does not verify the resulting\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n- *\n  *  Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:   sig64: pointer to a 64-byte array to store the serialized signature (cannot be NULL)\n- *  In:    msg32: the 32-byte message being signed (cannot be NULL)\n+ *  In:      msg: the message being signed (cannot be NULL)\n+ *       msg_len: length of the message\n  *       keypair: pointer to an initialized keypair (cannot be NULL)\n- *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bip340 is used\n- *         ndata: pointer to arbitrary data used by the nonce generation\n- *                function (can be NULL). If it is non-NULL and\n- *                secp256k1_nonce_function_bip340 is used, then ndata must be a\n- *                pointer to 32-byte auxiliary randomness as per BIP-340.\n+ *    aux_rand32: 32 bytes of fresh randomness. While recommended to provide\n+ *                this, it is only supplemental to security and can be NULL. See\n+ *                BIP-340 for a full explanation of this argument and for\n+ *                guidance if randomness is expensive.\n  */\n SECP256K1_API int secp256k1_schnorrsig_sign(\n     const secp256k1_context* ctx,\n     unsigned char *sig64,\n-    const unsigned char *msg32,\n+    const unsigned char *msg,\n+    size_t msg_len,\n     const secp256k1_keypair *keypair,\n+    unsigned char *aux_rand32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(5);\n+\n+/** Create a schnorrsig config (in dynamically allocated memory).\n+ *\n+ *  This function uses malloc to allocate memory. It is guaranteed that malloc is\n+ *  called at most once for every call of this function.\n+ *\n+ *  The allocated memory must be freed with secp256k1_schnorrsig_config_destroy.\n+ *\n+ *  Returns: a newly created schnorrsig config\n+ *  Args: ctx:  an existing context object (cannot be NULL)\n+ */\n+SECP256K1_API secp256k1_schnorrsig_config* secp256k1_schnorrsig_config_create(\n+    const secp256k1_context* ctx\n+) SECP256K1_ARG_NONNULL(1);\n+\n+/** Destroy a schnorrsig config (created in dynamically allocated memory).\n+ *\n+ *  The config pointer may not be used afterwards.\n+ *  Args:  ctx: a secp256k1 context object\n+ *  In: config: the config to destroy\n+ */\n+SECP256K1_API void secp256k1_schnorrsig_config_destroy(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig_config *config\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2);\n+\n+/** Set nonce function pointer and nonce data of a config object\n+ *\n+ *  Returns: 1 if the arguments are valid. 0 otherwise\n+ *  Args:  ctx: a secp256k1 context object\n+ *  In: config: the config to set the noncefp and ndata for\n+ *     noncefp: the nonce function pointer to set\n+ *       ndata: the nonce data to set\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_config_set_nonce(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig_config *config,\n     secp256k1_nonce_function_hardened noncefp,\n     void *ndata\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2);\n+\n+/** Create a Schnorr signature with a more flexible API.\n+ *\n+ *  Same arguments as secp256k1_schnorrsig_sign except that it accepts a pointer\n+ *  to a config object that allows customizing signing by passing additional\n+ *  arguments.\n+ *\n+ *  In: noncefp: pointer to a nonce generation function. If NULL,\n+ *               secp256k1_nonce_function_bip340 is used\n+ *        ndata: pointer to arbitrary data used by the nonce generation function\n+ *               (can be NULL). If it is non-NULL and\n+ *               secp256k1_nonce_function_bip340 is used, then ndata must be a\n+ *               pointer to 32-byte auxiliary randomness as per BIP-340.\n+ *       config: pointer to a config object.\n+ */",
      "path": "include/secp256k1_schnorrsig.h",
      "position": 139,
      "original_position": 132,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "14565fbee051e9f001a74efb73d30a5ac4b7b67b",
      "in_reply_to_id": 542803430,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2021-01-22T22:58:52Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r562961153",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/562961153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 138,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/562961312",
      "pull_request_review_id": 574682531,
      "id": 562961312,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjk2MTMxMg==",
      "diff_hunk": "@@ -50,59 +52,125 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo16 argument must be non-NULL, otherwise the function will\n+ *  fail and return 0. The hash will be tagged with algo16 after removing all\n+ *  terminating null bytes. Therefore, to create BIP-340 compliant signatures,\n+ *  algo16 must be set to \"BIP0340/nonce\\0\\0\\0\"",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 33,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "14565fbee051e9f001a74efb73d30a5ac4b7b67b",
      "in_reply_to_id": 551949698,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "added `algolen` argument",
      "created_at": "2021-01-22T22:59:22Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r562961312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/562961312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578048559",
      "pull_request_review_id": 592753216,
      "id": 578048559,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODA0ODU1OQ==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 14,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": null,
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n *  In:       msg: the message hash being verified (will not be NULL)\r\n *         msglen: the length of the message hash (will not be NULL)\r\n```",
      "created_at": "2021-02-18T00:55:37Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r578048559",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578048559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578050770",
      "pull_request_review_id": 592760730,
      "id": 578050770,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODA1MDc3MA==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 14,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": 578048559,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, messages in BIP340 can be arbitrary bytestrings. They do not need to be obtained via hashing.",
      "created_at": "2021-02-18T01:01:50Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r578050770",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578050770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578050824",
      "pull_request_review_id": 592760925,
      "id": 578050824,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODA1MDgyNA==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 12,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": null,
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n *  Out:  nonce32: pointer to a 32-byte array to be filled by the function\r\n```",
      "created_at": "2021-02-18T01:01:56Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r578050824",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578050824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578051098",
      "pull_request_review_id": 592762362,
      "id": 578051098,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODA1MTA5OA==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)\n+ *          key32: pointer to a 32-byte secret key (will not be NULL)\n+ *     xonly_pk32: the 32-byte serialized xonly pubkey corresponding to key32\n+ *                 (will not be NULL)\n+ *           algo: pointer to an array describing the signature\n+ *                 algorithm (will not be NULL).",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 19,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": null,
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n *                 algorithm (will not be NULL)\r\n```",
      "created_at": "2021-02-18T01:02:41Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r578051098",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578051098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578051174",
      "pull_request_review_id": 592762752,
      "id": 578051174,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODA1MTE3NA==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)\n+ *          key32: pointer to a 32-byte secret key (will not be NULL)\n+ *     xonly_pk32: the 32-byte serialized xonly pubkey corresponding to key32\n+ *                 (will not be NULL)\n+ *           algo: pointer to an array describing the signature\n+ *                 algorithm (will not be NULL).\n+ *        algolen: the length of the algo array\n+ *           data: Arbitrary data pointer that is passed through.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 21,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": null,
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n *           data: arbitrary data pointer that is passed through\r\n```",
      "created_at": "2021-02-18T01:02:54Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r578051174",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578051174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578816128",
      "pull_request_review_id": 593734496,
      "id": 578816128,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODgxNjEyOA==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 14,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": 578048559,
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, right, hence this PR. Missed that somehow on my first pass.",
      "created_at": "2021-02-18T23:21:01Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r578816128",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/578816128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/579098352",
      "pull_request_review_id": 594077083,
      "id": 579098352,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTA5ODM1Mg==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 14,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": 578048559,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah no, I think there's still a misunderstanding. So with the scheme in the current BIP340, you can already sign arbitrary *32-byte* messages (no matter if they're created via a hash function or not). \r\n\r\nThere have been changes proposed to BIP340 (not yet in the BIP) that extend this to arbitrary-length messages. This is what is implemented by this PR. \r\n\r\nBut BIP340 never required the messages to be created via a hash function. This is just a difference to the ECDSA API. ",
      "created_at": "2021-02-19T10:54:40Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r579098352",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/579098352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/579341532",
      "pull_request_review_id": 594392897,
      "id": 579341532,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTM0MTUzMg==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 14,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": 578048559,
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for clarifying.\r\n\r\nSo given that BIP340 does not require the message to be hashed, the existing documentation on line 27 that specifies a `32-byte message hash` is not strictly true, in the sense that a 32-byte non-hashed message is permissible.\r\n\r\nHowever, I'm assuming that was not a documentation error (or was it?), because, when 32-bytes are required, for typical use cases (i.e. the message is not exactly 32-bytes) the message should be hashed.\r\n\r\nThis seems to also be reflected in the insertion of `hash` in this PR on line 109, because that API still requires a 32-byte message (despite BIP340 not requiring a hashed message, and with the proposed changes, not requiring a 32-byte message).\r\n\r\nOn the other hand, perhaps it would be more clear to drop the insertion of `hash` on line 109.",
      "created_at": "2021-02-19T17:12:03Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r579341532",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/579341532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/579419075",
      "pull_request_review_id": 594491142,
      "id": 579419075,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTQxOTA3NQ==",
      "diff_hunk": "@@ -50,59 +54,112 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo argument must be non-NULL, otherwise the function will\n+ *  fail and return 0. The hash will be tagged with algo. Therefore, to create\n+ *  BIP-340 compliant signatures, algo must be set to \"BIP0340/nonce\" and\n+ *  algolen to 13.\n  */\n SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_function_bip340;\n \n+/** Data structure that contains additional arguments for schnorrsig_sign_custom.\n+ *\n+ *  A schnorrsig_extraparams structure object can be initialized correctly by\n+ *  setting it to SECP256K1_SCHNORRSIG_EXTRAPARAMS_INIT.\n+ *\n+ *  Members:\n+ *      magic: set to SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC at initialization\n+ *             and has no other function than making sure the object is\n+ *             initialized.\n+ *    noncefp: pointer to a nonce generation function. If NULL,\n+ *             secp256k1_nonce_function_bip340 is used\n+ *      ndata: pointer to arbitrary data used by the nonce generation function\n+ *             (can be NULL). If it is non-NULL and\n+ *             secp256k1_nonce_function_bip340 is used, then ndata must be a\n+ *             pointer to 32-byte auxiliary randomness as per BIP-340.\n+ */\n+typedef struct {\n+    unsigned char magic[4];\n+    secp256k1_nonce_function_hardened noncefp;\n+    void* ndata;\n+} secp256k1_schnorrsig_extraparams;\n+\n+#define SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC \"\\xda\\x6f\\xb3\\x8c\"\n+#define SECP256K1_SCHNORRSIG_EXTRAPARAMS_INIT {\\\n+    SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC,\\\n+    NULL,\\\n+    NULL\\\n+}\n+\n /** Create a Schnorr signature.\n  *\n  *  Does _not_ strictly follow BIP-340 because it does not verify the resulting\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n+ *  This function only signs 32-byte messages. If you have messages of a\n+ *  different size, it is recommended to create a 32-byte message hash with\n+ *  secp256k1_tagged_sha256 and then sign the hash. Tagged hashing allows\n+ *  providing an application-specific tag for domain separation. This prevents\n+ *  signatures from being valid in multiple applications by accident.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 98,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": null,
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This paragraph might make it sound like application-specific tags are only relevant for non-32-byte messages, however, tags should be considered regardless of whether the message is hashed. \r\n\r\nShouldn't the documentation recommend 1 of 2 options? (1) a tagged hash of the message with an application-specific tag or (2) an unhashed message with an application-specific tag prefix.\r\n\r\nPerhaps this would be more clear: \r\n```suggestion\r\n *  This function only signs 32-byte messages. If you have messages of a\r\n *  different size (or the same size but without an application-specific tag prefix), it is recommended to create a 32-byte message hash with\r\n *  secp256k1_tagged_sha256 and then sign the hash. Tagged hashing allows\r\n *  providing an application-specific tag for domain separation. This prevents\r\n *  signatures from being valid in multiple applications by accident.\r\n```",
      "created_at": "2021-02-19T19:17:15Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r579419075",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/579419075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 100,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/580639163",
      "pull_request_review_id": 595845614,
      "id": 580639163,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDYzOTE2Mw==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 14,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": 578048559,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure I follow, what exactly is the possible documentation error? I agree that \"message hash\" for schnorrsig_sign's msg32 argument is misleading because it's not necessary that msg32 is one. Switched it back.",
      "created_at": "2021-02-22T22:30:08Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r580639163",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/580639163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/580639257",
      "pull_request_review_id": 595845754,
      "id": 580639257,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDYzOTI1Nw==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 12,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": 578050824,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2021-02-22T22:30:21Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r580639257",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/580639257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/580639303",
      "pull_request_review_id": 595845805,
      "id": 580639303,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDYzOTMwMw==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)\n+ *          key32: pointer to a 32-byte secret key (will not be NULL)\n+ *     xonly_pk32: the 32-byte serialized xonly pubkey corresponding to key32\n+ *                 (will not be NULL)\n+ *           algo: pointer to an array describing the signature\n+ *                 algorithm (will not be NULL).",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 19,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": 578051098,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2021-02-22T22:30:26Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r580639303",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/580639303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/580639348",
      "pull_request_review_id": 595845862,
      "id": 580639348,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDYzOTM0OA==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)\n+ *          key32: pointer to a 32-byte secret key (will not be NULL)\n+ *     xonly_pk32: the 32-byte serialized xonly pubkey corresponding to key32\n+ *                 (will not be NULL)\n+ *           algo: pointer to an array describing the signature\n+ *                 algorithm (will not be NULL).\n+ *        algolen: the length of the algo array\n+ *           data: Arbitrary data pointer that is passed through.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 21,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": 578051174,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2021-02-22T22:30:32Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r580639348",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/580639348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/580640671",
      "pull_request_review_id": 595847573,
      "id": 580640671,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDY0MDY3MQ==",
      "diff_hunk": "@@ -50,59 +54,112 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo argument must be non-NULL, otherwise the function will\n+ *  fail and return 0. The hash will be tagged with algo. Therefore, to create\n+ *  BIP-340 compliant signatures, algo must be set to \"BIP0340/nonce\" and\n+ *  algolen to 13.\n  */\n SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_function_bip340;\n \n+/** Data structure that contains additional arguments for schnorrsig_sign_custom.\n+ *\n+ *  A schnorrsig_extraparams structure object can be initialized correctly by\n+ *  setting it to SECP256K1_SCHNORRSIG_EXTRAPARAMS_INIT.\n+ *\n+ *  Members:\n+ *      magic: set to SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC at initialization\n+ *             and has no other function than making sure the object is\n+ *             initialized.\n+ *    noncefp: pointer to a nonce generation function. If NULL,\n+ *             secp256k1_nonce_function_bip340 is used\n+ *      ndata: pointer to arbitrary data used by the nonce generation function\n+ *             (can be NULL). If it is non-NULL and\n+ *             secp256k1_nonce_function_bip340 is used, then ndata must be a\n+ *             pointer to 32-byte auxiliary randomness as per BIP-340.\n+ */\n+typedef struct {\n+    unsigned char magic[4];\n+    secp256k1_nonce_function_hardened noncefp;\n+    void* ndata;\n+} secp256k1_schnorrsig_extraparams;\n+\n+#define SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC \"\\xda\\x6f\\xb3\\x8c\"\n+#define SECP256K1_SCHNORRSIG_EXTRAPARAMS_INIT {\\\n+    SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC,\\\n+    NULL,\\\n+    NULL\\\n+}\n+\n /** Create a Schnorr signature.\n  *\n  *  Does _not_ strictly follow BIP-340 because it does not verify the resulting\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n+ *  This function only signs 32-byte messages. If you have messages of a\n+ *  different size, it is recommended to create a 32-byte message hash with\n+ *  secp256k1_tagged_sha256 and then sign the hash. Tagged hashing allows\n+ *  providing an application-specific tag for domain separation. This prevents\n+ *  signatures from being valid in multiple applications by accident.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 98,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": 579419075,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right, added your suggestion. The subtle recommendation right now from the api is the tagged hash, because that's the non `_custom` variant of schnorrsig sign.",
      "created_at": "2021-02-22T22:33:11Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r580640671",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/580640671"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 100,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/581226024",
      "pull_request_review_id": 596583952,
      "id": 581226024,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTIyNjAyNA==",
      "diff_hunk": "@@ -23,24 +23,28 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function.\n+ *  In:       msg: the message being verified (will not be NULL)\n+ *         msglen: the length of the message (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 14,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "dd7157ad0355fd589ec624dbf74ea9046ed73f0a",
      "in_reply_to_id": 578048559,
      "user": {
        "login": "jesseposner",
        "id": 12010116,
        "node_id": "MDQ6VXNlcjEyMDEwMTE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12010116?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseposner",
        "html_url": "https://github.com/jesseposner",
        "followers_url": "https://api.github.com/users/jesseposner/followers",
        "following_url": "https://api.github.com/users/jesseposner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jesseposner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jesseposner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jesseposner/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseposner/orgs",
        "repos_url": "https://api.github.com/users/jesseposner/repos",
        "events_url": "https://api.github.com/users/jesseposner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jesseposner/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The possible documentation error I was referring to is that  currently line 27 on master says: https://github.com/bitcoin-core/secp256k1/blob/3a8b47bc6d1627a8f9f008234c5161538ef85a21/include/secp256k1_schnorrsig.h#L27 when it should probably be `the 32-byte message being verified`.\r\n\r\nWith your latest changes the documentation for both `secp256k1_nonce_function_hardened` and `secp256k1_schnorrsig_sign` now have `message` instead of `message hash` so it now looks good to me.",
      "created_at": "2021-02-23T17:14:34Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r581226024",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/581226024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/595942068",
      "pull_request_review_id": 614209119,
      "id": 595942068,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTk0MjA2OA==",
      "diff_hunk": "@@ -50,11 +50,11 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo16 argument must be non-NULL, otherwise the function will",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 10,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "0cda011bb00c72c4a3f72f70dcf48981346acaa1",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This may sound scary. AFAIU the only change is that then we assume 32 zero bytes as aux rand. If that's true, I suggest just stating this. I think then it's a stretch to say that this does not follow BIP340. The BIP says you can set this to 32 zero bytes.",
      "created_at": "2021-03-17T11:46:40Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r595942068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/595942068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 53,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/595971329",
      "pull_request_review_id": 614209119,
      "id": 595971329,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTk3MTMyOQ==",
      "diff_hunk": "@@ -68,33 +69,38 @@ void run_nonce_function_bip340_tests(void) {\n     args[0] = msg;\n     args[1] = key;\n     args[2] = pk;\n-    args[3] = algo16;\n+    args[3] = algo;\n     args[4] = aux_rand;\n     for (i = 0; i < count; i++) {\n-        nonce_function_bip340_bitflip(args, 0, 32);\n-        nonce_function_bip340_bitflip(args, 1, 32);\n-        nonce_function_bip340_bitflip(args, 2, 32);\n-        /* Flip algo16 special case \"BIP0340/nonce\" */\n-        nonce_function_bip340_bitflip(args, 3, 16);\n-        /* Flip algo16 again */\n-        nonce_function_bip340_bitflip(args, 3, 16);\n-        nonce_function_bip340_bitflip(args, 4, 32);\n+        nonce_function_bip340_bitflip(args, 0, 32, algolen);\n+        nonce_function_bip340_bitflip(args, 1, 32, algolen);\n+        nonce_function_bip340_bitflip(args, 2, 32, algolen);\n+        /* Flip algo special case \"BIP0340/nonce\" */\n+        nonce_function_bip340_bitflip(args, 3, algolen, algolen);\n+        /* Flip algo again */\n+        nonce_function_bip340_bitflip(args, 3, algolen, algolen);\n+        nonce_function_bip340_bitflip(args, 4, 32, algolen);\n     }\n \n-    /* NULL algo16 is disallowed */\n-    CHECK(nonce_function_bip340(nonce, msg, key, pk, NULL, NULL) == 0);\n-    /* Empty algo16 is fine */\n-    memset(algo16, 0x00, 16);\n-    CHECK(nonce_function_bip340(nonce, msg, key, pk, algo16, NULL) == 1);\n-    /* algo16 with terminating null bytes is fine */\n-    algo16[1] = 65;\n-    CHECK(nonce_function_bip340(nonce, msg, key, pk, algo16, NULL) == 1);\n-    /* Other algo16 is fine */\n-    memset(algo16, 0xFF, 16);\n-    CHECK(nonce_function_bip340(nonce, msg, key, pk, algo16, NULL) == 1);\n+    /* NULL algo is disallowed */\n+    CHECK(nonce_function_bip340(nonce, msg, key, pk, NULL, 0, NULL) == 0);\n+    /* Empty algo is fine */\n+    memset(algo, 0x00, algolen);\n+    CHECK(nonce_function_bip340(nonce, msg, key, pk, algo, algolen, NULL) == 1);",
      "path": "src/modules/schnorrsig/tests_impl.h",
      "position": null,
      "original_position": 66,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "2bc57d7badef0e1fee69779f1b779f8640ee40ea",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm now that we don't use \\0-terminated strings, that's not really a test for \"empty\" now.",
      "created_at": "2021-03-17T12:31:39Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r595971329",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/595971329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 87,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/595975032",
      "pull_request_review_id": 614209119,
      "id": 595975032,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTk3NTAzMg==",
      "diff_hunk": "@@ -66,22 +66,38 @@ SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_fun\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n- *\n  *  Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:   sig64: pointer to a 64-byte array to store the serialized signature (cannot be NULL)\n  *  In:    msg32: the 32-byte message being signed (cannot be NULL)\n  *       keypair: pointer to an initialized keypair (cannot be NULL)\n- *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bip340 is used\n- *         ndata: pointer to arbitrary data used by the nonce generation\n- *                function (can be NULL). If it is non-NULL and\n- *                secp256k1_nonce_function_bip340 is used, then ndata must be a\n- *                pointer to 32-byte auxiliary randomness as per BIP-340.\n+ *    aux_rand32: 32 bytes of fresh randomness. While recommended to provide\n+ *                this, it is only supplemental to security and can be NULL. See\n+ *                BIP-340 for a full explanation of this argument and for\n+ *                guidance if randomness is expensive.\n  */\n SECP256K1_API int secp256k1_schnorrsig_sign(\n+    const secp256k1_context* ctx,\n+    unsigned char *sig64,\n+    const unsigned char *msg32,\n+    const secp256k1_keypair *keypair,\n+    unsigned char *aux_rand32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Create a Schnorr signature with a more flexible API.\n+ *\n+ *  Same arguments as secp256k1_schnorrsig_sign except that it misses aux_rand32\n+ *  and instead allows allows providing a different nonce derivation function",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 34,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "c6f85508b728db919ad4dbd5c8c63b0beec65879",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/allows allows/allows\r\ns/misses/lacks (Not entirely sure because I'm not native speaker but \"lacks\" should be good in any case.)",
      "created_at": "2021-03-17T12:37:15Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r595975032",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/595975032"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/595993225",
      "pull_request_review_id": 614209119,
      "id": 595993225,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTk5MzIyNQ==",
      "diff_hunk": "@@ -60,7 +61,7 @@ int main(void) {\n ",
      "path": "src/bench_schnorrsig.c",
      "position": 37,
      "original_position": 34,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "46f3d69a98717dd1147076ad15c03c0c60615357",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    CHECK(MSGLEN >= 2);\r\n```",
      "created_at": "2021-03-17T13:02:20Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r595993225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/595993225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/596002645",
      "pull_request_review_id": 614209119,
      "id": 596002645,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjAwMjY0NQ==",
      "diff_hunk": "@@ -26,7 +27,7 @@ typedef struct {\n void bench_schnorrsig_sign(void* arg, int iters) {\n     bench_schnorrsig_data *data = (bench_schnorrsig_data *)arg;\n     int i;\n-    unsigned char msg[32] = \"benchmarkexamplemessagetemplate\";\n+    unsigned char msg[MSGLEN] = \"benchmarkexamplemessagetemplate\";",
      "path": "src/bench_schnorrsig.c",
      "position": null,
      "original_position": 20,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "46f3d69a98717dd1147076ad15c03c0c60615357",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "maybe\r\n```suggestion\r\n    unsigned char msg[MSGLEN] = {0};\r\n```\r\nbecause people could set MSGLEN to < 32",
      "created_at": "2021-03-17T13:14:46Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r596002645",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/596002645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/596004116",
      "pull_request_review_id": 614209119,
      "id": 596004116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjAwNDExNg==",
      "diff_hunk": "@@ -24,7 +24,8 @@ extern \"C\" {\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n  *  Out:  nonce32: pointer to a 32-byte array to be filled by the function\n- *  In:     msg32: the 32-byte message hash being verified (will not be NULL)\n+ *  In:       msg: the message being verified (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 5,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "46f3d69a98717dd1147076ad15c03c0c60615357",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "will not be NULL unless msglen == 0",
      "created_at": "2021-03-17T13:16:41Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r596004116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/596004116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/596012504",
      "pull_request_review_id": 614209119,
      "id": 596012504,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjAxMjUwNA==",
      "diff_hunk": "@@ -720,6 +749,14 @@ void test_schnorrsig_sign(void) {\n     extraparams.noncefp = nonce_function_overflowing;\n     CHECK(secp256k1_schnorrsig_sign_custom(ctx, sig, msg, sizeof(msg), &keypair, &extraparams) == 1);\n     CHECK(secp256k1_schnorrsig_verify(ctx, sig, msg, sizeof(msg), &pk));\n+\n+    /* When using the default nonce function, schnorrsig_sign_custom produces\n+     * the same result as schnorrsig_sign with aux_rand = extraparams.ndata */\n+    extraparams.noncefp = NULL;\n+    extraparams.ndata = aux_rand;\n+    CHECK(secp256k1_schnorrsig_sign_custom(ctx, sig, msg, sizeof(msg), &keypair, &extraparams) == 1);\n+    CHECK(secp256k1_schnorrsig_sign(ctx, sig2, msg, &keypair, extraparams.ndata) == 1);\n+    CHECK(memcmp(sig, sig2, sizeof(sig)) == 0);",
      "path": "src/modules/schnorrsig/tests_impl.h",
      "position": null,
      "original_position": 72,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "b073fb75421feda38c0f03f4a6addbe4ecd2aeb5",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "secp256k1_memcmp_var",
      "created_at": "2021-03-17T13:24:27Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r596012504",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/596012504"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/596038326",
      "pull_request_review_id": 614209119,
      "id": 596038326,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjAzODMyNg==",
      "diff_hunk": "@@ -50,59 +54,113 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo argument must be non-NULL, otherwise the function will\n+ *  fail and return 0. The hash will be tagged with algo. Therefore, to create\n+ *  BIP-340 compliant signatures, algo must be set to \"BIP0340/nonce\" and\n+ *  algolen to 13.\n  */\n SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_function_bip340;\n \n+/** Data structure that contains additional arguments for schnorrsig_sign_custom.\n+ *\n+ *  A schnorrsig_extraparams structure object can be initialized correctly by\n+ *  setting it to SECP256K1_SCHNORRSIG_EXTRAPARAMS_INIT.\n+ *\n+ *  Members:\n+ *      magic: set to SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC at initialization\n+ *             and has no other function than making sure the object is\n+ *             initialized.\n+ *    noncefp: pointer to a nonce generation function. If NULL,\n+ *             secp256k1_nonce_function_bip340 is used\n+ *      ndata: pointer to arbitrary data used by the nonce generation function\n+ *             (can be NULL). If it is non-NULL and\n+ *             secp256k1_nonce_function_bip340 is used, then ndata must be a\n+ *             pointer to 32-byte auxiliary randomness as per BIP-340.\n+ */\n+typedef struct {\n+    unsigned char magic[4];\n+    secp256k1_nonce_function_hardened noncefp;\n+    void* ndata;\n+} secp256k1_schnorrsig_extraparams;\n+\n+#define SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC \"\\xda\\x6f\\xb3\\x8c\"\n+#define SECP256K1_SCHNORRSIG_EXTRAPARAMS_INIT {\\\n+    SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC,\\\n+    NULL,\\\n+    NULL\\\n+}\n+\n /** Create a Schnorr signature.\n  *\n  *  Does _not_ strictly follow BIP-340 because it does not verify the resulting\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n+ *  This function only signs 32-byte messages. If you have messages of a\n+ *  different size (or the same size but without an application-specific tag\n+ *  prefix), it is recommended to create a 32-byte message hash with\n+ *  secp256k1_tagged_sha256 and then sign the hash. Tagged hashing allows\n+ *  providing an application-specific tag for domain separation. This prevents\n+ *  signatures from being valid in multiple applications by accident.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 99,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "b073fb75421feda38c0f03f4a6addbe4ecd2aeb5",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "okay maybe that's nitpicking but can you change this \"in multiple applications or in multiple contexts within the same application by accident\". I think people should understand that this can be meaningful within an applications (modulo the anyway imprecise meaning of this term).",
      "created_at": "2021-03-17T13:52:45Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r596038326",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/596038326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/596040629",
      "pull_request_review_id": 614209119,
      "id": 596040629,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjA0MDYyOQ==",
      "diff_hunk": "@@ -539,6 +539,37 @@ void run_rfc6979_hmac_sha256_tests(void) {\n     secp256k1_rfc6979_hmac_sha256_finalize(&rng);\n }\n \n+void run_tagged_sha256_tests(void) {\n+    int ecount = 0;\n+    secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n+    unsigned char tag[32] = { 0 };\n+    unsigned char msg[32] = { 0 };\n+    unsigned char hash32[32];\n+    unsigned char hash_expected[32] = {\n+        0x04, 0x7A, 0x5E, 0x17, 0xB5, 0x86, 0x47, 0xC1,\n+        0x3C, 0xC6, 0xEB, 0xC0, 0xAA, 0x58, 0x3B, 0x62,\n+        0xFB, 0x16, 0x43, 0x32, 0x68, 0x77, 0x40, 0x6C,\n+        0xE2, 0x76, 0x55, 0x9A, 0x3B, 0xDE, 0x55, 0xB3\n+    };\n+\n+    secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+\n+    /* API test */\n+    CHECK(secp256k1_tagged_sha256(none, hash32, tag, sizeof(tag), msg, sizeof(msg)) == 1);\n+    CHECK(secp256k1_tagged_sha256(none, NULL, tag, sizeof(tag), msg, sizeof(msg)) == 0);\n+    CHECK(ecount == 1);\n+    CHECK(secp256k1_tagged_sha256(none, hash32, NULL, 0, msg, sizeof(msg)) == 0);\n+    CHECK(ecount == 2);\n+    CHECK(secp256k1_tagged_sha256(none, hash32, tag, sizeof(tag), NULL, 0) == 0);\n+    CHECK(ecount == 3);\n+\n+    /* Static test vector */\n+    memcpy(tag, \"tag\", 3);\n+    memcpy(msg, \"msg\", 3);\n+    CHECK(secp256k1_tagged_sha256(none, hash32, tag, 3, msg, 3) == 1);\n+    CHECK(memcmp(hash32, hash_expected, sizeof(hash32)) == 0);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 32,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "b073fb75421feda38c0f03f4a6addbe4ecd2aeb5",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same here. (I should really work on #833 :P)",
      "created_at": "2021-03-17T13:55:19Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r596040629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/596040629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 570,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597742961",
      "pull_request_review_id": 616487762,
      "id": 597742961,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzc0Mjk2MQ==",
      "diff_hunk": "@@ -50,11 +50,11 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo16 argument must be non-NULL, otherwise the function will",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 10,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "0cda011bb00c72c4a3f72f70dcf48981346acaa1",
      "in_reply_to_id": 595942068,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I improved the sentence.",
      "created_at": "2021-03-19T14:52:39Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r597742961",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597742961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 53,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597745438",
      "pull_request_review_id": 616491161,
      "id": 597745438,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzc0NTQzOA==",
      "diff_hunk": "@@ -68,33 +69,38 @@ void run_nonce_function_bip340_tests(void) {\n     args[0] = msg;\n     args[1] = key;\n     args[2] = pk;\n-    args[3] = algo16;\n+    args[3] = algo;\n     args[4] = aux_rand;\n     for (i = 0; i < count; i++) {\n-        nonce_function_bip340_bitflip(args, 0, 32);\n-        nonce_function_bip340_bitflip(args, 1, 32);\n-        nonce_function_bip340_bitflip(args, 2, 32);\n-        /* Flip algo16 special case \"BIP0340/nonce\" */\n-        nonce_function_bip340_bitflip(args, 3, 16);\n-        /* Flip algo16 again */\n-        nonce_function_bip340_bitflip(args, 3, 16);\n-        nonce_function_bip340_bitflip(args, 4, 32);\n+        nonce_function_bip340_bitflip(args, 0, 32, algolen);\n+        nonce_function_bip340_bitflip(args, 1, 32, algolen);\n+        nonce_function_bip340_bitflip(args, 2, 32, algolen);\n+        /* Flip algo special case \"BIP0340/nonce\" */\n+        nonce_function_bip340_bitflip(args, 3, algolen, algolen);\n+        /* Flip algo again */\n+        nonce_function_bip340_bitflip(args, 3, algolen, algolen);\n+        nonce_function_bip340_bitflip(args, 4, 32, algolen);\n     }\n \n-    /* NULL algo16 is disallowed */\n-    CHECK(nonce_function_bip340(nonce, msg, key, pk, NULL, NULL) == 0);\n-    /* Empty algo16 is fine */\n-    memset(algo16, 0x00, 16);\n-    CHECK(nonce_function_bip340(nonce, msg, key, pk, algo16, NULL) == 1);\n-    /* algo16 with terminating null bytes is fine */\n-    algo16[1] = 65;\n-    CHECK(nonce_function_bip340(nonce, msg, key, pk, algo16, NULL) == 1);\n-    /* Other algo16 is fine */\n-    memset(algo16, 0xFF, 16);\n-    CHECK(nonce_function_bip340(nonce, msg, key, pk, algo16, NULL) == 1);\n+    /* NULL algo is disallowed */\n+    CHECK(nonce_function_bip340(nonce, msg, key, pk, NULL, 0, NULL) == 0);\n+    /* Empty algo is fine */\n+    memset(algo, 0x00, algolen);\n+    CHECK(nonce_function_bip340(nonce, msg, key, pk, algo, algolen, NULL) == 1);",
      "path": "src/modules/schnorrsig/tests_impl.h",
      "position": null,
      "original_position": 66,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "2bc57d7badef0e1fee69779f1b779f8640ee40ea",
      "in_reply_to_id": 595971329,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed that. `algolen == 0` is tested a few lines below.",
      "created_at": "2021-03-19T14:55:47Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r597745438",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597745438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": 87,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597745714",
      "pull_request_review_id": 616491558,
      "id": 597745714,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzc0NTcxNA==",
      "diff_hunk": "@@ -66,22 +66,38 @@ SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_fun\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n- *\n  *  Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:   sig64: pointer to a 64-byte array to store the serialized signature (cannot be NULL)\n  *  In:    msg32: the 32-byte message being signed (cannot be NULL)\n  *       keypair: pointer to an initialized keypair (cannot be NULL)\n- *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bip340 is used\n- *         ndata: pointer to arbitrary data used by the nonce generation\n- *                function (can be NULL). If it is non-NULL and\n- *                secp256k1_nonce_function_bip340 is used, then ndata must be a\n- *                pointer to 32-byte auxiliary randomness as per BIP-340.\n+ *    aux_rand32: 32 bytes of fresh randomness. While recommended to provide\n+ *                this, it is only supplemental to security and can be NULL. See\n+ *                BIP-340 for a full explanation of this argument and for\n+ *                guidance if randomness is expensive.\n  */\n SECP256K1_API int secp256k1_schnorrsig_sign(\n+    const secp256k1_context* ctx,\n+    unsigned char *sig64,\n+    const unsigned char *msg32,\n+    const secp256k1_keypair *keypair,\n+    unsigned char *aux_rand32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Create a Schnorr signature with a more flexible API.\n+ *\n+ *  Same arguments as secp256k1_schnorrsig_sign except that it misses aux_rand32\n+ *  and instead allows allows providing a different nonce derivation function",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 34,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "c6f85508b728db919ad4dbd5c8c63b0beec65879",
      "in_reply_to_id": 595975032,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is fixed in a later commit. Can I leave as is?",
      "created_at": "2021-03-19T14:56:07Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r597745714",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597745714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597746089",
      "pull_request_review_id": 616492104,
      "id": 597746089,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzc0NjA4OQ==",
      "diff_hunk": "@@ -60,7 +61,7 @@ int main(void) {\n ",
      "path": "src/bench_schnorrsig.c",
      "position": 37,
      "original_position": 34,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "46f3d69a98717dd1147076ad15c03c0c60615357",
      "in_reply_to_id": 595993225,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There was no intention to allow users to change MSGLEN and this wouldn't work since the benchmark only used `schnorrsig_sign`, not `schnorrsig_sign_custom`. It may be useful though, so I added a commit to allow that.\r\n",
      "created_at": "2021-03-19T14:56:35Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r597746089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597746089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597746336",
      "pull_request_review_id": 616492439,
      "id": 597746336,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzc0NjMzNg==",
      "diff_hunk": "@@ -26,7 +27,7 @@ typedef struct {\n void bench_schnorrsig_sign(void* arg, int iters) {\n     bench_schnorrsig_data *data = (bench_schnorrsig_data *)arg;\n     int i;\n-    unsigned char msg[32] = \"benchmarkexamplemessagetemplate\";\n+    unsigned char msg[MSGLEN] = \"benchmarkexamplemessagetemplate\";",
      "path": "src/bench_schnorrsig.c",
      "position": null,
      "original_position": 20,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "46f3d69a98717dd1147076ad15c03c0c60615357",
      "in_reply_to_id": 596002645,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2021-03-19T14:56:54Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r597746336",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597746336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597746421",
      "pull_request_review_id": 616492554,
      "id": 597746421,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzc0NjQyMQ==",
      "diff_hunk": "@@ -24,7 +24,8 @@ extern \"C\" {\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n  *  Out:  nonce32: pointer to a 32-byte array to be filled by the function\n- *  In:     msg32: the 32-byte message hash being verified (will not be NULL)\n+ *  In:       msg: the message being verified (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 5,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "46f3d69a98717dd1147076ad15c03c0c60615357",
      "in_reply_to_id": 596004116,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good catch, fixed",
      "created_at": "2021-03-19T14:57:01Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r597746421",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597746421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597746501",
      "pull_request_review_id": 616492679,
      "id": 597746501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzc0NjUwMQ==",
      "diff_hunk": "@@ -720,6 +749,14 @@ void test_schnorrsig_sign(void) {\n     extraparams.noncefp = nonce_function_overflowing;\n     CHECK(secp256k1_schnorrsig_sign_custom(ctx, sig, msg, sizeof(msg), &keypair, &extraparams) == 1);\n     CHECK(secp256k1_schnorrsig_verify(ctx, sig, msg, sizeof(msg), &pk));\n+\n+    /* When using the default nonce function, schnorrsig_sign_custom produces\n+     * the same result as schnorrsig_sign with aux_rand = extraparams.ndata */\n+    extraparams.noncefp = NULL;\n+    extraparams.ndata = aux_rand;\n+    CHECK(secp256k1_schnorrsig_sign_custom(ctx, sig, msg, sizeof(msg), &keypair, &extraparams) == 1);\n+    CHECK(secp256k1_schnorrsig_sign(ctx, sig2, msg, &keypair, extraparams.ndata) == 1);\n+    CHECK(memcmp(sig, sig2, sizeof(sig)) == 0);",
      "path": "src/modules/schnorrsig/tests_impl.h",
      "position": null,
      "original_position": 72,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "b073fb75421feda38c0f03f4a6addbe4ecd2aeb5",
      "in_reply_to_id": 596012504,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok",
      "created_at": "2021-03-19T14:57:09Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r597746501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597746501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597747886",
      "pull_request_review_id": 616494454,
      "id": 597747886,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzc0Nzg4Ng==",
      "diff_hunk": "@@ -50,59 +54,113 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo argument must be non-NULL, otherwise the function will\n+ *  fail and return 0. The hash will be tagged with algo. Therefore, to create\n+ *  BIP-340 compliant signatures, algo must be set to \"BIP0340/nonce\" and\n+ *  algolen to 13.\n  */\n SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_function_bip340;\n \n+/** Data structure that contains additional arguments for schnorrsig_sign_custom.\n+ *\n+ *  A schnorrsig_extraparams structure object can be initialized correctly by\n+ *  setting it to SECP256K1_SCHNORRSIG_EXTRAPARAMS_INIT.\n+ *\n+ *  Members:\n+ *      magic: set to SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC at initialization\n+ *             and has no other function than making sure the object is\n+ *             initialized.\n+ *    noncefp: pointer to a nonce generation function. If NULL,\n+ *             secp256k1_nonce_function_bip340 is used\n+ *      ndata: pointer to arbitrary data used by the nonce generation function\n+ *             (can be NULL). If it is non-NULL and\n+ *             secp256k1_nonce_function_bip340 is used, then ndata must be a\n+ *             pointer to 32-byte auxiliary randomness as per BIP-340.\n+ */\n+typedef struct {\n+    unsigned char magic[4];\n+    secp256k1_nonce_function_hardened noncefp;\n+    void* ndata;\n+} secp256k1_schnorrsig_extraparams;\n+\n+#define SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC \"\\xda\\x6f\\xb3\\x8c\"\n+#define SECP256K1_SCHNORRSIG_EXTRAPARAMS_INIT {\\\n+    SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC,\\\n+    NULL,\\\n+    NULL\\\n+}\n+\n /** Create a Schnorr signature.\n  *\n  *  Does _not_ strictly follow BIP-340 because it does not verify the resulting\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n+ *  This function only signs 32-byte messages. If you have messages of a\n+ *  different size (or the same size but without an application-specific tag\n+ *  prefix), it is recommended to create a 32-byte message hash with\n+ *  secp256k1_tagged_sha256 and then sign the hash. Tagged hashing allows\n+ *  providing an application-specific tag for domain separation. This prevents\n+ *  signatures from being valid in multiple applications by accident.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 99,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "b073fb75421feda38c0f03f4a6addbe4ecd2aeb5",
      "in_reply_to_id": 596038326,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree, but not really sure about your suggestion because we call it an \"application-specific\" tag. Instead, I replaced \"application\" with \"context\" which actually matches the wording in bip-340. What do you think?",
      "created_at": "2021-03-19T14:58:46Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r597747886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597747886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597747991",
      "pull_request_review_id": 616494609,
      "id": 597747991,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzc0Nzk5MQ==",
      "diff_hunk": "@@ -539,6 +539,37 @@ void run_rfc6979_hmac_sha256_tests(void) {\n     secp256k1_rfc6979_hmac_sha256_finalize(&rng);\n }\n \n+void run_tagged_sha256_tests(void) {\n+    int ecount = 0;\n+    secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n+    unsigned char tag[32] = { 0 };\n+    unsigned char msg[32] = { 0 };\n+    unsigned char hash32[32];\n+    unsigned char hash_expected[32] = {\n+        0x04, 0x7A, 0x5E, 0x17, 0xB5, 0x86, 0x47, 0xC1,\n+        0x3C, 0xC6, 0xEB, 0xC0, 0xAA, 0x58, 0x3B, 0x62,\n+        0xFB, 0x16, 0x43, 0x32, 0x68, 0x77, 0x40, 0x6C,\n+        0xE2, 0x76, 0x55, 0x9A, 0x3B, 0xDE, 0x55, 0xB3\n+    };\n+\n+    secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+\n+    /* API test */\n+    CHECK(secp256k1_tagged_sha256(none, hash32, tag, sizeof(tag), msg, sizeof(msg)) == 1);\n+    CHECK(secp256k1_tagged_sha256(none, NULL, tag, sizeof(tag), msg, sizeof(msg)) == 0);\n+    CHECK(ecount == 1);\n+    CHECK(secp256k1_tagged_sha256(none, hash32, NULL, 0, msg, sizeof(msg)) == 0);\n+    CHECK(ecount == 2);\n+    CHECK(secp256k1_tagged_sha256(none, hash32, tag, sizeof(tag), NULL, 0) == 0);\n+    CHECK(ecount == 3);\n+\n+    /* Static test vector */\n+    memcpy(tag, \"tag\", 3);\n+    memcpy(msg, \"msg\", 3);\n+    CHECK(secp256k1_tagged_sha256(none, hash32, tag, 3, msg, 3) == 1);\n+    CHECK(memcmp(hash32, hash_expected, sizeof(hash32)) == 0);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 32,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "b073fb75421feda38c0f03f4a6addbe4ecd2aeb5",
      "in_reply_to_id": 596040629,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2021-03-19T14:58:54Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r597747991",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/597747991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 570,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/599567064",
      "pull_request_review_id": 618587000,
      "id": 599567064,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTU2NzA2NA==",
      "diff_hunk": "@@ -50,59 +54,113 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  schnorrsig_sign does not follow the BIP-340 nonce derivation procedure\n+ *  exactly. The algo argument must be non-NULL, otherwise the function will\n+ *  fail and return 0. The hash will be tagged with algo. Therefore, to create\n+ *  BIP-340 compliant signatures, algo must be set to \"BIP0340/nonce\" and\n+ *  algolen to 13.\n  */\n SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_function_bip340;\n \n+/** Data structure that contains additional arguments for schnorrsig_sign_custom.\n+ *\n+ *  A schnorrsig_extraparams structure object can be initialized correctly by\n+ *  setting it to SECP256K1_SCHNORRSIG_EXTRAPARAMS_INIT.\n+ *\n+ *  Members:\n+ *      magic: set to SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC at initialization\n+ *             and has no other function than making sure the object is\n+ *             initialized.\n+ *    noncefp: pointer to a nonce generation function. If NULL,\n+ *             secp256k1_nonce_function_bip340 is used\n+ *      ndata: pointer to arbitrary data used by the nonce generation function\n+ *             (can be NULL). If it is non-NULL and\n+ *             secp256k1_nonce_function_bip340 is used, then ndata must be a\n+ *             pointer to 32-byte auxiliary randomness as per BIP-340.\n+ */\n+typedef struct {\n+    unsigned char magic[4];\n+    secp256k1_nonce_function_hardened noncefp;\n+    void* ndata;\n+} secp256k1_schnorrsig_extraparams;\n+\n+#define SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC \"\\xda\\x6f\\xb3\\x8c\"\n+#define SECP256K1_SCHNORRSIG_EXTRAPARAMS_INIT {\\\n+    SECP256K1_SCHNORRSIG_EXTRAPARAMS_MAGIC,\\\n+    NULL,\\\n+    NULL\\\n+}\n+\n /** Create a Schnorr signature.\n  *\n  *  Does _not_ strictly follow BIP-340 because it does not verify the resulting\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n+ *  This function only signs 32-byte messages. If you have messages of a\n+ *  different size (or the same size but without an application-specific tag\n+ *  prefix), it is recommended to create a 32-byte message hash with\n+ *  secp256k1_tagged_sha256 and then sign the hash. Tagged hashing allows\n+ *  providing an application-specific tag for domain separation. This prevents\n+ *  signatures from being valid in multiple applications by accident.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 99,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "b073fb75421feda38c0f03f4a6addbe4ecd2aeb5",
      "in_reply_to_id": 596038326,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed, that's better. I didn't want to suggest \"context\" because I thought it could be confused with the meaning of context as in \"secp256k1 context\" but that shouldn't be an issue.",
      "created_at": "2021-03-23T13:28:45Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r599567064",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/599567064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/599570191",
      "pull_request_review_id": 618591077,
      "id": 599570191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTU3MDE5MQ==",
      "diff_hunk": "@@ -50,59 +54,113 @@ typedef int (*secp256k1_nonce_function_hardened)(\n  *\n  *  If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  *  auxiliary random data as defined in BIP-340. If the data pointer is NULL,\n- *  schnorrsig_sign does not produce BIP-340 compliant signatures. The algo16\n- *  argument must be non-NULL, otherwise the function will fail and return 0.\n- *  The hash will be tagged with algo16 after removing all terminating null\n- *  bytes. Therefore, to create BIP-340 compliant signatures, algo16 must be set\n- *  to \"BIP0340/nonce\\0\\0\\0\"\n+ *  the nonce derivation procedure follows BIP-340 by setting the auxiliary\n+ *  random data to zero. The algo argument must be non-NULL, otherwise the",
      "path": "include/secp256k1_schnorrsig.h",
      "position": 50,
      "original_position": 49,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "48917040578bdf9248f4f637fd4e9ed1b6e926e2",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was about to suggest that maybe we could allow `algo == NULL` if `algolen == 0` But I'm not sure. If don't think we want to encourage users to use empty strings...",
      "created_at": "2021-03-23T13:32:20Z",
      "updated_at": "2021-03-23T14:14:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r599570191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/599570191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 59,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657108866",
      "pull_request_review_id": 690665860,
      "id": 657108866,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzEwODg2Ng==",
      "diff_hunk": "@@ -23,14 +23,15 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function\n+ *  In:     msg32: the 32-byte message hash being verified (will not be NULL)\n+ *          key32: pointer to a 32-byte secret key (will not be NULL)\n+ *     xonly_pk32: the 32-byte serialized xonly pubkey corresponding to key32\n+ *                 (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": 18,
      "original_position": 16,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "442cee5bafbd7419acadf203ca11569e371f1f85",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's the arguments handling difference between \"will not be NULL\" and \"cannot be NULL\" as annotated on top of `secp256k1_schnorrsig_sign` ? \r\n\r\nLike should every will-not-be-null argument be sanitized with `ARG_CHECK` ?",
      "created_at": "2021-06-23T13:36:30Z",
      "updated_at": "2021-06-23T14:49:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r657108866",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657108866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657132591",
      "pull_request_review_id": 690665860,
      "id": 657132591,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzEzMjU5MQ==",
      "diff_hunk": "@@ -66,22 +66,38 @@ SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_fun\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n- *\n  *  Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:   sig64: pointer to a 64-byte array to store the serialized signature (cannot be NULL)\n  *  In:    msg32: the 32-byte message being signed (cannot be NULL)\n  *       keypair: pointer to an initialized keypair (cannot be NULL)\n- *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bip340 is used\n- *         ndata: pointer to arbitrary data used by the nonce generation\n- *                function (can be NULL). If it is non-NULL and\n- *                secp256k1_nonce_function_bip340 is used, then ndata must be a\n- *                pointer to 32-byte auxiliary randomness as per BIP-340.\n+ *    aux_rand32: 32 bytes of fresh randomness. While recommended to provide\n+ *                this, it is only supplemental to security and can be NULL. See",
      "path": "include/secp256k1_schnorrsig.h",
      "position": 113,
      "original_position": 19,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "1bf261963aca5bb86fcf467d6adacb3049d41dc8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nits: \"it is only a side-channel mitigation\", \"See BIP-340 \"Default Signing\"",
      "created_at": "2021-06-23T14:01:46Z",
      "updated_at": "2021-06-23T14:49:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r657132591",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657132591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 114,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657145890",
      "pull_request_review_id": 690665860,
      "id": 657145890,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzE0NTg5MA==",
      "diff_hunk": "@@ -793,6 +793,31 @@ SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_combine(\n     size_t n\n ) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n+/** Compute a tagged hash as defined in BIP-340.\n+ *\n+ *  This is useful for creating a message hash and achieving domain separation\n+ *  through an application-specific tag. This function returns\n+ *  SHA256(SHA256(tag)||SHA256(tag)||msg). Therefore, tagged hash\n+ *  implementations optimized for a specific tag can precompute the SHA256 state\n+ *  after hashing the tag hashes.\n+ *\n+ *  Returns 0 if the arguments are invalid and 1 otherwise.\n+ *  Args:    ctx: pointer to a context object\n+ *  Out:  hash32: pointer to a 32-byte array to store the resulting hash\n+ *  In:      tag: pointer to an array containing the tag\n+ *        taglen: length of the tag array\n+ *           msg: pointer to an array containing the message",
      "path": "include/secp256k1.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "b12a00489700df39af4c56f8f2513ebaa597a0bb",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`tag` and `msg` maybe annotate \"cannot be NULL\" ?",
      "created_at": "2021-06-23T14:15:28Z",
      "updated_at": "2021-06-23T14:49:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r657145890",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657145890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 809,
      "original_line": 809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657147410",
      "pull_request_review_id": 690665860,
      "id": 657147410,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzE0NzQxMA==",
      "diff_hunk": "@@ -24,7 +24,8 @@ extern \"C\" {\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n  *  Out:  nonce32: pointer to a 32-byte array to be filled by the function\n- *  In:     msg32: the 32-byte message hash being verified (will not be NULL)\n+ *  In:       msg: the message being verified. Can be NULL iff msglen is 0.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 5,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "4fd25f00ebab3a8f8b7e5a157fde36f076b9e2b8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/iff/if/g",
      "created_at": "2021-06-23T14:16:43Z",
      "updated_at": "2021-06-23T14:49:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r657147410",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657147410"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657148354",
      "pull_request_review_id": 690665860,
      "id": 657148354,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzE0ODM1NA==",
      "diff_hunk": "@@ -66,6 +68,13 @@ SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_fun\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n+ *  This function only signs 32-byte messages. If you have messages of a\n+ *  different size (or the same size but without an context-specific tag",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 25,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "4fd25f00ebab3a8f8b7e5a157fde36f076b9e2b8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/an/a/g",
      "created_at": "2021-06-23T14:17:36Z",
      "updated_at": "2021-06-23T14:49:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r657148354",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657148354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657478700",
      "pull_request_review_id": 691165960,
      "id": 657478700,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzQ3ODcwMA==",
      "diff_hunk": "@@ -23,14 +23,15 @@ extern \"C\" {\n  *\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n- *  Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- *  In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *           key32:     pointer to a 32-byte secret key (will not be NULL)\n- *      xonly_pk32:     the 32-byte serialized xonly pubkey corresponding to key32\n- *                      (will not be NULL)\n- *           algo16:    pointer to a 16-byte array describing the signature\n- *                      algorithm (will not be NULL).\n- *           data:      Arbitrary data pointer that is passed through.\n+ *  Out:  nonce32: pointer to a 32-byte array to be filled by the function\n+ *  In:     msg32: the 32-byte message hash being verified (will not be NULL)\n+ *          key32: pointer to a 32-byte secret key (will not be NULL)\n+ *     xonly_pk32: the 32-byte serialized xonly pubkey corresponding to key32\n+ *                 (will not be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": 18,
      "original_position": 16,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "442cee5bafbd7419acadf203ca11569e371f1f85",
      "in_reply_to_id": 657108866,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is the type a function that is user provided and called from inside the library. Hence, the documentation says that this function will not be called with certain arguments set to NULL.",
      "created_at": "2021-06-23T21:37:06Z",
      "updated_at": "2021-06-23T21:37:06Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r657478700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657478700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657478925",
      "pull_request_review_id": 691166258,
      "id": 657478925,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzQ3ODkyNQ==",
      "diff_hunk": "@@ -793,6 +793,31 @@ SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_combine(\n     size_t n\n ) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n+/** Compute a tagged hash as defined in BIP-340.\n+ *\n+ *  This is useful for creating a message hash and achieving domain separation\n+ *  through an application-specific tag. This function returns\n+ *  SHA256(SHA256(tag)||SHA256(tag)||msg). Therefore, tagged hash\n+ *  implementations optimized for a specific tag can precompute the SHA256 state\n+ *  after hashing the tag hashes.\n+ *\n+ *  Returns 0 if the arguments are invalid and 1 otherwise.\n+ *  Args:    ctx: pointer to a context object\n+ *  Out:  hash32: pointer to a 32-byte array to store the resulting hash\n+ *  In:      tag: pointer to an array containing the tag\n+ *        taglen: length of the tag array\n+ *           msg: pointer to an array containing the message",
      "path": "include/secp256k1.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "b12a00489700df39af4c56f8f2513ebaa597a0bb",
      "in_reply_to_id": 657145890,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was written with https://github.com/bitcoin-core/secp256k1/pull/783 already in mind which makes \"cannot be NULL\" implicit.",
      "created_at": "2021-06-23T21:37:32Z",
      "updated_at": "2021-06-23T21:37:32Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r657478925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657478925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 809,
      "original_line": 809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657479977",
      "pull_request_review_id": 691167623,
      "id": 657479977,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzQ3OTk3Nw==",
      "diff_hunk": "@@ -66,22 +66,38 @@ SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_fun\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n- *  Otherwise BIP-340 compliant if the noncefp argument is NULL or\n- *  secp256k1_nonce_function_bip340 and the ndata argument is 32-byte auxiliary\n- *  randomness.\n- *\n  *  Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:   sig64: pointer to a 64-byte array to store the serialized signature (cannot be NULL)\n  *  In:    msg32: the 32-byte message being signed (cannot be NULL)\n  *       keypair: pointer to an initialized keypair (cannot be NULL)\n- *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bip340 is used\n- *         ndata: pointer to arbitrary data used by the nonce generation\n- *                function (can be NULL). If it is non-NULL and\n- *                secp256k1_nonce_function_bip340 is used, then ndata must be a\n- *                pointer to 32-byte auxiliary randomness as per BIP-340.\n+ *    aux_rand32: 32 bytes of fresh randomness. While recommended to provide\n+ *                this, it is only supplemental to security and can be NULL. See",
      "path": "include/secp256k1_schnorrsig.h",
      "position": 113,
      "original_position": 19,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "1bf261963aca5bb86fcf467d6adacb3049d41dc8",
      "in_reply_to_id": 657132591,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added the latter",
      "created_at": "2021-06-23T21:39:36Z",
      "updated_at": "2021-06-23T21:39:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r657479977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657479977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 114,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657480072",
      "pull_request_review_id": 691167757,
      "id": 657480072,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzQ4MDA3Mg==",
      "diff_hunk": "@@ -24,7 +24,8 @@ extern \"C\" {\n  *  Returns: 1 if a nonce was successfully generated. 0 will cause signing to\n  *           return an error.\n  *  Out:  nonce32: pointer to a 32-byte array to be filled by the function\n- *  In:     msg32: the 32-byte message hash being verified (will not be NULL)\n+ *  In:       msg: the message being verified. Can be NULL iff msglen is 0.",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 5,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "4fd25f00ebab3a8f8b7e5a157fde36f076b9e2b8",
      "in_reply_to_id": 657147410,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "expanded to if and only if",
      "created_at": "2021-06-23T21:39:48Z",
      "updated_at": "2021-06-23T21:39:48Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r657480072",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657480072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657480156",
      "pull_request_review_id": 691167841,
      "id": 657480156,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzQ4MDE1Ng==",
      "diff_hunk": "@@ -66,6 +68,13 @@ SECP256K1_API extern const secp256k1_nonce_function_hardened secp256k1_nonce_fun\n  *  signature. Instead, you can manually use secp256k1_schnorrsig_verify and\n  *  abort if it fails.\n  *\n+ *  This function only signs 32-byte messages. If you have messages of a\n+ *  different size (or the same size but without an context-specific tag",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 25,
      "commit_id": "5f6ceafcfa46a69e901bed87e2c5f323b03b1e8c",
      "original_commit_id": "4fd25f00ebab3a8f8b7e5a157fde36f076b9e2b8",
      "in_reply_to_id": 657148354,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2021-06-23T21:39:54Z",
      "updated_at": "2021-06-23T21:39:54Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/844#discussion_r657480156",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/657480156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/844"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    }
  ]
}