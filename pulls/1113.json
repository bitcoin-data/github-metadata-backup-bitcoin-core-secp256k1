{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113",
    "id": 981335106,
    "node_id": "PR_kwDOAP4Jqs46ffxC",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1113.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1113.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/e1eb33724c2ca47855a8c1dada421cabdb717fe7",
    "number": 1113,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "build: Add CMake-based build system",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR adds a [CMake](https://cmake.org/)-based build system.\r\n\r\nAdded build instructions and examples to the [`README.md`](https://github.com/hebasto/secp256k1/blob/220628-cmake/README.md#building-with-cmake-experimental) file.\r\n\r\nWays to integrate with downstream CMake-based projects:\r\n- if `secp256k1` is a subtree (including Bitcoin Core project) -- `add_subdirectory(secp256k1)`\r\n- if `secp256k1` has been installed -- `find_package(secp256k1 0.2.1 CONFIG)`, see https://github.com/hebasto/secp256k1-CMake-example\r\n\r\nAdded a few toolchain files for easy cross compiling.\r\n\r\nDiscussions on IRC:\r\n- https://gnusha.org/secp256k1/2022-06-23.log\r\n- https://gnusha.org/secp256k1/2022-06-24.log\r\n- https://gnusha.org/secp256k1/2022-06-27.log\r\n- https://gnusha.org/secp256k1/2023-01-30.log\r\n\r\n---\r\n\r\nRelated PRs:\r\n- #315 \r\n- #549 \r\n- #761 \r\n\r\n---\r\n\r\n**Implementation notes**\r\n\r\nMinimum required CMake version is 3.1. This was required to provide [`C_STANDARD`](https://cmake.org/cmake/help/latest/prop_tgt/C_STANDARD.html) property.\r\n\r\nIn turn, this choice of CMake version implies it is not possible to build with default CMake on Debian 8, which has CMake v3.0.2 only.\r\n\r\nAlso see:\r\n- [CMake Versions on Linux Distros](https://gitlab.kitware.com/cmake/community/-/wikis/CMake-Versions-on-Linux-Distros)\r\n- https://repology.org/project/cmake/versions\r\n\r\n---\r\n\r\n# Autotools -- CMake Feature Parity Tables\r\n\r\n## 1. Configuration options\r\n\r\nAutotool-based build system features being listed according to the `./configure --help` output. \r\n\r\n| Autotools | CMake |\r\n|---|---|\r\n| `--prefix` | `-DCMAKE_INSTALL_PREFIX` \r\n| `--enable-shared` | `-DSECP256K1_BUILD_SHARED` |\r\n| `--enable-static` | `-DSECP256K1_BUILD_STATIC` |\r\n| `--enable-dev-mode` _hidden_ | N/A, see https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916979117 |\r\n| `--enable-benchmark` | `-DSECP256K1_BUILD_BENCHMARK` |\r\n| `--enable-coverage` | `-DCMAKE_BUILD_TYPE=Coverage` |\r\n| `--enable-tests` | `-DSECP256K1_BUILD_TESTS` |\r\n| `--enable-ctime-tests` | `-DSECP256K1_BUILD_CTIME_TESTS` |\r\n| `--enable-experimental` | `-DSECP256K1_EXPERIMENTAL` |\r\n| `--enable-exhaustive-tests` | `-DSECP256K1_BUILD_EXHAUSTIVE_TESTS` |\r\n| `--enable-examples` | `-DSECP256K1_BUILD_EXAMPLES` |\r\n| `--enable-module-ecdh` | `-DSECP256K1_ENABLE_MODULE_ECDH` |\r\n| `--enable-module-recovery` | `-DSECP256K1_ENABLE_MODULE_RECOVERY` |\r\n| `--enable-module-extrakeys` | `-DSECP256K1_ENABLE_MODULE_EXTRAKEYS` |\r\n| `--enable-module-schnorrsig` | `-DSECP256K1_ENABLE_MODULE_SCHNORRSIG` |\r\n| `--enable-external-default-callbacks` | `-DSECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS` |\r\n| `--with-test-override-wide-multiply` _hidden_ | `-DSECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY` |\r\n| `--with-asm` | `-DSECP256K1_ASM` |\r\n| `--with-ecmult-window` | `-DSECP256K1_ECMULT_WINDOW_SIZE` |\r\n| `--with-ecmult-gen-precision` | `-DSECP256K1_ECMULT_GEN_PREC_BITS` |\r\n| `--with-valgrind` | `-DSECP256K1_VALGRING` |\r\n\r\nA screenshot of grouped options from `cmake-gui`:\r\n![image](https://user-images.githubusercontent.com/32963518/214821305-fc3ffe82-4d05-4dd7-b2c2-7ca2d5d12e86.png)\r\n\r\n## 2. `make` targets\r\n\r\n| Autotools | CMake |\r\n|---|---|\r\n| `make` | `make` |\r\n| `make check` | `make check` |\r\n| `make install` | `make install` * |\r\n\r\n* Installation of `lib/pkgconfig/libsecp256k1.pc` not implemented.",
    "labels": [],
    "created_at": "2022-06-28T12:23:31Z",
    "updated_at": "2023-03-10T18:15:10Z",
    "closed_at": "2023-03-08T15:33:19Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-03-08T15:33:19Z",
    "merge_commit_sha": "df323b5c14676d2892bd559cf4c0db2b334dc838",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "hebasto:220628-cmake",
      "ref": "220628-cmake",
      "sha": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 434588155,
        "node_id": "R_kgDOGedJ-w",
        "name": "secp256k1",
        "full_name": "hebasto/secp256k1",
        "owner": {
          "login": "hebasto",
          "id": 32963518,
          "node_id": "MDQ6VXNlcjMyOTYzNTE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hebasto",
          "html_url": "https://github.com/hebasto",
          "followers_url": "https://api.github.com/users/hebasto/followers",
          "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
          "organizations_url": "https://api.github.com/users/hebasto/orgs",
          "repos_url": "https://api.github.com/users/hebasto/repos",
          "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hebasto/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hebasto/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/hebasto/secp256k1",
        "archive_url": "https://api.github.com/repos/hebasto/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hebasto/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hebasto/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hebasto/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hebasto/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hebasto/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hebasto/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hebasto/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hebasto/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hebasto/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/hebasto/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/hebasto/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/hebasto/secp256k1/events",
        "forks_url": "https://api.github.com/repos/hebasto/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/hebasto/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hebasto/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hebasto/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hebasto/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/hebasto/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hebasto/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hebasto/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hebasto/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hebasto/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hebasto/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/hebasto/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/hebasto/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hebasto/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hebasto/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hebasto/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:hebasto/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/hebasto/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/hebasto/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hebasto/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/hebasto/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/hebasto/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/hebasto/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/hebasto/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hebasto/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/hebasto/secp256k1/hooks",
        "svn_url": "https://github.com/hebasto/secp256k1",
        "language": "C",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 10892,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-28T15:11:47Z",
        "created_at": "2021-12-03T12:27:02Z",
        "updated_at": "2023-05-05T16:09:11Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "6048e6c03e49d1bf6de020d6e62b4977419d1b9f",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 962,
        "stargazers_count": 1802,
        "watchers_count": 1802,
        "size": 10374,
        "default_branch": "master",
        "open_issues_count": 145,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T01:00:35Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-08-01T08:52:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 657,
    "deletions": 4,
    "changed_files": 13,
    "commits": 3,
    "review_comments": 157,
    "comments": 92
  },
  "events": [
    {
      "event": "reviewed",
      "id": 1021652809,
      "node_id": "PRR_kwDOAP4Jqs485S9J",
      "url": null,
      "actor": null,
      "commit_id": "be3bb3072cf52202b3f334e340bf4992e19b8b5c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK (if there's buy-in from the maintainers here).\r\nTested using the suggested instructions, on a macos box, but the build fails to link:\r\n```bash\r\n[ 78%] Building C object src/CMakeFiles/tests.dir/tests.c.o\r\n[ 85%] Linking C executable tests\r\nld: library not found for -lcrt0.o\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\ngmake[2]: *** [src/CMakeFiles/tests.dir/build.make:98: src/tests] Error 1\r\ngmake[1]: *** [CMakeFiles/Makefile2:212: src/CMakeFiles/tests.dir/all] Error 2\r\ngmake: *** [Makefile:136: all] Error 2\r\n```\r\n\r\nBuilding on Ubuntu and cross-compiling for Windows and running the tests seem to work as expected.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1021652809",
      "submitted_at": "2022-06-28T12:58:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6894445372,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGa8OM8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6894445372",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T14:12:33Z"
    },
    {
      "event": "commented",
      "id": 1168780837,
      "node_id": "IC_kwDOAP4Jqs5Fqi4l",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1168780837",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T14:12:42Z",
      "updated_at": "2022-06-28T14:12:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "Weak Concept ACK. I think there's user demand for this, and if we get some occasional help from the Core build people, maintenance should be doable. ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1168780837",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1168787186,
      "node_id": "IC_kwDOAP4Jqs5Fqkby",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1168787186",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T14:18:00Z",
      "updated_at": "2022-06-28T14:18:00Z",
      "author_association": "MEMBER",
      "body": "Updated be3bb3072cf52202b3f334e340bf4992e19b8b5c -> 697107c06e0837014ae24124dd6db81d6cb87485 ([pr1113.01](https://github.com/hebasto/secp256k1/commits/pr1113.01) -> [pr1113.02](https://github.com/hebasto/secp256k1/commits/pr1113.02), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.01..pr1113.02)):\r\n\r\n- addressed @fanquake's [comment](https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1021652809):\r\n> Tested using the suggested instructions, on a macos box, but the build fails to link",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1168787186",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 6894495201,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGa8aXh",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6894495201",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T14:18:00Z"
    },
    {
      "event": "subscribed",
      "id": 6894495217,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGa8aXx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6894495217",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T14:18:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6895894518,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGbBv_2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6895894518",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T17:10:46Z"
    },
    {
      "event": "commented",
      "id": 1169003475,
      "node_id": "IC_kwDOAP4Jqs5FrZPT",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1169003475",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T17:13:06Z",
      "updated_at": "2022-06-28T17:13:06Z",
      "author_association": "MEMBER",
      "body": "Updated 697107c06e0837014ae24124dd6db81d6cb87485 -> dba933ac9ffaea9fedf62a9f324891f440c2ca76 ([pr1113.02](https://github.com/hebasto/secp256k1/commits/pr1113.02) -> [pr1113.03](https://github.com/hebasto/secp256k1/commits/pr1113.03), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.02..pr1113.03)):\r\n\r\n- `make install` works as expected now :tiger2: ",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1169003475",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6896938922,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGbFu-q",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6896938922",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T19:59:48Z"
    },
    {
      "event": "commented",
      "id": 1169175578,
      "node_id": "IC_kwDOAP4Jqs5FsDQa",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1169175578",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T20:02:23Z",
      "updated_at": "2022-06-28T20:02:23Z",
      "author_association": "MEMBER",
      "body": "Updated dba933ac9ffaea9fedf62a9f324891f440c2ca76 -> ec372dc0b8a95053a771614931982e29291b6dd8 ([pr1113.03](https://github.com/hebasto/secp256k1/commits/pr1113.03) -> [pr1113.04](https://github.com/hebasto/secp256k1/commits/pr1113.04), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.03..pr1113.04)):\r\n\r\n- added an example of cross compiling for Android\r\n- added an example of native compiling on Windows with Visual Studio",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1169175578",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-28T20:04:06Z",
      "updated_at": "2022-06-28T20:04:06Z",
      "source": {
        "issue": {
          "id": 445278718,
          "node_id": "MDU6SXNzdWU0NDUyNzg3MTg=",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/621",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/621/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/621/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/621/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/621",
          "number": 621,
          "state": "closed",
          "state_reason": "completed",
          "title": "Is there an option to create a shared library for Android applications?",
          "body": "I use `./configure --enable-jni --enable-experimental --enable-module-schnorr --enable-module-ecdh` and get one  secp256k1.so files.but there are many different CPU architectures in android like armeabi ,rmeabi-v7a,arm64-v8a ,x86 . Could you please tell me how should I do to create .so files for different CPU architectures. Thanks",
          "user": {
            "login": "gecng",
            "id": 32486035,
            "node_id": "MDQ6VXNlcjMyNDg2MDM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/32486035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gecng",
            "html_url": "https://github.com/gecng",
            "followers_url": "https://api.github.com/users/gecng/followers",
            "following_url": "https://api.github.com/users/gecng/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/gecng/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/gecng/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/gecng/subscriptions",
            "organizations_url": "https://api.github.com/users/gecng/orgs",
            "repos_url": "https://api.github.com/users/gecng/repos",
            "events_url": "https://api.github.com/users/gecng/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/gecng/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 13,
          "closed_at": "2019-05-27T05:09:08Z",
          "created_at": "2019-05-17T06:05:49Z",
          "updated_at": "2022-06-28T20:04:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1023020823,
      "node_id": "PRR_kwDOAP4Jqs48-g8X",
      "url": null,
      "actor": null,
      "commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1023020823",
      "submitted_at": "2022-06-29T10:08:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6905187675,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGblM1b",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6905187675",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-29T19:20:41Z"
    },
    {
      "event": "commented",
      "id": 1170397983,
      "node_id": "IC_kwDOAP4Jqs5Fwtsf",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1170397983",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-29T19:23:35Z",
      "updated_at": "2022-06-29T19:23:35Z",
      "author_association": "MEMBER",
      "body": "Updated ec372dc0b8a95053a771614931982e29291b6dd8 -> d98be43d08fcfaef756309bb3048a57274b0ccb6 ([pr1113.04](https://github.com/hebasto/secp256k1/commits/pr1113.04) -> [pr1113.05](https://github.com/hebasto/secp256k1/commits/pr1113.05), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.04..pr1113.05)):\r\n\r\n- addressed @real-or-random's comments",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1170397983",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 6905205718,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGblRPW",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6905205718",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-29T19:23:36Z"
    },
    {
      "event": "subscribed",
      "id": 6905205727,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGblRPf",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6905205727",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-29T19:23:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6905652663,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGbm-W3",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6905652663",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-29T20:27:59Z"
    },
    {
      "event": "reviewed",
      "id": 1024597772,
      "node_id": "PRR_kwDOAP4Jqs49Eh8M",
      "url": null,
      "actor": null,
      "commit_id": "ff836b6199d81e63f61afee1b8385e815ca25c47",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1024597772",
      "submitted_at": "2022-06-30T10:05:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "renamed",
      "id": 6911255094,
      "node_id": "RTE_lADOAP4Jqs5MuhVxzwAAAAGb8WI2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6911255094",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-30T14:13:37Z",
      "rename": {
        "from": "[WIP] build: Add CMake-based build system",
        "to": "build: Add CMake-based build system"
      }
    },
    {
      "event": "reviewed",
      "id": 1024990026,
      "node_id": "PRR_kwDOAP4Jqs49GBtK",
      "url": null,
      "actor": null,
      "commit_id": "ff836b6199d81e63f61afee1b8385e815ca25c47",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1024990026",
      "submitted_at": "2022-06-30T14:35:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "commented",
      "id": 1171307979,
      "node_id": "IC_kwDOAP4Jqs5F0L3L",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1171307979",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-30T14:42:06Z",
      "updated_at": "2022-06-30T14:46:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "It's correct to add the config header template `libsecp256k1-config.h.in` because it replicates what autoconf does but I think maintaining this file will be annoying, I guess. It will mean we'll have the duplicate the help strings.\r\n\r\nI'm not exactly sure what's the best way forward. \r\n\r\n\r\nWe could either try to get rid of the config header entirely, also in autoconf. That simplifies things (generated source files are always annoying in some way. The [autoconf manual](https://www.gnu.org/software/autoconf/manual/autoconf-2.71/html_node/Configuration-Headers.html) gives the following rationale for preferring a config header over `-D`: \r\n\r\n> When a package contains more than a few tests that define C preprocessor symbols, the command lines to pass -D options to the compiler can get quite long. This causes two problems. One is that the make output is hard to visually scan for errors. More seriously, the command lines can exceed the length limits of some operating systems.\r\n[...]\r\nThe fact that the symbols are documented is important in order to check that config.h makes sense. The fact that there is a well-defined list of symbols that should be defined (or not) is also important for people who are porting packages to environments where configure cannot be run: they just have to fill in the blanks.\r\n\r\n\r\nThis first part is not entirely convincing for us. The path limitation seems to a problem only on ancient system and anyway, the number of options is limited: With #929 solved, we'd have preprocessor defaults for the two numeric options (`-DECMULT_GEN_PREC_BITS=4 -D ECMULT_WINDOW_SIZE=15`), and so the values a typical user needs to set are of type `ENABLE_MODULE_FOO` and `-DUSE_EXTERNAL_ASM`.\r\n\r\nOn the other hand, one can argue that a config header is actually a good thing for people who build without a build system because it lists and documents all the options. Unfortunately the `.in` formats for autotools and cmake are not really compatible, so we can't use the same file for both. \r\n\r\nMaybe it doesn't matter all that much. In the end, we need a least one place (and as few as possible) places where the options are listed and documented, and some duplication will be unavoidable if we want to support more than one of building even if it's just \"autotools\" and \"manual\".  But I still I tend to think that we should get rid of the config header entirely. The only real advantage is that it helps people without a build system to fill in the gaps but that's a rare case, and we should simply document the options somewhere else. Maybe we could have a single table in the README with multiple columns: one for the autotool argument, one for manual build, and (if this PR here finds acceptance), for cmake:\r\n\r\n<table>\r\n<tr>\r\n\t<td>Option\r\n\t<td>./configure argument\r\n\t<td>cmake argument\r\n\t<td>manual argument\r\n<tr>\r\n\t<td>Enable the Schnorrsig module\r\n\t<td><pre>--enable-module-schnorrsig</pre>\r\n\t<td><pre>-DENABLE_MODULE_SCHNORRSIG=ON</pre>\r\n\t<td><pre>-DENABLE_MODULE_SCHNORRSIG</pre>\r\n</table>   \r\n\r\nThere may even be a way to unify the last two columns.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1171307979",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6911614624,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGb9t6g",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6911614624",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-30T14:53:46Z"
    },
    {
      "event": "commented",
      "id": 1171325257,
      "node_id": "IC_kwDOAP4Jqs5F0QFJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1171325257",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-30T14:56:04Z",
      "updated_at": "2022-07-01T21:13:10Z",
      "author_association": "MEMBER",
      "body": "Updated ff836b6199d81e63f61afee1b8385e815ca25c47 -> f587a8cfe16704d29ad0d4409a90807ef8320147 ([pr1113.06](https://github.com/hebasto/secp256k1/commits/pr1113.06) -> [pr1113.07](https://github.com/hebasto/secp256k1/commits/pr1113.07), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.06..pr1113.07)):\r\n\r\n- addressed @fanquake's and @real-or-random's comments\r\n- moved toolchain fails into `cmake` directory",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1171325257",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 6911634439,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGb9ywH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6911634439",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-30T14:56:04Z"
    },
    {
      "event": "subscribed",
      "id": 6911634454,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGb9ywW",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6911634454",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-30T14:56:05Z"
    },
    {
      "event": "mentioned",
      "id": 6911634472,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGb9ywo",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6911634472",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-30T14:56:05Z"
    },
    {
      "event": "subscribed",
      "id": 6911634484,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGb9yw0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6911634484",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-30T14:56:05Z"
    },
    {
      "event": "reviewed",
      "id": 1025081536,
      "node_id": "PRR_kwDOAP4Jqs49GYDA",
      "url": null,
      "actor": null,
      "commit_id": "f587a8cfe16704d29ad0d4409a90807ef8320147",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1025081536",
      "submitted_at": "2022-06-30T15:29:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-30T15:38:18Z",
      "updated_at": "2022-06-30T15:38:18Z",
      "source": {
        "issue": {
          "id": 1290302479,
          "node_id": "PR_kwDOAP4Jqs46pn79",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1116",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1116/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1116/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1116/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1116",
          "number": 1116,
          "state": "closed",
          "state_reason": null,
          "title": "build: Fix #include \"...\" paths to get rid of further -I arguments",
          "body": "This simplifies building without a build system.\r\n\r\nThis is in line with #925; the paths fixed here were either forgotten\r\nthere or only introduced later. This commit also makes the Makefile\r\nstricter so that further \"wrong\" #include paths will lead to build\r\nerrors even in autotools builds.\r\n\r\nThis belongs to #929.",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1116",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1116",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1116.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1116.patch"
          },
          "closed_at": "2022-07-01T20:13:44Z",
          "created_at": "2022-06-30T15:26:10Z",
          "updated_at": "2022-07-01T20:13:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1171407985,
      "node_id": "IC_kwDOAP4Jqs5F0kRx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1171407985",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-30T16:08:53Z",
      "updated_at": "2022-06-30T16:08:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hm, this is currently very confusing... so `/src/util.h` (where `/` is the project root) has this: \r\nhttps://github.com/bitcoin-core/secp256k1/blob/43756da819a235d813e7ecd53eae6df073b53247/src/util.h#L10-L12\r\n\r\nThough this is implementation-defined, basically all compilers look in the current directory first, so they look for `/src/libsecp256k1-config.h`, which exists on my system because *autotools* generated it.\r\n\r\nOnly if this file doesn't exist, the compiler will try the `-I` paths, which -- when set correctly -- could include `/src/build`, so then it would find the `/src/build/libsecp256k1-config.h`, which cmake generated in its out-of-tree build directory...\r\n\r\nThat's pretty annoying. So we could change the include to `#include <src/libsecp256k1-config.h>` and then let the build system set `-I` accordingly. That's okayish, but getting rid of the config header (see above) is probably even easier. ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1171407985",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6921069022,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGchyHe",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6921069022",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-01T21:11:17Z"
    },
    {
      "event": "commented",
      "id": 1172718404,
      "node_id": "IC_kwDOAP4Jqs5F5kNE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1172718404",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-01T21:15:44Z",
      "updated_at": "2022-07-01T21:15:44Z",
      "author_association": "MEMBER",
      "body": "Updated f587a8cfe16704d29ad0d4409a90807ef8320147 -> 5dda6460657778e52b89a7920a8b63a032f5183f ([pr1113.07](https://github.com/hebasto/secp256k1/commits/pr1113.07) -> [pr1113.08](https://github.com/hebasto/secp256k1/commits/pr1113.08)):\r\n\r\n- rebased on top of the #1116 \r\n- addressed @real-or-random's [comment](https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r911167739)",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1172718404",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 6921083526,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGch1qG",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6921083526",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-01T21:15:44Z"
    },
    {
      "event": "subscribed",
      "id": 6921083532,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGch1qM",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6921083532",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-01T21:15:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6921098216,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGch5Po",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6921098216",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-01T21:20:28Z"
    },
    {
      "event": "reviewed",
      "id": 1026777065,
      "node_id": "PRR_kwDOAP4Jqs49M1_p",
      "url": null,
      "actor": null,
      "commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "This is working pretty well already, I think. Have you tried adding the tests? ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1026777065",
      "submitted_at": "2022-07-02T18:32:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T19:58:44Z",
      "updated_at": "2022-07-05T19:58:44Z",
      "source": {
        "issue": {
          "id": 1280981841,
          "node_id": "PR_kwDOBBJcqc46Kom_",
          "url": "https://api.github.com/repos/microsoft/vcpkg/issues/25398",
          "repository_url": "https://api.github.com/repos/microsoft/vcpkg",
          "labels_url": "https://api.github.com/repos/microsoft/vcpkg/issues/25398/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/microsoft/vcpkg/issues/25398/comments",
          "events_url": "https://api.github.com/repos/microsoft/vcpkg/issues/25398/events",
          "html_url": "https://github.com/microsoft/vcpkg/pull/25398",
          "number": 25398,
          "state": "closed",
          "state_reason": null,
          "title": "[secp256k1] Update secp256k1 from 2017 to 2022",
          "body": "**Update port unnoficial-secp256k1**\r\n\r\n- #### What does your PR fix?\r\n  Fixes # \r\nUpdate the commit reference to bitcoin-core/secp256k1 project to 2022, to keep the portability with VCPKG project.\r\n\r\n- #### Which triplets are supported/not supported? Have you updated the [CI baseline](https://github.com/microsoft/vcpkg/blob/master/scripts/ci.baseline.txt)?\r\n Linux, Windows\r\n\r\n- #### CI tested triplets:\r\n   x64-linux\r\n   x64-windows\r\n   x64-windows-static\r\n   x86-windows\r\nOthers, was skipped.\r\n\r\n- #### Does your PR follow the [maintainer guide](https://github.com/microsoft/vcpkg/blob/master/docs/maintainers/maintainer-guide.md)?\r\n Whithout necessity of maintanance of main VCPGK project\r\n\r\n- #### If you have added/updated a port: Have you run `./vcpkg x-add-version --all` and committed the result?\r\n Yes, commited!\r\n ",
          "user": {
            "login": "R0g3r10LL31t3",
            "id": 21255999,
            "node_id": "MDQ6VXNlcjIxMjU1OTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/21255999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/R0g3r10LL31t3",
            "html_url": "https://github.com/R0g3r10LL31t3",
            "followers_url": "https://api.github.com/users/R0g3r10LL31t3/followers",
            "following_url": "https://api.github.com/users/R0g3r10LL31t3/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/R0g3r10LL31t3/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/R0g3r10LL31t3/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/R0g3r10LL31t3/subscriptions",
            "organizations_url": "https://api.github.com/users/R0g3r10LL31t3/orgs",
            "repos_url": "https://api.github.com/users/R0g3r10LL31t3/repos",
            "events_url": "https://api.github.com/users/R0g3r10LL31t3/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/R0g3r10LL31t3/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 1320931868,
              "node_id": "MDU6TGFiZWwxMzIwOTMxODY4",
              "url": "https://api.github.com/repos/microsoft/vcpkg/labels/category:port-update",
              "name": "category:port-update",
              "description": "The issue is with a library, which is requesting update new revision",
              "color": "40c75f",
              "default": false
            },
            {
              "id": 1711056306,
              "node_id": "MDU6TGFiZWwxNzExMDU2MzA2",
              "url": "https://api.github.com/repos/microsoft/vcpkg/labels/info:reviewed",
              "name": "info:reviewed",
              "description": "Pull Request changes follow basic guidelines",
              "color": "6cf079",
              "default": false
            }
          ],
          "assignee": {
            "login": "JackBoosY",
            "id": 47264268,
            "node_id": "MDQ6VXNlcjQ3MjY0MjY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47264268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JackBoosY",
            "html_url": "https://github.com/JackBoosY",
            "followers_url": "https://api.github.com/users/JackBoosY/followers",
            "following_url": "https://api.github.com/users/JackBoosY/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/JackBoosY/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/JackBoosY/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/JackBoosY/subscriptions",
            "organizations_url": "https://api.github.com/users/JackBoosY/orgs",
            "repos_url": "https://api.github.com/users/JackBoosY/repos",
            "events_url": "https://api.github.com/users/JackBoosY/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/JackBoosY/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "JackBoosY",
              "id": 47264268,
              "node_id": "MDQ6VXNlcjQ3MjY0MjY4",
              "avatar_url": "https://avatars.githubusercontent.com/u/47264268?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/JackBoosY",
              "html_url": "https://github.com/JackBoosY",
              "followers_url": "https://api.github.com/users/JackBoosY/followers",
              "following_url": "https://api.github.com/users/JackBoosY/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/JackBoosY/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/JackBoosY/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/JackBoosY/subscriptions",
              "organizations_url": "https://api.github.com/users/JackBoosY/orgs",
              "repos_url": "https://api.github.com/users/JackBoosY/repos",
              "events_url": "https://api.github.com/users/JackBoosY/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/JackBoosY/received_events",
              "type": "User",
              "site_admin": false
            },
            {
              "login": "JonLiu1993",
              "id": 63675417,
              "node_id": "MDQ6VXNlcjYzNjc1NDE3",
              "avatar_url": "https://avatars.githubusercontent.com/u/63675417?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/JonLiu1993",
              "html_url": "https://github.com/JonLiu1993",
              "followers_url": "https://api.github.com/users/JonLiu1993/followers",
              "following_url": "https://api.github.com/users/JonLiu1993/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/JonLiu1993/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/JonLiu1993/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/JonLiu1993/subscriptions",
              "organizations_url": "https://api.github.com/users/JonLiu1993/orgs",
              "repos_url": "https://api.github.com/users/JonLiu1993/repos",
              "events_url": "https://api.github.com/users/JonLiu1993/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/JonLiu1993/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/microsoft/vcpkg/pulls/25398",
            "html_url": "https://github.com/microsoft/vcpkg/pull/25398",
            "diff_url": "https://github.com/microsoft/vcpkg/pull/25398.diff",
            "patch_url": "https://github.com/microsoft/vcpkg/pull/25398.patch"
          },
          "closed_at": "2022-07-15T19:08:22Z",
          "created_at": "2022-06-22T21:43:05Z",
          "updated_at": "2022-07-15T19:08:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1175456252,
      "node_id": "IC_kwDOAP4Jqs5GEAn8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1175456252",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T20:11:30Z",
      "updated_at": "2022-07-05T20:20:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "I tried the following:\r\n\r\n```\r\nmkdir build\r\ncd build\r\ncmake .. -DENABLE_MODULE_SCHNORRSIG=ON\r\nmake\r\n./src/bench\r\n```\r\n\r\nThe result seems to indicate that:\r\n* ECDH & recovery modules were built (despite configure telling me they weren't)\r\n* schnorrsig being built (despite being experimental, and experimental modules not enabled)\r\n* performance is very low (compiler optimizations off?)\r\n\r\nEDIT: seems `-DCMAKE_BUILD_TYPE=Release` is needed to get optimizations enabled. This should perhaps be documented? (I guess this is standard, but I'm not familiar with this style of configuring things)",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1175456252",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1175462570,
      "node_id": "IC_kwDOAP4Jqs5GECKq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1175462570",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T20:20:10Z",
      "updated_at": "2022-07-05T20:20:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa\r\n \r\n> ECDH & recovery modules were built (despite configure telling me they weren't)\r\n\r\nThis is probably the issue I already discovered  (https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1171407985) ... can you try removing `src/libsecp256k1-config.h`, which is probably still around in your source tree from the autotools build, before trying this PR?",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1175462570",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 6937248158,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGdfgGe",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6937248158",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T20:20:11Z"
    },
    {
      "event": "subscribed",
      "id": 6937248164,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGdfgGk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6937248164",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T20:20:11Z"
    },
    {
      "event": "commented",
      "id": 1175464731,
      "node_id": "IC_kwDOAP4Jqs5GECsb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1175464731",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T20:23:01Z",
      "updated_at": "2022-07-05T20:24:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "@real-or-random\r\n\r\n> can you try removing `src/libsecp256k1-config.h`, which is probably still around in your source tree from the autotools build, before trying this PR?\r\n\r\nDone, that seems to help, though now I get errors because the extrakeys module doesn't seem enabled (which schnorrsig depends on). If I enable extrakeys explicitly, it works, and with `-DCMAKE_BUILD_TYPE=Release` added, I get believable bench output.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1175464731",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 6937262138,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGdfjg6",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6937262138",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T20:23:02Z"
    },
    {
      "event": "subscribed",
      "id": 6937262140,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGdfjg8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6937262140",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T20:23:02Z"
    },
    {
      "event": "commented",
      "id": 1175472765,
      "node_id": "IC_kwDOAP4Jqs5GEEp9",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1175472765",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T20:33:59Z",
      "updated_at": "2022-07-05T20:33:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Oh module dependencies...",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1175472765",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1175474084,
      "node_id": "IC_kwDOAP4Jqs5GEE-k",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1175474084",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T20:35:43Z",
      "updated_at": "2022-07-05T20:35:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Those are not serious issues of course, and probably easy to resolve. It's nice to see that the hard part (it building/running in the first place, apparently including for MSVC) already seems to work.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1175474084",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-06T13:44:55Z",
      "updated_at": "2022-07-06T13:44:55Z",
      "source": {
        "issue": {
          "id": 1295856252,
          "node_id": "PR_kwDOAP4Jqs468DdB",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1121",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1121/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1121/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1121/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1121",
          "number": 1121,
          "state": "closed",
          "state_reason": null,
          "title": "config: Set preprocessor defaults for ECMULT_* config values",
          "body": "This simplifies manual builds and solves one item in #929.\r\n\r\nManual compilation now:\r\n ```\r\n gcc -O2 -c src/secp256k1.c src/precomputed_*.c\r\n ar rcs libsecp256k1.a secp256k1.o precomputed_*.o\r\n```\r\n\r\nThe second commit will make debugging the config easier when passing `-DCONFIG_DEBUG`. It currently only prints the `ECMULT_*` variables but we could use it for `WIDEMUL` and also synthetic int128 stuff in the future after #1000 is merge. The logic there is more complex than simply falling back to a default value. \r\n\r\nBut I'm happy to drop that commit if people don't like this or think it's overkill. \r\n\r\nedit: The third commit removes basic-config.h which is now definitively not necessary anymore because we have default values.\r\n\r\n\r\n---\r\n\r\nMy long-term plan is to get rid of the config header \"src/libsecp256k1-config.h\" currently generated by autotools and simply let autotools pass all config macros via `-D` switches.   Generated header files are annoying, and could then also be avoided in #1113. See https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1171307979 for more context.",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1121",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1121",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1121.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1121.patch"
          },
          "closed_at": "2022-07-11T12:11:58Z",
          "created_at": "2022-07-06T13:37:15Z",
          "updated_at": "2022-07-11T12:11:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6960863167,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGe5le_",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6960863167",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-08T15:02:03Z"
    },
    {
      "event": "commented",
      "id": 1179093852,
      "node_id": "IC_kwDOAP4Jqs5GR4tc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1179093852",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-08T15:07:50Z",
      "updated_at": "2022-07-08T15:11:49Z",
      "author_association": "MEMBER",
      "body": "Updated 6b65314195baeee982c7d5213377d493d073f119 -> 13c63e79b56ab00bffb0ff40d8a6a0f4b03ed620 ([pr1113.09](https://github.com/hebasto/secp256k1/commits/pr1113.09) -> [pr1113.10](https://github.com/hebasto/secp256k1/commits/pr1113.10)):\r\n\r\n- rebased\r\n- added `examples/CMakeLists.txt`\r\n- option docstrings style now follows CMake's docstring style\r\n- addressed @real-or-random's and @sipa's comments\r\n- fixed module dependecies",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179093852",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 6960904001,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGe5vdB",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6960904001",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-08T15:07:51Z"
    },
    {
      "event": "subscribed",
      "id": 6960904014,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGe5vdO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6960904014",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-08T15:07:51Z"
    },
    {
      "event": "mentioned",
      "id": 6960904022,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGe5vdW",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6960904022",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-08T15:07:51Z"
    },
    {
      "event": "subscribed",
      "id": 6960904028,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGe5vdc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6960904028",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-08T15:07:51Z"
    },
    {
      "event": "commented",
      "id": 1179105068,
      "node_id": "IC_kwDOAP4Jqs5GR7cs",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1179105068",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-08T15:19:06Z",
      "updated_at": "2022-07-08T15:19:06Z",
      "author_association": "MEMBER",
      "body": "> EDIT: seems `-DCMAKE_BUILD_TYPE=Release` is needed to get optimizations enabled.\r\n\r\nBy default (at least on Linux), `-DCMAKE_BUILD_TYPE=Release` adds `-O3 -DNDEBUG` flags, and `-DCMAKE_BUILD_TYPE=Debug` does `-g`.\r\n\r\nTherefore, I'd suggest to do not use this option at all. Instead, Autotools' behavior has been [re-imlemented](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179093852), i.e., `-O2`, if no `COVERAGE` requested. And `-O0` otherwise.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179105068",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1179172504,
      "node_id": "IC_kwDOAP4Jqs5GSL6Y",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1179172504",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-08T16:31:17Z",
      "updated_at": "2022-07-08T16:32:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for constantly making updates, I think we're almost there. Though we may want to simplify the config system first and only then  add CMake.\r\n\r\n> Therefore, I'd suggest to do not use this option at all.\r\n\r\nI'm not sure if this is the way to go. `CMAKE_BUILD_TYPE` seems to be pretty idiomatic in CMake, so maybe that's what people would expect.  But I need to do more reading, I haven't really checked.\r\n\r\nSo Autotools always enable `-g -O2` and so far this was pretty useful for us...  So as I understand it, `RelWithDebInfo` does this. Could we just set this as a default?\r\n\r\nAnd expressing `Coverage` as build type in CMake seems to use build types in the right way. \r\n\r\n*edit: removed leftover draft text* \r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179172504",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6962500148,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGe_1I0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6962500148",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-08T20:11:30Z"
    },
    {
      "event": "commented",
      "id": 1179331707,
      "node_id": "IC_kwDOAP4Jqs5GSyx7",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1179331707",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-08T20:19:14Z",
      "updated_at": "2022-07-08T20:19:14Z",
      "author_association": "MEMBER",
      "body": "Updated 13c63e79b56ab00bffb0ff40d8a6a0f4b03ed620 -> e9cebaaadfa3ba1a0f233d125fe2eed50f3993cb ([pr1113.10](https://github.com/hebasto/secp256k1/commits/pr1113.10) -> [pr1113.11](https://github.com/hebasto/secp256k1/commits/pr1113.11), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.10..pr1113.11)):\r\n\r\n- [improved](https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912388756) documentation\r\n- removed the [`ENABLE_DEV_MODE`](https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916979117) option",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179331707",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1181786509,
      "node_id": "IC_kwDOAP4Jqs5GcKGN",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1181786509",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-12T13:50:45Z",
      "updated_at": "2022-07-12T13:50:45Z",
      "author_association": "MEMBER",
      "body": "@real-or-random \r\n> So Autotools always enable `-g -O2` and so far this was pretty useful for us... So as I understand it, `RelWithDebInfo` does this. Could we just set this as a default?\r\n\r\nThe default value of the `CMAKE_C_FLAGS_RELWITHDEBINFO` variable is `-O2 -g -DNDEBUG`. I think, we want to strip out `-DNDEBUG`. Or to define our own custom configuration, along with `Coverage`?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1181786509",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 6977851591,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGf6ZDH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6977851591",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-12T13:50:46Z"
    },
    {
      "event": "subscribed",
      "id": 6977851596,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGf6ZDM",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6977851596",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-12T13:50:46Z"
    },
    {
      "event": "commented",
      "id": 1182579717,
      "node_id": "IC_kwDOAP4Jqs5GfLwF",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1182579717",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-12T23:00:01Z",
      "updated_at": "2022-07-12T23:00:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry, I guess my suggestion wasn't clear. I meant\r\n - make `RelWithDebInfo` the default build type (is this even possible?)\r\n -  and independently, introduce a separate build type `Coverage`.\r\n\r\n\r\n> The default value of the `CMAKE_C_FLAGS_RELWITHDEBINFO` variable is `-O2 -g -DNDEBUG`. I think, we want to strip out `-DNDEBUG`.  \r\n\r\nYes, we probably would want to strip it. (Though it won't hurt, we never check for `NDEBUG` it in the code.)\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1182579717",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1182852207,
      "node_id": "IC_kwDOAP4Jqs5GgORv",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1182852207",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T07:13:47Z",
      "updated_at": "2022-07-13T07:13:47Z",
      "author_association": "MEMBER",
      "body": "> Though it won't hurt, we never check for `NDEBUG` it in the code.\r\n\r\nBut we use [`assert`](https://en.cppreference.com/w/c/error/assert).",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1182852207",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6986721206,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGgcOe2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6986721206",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T14:48:56Z"
    },
    {
      "event": "commented",
      "id": 1183331147,
      "node_id": "IC_kwDOAP4Jqs5GiDNL",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1183331147",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T14:56:55Z",
      "updated_at": "2022-07-13T14:56:55Z",
      "author_association": "MEMBER",
      "body": "Updated e9cebaaadfa3ba1a0f233d125fe2eed50f3993cb -> 2ecf0dc437db7c38d4428eca9d17b0168287983a ([pr1113.11](https://github.com/hebasto/secp256k1/commits/pr1113.11) -> [pr1113.12](https://github.com/hebasto/secp256k1/commits/pr1113.12)):\r\n\r\n- rebased\r\n\r\n> `CMAKE_BUILD_TYPE` seems to be pretty idiomatic in CMake\r\n\r\n- introduced two new build types: \"RelWithAsserts\" and \"Coverage\"; the latter should be used instead of the `COVERAGE` option\r\n- removed the `COVERAGE` option\r\n\r\nAll default build types, i.e., \"Debug\", \"Release\", \"MinSizeRel\" and \"RelWithDebInfo\", are still available.\r\n\r\nThe default build type is \"RelWithAsserts\" which is equivalent to the Autotools' default.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1183331147",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1183561423,
      "node_id": "IC_kwDOAP4Jqs5Gi7bP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1183561423",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T18:47:50Z",
      "updated_at": "2022-07-13T18:47:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "There are only asserts in the API examples. For those it's probably better to by default leave the asserts in.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1183561423",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1191541313,
      "node_id": "IC_kwDOAP4Jqs5HBXpB",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1191541313",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T14:16:15Z",
      "updated_at": "2022-07-21T14:16:15Z",
      "author_association": "MEMBER",
      "body": "@sipa \r\n> * schnorrsig being built (despite being experimental, and experimental modules not enabled)\r\n\r\nschnorrsig has not been treated as experimental since #995.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1191541313",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 7038751202,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGjitHi",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7038751202",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T14:16:16Z"
    },
    {
      "event": "subscribed",
      "id": 7038751211,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGjitHr",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7038751211",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T14:16:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7038825421,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGji_PN",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7038825421",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T14:24:27Z"
    },
    {
      "event": "commented",
      "id": 1191554440,
      "node_id": "IC_kwDOAP4Jqs5HBa2I",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1191554440",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T14:27:33Z",
      "updated_at": "2022-07-21T14:27:33Z",
      "author_association": "MEMBER",
      "body": "From the recent meeting on [IRC](https://gnusha.org/secp256k1/2022-07-18.log):\r\n> \\<real_or_random> hebasto: so you think we'd still have a config file for cmake?\r\n> \\<hebasto> if build, in general, will support config-less routine, cmake won't require it\r\n\r\nI was wrong. The `cmake/libsecp256k1-config.h.in` has been dropped in the latest push.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1191554440",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1200488590,
      "node_id": "IC_kwDOAP4Jqs5HjgCO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1200488590",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-31T19:52:13Z",
      "updated_at": "2022-07-31T19:52:13Z",
      "author_association": "MEMBER",
      "body": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910845410:\r\n> You should probably add your name here and everywhere else. (I think that's an annoyance here in the library. It would be good to switch to \"libsecp256k1 contributors\" but last time I brought that up, it wasn't clear if this is legally okay.)\r\n\r\nWrt the recent discussion on IRC, should I switch to \"libsecp256k1 contributors\" in this PR?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1200488590",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7108593541,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGntIeF",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7108593541",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T10:13:56Z"
    },
    {
      "event": "commented",
      "id": 1202292814,
      "node_id": "IC_kwDOAP4Jqs5HqYhO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1202292814",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T10:15:24Z",
      "updated_at": "2022-08-02T10:15:24Z",
      "author_association": "MEMBER",
      "body": "According to yesterday's IRC meeting, copyright headers have been removed from the new added files.  ",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1202292814",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-07T11:15:56Z",
      "updated_at": "2022-08-07T11:15:56Z",
      "source": {
        "issue": {
          "id": 1330985812,
          "node_id": "PR_kwDOABII5848xLg6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25797/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25797/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25797/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25797",
          "number": 25797,
          "state": "closed",
          "state_reason": null,
          "title": "build: Add CMake-based build system",
          "body": "Here are some benefits of using [CMake](https://cmake.org/) in the Bitcoin Core project:\r\n- an opportunity to drop the `build_msvc` subdirectory from the repo altogether (being a cross-platform tool, CMake is able to [create](https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html) input files for a wide range of build systems, including Unix Makefiles and Visual Studio project files)\r\n- no hacks required to build `dll`s for Windows, even with `DEBUG=1` (see https://github.com/bitcoin/bitcoin/issues/19772)\r\n- better maintainability (say _bye_ to global variables)\r\n- easy integration with [Qt 5](https://doc.qt.io/qt-5/cmake-manual.html)\r\n- easy integration with [Qt 6](https://doc.qt.io/qt-6.2/cmake-manual.html) in the nearest future (also see bitcoin/bitcoin#24798 and bitcoin/bitcoin#25191)\r\n\r\nMore Qt-specific details see below.\r\n\r\nAlso there is a non-technical/social benefit. Over time, the Autotools community shrinks, but CMake community grows. New contributors, who join this project in the future, will readily support a CMake-based system rather an Autotools-based one.\r\n\r\n---\r\n\r\n## Native building has been tested on the following OSes:\r\n- Ubuntu 22.04 (`x86_64`, `aarch64`~, backward compatible with Ubuntu Bionic 18.04 using adjusted invocation~)\r\n- macOS Monterey (`x86_64`, `arm64`)\r\n- FreeBSD 12.3\r\n- OpenBSD 7.1\r\n```sh\r\ncmake -S . -B build\r\ncd build\r\nmake\r\nmake check\r\nmake install  # optional\r\n```\r\n\r\n## Native building on Windows (MSVC + vcpkg)\r\n\r\nDependency packages are provided by the [vcpkg](https://vcpkg.io) package manager (\"Mandatory ASLR\" in Windows Security must be disabled to install `qt5-*` packages):\r\n```cmd\r\nvcpkg --triplet=x64-windows-static install pkgconf boost-multi-index boost-process boost-signals2 boost-test libevent berkeleydb sqlite3 miniupnpc zeromq qt5-base qt5-tools\r\n```\r\n\r\nTo build on Windows with Visual Studio, a proper [generator](https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html#visual-studio-generators) must be specified for a new build tree.\r\nThe following example assumes using of \"Developer Command Prompt for VS 2022\" and CMake v3.21+.\r\n\r\n```cmd\r\ncmake -G \"Visual Studio 17 2022\" -A x64 -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows-static -S . -B build\r\ncmake --build build --config Release\r\n```\r\n\r\nHINT. To leverage Multi-ToolTask and use `<N>` CPU cores, run\r\n```cmd\r\ncmake --build build --config Release -j <N> -- /p:CL_MPcount=<N>\r\n```\r\n\r\n## Cross building for Windows on Ubuntu 22.04\r\n```sh\r\nmake -C depends HOST=x86_64-w64-mingw32\r\ncmake --toolchain depends/x86_64-w64-mingw32/share/toolchain.cmake -S . -B build\r\ncmake --build build\r\n```\r\n\r\n## Cross building for Windows on Ubuntu 22.04 with `DEBUG=1`, see #19772\r\n```sh\r\nmake -C depends HOST=x86_64-w64-mingw32 DEBUG=1\r\ncmake --toolchain depends/x86_64-w64-mingw32/share/toolchain.cmake -S . -B build\r\ncmake --build build\r\n```\r\n\r\n## Cross building for macOS (Intel) on Ubuntu 22.04\r\n```sh\r\nmake -C depends HOST=x86_64-apple-darwin\r\ncmake --toolchain depends/x86_64-apple-darwin/share/toolchain.cmake -S . -B build\r\ncmake --build build\r\n```\r\n\r\n## Cross building for macOS (Apple Silicon) on Ubuntu 22.04\r\n```sh\r\nmake -C depends HOST=arm64-apple-darwin\r\ncmake --toolchain depends/arm64-apple-darwin/share/toolchain.cmake -S . -B build\r\ncmake --build build\r\n```\r\n## Cross building for Android using [NDK r23 LTS](https://github.com/bitcoin/bitcoin/pull/23677) on Ubuntu 22.04\r\n```sh\r\nexport ANDROID_SDK=/home/hebasto/Android/Sdk\r\nexport ANDROID_NDK=${ANDROID_SDK}/ndk/23.2.8568313\r\nexport ANDROID_API_LEVEL=28\r\nmake -C depends ANDROID_TOOLCHAIN_BIN=${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/ HOST=aarch64-linux-android\r\ncmake --toolchain depends/aarch64-linux-android/share/toolchain.cmake -S . -B build\r\ncmake --build build\r\n```\r\n\r\n\r\n\r\nNOTE: Building in the source tree is not supported.\r\n\r\n---\r\n\r\n## Functional Tests\r\n\r\nFunctional tests can be run in exactly the same way as when building with Autotools out of the source tree, i.e.:\r\n```\r\n./build/test/functional/test_runner.py\r\n```\r\n\r\n## [Guix builds](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1312482102)\r\n\r\n## [Cirrus CI -- 16 of 16](https://cirrus-ci.com/build/5822976705167360)\r\n\r\n- [x] lint [jammy]\r\n- [x] tidy [jammy]\r\n- [x] Win64 native [vs2022]\r\n- [x] ARM [unit tests, no functional tests] [bullseye]\r\n- [x] Win64 [unit tests, no gui tests, no boost::process, no functional tests] [jammy]\r\n- [x] 32-bit + dash [gui] [CentOS 8]\r\n- [x] [previous releases, uses qt5 dev package and some depends packages, DEBUG] [unsigned char] [buster]\r\n- [x] [TSan, depends, gui] [jammy]\r\n- [x] [MSan, depends] [focal]\r\n- [x] [ASan + LSan + UBSan + integer, no depends, USDT] [jammy]\r\n- [x] [fuzzer,address,undefined,integer, no depends] [jammy]\r\n- [x] [multiprocess, i686, DEBUG] [focal]\r\n- [x] [no wallet, libbitcoinkernel] [buster]\r\n- [x] macOS 10.15 [gui, no tests] [focal]\r\n- [x] macOS 13 native arm64 [gui, sqlite only] [no depends]\r\n- [x] ARM64 Android APK [jammy]\r\n\r\n---\r\n\r\nAdditional notes.\r\n\r\n1. There is a [branch/PR](https://github.com/hebasto/bitcoin/pull/3) in my repo which includes Qt 6 integration and CMake-specific CI tasks.\r\n2. A similar [PR](https://github.com/bitcoin-core/secp256k1/pull/1113) has been open in https://github.com/bitcoin-core/secp256k1.\r\n\r\n---\r\n\r\nThe plan is to have it in the repo shortly after branching `24.x` off, and make CMake-based build system a drop-in replacement of Autotools-based one during the next ~2 or 3~ release cycle~s~.\r\n\r\n---\r\n\r\n# Qt-specific details\r\n\r\n## What happened before?\r\n\r\n- https://www.qt.io/blog/qt-6-build-system:\r\n> CMake is the build system for Qt 6\r\n\r\n- https://www.qt.io/blog/qt-and-cmake-the-past-the-present-and-the-future:\r\n> We made a big decision to start using CMake to build Qt 6 one and a half years ago.\r\n\r\n- https://doc.qt.io/qt-6/qt6-buildsystem.html:\r\n> The Qt 5 build system was built on top of [qmake](https://doc.qt.io/qt-6.2/qtquick-deployment.html#qmake). In Qt 6, we ported the build system to CMake.\r\n\r\nIt is important to note that CMake has extensive [support](https://cmake.org/cmake/help/latest/manual/cmake-qt.7.html) for Qt, including Qt-specific tools such as MOC, RCC, UIC.\r\n\r\n## Why Qt 6 build system does matter if the Bitcoin Core GUI uses Qt 5?\r\n\r\nFor release builds we use Qt 5.15.5 LTS, the latest Qt 5 version available under a free-software license.\r\n\r\nFor dynamic linking users can use Qt 5.11.3+, which allows them to use packages provided in Debian Buster and Ubuntu Focal.\r\n\r\nOn the other hand, Qt 6 packages are available in the following systems/package managers:\r\n- [Ubuntu Jammy](https://packages.ubuntu.com/jammy/qt6-base-dev)+\r\n- [Debian Bullseye](https://packages.debian.org/bullseye-backports/qt6-base-dev)+\r\n- [Fedora 35](https://packages.fedoraproject.org/pkgs/qt6-qtbase/qt6-qtbase/)+\r\n- [Homebrew](https://formulae.brew.sh/formula/qt)\r\n\r\nAs long as Qt GUI is a part of Bitcoin Core, it is inevitable to embrace Qt 6 support, sooner or later.\r\n\r\n## Can we just adjust our current build system to handle Qt 6?\r\n\r\nThe main problem with integration of Qt 6 into the current build system is lacking of pkg-config `*.pc` files for static builds (please note that a patch from [QTBUG-86080](https://bugreports.qt.io/browse/QTBUG-86080) works for non-static builds only).\r\n\r\nTo handle Qt 6 with our current build system we need to:\r\n- patch Qt, which looks like a non-trivial task, or\r\n- apply some [nasty hacks](https://github.com/bitcoin/bitcoin/pull/24798#discussion_r854001982) to our own build system\r\n- keep in our repo the required `*.pc` files\r\n\r\nAll approaches imply maintaining burden for a long time. And last two are pretty ugly :)\r\n\r\n---\r\n\r\n# Autotools -- CMake Feature Parity Table\r\n\r\nAutotool-based build system (AT) features being listed according to the `./configure --help` output. \r\n\r\n| AT feature | CM feature |\r\n|---|---|\r\n| `--prefix` | `-DCMAKE_INSTALL_PREFIX` |\r\n| `--enable-c++20` | `-DCXX20` |\r\n| `--enable-shared` | `-DBUILD_SHARED` |\r\n| `--enable-static` | `-DBUILD_STATIC` |\r\n| `--disable-wallet` | `-DENABLE_WALLET` |\r\n| `--enable-usdt` | `-DWITH_USDT` |\r\n| `--enable-upnp-default` | `-DENABLE_UPNP_DEFAULT` |\r\n| `--enable-natpmp-default` | `-DENABLE_NATPMP_DEFAULT` |\r\n| `--disable-tests` | `-DBUILD_TESTS` |\r\n| `--disable-gui-tests` | TBD |\r\n| `--disable-bench` | `-DBUILD_BENCH` |\r\n| `--enable-extended-functional-tests` | TBD |\r\n| `--enable-fuzz` | `-DFUZZ` |\r\n| `--enable-fuzz-binary` | `-DBUILD_FUZZ_BINARY` |\r\n| `--disable-hardening` | `-DHARDENING` |\r\n| `--enable-reduce-exports` | `-DREDUCE_EXPORTS` |\r\n| `--disable-ccache` | `-DCCACHE` |\r\n| `--enable-suppress-external-warnings` | N/A |\r\n| `--enable-lcov` | TBD |\r\n| `--enable-lcov-branch-coverage` | TBD |\r\n| `--enable-threadlocal` | TBD |\r\n| `--disable-asm` | `-DASM` |\r\n| `--disable-zmq` | `-DWITH_ZMQ` |\r\n| `--enable-multiprocess` | `-DMULTIPROCESS` |\r\n| `--disable-man` | `-DINSTALL_MAN` |\r\n| `--enable-debug` | `-DCMAKE_BUILD_TYPE=Debug` |\r\n| `--enable-gprof` | TBD |\r\n| `--enable-werror` | `-DWERROR` |\r\n| `--enable-external-signer` | `-DWITH_EXTERNAL_SIGNER` |\r\n| `--enable-lto` | TBD |\r\n| `--enable-util-cli` | `-DBUILD_CLI` |\r\n| `--enable-util-tx` | `-DBUILD_TX` |\r\n| `--enable-util-wallet` | `-DBUILD_WALLET_TOOL` |\r\n| `--enable-util-util` | `-DBUILD_UTIL` |\r\n| `--enable-experimental-util-chainstate` | `-DBUILD_UTIL_CHAINSTATE` |\r\n| `--with-seccomp` | `-DWITH_SECCOMP` |\r\n| `--with-sqlite` | `-DWITH_SQLITE` |\r\n| `--without-bdb` | `-DWITH_BDB` |\r\n| `--with-miniupnpc` | `-DWITH_MINIUPNPC` |\r\n| `--with-natpmp` | `-DWITH_NATPMP` |\r\n| `--with-qrencode` | `-DWITH_QRENCODE` |\r\n| `--with-libmultiprocess` | N/A |\r\n| `--with-mpgen` | `-DMPGEN_PREFIX` |\r\n| `--with-sanitizers` | `-DSANITIZERS` |\r\n| `--with-utils` | individual options |\r\n| `--with-libs` | individual options |\r\n| `--with-experimental-kernel-lib` | `-DBUILD_BITCOINKERNEL_LIB` |\r\n| `--with-daemon` | `-DBUILD_DAEMON` |\r\n| `--with-gui` | `-DWITH_GUI` |\r\n\r\n---\r\n\r\nIRC meeting discussions:\r\n- https://bitcoin-irc.chaincode.com/bitcoin-core-dev/2022-08-18#844420;",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 109,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25797",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25797.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25797.patch"
          },
          "closed_at": "2023-07-07T17:16:45Z",
          "created_at": "2022-08-07T11:15:55Z",
          "updated_at": "2023-07-07T17:30:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7204716371,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGtbz9T",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7204716371",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T10:45:04Z"
    },
    {
      "event": "commented",
      "id": 1217847666,
      "node_id": "IC_kwDOAP4Jqs5IluFy",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1217847666",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T10:48:06Z",
      "updated_at": "2022-08-17T10:48:06Z",
      "author_association": "MEMBER",
      "body": "Updated dc9124b2b23c5cfe4f3524b1e7defb528b62b839 -> 8d019748b599193510a61975371805c2841d7990 ([pr1113.14](https://github.com/hebasto/secp256k1/commits/pr1113.14) -> [pr1113.15](https://github.com/hebasto/secp256k1/commits/pr1113.15)):\r\n\r\n- rebased\r\n- improved building with MSVC\r\n- improved hygiene of user-provided `CFLAGS`",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1217847666",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7227469568,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGuym8A",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7227469568",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-21T09:38:59Z"
    },
    {
      "event": "commented",
      "id": 1221510311,
      "node_id": "IC_kwDOAP4Jqs5IzsSn",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1221510311",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-21T09:45:06Z",
      "updated_at": "2022-08-21T09:47:19Z",
      "author_association": "MEMBER",
      "body": "Updated 8d019748b599193510a61975371805c2841d7990 -> d77e4c89de78c2b2a523e9e56a931db80104a569 ([pr1113.15](https://github.com/hebasto/secp256k1/commits/pr1113.15) -> [pr1113.16](https://github.com/hebasto/secp256k1/commits/pr1113.16), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.15..pr1113.16)):\r\n\r\n- added `make test` which is CMake's analogue of Autotools' `make check`\r\n- various improvements based on feedback from bitcoin/bitcoin#25797 \r\n\r\nThe PR description has been updated with detailed Autotools -- CMake Feature Parity Tables.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1221510311",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7227671237,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGuzYLF",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7227671237",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-21T12:53:45Z"
    },
    {
      "event": "commented",
      "id": 1221540980,
      "node_id": "IC_kwDOAP4Jqs5Izzx0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1221540980",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-21T12:57:45Z",
      "updated_at": "2022-08-21T12:57:45Z",
      "author_association": "MEMBER",
      "body": "Updated d77e4c89de78c2b2a523e9e56a931db80104a569 -> 3dc4de05299835aa4ff39275507858ebd2ecb8f9 ([pr1113.16](https://github.com/hebasto/secp256k1/commits/pr1113.16) -> [pr1113.17](https://github.com/hebasto/secp256k1/commits/pr1113.17), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.16..pr1113.17)):\r\n\r\n- fixed accidentally broken compatibility with CMake 3.1\r\n\r\nTested on Debian 8 with non-system CMake installation:\r\n```sh\r\n$ cmake --version\r\ncmake version 3.1.3\r\n\r\nCMake suite maintained and supported by Kitware (kitware.com/cmake).\r\n```",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1221540980",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7228167593,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGu1RWp",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7228167593",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-21T20:47:30Z"
    },
    {
      "event": "commented",
      "id": 1221618952,
      "node_id": "IC_kwDOAP4Jqs5I0G0I",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1221618952",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-21T20:52:41Z",
      "updated_at": "2022-08-21T20:52:41Z",
      "author_association": "MEMBER",
      "body": "Updated 3dc4de05299835aa4ff39275507858ebd2ecb8f9 -> a891c91f5215dadb883b88ffa0108f38e4d2b23d ([pr1113.17](https://github.com/hebasto/secp256k1/commits/pr1113.17) -> [pr1113.18](https://github.com/hebasto/secp256k1/commits/pr1113.18), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.17..pr1113.18)):\r\n\r\n- a prefix `SECP_` has been added to all secp256k1-specific variables to avoid potential name clashes when this library build system being used as a sub-project in another build system\r\n- added `SECP_BUILD_SHARED` and `SECP_BUILD_STATIC` configuration options\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1221618952",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "convert_to_draft",
      "id": 7235554861,
      "node_id": "CTDE_lADOAP4Jqs5MuhVxzwAAAAGvRc4t",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7235554861",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-22T19:07:16Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T13:52:01Z",
      "updated_at": "2022-08-23T13:52:01Z",
      "source": {
        "issue": {
          "id": 1346555830,
          "node_id": "PR_kwDOAP4Jqs49kdKi",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1135",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1135/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1135/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1135/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1135",
          "number": 1135,
          "state": "closed",
          "state_reason": null,
          "title": "Add `tools/symbol-check.py`",
          "body": "The new `tools/symbol-check.py` aims to ensure that only expected symbols are exported in the `secp256k1` shared library.\r\n\r\nThe script itself stems from Bitcoin Core's [`contrib/devtools/symbol-check.py`](https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/symbol-check.py) and bitcoin/bitcoin#25020. It uses the [LIEF](https://github.com/lief-project/LIEF) library.\r\n\r\nUseful to ensure that build system changes (including bitcoin-core/secp256k1#1113) will not introduce any unexpected regressions.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1135",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1135",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1135.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1135.patch"
          },
          "closed_at": "2023-02-23T14:36:35Z",
          "created_at": "2022-08-22T14:57:40Z",
          "updated_at": "2023-06-26T17:53:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "ready_for_review",
      "id": 7246025551,
      "node_id": "RFRE_lADOAP4Jqs5MuhVxzwAAAAGv5ZNP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7246025551",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T22:43:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7246026289,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAGv5ZYx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7246026289",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T22:43:33Z"
    },
    {
      "event": "commented",
      "id": 1224965823,
      "node_id": "IC_kwDOAP4Jqs5JA36_",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1224965823",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T22:48:03Z",
      "updated_at": "2022-08-23T22:48:03Z",
      "author_association": "MEMBER",
      "body": "Updated a891c91f5215dadb883b88ffa0108f38e4d2b23d -> 1eca0329db3898cbbd0824803112441ae74d9acd ([pr1113.18](https://github.com/hebasto/secp256k1/commits/pr1113.18) -> [pr1113.19](https://github.com/hebasto/secp256k1/commits/pr1113.19), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.18..pr1113.19)):\r\n\r\n- fixed all bugs and regressions found during extensive testing including cross building for Windows and macOS, and native building using MSVC",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1224965823",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1227345510,
      "node_id": "IC_kwDOAP4Jqs5JJ85m",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1227345510",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T14:33:59Z",
      "updated_at": "2022-08-25T14:33:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "related, maybe there's some gold: https://github.com/Bitcoin-ABC/secp256k1/blob/master/CMakeLists.txt",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1227345510",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T14:41:19Z",
      "updated_at": "2022-08-25T14:41:19Z",
      "source": {
        "issue": {
          "id": 1350490485,
          "node_id": "PR_kwDOAP4Jqs49xiwH",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1137",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1137/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1137/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1137/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1137",
          "number": 1137,
          "state": "closed",
          "state_reason": null,
          "title": "Add vcpkg installation instructions",
          "body": "secp256k1 is available as a port in [vcpkg](https://github.com/microsoft/vcpkg), a C++ library manager that simplifies installation for secp256k1 and other project dependencies. Documenting the install process here will help users get started by providing a single set of commands to build secp256k1, ready to be included in their projects.\r\n\r\nWe also test whether our library ports build in various configurations (dynamic, static) on various platforms (OSX, Linux, Windows: x86, x64) to keep a wide coverage for users.\r\n\r\nI'm a maintainer for vcpkg, and [here is what the port script looks like](https://github.com/microsoft/vcpkg/blob/master/ports/secp256k1/portfile.cmake). We try to keep the library maintained as close as possible to the original library. :)\r\n",
          "user": {
            "login": "JonLiu1993",
            "id": 63675417,
            "node_id": "MDQ6VXNlcjYzNjc1NDE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/63675417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JonLiu1993",
            "html_url": "https://github.com/JonLiu1993",
            "followers_url": "https://api.github.com/users/JonLiu1993/followers",
            "following_url": "https://api.github.com/users/JonLiu1993/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/JonLiu1993/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/JonLiu1993/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/JonLiu1993/subscriptions",
            "organizations_url": "https://api.github.com/users/JonLiu1993/orgs",
            "repos_url": "https://api.github.com/users/JonLiu1993/repos",
            "events_url": "https://api.github.com/users/JonLiu1993/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/JonLiu1993/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1137",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1137",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1137.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1137.patch"
          },
          "closed_at": "2022-12-02T13:09:34Z",
          "created_at": "2022-08-25T08:03:14Z",
          "updated_at": "2022-12-02T13:09:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1227415325,
      "node_id": "IC_kwDOAP4Jqs5JKN8d",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1227415325",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T15:23:58Z",
      "updated_at": "2022-08-25T15:23:58Z",
      "author_association": "MEMBER",
      "body": "> related, maybe there's some gold: https://github.com/Bitcoin-ABC/secp256k1/blob/master/CMakeLists.txt\r\n\r\nWhen I started to work on bringing CMake into Bitcoin Core and in here, I have skimmed that repository.\r\n\r\nDid look into that listfile in particular again:\r\n- maybe dropping the \"auto\" value for the `SECP_ECMULT_WINDOW_SIZE` and `SECP_ECMULT_GEN_PREC_BITS` options is cleaner, but it slightly deviates from Autotools' `configure` implementation\r\n- they use `SECP256K1_` prefix for option names, which is longer than ours `SECP_` but follows the library name\r\n\r\nWhat do you think?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1227415325",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1227511546,
      "node_id": "IC_kwDOAP4Jqs5JKlb6",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1227511546",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T16:39:48Z",
      "updated_at": "2022-08-25T16:40:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Did look into that listfile in particular again:\r\n> \r\n>     * maybe dropping the \"auto\" value for the `SECP_ECMULT_WINDOW_SIZE` and `SECP_ECMULT_GEN_PREC_BITS` options is cleaner, but it slightly deviates from Autotools' `configure` implementation\r\n\r\nIn the end both is fine because we have the default values in the preprocessor (#1121) and later we probably want to set these only via the preprocessor. I think the current version of the PR is good because then the two build systems are in sync. \r\n\r\n> \r\n>     * they use `SECP256K1_` prefix for option names, which is longer than ours `SECP_` but follows the library name\r\n> \r\n> \r\n> What do you think?\r\n\r\nI think among these two choices, the full name is better. I mean we prefix every symbol with the full `secp256k1_`, so it feels somewhat arbitrary to have a shorter prefix in the build system. But there's anyway some bikeshedding necessary for the prefixes of the macros. ( https://github.com/bitcoin-core/secp256k1/pull/1121#issuecomment-1178064363 ).\r\n\r\nMaybe now is the time to think about this. @sipa made a point that a general prefix `SECP256K1_`could be useful for all macros in the case that users will build the library by simply including the code. And this would be consistent with most of our function names already (except a few names in `util.h`). So if we want this, we could additionally think whether we want a prefix to distinguish external macros (supposed to be set by user/build system) from internal macros. But something like `SECP256K1_CONFIG_ECMULT_WINDOW_SIZE` is very long and not elegant. Maybe let's use only `SECP256K1_` only as a prefix for **external** macros and then we could later still use something like `SECP256K1_INTERNAL_` for internal macros if we want to name space them?\r\n\r\n\r\nBy the way:\r\n\r\n> a prefix `SECP_` has been added to all secp256k1-specific variables to avoid potential name clashes when this library build system being used as a sub-project in another build system\r\n\r\nCan this happen at all with CMake?  (I have no idea about subbuilds with CMake).",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1227511546",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 7261169578,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAGwzKeq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7261169578",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T16:39:48Z"
    },
    {
      "event": "subscribed",
      "id": 7261169585,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAGwzKex",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7261169585",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T16:39:49Z"
    },
    {
      "event": "commented",
      "id": 1227518799,
      "node_id": "IC_kwDOAP4Jqs5JKnNP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1227518799",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T16:47:18Z",
      "updated_at": "2022-08-25T16:47:18Z",
      "author_association": "MEMBER",
      "body": "> By the way:\r\n> \r\n> > a prefix `SECP_` has been added to all secp256k1-specific variables to avoid potential name clashes when this library build system being used as a sub-project in another build system\r\n> \r\n> Can this happen at all with CMake? (I have no idea about subbuilds with CMake).\r\n\r\nIf a subproject (e.g., libsecp256k1) being added to the parent project (e.g., Bitcoin Core) using the [`add_subdirectory`](https://cmake.org/cmake/help/latest/command/add_subdirectory.html#add-subdirectory) command, all variables from the parent project scope are copied to the subproject scope.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1227518799",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1267074925,
      "node_id": "IC_kwDOAP4Jqs5Lhgdt",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1267074925",
      "actor": {
        "login": "ZenulAbidin",
        "id": 42585895,
        "node_id": "MDQ6VXNlcjQyNTg1ODk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZenulAbidin",
        "html_url": "https://github.com/ZenulAbidin",
        "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
        "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
        "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
        "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
        "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T14:14:44Z",
      "updated_at": "2022-10-04T14:23:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "I support having a parallel CMake system in addition to the autoconf one. I might even help with maintaining it as I have a use for libsecp256k1 for cross-platform projects.\r\n@hebasto Is your CMakeLists.txt still usable with the latest commit of bitcoin-core/secp256k1 as-is?\r\n\r\nI can try to get rid of `src/libsecp256k1-config.h` in a separate PR if there's still demand for that.",
      "user": {
        "login": "ZenulAbidin",
        "id": 42585895,
        "node_id": "MDQ6VXNlcjQyNTg1ODk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZenulAbidin",
        "html_url": "https://github.com/ZenulAbidin",
        "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
        "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
        "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
        "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
        "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1267074925",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 7516979496,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAHADAEo",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7516979496",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T14:14:44Z"
    },
    {
      "event": "subscribed",
      "id": 7516979510,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAHADAE2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7516979510",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T14:14:44Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T22:41:59Z",
      "updated_at": "2022-10-04T22:41:59Z",
      "source": {
        "issue": {
          "id": 1396510986,
          "node_id": "PR_kwDOAP4Jqs5AJc2F",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1142",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1142/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1142/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1142/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1142",
          "number": 1142,
          "state": "open",
          "state_reason": null,
          "title": "Add section on configuration flags to README",
          "body": "This change eases the use of alternate build systems by moving the variables in src/libsecp256k1-config.h to compiler macros for each invocation, preventing duplication of these variables for each build system.\r\n\r\nThis does not include documentation for each configure option, and would need to be added in a separate commit.",
          "user": {
            "login": "ZenulAbidin",
            "id": 42585895,
            "node_id": "MDQ6VXNlcjQyNTg1ODk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZenulAbidin",
            "html_url": "https://github.com/ZenulAbidin",
            "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
            "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
            "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
            "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
            "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1142",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1142",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1142.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1142.patch"
          },
          "created_at": "2022-10-04T15:57:31Z",
          "updated_at": "2023-07-14T07:56:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1295061277,
      "node_id": "IC_kwDOAP4Jqs5NMREd",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1295061277",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-28T14:20:13Z",
      "updated_at": "2022-10-28T14:20:13Z",
      "author_association": "MEMBER",
      "body": "@ZenulAbidin \r\n> @hebasto Is your CMakeLists.txt still usable with the latest commit of bitcoin-core/secp256k1 as-is?\r\n\r\nIt is. Why?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1295061277",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 7692146924,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAHKfNjs",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7692146924",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-28T14:20:14Z"
    },
    {
      "event": "subscribed",
      "id": 7692146936,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAHKfNj4",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7692146936",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-28T14:20:14Z"
    },
    {
      "event": "mentioned",
      "id": 7692146951,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAHKfNkH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7692146951",
      "actor": {
        "login": "ZenulAbidin",
        "id": 42585895,
        "node_id": "MDQ6VXNlcjQyNTg1ODk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZenulAbidin",
        "html_url": "https://github.com/ZenulAbidin",
        "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
        "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
        "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
        "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
        "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-28T14:20:14Z"
    },
    {
      "event": "subscribed",
      "id": 7692146957,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAHKfNkN",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7692146957",
      "actor": {
        "login": "ZenulAbidin",
        "id": 42585895,
        "node_id": "MDQ6VXNlcjQyNTg1ODk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZenulAbidin",
        "html_url": "https://github.com/ZenulAbidin",
        "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
        "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
        "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
        "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
        "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-28T14:20:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7699772683,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHK8TUL",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7699772683",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-30T21:06:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7699782061,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHK8Vmt",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7699782061",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-30T21:13:29Z"
    },
    {
      "event": "commented",
      "id": 1296354294,
      "node_id": "IC_kwDOAP4Jqs5NRMv2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1296354294",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-30T21:24:32Z",
      "updated_at": "2022-10-30T21:27:37Z",
      "author_association": "MEMBER",
      "body": "Updated 1eca0329db3898cbbd0824803112441ae74d9acd -> dcf19d6a0332f24120af5e7cd4707435dbcf2076 ([pr1113.19](https://github.com/hebasto/secp256k1/commits/pr1113.19) -> [pr1113.20](https://github.com/hebasto/secp256k1/commits/pr1113.20), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.19..pr1113.20)).\r\n\r\nThe `SECP256K1_` is used for user-defined CMake options now.\r\n\r\nNow integration with downstream projects works as easy as follows:\r\n- if `secp256k1` is a subtree (including Bitcoin Core project) -- `add_subdirectory(secp256k1)`\r\n- if `secp256k1` has been installed -- `find_package(secp256k1)`\r\n\r\nA new \"_x86_64: Windows (VS 2022)_\" CI task has been added: https://cirrus-ci.com/task/5007933141417984.\r\n\r\nAlso some other small improvement were done based on work on the related projects (https://github.com/bitcoin/bitcoin/pull/25797, https://github.com/sipa/minisketch/pull/75) and their integration.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1296354294",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7713266923,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHLvxzr",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7713266923",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T13:22:10Z"
    },
    {
      "event": "commented",
      "id": 1298517147,
      "node_id": "IC_kwDOAP4Jqs5NZcyb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1298517147",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T13:33:30Z",
      "updated_at": "2022-11-01T13:33:30Z",
      "author_association": "MEMBER",
      "body": "Updated dcf19d6a0332f24120af5e7cd4707435dbcf2076 -> 896229922fd85425db1d005a2ba8839e8fdffdd1 ([pr1113.20](https://github.com/hebasto/secp256k1/commits/pr1113.20) -> [pr1113.21](https://github.com/hebasto/secp256k1/commits/pr1113.21), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.20..pr1113.21)):\r\n\r\n- fixed minor issues for various non-standard installation scenarios\r\n- fixed compatibility with CMake 3.1\r\n- a few other minor improvements",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1298517147",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7921556578,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHYKVxi",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7921556578",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-30T12:23:18Z"
    },
    {
      "event": "commented",
      "id": 1332068704,
      "node_id": "IC_kwDOAP4Jqs5PZcFg",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1332068704",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-30T12:25:10Z",
      "updated_at": "2022-11-30T12:25:10Z",
      "author_association": "MEMBER",
      "body": "Updated 896229922fd85425db1d005a2ba8839e8fdffdd1 -> bf0512788b4d8611136d55c224f10ae67cf5d002 ([pr1113.21](https://github.com/hebasto/secp256k1/commits/pr1113.21) -> [pr1113.22](https://github.com/hebasto/secp256k1/commits/pr1113.22)):\r\n\r\n- rebased and synced with changes which were introduced in #993",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1332068704",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8037185414,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHfDbeG",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8037185414",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T13:21:13Z"
    },
    {
      "event": "commented",
      "id": 1351347082,
      "node_id": "IC_kwDOAP4Jqs5Qi-uK",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1351347082",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T13:23:11Z",
      "updated_at": "2022-12-14T13:23:11Z",
      "author_association": "MEMBER",
      "body": "Updated bf0512788b4d8611136d55c224f10ae67cf5d002 -> 6d8b8dc666637343c69dd34ddce509f17639b7d9 ([pr1113.22](https://github.com/hebasto/secp256k1/commits/pr1113.22) -> [pr1113.23](https://github.com/hebasto/secp256k1/commits/pr1113.23)):\r\n\r\n- rebased on top of the recent changes related to the v0.2.0 release",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1351347082",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T18:14:06Z",
      "updated_at": "2022-12-14T18:14:06Z",
      "source": {
        "issue": {
          "id": 1494773544,
          "node_id": "I_kwDOAjZbZs5ZGG8o",
          "url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/209",
          "repository_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp",
          "labels_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/209/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/209/comments",
          "events_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/209/events",
          "html_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/issues/209",
          "number": 209,
          "state": "closed",
          "state_reason": "completed",
          "title": "secp256k1-zkp with CMakeLists?",
          "body": "Is there a way to use this code in java?",
          "user": {
            "login": "mattiaferrari02",
            "id": 65465360,
            "node_id": "MDQ6VXNlcjY1NDY1MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/65465360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattiaferrari02",
            "html_url": "https://github.com/mattiaferrari02",
            "followers_url": "https://api.github.com/users/mattiaferrari02/followers",
            "following_url": "https://api.github.com/users/mattiaferrari02/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mattiaferrari02/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mattiaferrari02/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mattiaferrari02/subscriptions",
            "organizations_url": "https://api.github.com/users/mattiaferrari02/orgs",
            "repos_url": "https://api.github.com/users/mattiaferrari02/repos",
            "events_url": "https://api.github.com/users/mattiaferrari02/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mattiaferrari02/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 5,
          "closed_at": "2022-12-18T19:32:41Z",
          "created_at": "2022-12-13T17:21:50Z",
          "updated_at": "2022-12-18T19:32:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8076429520,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHhZIjQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8076429520",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T09:09:28Z"
    },
    {
      "event": "commented",
      "id": 1359045746,
      "node_id": "IC_kwDOAP4Jqs5RAWRy",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1359045746",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T09:11:48Z",
      "updated_at": "2022-12-20T09:11:48Z",
      "author_association": "MEMBER",
      "body": "Updated 6d8b8dc666637343c69dd34ddce509f17639b7d9 -> efc15ad1a3ff6b25a68f7a2985ed2d2816cd9991 ([pr1113.23](https://github.com/hebasto/secp256k1/commits/pr1113.23) -> [pr1113.24](https://github.com/hebasto/secp256k1/commits/pr1113.24)):\r\n\r\n- rebased on top of the recently merged #1178 \r\n\r\nThis PR is ready for a final (?) review now.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1359045746",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8246937280,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHrjkbA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8246937280",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-17T15:32:31Z"
    },
    {
      "event": "commented",
      "id": 1385613193,
      "node_id": "IC_kwDOAP4Jqs5SlseJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1385613193",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-17T15:35:43Z",
      "updated_at": "2023-01-17T15:35:43Z",
      "author_association": "MEMBER",
      "body": "Updated efc15ad1a3ff6b25a68f7a2985ed2d2816cd9991 -> 858be0e97b05253a6274ec31e2eb321bc24dfcb4 ([pr1113.24](https://github.com/hebasto/secp256k1/commits/pr1113.24) -> [pr1113.25](https://github.com/hebasto/secp256k1/commits/pr1113.25)):\r\n\r\n- rebased\r\n- incorporated `noverify_tests` (#1188) and `ctime_tests` (#1169)",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1385613193",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "reviewed",
      "id": 1252228449,
      "node_id": "PRR_kwDOAP4Jqs5Ko31h",
      "url": null,
      "actor": null,
      "commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1252228449",
      "submitted_at": "2023-01-17T19:17:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "reviewed",
      "id": 1252416228,
      "node_id": "PRR_kwDOAP4Jqs5Kplrk",
      "url": null,
      "actor": null,
      "commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1252416228",
      "submitted_at": "2023-01-17T20:32:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8257256695,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHsK7z3",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8257256695",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T15:55:47Z"
    },
    {
      "event": "commented",
      "id": 1387305073,
      "node_id": "IC_kwDOAP4Jqs5SsJhx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1387305073",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T15:58:14Z",
      "updated_at": "2023-01-18T15:58:14Z",
      "author_association": "MEMBER",
      "body": "Updated 858be0e97b05253a6274ec31e2eb321bc24dfcb4 -> 84f1fd27a07eb7f54bd6454019384660b6b4a108 ([pr1113.25](https://github.com/hebasto/secp256k1/commits/pr1113.25) -> [pr1113.26](https://github.com/hebasto/secp256k1/commits/pr1113.26)):\r\n\r\n- rebased\r\n- addressed @sipa's recent comments",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1387305073",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8257280151,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAHsLBiX",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8257280151",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T15:58:14Z"
    },
    {
      "event": "subscribed",
      "id": 8257280169,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAHsLBip",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8257280169",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T15:58:14Z"
    },
    {
      "event": "reviewed",
      "id": 1254061521,
      "node_id": "PRR_kwDOAP4Jqs5Kv3XR",
      "url": null,
      "actor": null,
      "commit_id": "84f1fd27a07eb7f54bd6454019384660b6b4a108",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1254061521",
      "submitted_at": "2023-01-18T18:15:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8305861600,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHvEWPg",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8305861600",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T21:03:08Z"
    },
    {
      "event": "commented",
      "id": 1396093991,
      "node_id": "IC_kwDOAP4Jqs5TNrQn",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1396093991",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T21:11:55Z",
      "updated_at": "2023-01-18T21:11:55Z",
      "author_association": "MEMBER",
      "body": "Updated 84f1fd27a07eb7f54bd6454019384660b6b4a108 -> 9c2295be845ec99446be8a894fa09f5191baa1b0 ([pr1113.26](https://github.com/hebasto/secp256k1/commits/pr1113.26) -> [pr1113.27](https://github.com/hebasto/secp256k1/commits/pr1113.27)):\r\n\r\n- addressed @sipa's [comment](https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073905654)",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1396093991",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8305925504,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAHvEl2A",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8305925504",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T21:11:55Z"
    },
    {
      "event": "subscribed",
      "id": 8305925517,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAHvEl2N",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8305925517",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T21:11:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8306109561,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHvFSx5",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8306109561",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T21:37:19Z"
    },
    {
      "event": "commented",
      "id": 1396122279,
      "node_id": "IC_kwDOAP4Jqs5TNyKn",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1396122279",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T21:39:00Z",
      "updated_at": "2023-01-18T21:39:00Z",
      "author_association": "MEMBER",
      "body": "Updated 9c2295be845ec99446be8a894fa09f5191baa1b0 -> 4dad13e030bb557cf49b394bf79cb31ffe4043bb ([pr1113.27](https://github.com/hebasto/secp256k1/commits/pr1113.27) -> [pr1113.28](https://github.com/hebasto/secp256k1/commits/pr1113.28), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.27..pr1113.28)):\r\n\r\n- fixed accidentally broken compatibility with CMake 3.1\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1396122279",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8313244512,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHvggtg",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8313244512",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-19T15:28:54Z"
    },
    {
      "event": "commented",
      "id": 1397156975,
      "node_id": "IC_kwDOAP4Jqs5TRuxv",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1397156975",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-19T15:29:14Z",
      "updated_at": "2023-01-19T15:29:14Z",
      "author_association": "MEMBER",
      "body": "Updated 4dad13e030bb557cf49b394bf79cb31ffe4043bb -> aa1c233299ab6798d714a3ed6fc2a625dc3896eb ([pr1113.28](https://github.com/hebasto/secp256k1/commits/pr1113.28) -> [pr1113.29](https://github.com/hebasto/secp256k1/commits/pr1113.29), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.28..pr1113.29)):\r\n\r\n- `noverify_tests.exe` and `*_example.exe` runs have been added to the native Windows CI task",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1397156975",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8328868288,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHwcHHA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8328868288",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-22T14:14:46Z"
    },
    {
      "event": "commented",
      "id": 1399500794,
      "node_id": "IC_kwDOAP4Jqs5Taq_6",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1399500794",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-22T14:16:38Z",
      "updated_at": "2023-01-22T14:16:38Z",
      "author_association": "MEMBER",
      "body": "Updated aa1c233299ab6798d714a3ed6fc2a625dc3896eb -> 5c92794e3e23c10d5bf944c612687cabae935594 ([pr1113.29](https://github.com/hebasto/secp256k1/commits/pr1113.29) -> [pr1113.30](https://github.com/hebasto/secp256k1/commits/pr1113.30)):\r\n\r\n- rebased\r\n- a minor fix applied",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1399500794",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1400855893,
      "node_id": "IC_kwDOAP4Jqs5Tf11V",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1400855893",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-23T19:19:13Z",
      "updated_at": "2023-01-23T19:19:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "@hebasto So it seems that only the exernal ARM32 asm, and valgrind detection support are missing here. I don't think those are necessarily required before merging, but I'd like to hear what your plans are around adding support for those.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1400855893",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8337489791,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAHw8_9_",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8337489791",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-23T19:19:13Z"
    },
    {
      "event": "subscribed",
      "id": 8337489807,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAHw8_-P",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8337489807",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-23T19:19:13Z"
    },
    {
      "event": "commented",
      "id": 1401647050,
      "node_id": "IC_kwDOAP4Jqs5Ti2_K",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1401647050",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-24T09:48:55Z",
      "updated_at": "2023-01-24T09:48:55Z",
      "author_association": "MEMBER",
      "body": "@sipa \r\n> So it seems that only the exernal ARM32 asm, and valgrind detection support are missing here. I don't think those are necessarily required before merging, but I'd like to hear what your plans are around adding support for those.\r\n\r\nI'm working on them. I promise to maintain CMake-based build system on par with Autotools-based one. Or better :)",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1401647050",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8342400640,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAHxPu6A",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8342400640",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-24T09:48:55Z"
    },
    {
      "event": "subscribed",
      "id": 8342400654,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAHxPu6O",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8342400654",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-24T09:48:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8347756315,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHxkKcb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8347756315",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-24T19:50:56Z"
    },
    {
      "event": "commented",
      "id": 1402519729,
      "node_id": "IC_kwDOAP4Jqs5TmMCx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1402519729",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-24T19:55:05Z",
      "updated_at": "2023-01-24T19:58:45Z",
      "author_association": "MEMBER",
      "body": "Updated 5c92794e3e23c10d5bf944c612687cabae935594 -> fbacf464ff1a8e1b46508aa9b4fba8d0a3052304 ([pr1113.30](https://github.com/hebasto/secp256k1/commits/pr1113.30) -> [pr1113.31](https://github.com/hebasto/secp256k1/commits/pr1113.31), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.30..pr1113.31)):\r\n\r\n- added support for `-DSECP256K1_ASM` option",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1402519729",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8347813471,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHxkYZf",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8347813471",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-24T19:58:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8354951614,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHx_nG-",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8354951614",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T13:48:34Z"
    },
    {
      "event": "commented",
      "id": 1403745867,
      "node_id": "IC_kwDOAP4Jqs5Tq3ZL",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1403745867",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T14:54:55Z",
      "updated_at": "2023-01-25T14:54:55Z",
      "author_association": "MEMBER",
      "body": "Updated b09bfbfe7330795757f85c44fe3b204d76b60e93 -> 1b0e0ba27a57cf74fdd0f3c06e1441c44119883d ([pr1113.32](https://github.com/hebasto/secp256k1/commits/pr1113.32) -> [pr1113.33](https://github.com/hebasto/secp256k1/commits/pr1113.33), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.32..pr1113.33)):\r\n\r\n- added support for `-DSECP256K1_VALGRIND` option\r\n- the PR description has been amended\r\n- a few tiny improvements",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1403745867",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "reviewed",
      "id": 1269956880,
      "node_id": "PRR_kwDOAP4Jqs5LsgEQ",
      "url": null,
      "actor": null,
      "commit_id": "1b0e0ba27a57cf74fdd0f3c06e1441c44119883d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1269956880",
      "submitted_at": "2023-01-25T19:12:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "reviewed",
      "id": 1269957928,
      "node_id": "PRR_kwDOAP4Jqs5LsgUo",
      "url": null,
      "actor": null,
      "commit_id": "1b0e0ba27a57cf74fdd0f3c06e1441c44119883d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1269957928",
      "submitted_at": "2023-01-25T19:12:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8358886307,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHyOnuj",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8358886307",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T21:33:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8358944409,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHyO16Z",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8358944409",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T21:41:51Z"
    },
    {
      "event": "commented",
      "id": 1404261767,
      "node_id": "IC_kwDOAP4Jqs5Ts1WH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1404261767",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T21:42:23Z",
      "updated_at": "2023-01-25T21:42:23Z",
      "author_association": "MEMBER",
      "body": "Updated 1b0e0ba27a57cf74fdd0f3c06e1441c44119883d -> 56678206f179046c3fc95569d08037127b03eac4 ([pr1113.33](https://github.com/hebasto/secp256k1/commits/pr1113.33) -> [pr1113.35](https://github.com/hebasto/secp256k1/commits/pr1113.35), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.33..pr1113.35)):\r\n\r\n- addressed @sipa's [comment](https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1087070860)\r\n- minor improvements",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1404261767",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8358948578,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAHyO27i",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8358948578",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T21:42:24Z"
    },
    {
      "event": "subscribed",
      "id": 8358948594,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAHyO27y",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8358948594",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T21:42:24Z"
    },
    {
      "event": "commented",
      "id": 1404272727,
      "node_id": "IC_kwDOAP4Jqs5Ts4BX",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1404272727",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T21:50:59Z",
      "updated_at": "2023-01-25T21:50:59Z",
      "author_association": "MEMBER",
      "body": "A question for discussion:\r\n\r\nCan the default value of the `SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY` option, which is \"AUTO\", be replaced with \"OFF\"? It would mean \"Override is OFF. i.e, no override is applied\".\r\n\r\nIf answer is \"yes\", it would simplify code a bit.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1404272727",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1404792495,
      "node_id": "IC_kwDOAP4Jqs5Tu26v",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1404792495",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T10:12:54Z",
      "updated_at": "2023-01-26T10:12:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Can the default value of the `SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY` option, which is \"AUTO\", be replaced with \"OFF\"? It would mean \"Override is OFF. i.e, no override is applied\".\r\n\r\nSounds reasonable.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1404792495",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8362917396,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHyd_4U",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8362917396",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T10:53:21Z"
    },
    {
      "event": "commented",
      "id": 1404839054,
      "node_id": "IC_kwDOAP4Jqs5TvCSO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1404839054",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T10:54:11Z",
      "updated_at": "2023-01-26T10:54:11Z",
      "author_association": "MEMBER",
      "body": "> > Can the default value of the `SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY` option, which is \"AUTO\", be replaced with \"OFF\"? It would mean \"Override is OFF. i.e, no override is applied\".\r\n> \r\n> Sounds reasonable.\r\n\r\nThanks! Implemented.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1404839054",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8362938329,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHyeE_Z",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8362938329",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T10:56:26Z"
    },
    {
      "event": "commented",
      "id": 1404870443,
      "node_id": "IC_kwDOAP4Jqs5TvJ8r",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1404870443",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T11:23:19Z",
      "updated_at": "2023-01-26T11:23:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "Note: I'm pretty busy this week and the next week, but I will certainly come back to this afterward. (Of course, feel free to merge this without me if you feel it's ready!) ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1404870443",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1405150215,
      "node_id": "IC_kwDOAP4Jqs5TwOQH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1405150215",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T15:07:44Z",
      "updated_at": "2023-01-26T15:07:44Z",
      "author_association": "MEMBER",
      "body": "An [example](https://github.com/hebasto/secp256k1-CMake-example/blob/main/CMakeLists.txt) of the installed library integration into another project has been added to the PR description:\r\n```CMake\r\nfind_package(secp256k1 0.2.1 EXACT REQUIRED CONFIG)\r\n```",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1405150215",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1406333866,
      "node_id": "IC_kwDOAP4Jqs5T0vOq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1406333866",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T10:52:57Z",
      "updated_at": "2023-01-27T11:50:40Z",
      "author_association": "MEMBER",
      "body": "Another question to discuss:\r\n\r\nCurrently, the config files, which are used by other projects to integrated secp256k1 library, are named as follows:\r\n```sh\r\n$ ls -1 lib/cmake/secp256k1/\r\nsecp256k1Config.cmake\r\nsecp256k1ConfigVersion.cmake\r\nsecp256k1Targets.cmake\r\nsecp256k1Targets-release.cmake\r\n```\r\n\r\nConsidering that the project name is lowercase only, i.e., `secp256k1`, would it better to stick to lowercase for config files as well?\r\nSuch a case is well [documented](https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#config-file-packages) by CMake. That means config file names would be as follows:\r\n```\r\nsecp256k1-config.cmake\r\nsecp256k1-config-version.cmake\r\nsecp256k1-targets.cmake\r\nsecp256k1-targets-release.cmake  # or secp256k1-targets-debug.cmake\r\n```\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1406333866",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1406468031,
      "node_id": "IC_kwDOAP4Jqs5T1P-_",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1406468031",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T12:48:54Z",
      "updated_at": "2023-01-27T12:48:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "I guess, lowercase looks more natural to me for a C library, but I don't think I have a real preference here.\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1406468031",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8374173096,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHzI72o",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8374173096",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T14:58:36Z"
    },
    {
      "event": "commented",
      "id": 1406627459,
      "node_id": "IC_kwDOAP4Jqs5T126D",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1406627459",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T15:04:23Z",
      "updated_at": "2023-01-27T15:04:23Z",
      "author_association": "MEMBER",
      "body": "Updated b90a743f0ce937fc1cf843017e68070ef5db8a07 -> 2540c6e055278e21e6d944725dbac52da2cb3faf ([pr1113.36](https://github.com/hebasto/secp256k1/commits/pr1113.36) -> [pr1113.37](https://github.com/hebasto/secp256k1/commits/pr1113.37), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.36..pr1113.37)):\r\n\r\n- config files are [lowercase](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1406468031) now\r\n- minor improvements of installation code",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1406627459",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1407138753,
      "node_id": "IC_kwDOAP4Jqs5T3zvB",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1407138753",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T22:26:55Z",
      "updated_at": "2023-01-27T22:26:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "At the moment, automake will add `-DENABLE_MODULE_EXTRAKEYS=1` and cmake will add `-DENABLE_MODULE_EXTRAKEYS` (and similarly for similar variables). Both definitions work fine with our current source, but we should probably make sure that the definitions are equivalent to avoid subtle issues. I don't think I have a strong preference. I think the simplest fix is to make cmake define those variables to be explicitly `1`.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1407138753",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8379345033,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAHzcqiJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8379345033",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-28T09:02:58Z"
    },
    {
      "event": "commented",
      "id": 1407346335,
      "node_id": "IC_kwDOAP4Jqs5T4maf",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1407346335",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-28T09:06:45Z",
      "updated_at": "2023-01-28T09:06:45Z",
      "author_association": "MEMBER",
      "body": "Updated 2540c6e055278e21e6d944725dbac52da2cb3faf -> 0f996c7ee0fcf19121f68db2b46cbe2fb043a390 ([pr1113.37](https://github.com/hebasto/secp256k1/commits/pr1113.37) -> [pr1113.38](https://github.com/hebasto/secp256k1/commits/pr1113.38), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.37..pr1113.38)):\r\n\r\n- addressed @real-or-random's [comment](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1407138753)\r\n- fixed the `make test` target when `ctime_tests` was compiled with Valgrind support",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1407346335",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8379349858,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAHzcrti",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8379349858",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-28T09:06:46Z"
    },
    {
      "event": "subscribed",
      "id": 8379349860,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAHzcrtk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8379349860",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-28T09:06:46Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-28T09:46:28Z",
      "updated_at": "2023-01-28T09:46:28Z",
      "source": {
        "issue": {
          "id": 1560223248,
          "node_id": "PR_kwDOAP4Jqs5Is5HE",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1198",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1198/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1198/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1198/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1198",
          "number": 1198,
          "state": "open",
          "state_reason": null,
          "title": "Add x-only ECDH support to ecdh module",
          "body": "Built on top of #1118, this adds API calls to the ecdh module to support x-only ECDH. When pubkey decompression is included in the ECDH benchmark, it's roughly 10% faster to do x-only ECDH.\r\n\r\nThe default hash function included uses SHA256(shared_x_coordinate) as output function.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 4975353639,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI3fJw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/feature",
              "name": "feature",
              "description": "",
              "color": "731E95",
              "default": false
            },
            {
              "id": 4975389731,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI5sIw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/performance",
              "name": "performance",
              "description": "",
              "color": "DE3CCC",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1198",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1198",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1198.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1198.patch"
          },
          "created_at": "2023-01-27T18:32:46Z",
          "updated_at": "2023-05-11T16:38:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1408719512,
      "node_id": "IC_kwDOAP4Jqs5T91qY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1408719512",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-30T14:27:31Z",
      "updated_at": "2023-01-30T14:28:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Can we add a `make check` that does the same as `make test`? I think it will be confusing to switch between system and having to remember whether it's `test` or `check`.\r\n\r\nMaybe this does the job. I haven't tried it.\r\n```\r\n  add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND})\r\n```\r\n\r\nAlso, is it possible to exclude ctime_tests from `make test`? They're not run by autotool's `make check`. (See https://github.com/bitcoin-core/secp256k1/pull/723 for background.)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1408719512",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1408926815,
      "node_id": "IC_kwDOAP4Jqs5T-oRf",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1408926815",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-30T16:19:35Z",
      "updated_at": "2023-01-30T16:19:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "We discussed in IRC that we want to mark CMake experimental in the README until we have full docs of all the options plus CI parity (i.e, we test roughly the same amount of configurations through CI for CMake as for Autotools). Both should be done after this PR.\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1408926815",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8393492489,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAH0SogJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8393492489",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-30T23:25:30Z"
    },
    {
      "event": "commented",
      "id": 1409523311,
      "node_id": "IC_kwDOAP4Jqs5UA55v",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1409523311",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-30T23:35:34Z",
      "updated_at": "2023-01-30T23:47:47Z",
      "author_association": "MEMBER",
      "body": "Updated 0f996c7ee0fcf19121f68db2b46cbe2fb043a390 -> 3b32cc5928f68429af3d3a5b1a985d7d88597e18 ([pr1113.38](https://github.com/hebasto/secp256k1/commits/pr1113.38) -> [pr1113.39](https://github.com/hebasto/secp256k1/commits/pr1113.39)):\r\n\r\n- rebased\r\n- addressed @real-or-random's [comment](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1408719512):\r\n> Can we add a `make check` that does the same as `make test`? \r\n\r\n> Also, is it possible to exclude ctime_tests from `make test`?\r\n\r\n- addressed [comments](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1408926815) from today's IRC meeting:\r\n> mark CMake experimental in the README until we have full docs of all the options plus CI parity\r\n\r\n- fixed linking of `exhaustive_tests`\r\n- a few minor improvements\r\n\r\n---\r\n\r\nA note: linking of `bench` and `ctime_tests` binaries has been implemented wrt #1203.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1409523311",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8393554188,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAH0S3kM",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8393554188",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-30T23:35:35Z"
    },
    {
      "event": "subscribed",
      "id": 8393554194,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAH0S3kS",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8393554194",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-30T23:35:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8393568715,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAH0S7HL",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8393568715",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-30T23:38:12Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-31T13:50:38Z",
      "updated_at": "2023-01-31T13:50:38Z",
      "source": {
        "issue": {
          "id": 1564350440,
          "node_id": "PR_kwDOAP4Jqs5I6nhf",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1204",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1204/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1204/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1204/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1204",
          "number": 1204,
          "state": "closed",
          "state_reason": null,
          "title": "[POC] cmake: Add option to run `include-what-you-use` with compiler",
          "body": "[IWYU](https://include-what-you-use.org/) could be useful for developers, e.g., #924 etc.\r\n\r\nExample of usage on Ubuntu 22.04:\r\n```\r\n$ cmake -S . -B build -DSECP256K1_ENABLE_IWYU=ON -DCMAKE_C_COMPILER=clang\r\n$ cmake --build build\r\n```",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1204",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1204",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1204.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1204.patch"
          },
          "closed_at": "2023-04-28T17:39:32Z",
          "created_at": "2023-01-31T13:50:38Z",
          "updated_at": "2023-06-06T08:16:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1420430281,
      "node_id": "IC_kwDOAP4Jqs5UqgvJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1420430281",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T09:08:26Z",
      "updated_at": "2023-02-07T09:08:26Z",
      "author_association": "MEMBER",
      "body": "Anything to add / remove / amend? :)",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1420430281",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8457173615,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAH4Fjpv",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8457173615",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T11:46:54Z"
    },
    {
      "event": "commented",
      "id": 1420645598,
      "node_id": "IC_kwDOAP4Jqs5UrVTe",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1420645598",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T11:49:04Z",
      "updated_at": "2023-02-07T11:49:04Z",
      "author_association": "MEMBER",
      "body": "Updated c90ee43658fa61a420ed14bd803a026d79bca4b7 -> 6ec8d6f4c2b24568e4d132d428900d837d402cbc ([pr1113.40](https://github.com/hebasto/secp256k1/commits/pr1113.40) -> [pr1113.41](https://github.com/hebasto/secp256k1/commits/pr1113.41)):\r\n\r\n- rebased on top of the #1206\r\n- mirrored changes from #1206",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1420645598",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-14T22:00:55Z",
      "updated_at": "2023-02-14T22:00:55Z",
      "source": {
        "issue": {
          "id": 1558819715,
          "node_id": "PR_kwDOC4_XZM5IoH84",
          "url": "https://api.github.com/repos/chaincodelabs/libmultiprocess/issues/83",
          "repository_url": "https://api.github.com/repos/chaincodelabs/libmultiprocess",
          "labels_url": "https://api.github.com/repos/chaincodelabs/libmultiprocess/issues/83/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/chaincodelabs/libmultiprocess/issues/83/comments",
          "events_url": "https://api.github.com/repos/chaincodelabs/libmultiprocess/issues/83/events",
          "html_url": "https://github.com/chaincodelabs/libmultiprocess/pull/83",
          "number": 83,
          "state": "closed",
          "state_reason": null,
          "title": "Introduce `clang-tidy` and optimize code",
          "body": "This PR:\r\n- introduces the `-DLibmultiprocess_ENABLE_CLANG_TIDY` configuration option, which allows to \"run clang-tidy with the compiler\"\r\n- fixes some `clang-tidy`'s warnings, which are easy-to-review and useful on their own",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/chaincodelabs/libmultiprocess/pulls/83",
            "html_url": "https://github.com/chaincodelabs/libmultiprocess/pull/83",
            "diff_url": "https://github.com/chaincodelabs/libmultiprocess/pull/83.diff",
            "patch_url": "https://github.com/chaincodelabs/libmultiprocess/pull/83.patch"
          },
          "closed_at": "2023-02-15T15:25:50Z",
          "created_at": "2023-01-26T21:43:05Z",
          "updated_at": "2023-02-15T15:31:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 8575824138,
      "node_id": "REFE_lADOAP4Jqs5MuhVxzwAAAAH_KLEK",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8575824138",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cbd25559343add1fba511d1f0084be7f32b85549",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/cbd25559343add1fba511d1f0084be7f32b85549",
      "created_at": "2023-02-21T23:41:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8578852197,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAH_VuVl",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8578852197",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T09:23:25Z"
    },
    {
      "event": "commented",
      "id": 1439689959,
      "node_id": "IC_kwDOAP4Jqs5Vz-zn",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1439689959",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T09:27:01Z",
      "updated_at": "2023-02-22T09:27:01Z",
      "author_association": "MEMBER",
      "body": "Updated 6ec8d6f4c2b24568e4d132d428900d837d402cbc -> 812cc7e248074f568da85306395ce8a423867885 ([pr1113.41](https://github.com/hebasto/secp256k1/commits/pr1113.41) -> [pr1113.42](https://github.com/hebasto/secp256k1/commits/pr1113.42)):\r\n\r\n- rebased on top of the #1209\r\n- mirrored changes from #1209\r\n\r\nParticularly, the following commands won't fire `LNK4217` warnings on Windows:\r\n```\r\n>cmake -G \"Visual Studio 17 2022\" -A x64 -S . -B build -DSECP256K1_BUILD_SHARED=OFF -DSECP256K1_BUILD_EXAMPLES=ON\r\n>cmake --build build --config Release",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1439689959",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T09:29:43Z",
      "updated_at": "2023-02-22T09:29:43Z",
      "source": {
        "issue": {
          "id": 1573253318,
          "node_id": "PR_kwDOAP4Jqs5JYBvX",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1209",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1209/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1209/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1209/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1209",
          "number": 1209,
          "state": "closed",
          "state_reason": null,
          "title": "build: Add SECP256K1_API_VAR to fix importing variables from DLLs",
          "body": "... and more Windows fixes, please see the individual commits.\r\n\r\nThe fixed issues were discovered in https://github.com/bitcoin-core/secp256k1/pull/1198.\r\n",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1209",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1209",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1209.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1209.patch"
          },
          "closed_at": "2023-02-21T23:41:21Z",
          "created_at": "2023-02-06T20:46:38Z",
          "updated_at": "2023-06-28T14:24:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "mattiaferrari02",
        "id": 65465360,
        "node_id": "MDQ6VXNlcjY1NDY1MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/65465360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mattiaferrari02",
        "html_url": "https://github.com/mattiaferrari02",
        "followers_url": "https://api.github.com/users/mattiaferrari02/followers",
        "following_url": "https://api.github.com/users/mattiaferrari02/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mattiaferrari02/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mattiaferrari02/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mattiaferrari02/subscriptions",
        "organizations_url": "https://api.github.com/users/mattiaferrari02/orgs",
        "repos_url": "https://api.github.com/users/mattiaferrari02/repos",
        "events_url": "https://api.github.com/users/mattiaferrari02/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mattiaferrari02/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-27T16:40:42Z",
      "updated_at": "2023-02-27T16:40:42Z",
      "source": {
        "issue": {
          "id": 1601524971,
          "node_id": "PR_kwDOIT7-t85K2Zs8",
          "url": "https://api.github.com/repos/vulpemventures/react-native-secp256k1-zkp/issues/1",
          "repository_url": "https://api.github.com/repos/vulpemventures/react-native-secp256k1-zkp",
          "labels_url": "https://api.github.com/repos/vulpemventures/react-native-secp256k1-zkp/issues/1/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/vulpemventures/react-native-secp256k1-zkp/issues/1/comments",
          "events_url": "https://api.github.com/repos/vulpemventures/react-native-secp256k1-zkp/issues/1/events",
          "html_url": "https://github.com/vulpemventures/react-native-secp256k1-zkp/pull/1",
          "number": 1,
          "state": "open",
          "state_reason": null,
          "title": "Add functions implementations",
          "body": "Port secp256k1-zkp function implementation to react native using JSI\r\n@tiero \r\n@altafan\r\n@nicofuccella",
          "user": {
            "login": "mattiaferrari02",
            "id": 65465360,
            "node_id": "MDQ6VXNlcjY1NDY1MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/65465360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattiaferrari02",
            "html_url": "https://github.com/mattiaferrari02",
            "followers_url": "https://api.github.com/users/mattiaferrari02/followers",
            "following_url": "https://api.github.com/users/mattiaferrari02/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mattiaferrari02/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mattiaferrari02/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mattiaferrari02/subscriptions",
            "organizations_url": "https://api.github.com/users/mattiaferrari02/orgs",
            "repos_url": "https://api.github.com/users/mattiaferrari02/repos",
            "events_url": "https://api.github.com/users/mattiaferrari02/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mattiaferrari02/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/vulpemventures/react-native-secp256k1-zkp/pulls/1",
            "html_url": "https://github.com/vulpemventures/react-native-secp256k1-zkp/pull/1",
            "diff_url": "https://github.com/vulpemventures/react-native-secp256k1-zkp/pull/1.diff",
            "patch_url": "https://github.com/vulpemventures/react-native-secp256k1-zkp/pull/1.patch"
          },
          "created_at": "2023-02-27T16:27:40Z",
          "updated_at": "2023-03-06T17:08:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-28T13:27:50Z",
      "updated_at": "2023-02-28T13:27:50Z",
      "source": {
        "issue": {
          "id": 1592120360,
          "node_id": "PR_kwDOCIlA6s5KW-FM",
          "url": "https://api.github.com/repos/hebasto/bitcoin/issues/7",
          "repository_url": "https://api.github.com/repos/hebasto/bitcoin",
          "labels_url": "https://api.github.com/repos/hebasto/bitcoin/issues/7/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/hebasto/bitcoin/issues/7/comments",
          "events_url": "https://api.github.com/repos/hebasto/bitcoin/issues/7/events",
          "html_url": "https://github.com/hebasto/bitcoin/pull/7",
          "number": 7,
          "state": "closed",
          "state_reason": null,
          "title": "build: Add CMake-based build system (3 of N)",
          "body": "The parent PR: https://github.com/bitcoin/bitcoin/pull/25797.\r\nThe previous PRs in the staging branch: https://github.com/hebasto/bitcoin/pull/5, https://github.com/hebasto/bitcoin/pull/6.\r\n\r\nThis PR adds the `bitcoind` build target with its dependencies.\r\n\r\nTo get comparable binaries, one can use the following commands:\r\n- with CMake:\r\n```\r\ncmake -S . -B build -DCMAKE_CXX_FLAGS=\"-g -O2\"\r\ncmake --build build\r\n```\r\n- with Autotools:\r\n```\r\n./autogen.sh\r\n./configure --disable-hardening --disable-wallet --disable-zmq --without-miniupnpc --without-natpmp --disable-usdt\r\nmake clean\r\nmake -C src bitcoind\r\n```\r\n---\r\n\r\n**Windows-specific notes for reviewers**\r\n\r\nWindows MSVC builds use dependencies provided by the [vcpkg](https://vcpkg.io) package manager. To install them, run:\r\n```cmd\r\nvcpkg --triplet=x64-windows-static install boost-multi-index boost-signals2 libevent\r\n```\r\n\r\nTo configure, a toolchain file and a triplet must be specified:\r\n```cmd\r\ncmake -G \"Visual Studio 17 2022\" -A x64 --toolchain C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows-static -S . -B build\r\n```\r\n\r\nThen, build the `all` target as usual:\r\n```cmd\r\ncmake --build build --config Debug\r\n```",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "OWNER",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/hebasto/bitcoin/pulls/7",
            "html_url": "https://github.com/hebasto/bitcoin/pull/7",
            "diff_url": "https://github.com/hebasto/bitcoin/pull/7.diff",
            "patch_url": "https://github.com/hebasto/bitcoin/pull/7.patch"
          },
          "closed_at": "2023-03-02T00:02:41Z",
          "created_at": "2023-02-20T16:05:32Z",
          "updated_at": "2023-03-02T00:02:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1323437033,
      "node_id": "PRR_kwDOAP4Jqs5O4gvp",
      "url": null,
      "actor": null,
      "commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I again have a bunch of comments, which look like the PR is not mature, but the opposite is the case. These are really \"advanced\" comments and corner cases, and none of the comments are particularly important.\r\n\r\nI'd really like to see this merged within the next days, with or without these comments addresses. This is just an experimental build system. If a build fails, nothing bad happens and we still have the other system. But having this in the next release will be wonderful to get more feedback from using this in the wild.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1323437033",
      "submitted_at": "2023-03-03T14:35:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "commented",
      "id": 1453785807,
      "node_id": "IC_kwDOAP4Jqs5WpwLP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1453785807",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T16:29:49Z",
      "updated_at": "2023-03-09T12:53:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "edit: moved to https://github.com/bitcoin-core/secp256k1/issues/1224 ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1453785807",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8661428864,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIEQuqA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8661428864",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T16:29:49Z"
    },
    {
      "event": "subscribed",
      "id": 8661428874,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIEQuqK",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8661428874",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T16:29:49Z"
    },
    {
      "event": "mentioned",
      "id": 8661428890,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIEQuqa",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8661428890",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T16:29:49Z"
    },
    {
      "event": "subscribed",
      "id": 8661428903,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIEQuqn",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8661428903",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T16:29:49Z"
    },
    {
      "event": "commented",
      "id": 1454016316,
      "node_id": "IC_kwDOAP4Jqs5Wqoc8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1454016316",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T19:23:30Z",
      "updated_at": "2023-03-03T19:23:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "@real-or-random Very helpful, thanks.\r\n\r\nSince you probably didn't see over where we're reviewing, here's the current approach we're considering for the CMake switchover in Core, in case it's helpful for you here: https://github.com/hebasto/bitcoin/pull/7#discussion_r1120165874\r\n\r\ntl;dr: We're starting by self-building libsecp (in addition to leveldb/crc32c) during the initial CMake merge, in order to keep the review as simple as possible. We'll then switch over to invoking the downstream libsecp CMake once it's merged and ready. That way there's no pressure in either direction and both steps are simpler.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1454016316",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8662799376,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIEV9QQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8662799376",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T19:23:31Z"
    },
    {
      "event": "subscribed",
      "id": 8662799387,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIEV9Qb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8662799387",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T19:23:31Z"
    },
    {
      "event": "commented",
      "id": 1454860384,
      "node_id": "IC_kwDOAP4Jqs5Wt2hg",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1454860384",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-04T20:07:50Z",
      "updated_at": "2023-03-04T20:07:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "I pushed a bunch of fixup commits here: https://github.com/real-or-random/secp256k1/tree/220628-cmake-tim These address all of my comments (except https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124265598, but that's rather a question than a comment :) ).\r\n\r\nFrom my side, this is ready to merge after these fixes\r\n\r\n I think some of this could still be simplified and made a bit more idiomatic, but this should be done after merging this. In particular, making things more cmake-ish will mean making them less autotools-ish. And this will only increase the differences between the two build systems, which isn't a good idea for the initial PR.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1454860384",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "reviewed",
      "id": 1326792970,
      "node_id": "PRR_kwDOAP4Jqs5PFUEK",
      "url": null,
      "actor": null,
      "commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Looking good to me % the outstanding comments and a few new ones.\r\n\r\nA request: Would you mind doing a preview of this plugged into Core and replacing our initial internal implementation? I'd like to have at least some confidence that downstream can still build correctly.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1326792970",
      "submitted_at": "2023-03-06T17:33:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8679196636,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAIFUgfc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8679196636",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T21:56:29Z"
    },
    {
      "event": "commented",
      "id": 1457095241,
      "node_id": "IC_kwDOAP4Jqs5W2YJJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1457095241",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T22:16:59Z",
      "updated_at": "2023-03-06T22:16:59Z",
      "author_association": "MEMBER",
      "body": "@real-or-random @theuni \r\n\r\nThank you so much for thorough reviewing!\r\n\r\nUpdated 812cc7e248074f568da85306395ce8a423867885 -> f45c4fb921efc310f8a4c3bee4253c19ac997d55 ([pr1113.42](https://github.com/hebasto/secp256k1/commits/pr1113.42) -> [pr1113.43](https://github.com/hebasto/secp256k1/commits/pr1113.43)).\r\n\r\n1. Implemented changes [suggested](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1454860384) by @real-or-random in his [branch](https://github.com/real-or-random/secp256k1/tree/220628-cmake-tim) with a few exceptions:\r\n- https://github.com/real-or-random/secp256k1/commit/090e9acd629ddfe20d6ef80a243e76ccf8b2acbc not implemented as no justification provided (sorry if I missed it)\r\n- documentation remains unchanged, see [this](https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124301931) discussion\r\n- https://github.com/real-or-random/secp256k1/commit/d709495e56e2859f2b925b5b3c798c75ecec254e rewritten correctly\r\n- https://github.com/real-or-random/secp256k1/commit/772894d44a365026ccec47364fcd03a9ff13d0e0 become more robust\r\n- https://github.com/real-or-random/secp256k1/commit/aa97fbd75e76e028775a1ce878190eea325890db not implemented because it can not defined both `CMAKE_BUILD_TYPE` and `CMAKE_CONFIGURATION_TYPES`\r\n\r\n2. Fixed a bug in `FindValgrind.cmake` -- s/`APPLE`/`CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\"`/\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8679388141,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIFVPPt",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8679388141",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T22:16:59Z"
    },
    {
      "event": "subscribed",
      "id": 8679388146,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIFVPPy",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8679388146",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T22:16:59Z"
    },
    {
      "event": "mentioned",
      "id": 8679388159,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIFVPP_",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8679388159",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T22:16:59Z"
    },
    {
      "event": "subscribed",
      "id": 8679388169,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIFVPQJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8679388169",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T22:16:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8679398151,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAIFVRsH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8679398151",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T22:18:25Z"
    },
    {
      "event": "commented",
      "id": 1457132122,
      "node_id": "IC_kwDOAP4Jqs5W2hJa",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1457132122",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T22:36:08Z",
      "updated_at": "2023-03-06T22:36:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "> [real-or-random@090e9ac](https://github.com/real-or-random/secp256k1/commit/090e9acd629ddfe20d6ef80a243e76ccf8b2acbc) not implemented as no justification provided (sorry if I missed it)\r\n\r\nOh yes, I didn't comment here. My rationale for removing this was that it's another difference to autotools. Or does autotools set /MT or /MD? If no, I guess we should keep the defaults here and put it on the list of things to care about later.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457132122",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1457191135,
      "node_id": "IC_kwDOAP4Jqs5W2vjf",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1457191135",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T23:11:46Z",
      "updated_at": "2023-03-06T23:11:46Z",
      "author_association": "MEMBER",
      "body": "> > [real-or-random@090e9ac](https://github.com/real-or-random/secp256k1/commit/090e9acd629ddfe20d6ef80a243e76ccf8b2acbc) not implemented as no justification provided (sorry if I missed it)\r\n> \r\n> Oh yes, I didn't comment here. My rationale for removing this was that it's another difference to autotools. Or does autotools set /MT or /MD?\r\n\r\nNo, it doesn't.\r\n\r\n> If no, I guess we should keep the defaults here and put it on the list of things to care about later.\r\n\r\nOtherwise, CMake [will use](https://cmake.org/cmake/help/latest/variable/CMAKE_MSVC_RUNTIME_LIBRARY.html) its default value. My intention is to make choosing a MSVC runtime library explicit. Even, if we prefer the default value, which is not the case now.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457191135",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1457212617,
      "node_id": "IC_kwDOAP4Jqs5W20zJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1457212617",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T23:32:32Z",
      "updated_at": "2023-03-06T23:32:32Z",
      "author_association": "MEMBER",
      "body": "@theuni \r\n> A request: Would you mind doing a preview of this plugged into Core and replacing our initial internal implementation? I'd like to have at least some confidence that downstream can still build correctly.\r\n\r\nGoing to work on it tomorrow.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457212617",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8679969688,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIFXdOY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8679969688",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T23:32:32Z"
    },
    {
      "event": "subscribed",
      "id": 8679969694,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIFXdOe",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8679969694",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T23:32:32Z"
    },
    {
      "event": "commented",
      "id": 1458005771,
      "node_id": "IC_kwDOAP4Jqs5W52cL",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1458005771",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T11:28:49Z",
      "updated_at": "2023-03-07T11:28:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Otherwise, CMake [will use](https://cmake.org/cmake/help/latest/variable/CMAKE_MSVC_RUNTIME_LIBRARY.html) its default value. My intention is to make choosing a MSVC runtime library explicit. Even, if we prefer the default value, which is not the case now.\r\n\r\nI'm not sure if making it explicit is better. Defaults exists for a reason, and we shouldn't try to be more clever unless we have a good reason to believe that we're more clever. \r\n\r\nAfter having thought about this more, I think the primary concern is that users should be able to choose `CMAKE_MSVC_RUNTIME_LIBRARY`. Since we don't distribute binaries, the actual value of `CMAKE_MSVC_RUNTIME_LIBRARY` that we set doesn't matter that much. But it seems that there's no value that is optimal in all cases, so users should be able to ask for their preference.\r\n\r\nNevertheless, as for reasonable defaults, [my impression is that /MD has fewer issues and is what most users would expect, in particular from a library](https://stackoverflow.com/questions/757418/should-i-compile-with-md-or-mt?noredirect=1&lq=1) (see also https://github.com/jedisct1/libsodium/discussions/1215 ), and I guess there's a reason why the CMake default is `MultiThreadedDLL` (where the DLL part corresponds to /MD)\r\n\r\nThat means I suggest we should do the following:\r\n - Respect whatever the user passes for `CMAKE_MSVC_RUNTIME_LIBRARY` on the command line, and probably even make it a `CACHE` variable. \r\n - If the user doesn't pass anything, do one of the following, in descending personal preference:  Stick with CMake default (i.e., don't set anything) or set CMake's /MD default explicitly. (Both options are effectively the same until CMake changes its defaults, which is unlikely...) \r\n\r\nDoes this make sense to you?",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458005771",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8685133363,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAIFrJ4z",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8685133363",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T12:24:34Z"
    },
    {
      "event": "commented",
      "id": 1458085976,
      "node_id": "IC_kwDOAP4Jqs5W6KBY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1458085976",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T12:27:21Z",
      "updated_at": "2023-03-07T12:27:21Z",
      "author_association": "MEMBER",
      "body": "Updated 8793b1b3e48116ddba48c6fec5ef68997466bfdd -> b47a5e3e9defcd0caffdd44c0c5b0c56e6596466 ([pr1113.44](https://github.com/hebasto/secp256k1/commits/pr1113.44) -> [pr1113.45](https://github.com/hebasto/secp256k1/commits/pr1113.45), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.44..pr1113.45)):\r\n\r\n- applied  https://github.com/real-or-random/secp256k1/commit/090e9acd629ddfe20d6ef80a243e76ccf8b2acbc",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458085976",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1458118478,
      "node_id": "IC_kwDOAP4Jqs5W6R9O",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1458118478",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T12:51:32Z",
      "updated_at": "2023-03-07T13:29:51Z",
      "author_association": "CONTRIBUTOR",
      "body": ">   * applied  [real-or-random@090e9ac](https://github.com/real-or-random/secp256k1/commit/090e9acd629ddfe20d6ef80a243e76ccf8b2acbc)\r\n\r\nOk, this gives the user full control, nice.\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458118478",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "reviewed",
      "id": 1328468501,
      "node_id": "PRR_kwDOAP4Jqs5PLtIV",
      "url": null,
      "actor": null,
      "commit_id": "b47a5e3e9defcd0caffdd44c0c5b0c56e6596466",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I was about to ACK this, but my testing found one more issue...",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1328468501",
      "submitted_at": "2023-03-07T13:28:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8686058011,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAIFurob",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8686058011",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T13:49:51Z"
    },
    {
      "event": "commented",
      "id": 1458211904,
      "node_id": "IC_kwDOAP4Jqs5W6oxA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1458211904",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T13:53:01Z",
      "updated_at": "2023-03-07T14:02:26Z",
      "author_association": "MEMBER",
      "body": "Updated b47a5e3e9defcd0caffdd44c0c5b0c56e6596466 -> 95779fd91f0b59f4affc19012335b6791320719d ([pr1113.45](https://github.com/hebasto/secp256k1/commits/pr1113.45) -> [pr1113.46](https://github.com/hebasto/secp256k1/commits/pr1113.46), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.45..pr1113.46)):\r\n\r\n- addressed https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127813309\r\n- addressed https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127856040",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458211904",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "commented",
      "id": 1458255047,
      "node_id": "IC_kwDOAP4Jqs5W6zTH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1458255047",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T14:18:36Z",
      "updated_at": "2023-03-07T14:18:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 95779fd91f0b59f4affc19012335b6791320719d diff looks good, and I tested this with different CMake generators and many different settings\r\n\r\nAll comments have been addressed or are [tracked for possible future PRs](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1453785807), and the ones which are tracked should really be dealt with in separate PRs.\r\n\r\n\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458255047",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "reviewed",
      "id": 1328593852,
      "node_id": "PRR_kwDOAP4Jqs5PMLu8",
      "url": null,
      "actor": null,
      "commit_id": "95779fd91f0b59f4affc19012335b6791320719d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1328593852",
      "submitted_at": "2023-03-07T14:18:50Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "commented",
      "id": 1458368885,
      "node_id": "IC_kwDOAP4Jqs5W7PF1",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1458368885",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T15:29:05Z",
      "updated_at": "2023-03-07T15:31:58Z",
      "author_association": "MEMBER",
      "body": "> @theuni\r\n> \r\n> > A request: Would you mind doing a preview of this plugged into Core and replacing our initial internal implementation? I'd like to have at least some confidence that downstream can still build correctly.\r\n> \r\n> Going to work on it tomorrow.\r\n\r\n[Here](https://github.com/hebasto/bitcoin/commits/230307-cmake-D/secp-DEMO) is a branch which switches the recent https://github.com/hebasto/bitcoin/pull/10 to this implementation (configure with `-DCMAKE_BUILD_TYPE=Debug`).",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458368885",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8687221464,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIFzHrY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8687221464",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T15:29:05Z"
    },
    {
      "event": "subscribed",
      "id": 8687221478,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIFzHrm",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8687221478",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T15:29:05Z"
    },
    {
      "event": "reviewed",
      "id": 1329494867,
      "node_id": "PRR_kwDOAP4Jqs5PPntT",
      "url": null,
      "actor": null,
      "commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1329494867",
      "submitted_at": "2023-03-07T20:42:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "reviewed",
      "id": 1329498360,
      "node_id": "PRR_kwDOAP4Jqs5PPoj4",
      "url": null,
      "actor": null,
      "commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1329498360",
      "submitted_at": "2023-03-07T20:44:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "reviewed",
      "id": 1329502124,
      "node_id": "PRR_kwDOAP4Jqs5PPpes",
      "url": null,
      "actor": null,
      "commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1329502124",
      "submitted_at": "2023-03-07T20:46:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8690500676,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAIF_oRE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8690500676",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T21:08:00Z"
    },
    {
      "event": "commented",
      "id": 1458878616,
      "node_id": "IC_kwDOAP4Jqs5W9LiY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1458878616",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T21:09:52Z",
      "updated_at": "2023-03-07T21:09:52Z",
      "author_association": "MEMBER",
      "body": "Updated 95779fd91f0b59f4affc19012335b6791320719d -> 752ae70e1d77aff39498dcb6e0e7e162c392f6cb ([pr1113.46](https://github.com/hebasto/secp256k1/commits/pr1113.46) -> [pr1113.47](https://github.com/hebasto/secp256k1/commits/pr1113.47), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.46..pr1113.47)):\r\n\r\n- addressed @sipa's https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128562391",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458878616",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8690515434,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIF_r3q",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8690515434",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T21:09:53Z"
    },
    {
      "event": "subscribed",
      "id": 8690515449,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIF_r35",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8690515449",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T21:09:53Z"
    },
    {
      "event": "reviewed",
      "id": 1329548058,
      "node_id": "PRR_kwDOAP4Jqs5PP0sa",
      "url": null,
      "actor": null,
      "commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1329548058",
      "submitted_at": "2023-03-07T21:16:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "commented",
      "id": 1458985015,
      "node_id": "IC_kwDOAP4Jqs5W9lg3",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1458985015",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T22:48:41Z",
      "updated_at": "2023-03-07T22:48:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Building with:\r\n`cmake . -B build2/ -DCMAKE_BUILD_TYPE=Debug -DSECP256K1_BUILD_STATIC=0 -DSECP256K1_BUILD_SHARED=1`\r\nI get:\r\n```\r\n/usr/bin/ld: CMakeFiles/precomputed.dir/precomputed_ecmult.c.o: relocation R_X86_64_PC32 against symbol `stderr@@GLIBC_2.2.5' can not be used when making a shared object; recompile with -fPIC\r\n```\r\n\r\nFixed with:\r\n```diff\r\ndiff --git a/src/CMakeLists.txt b/src/CMakeLists.txt\r\nindex f07855da..31dbb9b3 100644\r\n--- a/src/CMakeLists.txt\r\n+++ b/src/CMakeLists.txt\r\n@@ -23,2 +23,5 @@ add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL\r\n )\r\n+get_target_property(USE_PIC ${PROJECT_NAME} POSITION_INDEPENDENT_CODE)\r\n+set_target_properties(precomputed PROPERTIES POSITION_INDEPENDENT_CODE ${USE_PIC})\r\n+\r\n target_include_directories(${PROJECT_NAME} INTERFACE\r\n```",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458985015",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "reviewed",
      "id": 1329676552,
      "node_id": "PRR_kwDOAP4Jqs5PQUEI",
      "url": null,
      "actor": null,
      "commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1329676552",
      "submitted_at": "2023-03-07T22:50:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8695202942,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAIGRkR-",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8695202942",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T10:35:24Z"
    },
    {
      "event": "commented",
      "id": 1459964844,
      "node_id": "IC_kwDOAP4Jqs5XBUus",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1459964844",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T10:40:27Z",
      "updated_at": "2023-03-08T10:40:27Z",
      "author_association": "MEMBER",
      "body": "Updated 752ae70e1d77aff39498dcb6e0e7e162c392f6cb -> a846de12bae294f8f2877c585e57708949bec7b4 ([pr1113.47](https://github.com/hebasto/secp256k1/commits/pr1113.47) -> [pr1113.48](https://github.com/hebasto/secp256k1/commits/pr1113.48), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.47..pr1113.48)):\r\n\r\n- addressed @theuni's https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458985015",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1459964844",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8695241922,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIGRtzC",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8695241922",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T10:40:28Z"
    },
    {
      "event": "subscribed",
      "id": 8695241935,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIGRtzP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8695241935",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T10:40:28Z"
    },
    {
      "event": "reviewed",
      "id": 1330670254,
      "node_id": "PRR_kwDOAP4Jqs5PUGqu",
      "url": null,
      "actor": null,
      "commit_id": "a846de12bae294f8f2877c585e57708949bec7b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1330670254",
      "submitted_at": "2023-03-08T13:28:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "reviewed",
      "id": 1330670552,
      "node_id": "PRR_kwDOAP4Jqs5PUGvY",
      "url": null,
      "actor": null,
      "commit_id": "a846de12bae294f8f2877c585e57708949bec7b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK mod nit",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1330670552",
      "submitted_at": "2023-03-08T13:28:54Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDU0NjhkNzA5NjQ0ODIzYjYzMDIxNDFmZjkzZDBiOTQ2YjcwZGVmNGE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5468d709644823b6302141ff93d0b946b70def4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5468d709644823b6302141ff93d0b946b70def4a",
      "tree": {
        "sha": "dd7ce5a704412fa39c86a63159c7611bd30feeab",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/dd7ce5a704412fa39c86a63159c7611bd30feeab"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dd7ce5a704412fa39c86a63159c7611bd30feeab\nparent cbd25559343add1fba511d1f0084be7f32b85549\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1678282396 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1678282396 +0000\n\nbuild: Add CMake-based build system\n\nCo-authored-by: Tim Ruffing <crypto@timruffing.de>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmQIjpwACgkQQQEIES5+\nqB+3rRAAlupNg21mKDBbAPW3w6H7XfD6OZ4xQ2p8RaDe791iMMPN66fN8v5yw3tO\n0BwNRethhD8AUpGLeE3cl+qtuHCVtTRkVnjxz79/vxIjBW73o03uXyf5kBYseHLx\nf6jJiQsJoFdCTM1RahMLc4tSKzPb1/wRkSJ9Nz9d+czgzMc6rwLuuDeQidJENluR\n+ETOOuOfiOtbiBMhZOMZittWtSgL73ON9mdjJJqLAEkJE8IKUFLXmomWEZSENntQ\nn6MtVdBxm2eFhBqtqahUnm+QlOFEMkFAfkZv/fqgN0rlh2Akh0lnKjYbicGL/Zrw\nyDyi1Tzb+Um4cjp3ge1Agf4VuEuBYVVIHSphSryYGZiYOc8AJkMK0HP+pguOmzZU\nOmGmGDHl3boXnbUJbba7dYbggVvDrMyGYevEuNfc9v4t6Ap4gqouyJ1ZBsvgbwdf\nndPbD8Vs1y9C5RcjjL7T1ZFWn6gfyHKGI+Y/+BfUuTrKSwMzbL/fZqg9Aso4eebZ\nmZw9cGJjgSlOJA7StPfBC0PRf85/u6payYPFrl1RlU29h9l6i1o2jwncxfhyYA7n\nlsDYMQzYIZfEQkfELzy6AZ/5KgO5FMNg0IKztrxKwhdAT0epQ31At2Yrj5T2cQ6y\n2VhM1M5KZAF6zVJBcVm5k6SkjeS8oyo21OEaxkPTmDgiCQRzTFw=\n=sfh2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/cbd25559343add1fba511d1f0084be7f32b85549",
          "sha": "cbd25559343add1fba511d1f0084be7f32b85549",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/cbd25559343add1fba511d1f0084be7f32b85549"
        }
      ],
      "message": "build: Add CMake-based build system\n\nCo-authored-by: Tim Ruffing <crypto@timruffing.de>",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-03-08T13:33:16Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-03-08T13:33:16Z"
      },
      "sha": "5468d709644823b6302141ff93d0b946b70def4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDEwNjAyYjAwMzBlNjdjODMwNTk2ZTA4ZmZjNzc1MDM5ZWUwYjI2MDc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/10602b0030e67c830596e08ffc775039ee0b2607",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/10602b0030e67c830596e08ffc775039ee0b2607",
      "tree": {
        "sha": "c431a013ef5643fcfea0617d06e6ab212d58cc23",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/c431a013ef5643fcfea0617d06e6ab212d58cc23"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c431a013ef5643fcfea0617d06e6ab212d58cc23\nparent 5468d709644823b6302141ff93d0b946b70def4a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1678282432 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1678282432 +0000\n\ncmake: Export config files\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmQIjsAACgkQQQEIES5+\nqB8ddA/+IDoEhqP5/PeD/KYtdCg+1xPv1jKm0w4q8XLNrjLFIu9r7iMr/lDCLGNW\ntveg20rGAEn0Mibq2szvMpxiaI/oHUxTl2IoB8e53LI9wJIRUxET4TnwAEJzr56F\n9usOLA6nwFE6897R3msGklW8NL/OCmcQuekNC+NaVBPfNYdp40fF/MZeYh8LGC6N\nxM+qDbEYi3ufDWFrJEz5gPb38YSsth+8N/WF8yU1PS8SFG+ghjxgVjnEYROrZIEe\n38IwD4k/VOqxptkydjMwRYcddXbqNGD5ayh8Z0kvkzIKfGifz05CdRHhnbsvxFbU\n/h8FzFqxk/DT7BfOCi+AGNbX6tf3vN3Xjhm9Cqa67vKJ1RjfB+qg9r1KCFWNcqkq\nkf93aOCh3Un8uAf3EDLF/qnyjEXHwPcyTxq0ZG7MQ4HKlxWEWh4R9RJJeiiI2YD8\n3YVBS8RQPYp8saW6A28Od996drduRUzubU+ujdniNGJQ1x/u2S5KxzDgwTAW7X07\nWBwAUvegEtrb4kDp+afyI5la33wJFVXdCWxDQV7JMDuPcz2DvGfssOY92CQTVBo4\nWYsx9cRMWpdqjMszzcHVJ1n2LAnVScTb05jEMQadaxILwWA3bl1ws9YLIm0/aaDq\nsPPDG6/ulX3m99mzMxEryFxY/cikThKxdzylntKRdkuKDeL6LcE=\n=fIFN\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5468d709644823b6302141ff93d0b946b70def4a",
          "sha": "5468d709644823b6302141ff93d0b946b70def4a",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5468d709644823b6302141ff93d0b946b70def4a"
        }
      ],
      "message": "cmake: Export config files",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-03-08T13:33:52Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-03-08T13:33:52Z"
      },
      "sha": "10602b0030e67c830596e08ffc775039ee0b2607"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGUxZWIzMzcyNGMyY2E0Nzg1NWE4YzFkYWRhNDIxY2FiZGI3MTdmZTc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "tree": {
        "sha": "a8d1c9d7861136b7ef81ccf47b2f1f3ed6d10c70",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/a8d1c9d7861136b7ef81ccf47b2f1f3ed6d10c70"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a8d1c9d7861136b7ef81ccf47b2f1f3ed6d10c70\nparent 10602b0030e67c830596e08ffc775039ee0b2607\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1678282438 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1678282438 +0000\n\nci: Add \"x86_64: Windows (VS 2022)\" task\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmQIjsYACgkQQQEIES5+\nqB85Bw//a8rBBp8GHUyN8gdI/SRlPQGICiWr8lbwuO1w2OjRQlN3Zn27n++Pr1wR\ngwwaQ6AJW1SlTuEGR7Y74+HUv/6IrbMjBem5ze7V0lN+pQN6FP3S1hAPumqTSYqR\nYNf0bmKtq9I6z2fiIk+iKQkbT3Xnlu4ZwfoqT2Kwl+oRfT/ikACZSEeGt0en6a8U\ng3uxcTJZgApqVTNo6Gt4CiKmLOYFgKjt/2V+3t3L3p7JiA3nDzZoKE+0FUlvRuZQ\nRI7rxShLw2z02NOhI8yNRK/fgLmg5CBR7Xv15qa76Z45bf1ypFX8oM+QpVvmABNB\nDUJd6eJhhBp5ovnlti0iNx+2hS9Lo+Jk6fwnNsK0n7c/mRsQfIEeZYwRX9Q+tFO+\nR5K4uDgfo36v3y7ObSl4meLemroP37PJZNhsHwoChUrvaj3vKXR2dsZOpkf4TtEo\n1B1VMidDtrRrz1juOD2fjacLi9ER+/+GsDVeAJox1WkKflzKC8K4DvtrBxsQoxt2\nEuueDHAMr0TC/CGQXS1vZQ3UM6S5FvAL0deh8jMi4To9Y761H6nkeYxnOgHLNl2b\nns49WuCQlPgSoOhXRjdCuZEha1iV4gvIchubq47Biup9m2BgM0wtrmt7B7dvQNZ5\n2DnpNqo9BaA2BI3zkX758a6VmZmEBNecWWfNX8xJm8AQ8BP/4eg=\n=YqlS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/10602b0030e67c830596e08ffc775039ee0b2607",
          "sha": "10602b0030e67c830596e08ffc775039ee0b2607",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/10602b0030e67c830596e08ffc775039ee0b2607"
        }
      ],
      "message": "ci: Add \"x86_64: Windows (VS 2022)\" task",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-03-08T13:33:58Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-03-08T13:33:58Z"
      },
      "sha": "e1eb33724c2ca47855a8c1dada421cabdb717fe7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8696568912,
      "node_id": "HRFPE_lADOAP4Jqs5MuhVxzwAAAAIGWxxQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8696568912",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T13:34:09Z"
    },
    {
      "event": "commented",
      "id": 1460165200,
      "node_id": "IC_kwDOAP4Jqs5XCFpQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1460165200",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T13:35:47Z",
      "updated_at": "2023-03-08T13:35:47Z",
      "author_association": "MEMBER",
      "body": "Updated a846de12bae294f8f2877c585e57708949bec7b4 -> e1eb33724c2ca47855a8c1dada421cabdb717fe7 ([pr1113.48](https://github.com/hebasto/secp256k1/commits/pr1113.48) -> [pr1113.49](https://github.com/hebasto/secp256k1/commits/pr1113.49), [diff](https://github.com/hebasto/secp256k1/compare/pr1113.48..pr1113.49)):\r\n\r\n- addressed @real-or-random's https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1129429337",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1460165200",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8696582235,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIGW1Bb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8696582235",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T13:35:47Z"
    },
    {
      "event": "subscribed",
      "id": 8696582243,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIGW1Bj",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8696582243",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T13:35:47Z"
    },
    {
      "event": "reviewed",
      "id": 1330683853,
      "node_id": "PRR_kwDOAP4Jqs5PUJ_N",
      "url": null,
      "actor": null,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1330683853",
      "submitted_at": "2023-03-08T13:37:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "commented",
      "id": 1460275626,
      "node_id": "IC_kwDOAP4Jqs5XCgmq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1460275626",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T14:49:07Z",
      "updated_at": "2023-03-08T14:49:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It's totally reasonable to say that dropping the ability to build shared and static libs at the same time belongs to the category of making things more CMake-ish and is probably better addressed in a separate PR.\r\n> \r\n> The big advantage of getting this PR merged soon that it will be easier to refine separate aspects of the CMake build separately. This PR here is huge already now (with 240 comments and 47 revisions), and discussions will get much easier if they can happen in separate PRs which address only a single concern.\r\n\r\nAgreed. I definitely think we should make some changes, but agree that the discussion doesn't need to drag out the initial PR.\r\n\r\nSince my only remaining concern is the above static/shared lib situation which will be addressed in a follow-up...\r\n\r\nACK e1eb33724c2ca47855a8c1dada421cabdb717fe7.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1460275626",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "reviewed",
      "id": 1330827107,
      "node_id": "PRR_kwDOAP4Jqs5PUs9j",
      "url": null,
      "actor": null,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1330827107",
      "submitted_at": "2023-03-08T14:49:30Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "commented",
      "id": 1460298292,
      "node_id": "IC_kwDOAP4Jqs5XCmI0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1460298292",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T15:04:11Z",
      "updated_at": "2023-03-08T15:04:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK e1eb33724c2ca47855a8c1dada421cabdb717fe7\r\n\r\nI've played around with this, am starting to understand the structure/syntax a bit, and the parts I understand look correct. The follow-ups in https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1453785807 seem good future steps, especially the discussion above makes me think we should just cmake-ify and only support either static or shared builds, if that simplifies some of the hacks needed. Some other follow-ups:\r\n* Release note entry\r\n* Overall documentation for all configure flags/defines (already useful without cmake, but with cmake the situation does get even more complicated)\r\n* Add ability to detect whether arm assembly is available (this is already an issue with configure today; I just noticed looking at cmake that there is no detection for it).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1460298292",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "merged",
      "id": 8697735382,
      "node_id": "ME_lADOAP4Jqs5MuhVxzwAAAAIGbOjW",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8697735382",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "df323b5c14676d2892bd559cf4c0db2b334dc838",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/df323b5c14676d2892bd559cf4c0db2b334dc838",
      "created_at": "2023-03-08T15:33:19Z"
    },
    {
      "event": "closed",
      "id": 8697735470,
      "node_id": "CE_lADOAP4Jqs5MuhVxzwAAAAIGbOku",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8697735470",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T15:33:20Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T15:44:29Z",
      "updated_at": "2023-03-08T15:44:29Z",
      "source": {
        "issue": {
          "id": 1615492107,
          "node_id": "I_kwDOAP4Jqs5gSnQL",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1224",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1224/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1224/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1224/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1224",
          "number": 1224,
          "state": "closed",
          "state_reason": "completed",
          "title": "build: Meta-issue for follow-ups to initial CMake merge (#1113)",
          "body": "edit: see https://github.com/bitcoin-core/secp256k1/issues/1235",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 165020207,
              "node_id": "MDU6TGFiZWwxNjUwMjAyMDc=",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/documentation",
              "name": "documentation",
              "description": "",
              "color": "C5DEF5",
              "default": true
            },
            {
              "id": 4975362431,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI4Bfw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/build",
              "name": "build",
              "description": "",
              "color": "2F66C4",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "closed_at": "2023-03-10T11:49:24Z",
          "created_at": "2023-03-08T15:44:29Z",
          "updated_at": "2023-04-18T11:03:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_deleted",
      "id": 8697857058,
      "node_id": "HRDE_lADOAP4Jqs5MuhVxzwAAAAIGbsQi",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8697857058",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T15:45:43Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T17:01:03Z",
      "updated_at": "2023-03-08T17:01:03Z",
      "source": {
        "issue": {
          "id": 1613645679,
          "node_id": "PR_kwDOAP4Jqs5LfHmb",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1223",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1223/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1223/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1223/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1223",
          "number": 1223,
          "state": "closed",
          "state_reason": null,
          "title": "release: prepare for 0.3.0",
          "body": "Based on #1221. The release date is set to tomorrow March 8th. This is a draft because we only want to merge this tomorrow and  make sure to tag the release immediately afterwards. \r\n\r\n`make dist` does not miss files as shown by this diff between the dist tar.gz and a clean checkout of the repo:\r\n```\r\n❯ diff -qr . ../../../secp256k1-clean\r\nOnly in .: aclocal.m4\r\nOnly in ./build-aux: ar-lib\r\nOnly in ./build-aux: compile\r\nOnly in ./build-aux: config.guess\r\nOnly in ./build-aux: config.sub\r\nOnly in ./build-aux: depcomp\r\nOnly in ./build-aux: install-sh\r\nOnly in ./build-aux: ltmain.sh\r\nOnly in ./build-aux/m4: libtool.m4\r\nOnly in ./build-aux/m4: lt~obsolete.m4\r\nOnly in ./build-aux/m4: ltoptions.m4\r\nOnly in ./build-aux/m4: ltsugar.m4\r\nOnly in ./build-aux/m4: ltversion.m4\r\nOnly in ./build-aux: missing\r\nOnly in ./build-aux: test-driver\r\nFiles ./CHANGELOG.md and ../../../secp256k1-clean/CHANGELOG.md differ\r\nOnly in ../../../secp256k1-clean: ci\r\nOnly in ../../../secp256k1-clean: .cirrus.yml\r\nOnly in .: configure\r\nFiles ./configure.ac and ../../../secp256k1-clean/configure.ac differ\r\nOnly in ../../../secp256k1-clean: .git\r\nOnly in ../../../secp256k1-clean: .gitattributes\r\nOnly in ../../../secp256k1-clean: .gitignore\r\nOnly in .: Makefile.in\r\n```",
          "user": {
            "login": "jonasnick",
            "id": 2582071,
            "node_id": "MDQ6VXNlcjI1ODIwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasnick",
            "html_url": "https://github.com/jonasnick",
            "followers_url": "https://api.github.com/users/jonasnick/followers",
            "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasnick/orgs",
            "repos_url": "https://api.github.com/users/jonasnick/repos",
            "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasnick/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/3",
            "html_url": "https://github.com/bitcoin-core/secp256k1/milestone/3",
            "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/3/labels",
            "id": 9128715,
            "node_id": "MI_kwDOAP4Jqs4Ai0sL",
            "number": 3,
            "state": "closed",
            "title": "0.3.0",
            "description": "",
            "creator": {
              "login": "jonasnick",
              "id": 2582071,
              "node_id": "MDQ6VXNlcjI1ODIwNzE=",
              "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/jonasnick",
              "html_url": "https://github.com/jonasnick",
              "followers_url": "https://api.github.com/users/jonasnick/followers",
              "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
              "organizations_url": "https://api.github.com/users/jonasnick/orgs",
              "repos_url": "https://api.github.com/users/jonasnick/repos",
              "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/jonasnick/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 2,
            "created_at": "2023-03-07T09:55:10Z",
            "updated_at": "2023-04-10T15:23:28Z",
            "closed_at": "2023-04-10T15:23:28Z",
            "due_on": "2023-03-08T08:00:00Z"
          },
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1223",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1223",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1223.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1223.patch"
          },
          "closed_at": "2023-03-08T22:14:15Z",
          "created_at": "2023-03-07T15:05:43Z",
          "updated_at": "2023-07-20T01:51:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1331173276,
      "node_id": "PRR_kwDOAP4Jqs5PWBec",
      "url": null,
      "actor": null,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#pullrequestreview-1331173276",
      "submitted_at": "2023-03-08T17:58:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
    },
    {
      "event": "commented",
      "id": 1460779803,
      "node_id": "IC_kwDOAP4Jqs5XEbsb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1460779803",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T20:02:18Z",
      "updated_at": "2023-03-08T20:02:18Z",
      "author_association": "MEMBER",
      "body": "@sipa \r\n> * Add ability to detect whether arm assembly is available (this is already an issue with configure today; I just noticed looking at cmake that there is no detection for it).\r\n\r\nFWIW, the following command https://github.com/bitcoin-core/secp256k1/blob/ef4f8bd025960b5226f9fddebe1864e4afcb719a/CMakeLists.txt#L90-L91 is supposed to fail when arm assembly is not available.\r\n\r\nAdditionaly, we can use [`check_language(ASM)`](https://cmake.org/cmake/help/latest/module/CheckLanguage.html) command.\r\n\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1460779803",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8700080295,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIGkLCn",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8700080295",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T20:02:19Z"
    },
    {
      "event": "subscribed",
      "id": 8700080352,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIGkLDg",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8700080352",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T20:02:19Z"
    },
    {
      "event": "commented",
      "id": 1460791446,
      "node_id": "IC_kwDOAP4Jqs5XEeiW",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1460791446",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T20:04:18Z",
      "updated_at": "2023-03-08T20:06:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "@hebasto That can't work, because it isn't testing *ARM-specific* assembly being available. \r\n\r\nE.g. this \"works\":\r\n\r\n```\r\n$ cmake .. -DSECP256K1_ASM=arm -DSECP256K1_EXPERIMENTAL=ON\r\n```\r\n\r\non Linux x86_64, but causes build failure.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1460791446",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "mentioned",
      "id": 8700140130,
      "node_id": "MEE_lADOAP4Jqs5MuhVxzwAAAAIGkZpi",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8700140130",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T20:04:18Z"
    },
    {
      "event": "subscribed",
      "id": 8700140166,
      "node_id": "SE_lADOAP4Jqs5MuhVxzwAAAAIGkZqG",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8700140166",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T20:04:18Z"
    },
    {
      "event": "referenced",
      "id": 8701394210,
      "node_id": "REFE_lADOAP4Jqs5MuhVxzwAAAAIGpL0i",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8701394210",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "763079a3f1b937f54e3c2d4166d296f596f7be1b",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/763079a3f1b937f54e3c2d4166d296f596f7be1b",
      "created_at": "2023-03-08T22:42:57Z"
    },
    {
      "event": "commented",
      "id": 1461013008,
      "node_id": "IC_kwDOAP4Jqs5XFUoQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1461013008",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T23:10:34Z",
      "updated_at": "2023-03-08T23:10:34Z",
      "author_association": "MEMBER",
      "body": "> That can't work, because it isn't testing _ARM-specific_ assembly being available.\r\n\r\nWell, it can be like that\r\n```cmake\r\nif(CMAKE_SYSTEM_PROCESSOR MATCHES \"^arm*\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\r\n  include(CheckLanguage)\r\n  check_language(ASM)\r\nendif()\r\n```\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1461013008",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1113"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-10T11:48:21Z",
      "updated_at": "2023-03-10T11:48:21Z",
      "source": {
        "issue": {
          "id": 1618850857,
          "node_id": "I_kwDOAP4Jqs5gfbQp",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1235",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1235/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1235/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1235/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1235",
          "number": 1235,
          "state": "open",
          "state_reason": null,
          "title": "build: Meta-issue for follow-ups to initial CMake merge (#1113)",
          "body": "Issues that have been (re)discovered in #1113 but have not been addressed there: \r\n\r\nAffecting both build systems:\r\n - [ ] Unified docs for configuration autotools/CMake/manual builds (https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1171307979 and  https://github.com/bitcoin-core/secp256k1/pull/1142); WIP -- https://github.com/bitcoin-core/secp256k1/pull/1372\r\n - [x] Improve MSVC warning options (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124276576); solved by https://github.com/bitcoin-core/secp256k1/pull/1328\r\n - [x] Consider changing `DLL_EXPORT` TO `SECP256k1_DLL_EXPORT` (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126797102); solved by https://github.com/bitcoin-core/secp256k1/pull/1367\r\n - ~Consider setting CMake's default of /MD for MSVC also in autotools builds. Perhaps make `CMAKE_MSVC_RUNTIME_LIBRARY` a CMake cache variable. (https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458005771)~ See https://github.com/bitcoin-core/secp256k1/issues/1235#issuecomment-1609373112 and https://github.com/bitcoin-core/secp256k1/issues/1235#issuecomment-1609503130\r\n - [x] Print out a warning in the tests if both `VERIFY` and `COVERAGE` are defined. For clarity, this should be done in the C source, not in the build system. (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127856040); solved by https://github.com/bitcoin-core/secp256k1/pull/1333\r\n - [x] Actually check if ARM assembly is supported (https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1460298292 and also tracked in https://github.com/bitcoin-core/secp256k1/issues/1034); solved by https://github.com/bitcoin-core/secp256k1/pull/1304 \r\n - ~Set `-fvisibility-inlines-hidden`? (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124273356).~ See https://github.com/bitcoin-core/secp256k1/issues/1235#issuecomment-1466477275.\r\n -  ~Consider dropping support for Valgrind on MacOS (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128588031).~ See https://github.com/bitcoin-core/secp256k1/issues/1235#issuecomment-1506878980.\r\n\r\nAffecting only CMake:\r\n - [x] Changelog entry (https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1460298292; solved by #1225)\r\n - [x] Add CMake instructions to release process (solved by #1226)\r\n - [ ] Compute string `secp256k1` (e.g., in `target_link_libraries`) as substring of `PROJECT_NAME`. That will help with distinguishing forks. (https://github.com/bitcoin-core/secp256k1/pull/1229#discussion_r1130064718).\r\n - [ ] Consider recommending CMake-native build commands in the README (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124301931)\r\n - [x] Use `GENERATOR_IS_MULTI_CONFIG` in the future, which requires CMake 3.9. (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124460512; solved by #1239)\r\n - [x] See if we can use CMake templates to have something similar to `--enable-dev-mode`. (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912386477; solved by #1234)\r\n - [x] Consider dropping support for building static and shared libraries at the same time (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128702492)  or alternatively, enable position-independent code globally (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124264718; solved by #1230)\r\n - [x] `configure_package_config_file(... COMPATIBILITY` is `SameMajorVersion` but should probably be `SameMinorVersion` before 1.0.0 according to [our SemVer interpretation](https://github.com/bitcoin-core/secp256k1/pull/1223#issuecomment-1460481114). But the latter requires CMake 3.11. (https://gnusha.org/secp256k1/2023-03-08.log; solved by #1239)\r\n - [ ] `make check` should run tests in parallel, like `ctest -j` (https://gnusha.org/secp256k1/2023-03-08.log); WIP -- https://github.com/bitcoin-core/secp256k1/pull/1294\r\n - ~Consider using `COMPILE_FLAGS` or `COMPILE_OPTIONS` to add CFLAGS. `COMPILE_OPTIONS` requires CMake 3.11, while we currently target CMake 3.1 (https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1125545613)~ See https://github.com/bitcoin-core/secp256k1/issues/1235#issuecomment-1479363026\r\n - ~Consider [CMAKE_COMPILE_WARNING_AS_ERROR](https://cmake.org/cmake/help/latest/variable/CMAKE_COMPILE_WARNING_AS_ERROR.html) for CMake 3.24+ (https://github.com/bitcoin-core/secp256k1/pull/1241#issuecomment-1509008580)~ See https://github.com/bitcoin-core/secp256k1/issues/1235#issuecomment-1609567532\r\n - [x] Make `SECP256K1_INSTALL` default to `PROJECT_IS_TOP_LEVEL` on CMake 3.21+ (https://github.com/bitcoin-core/secp256k1/pull/1263); solved by #1284\r\n",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 165020207,
              "node_id": "MDU6TGFiZWwxNjUwMjAyMDc=",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/documentation",
              "name": "documentation",
              "description": "",
              "color": "C5DEF5",
              "default": true
            },
            {
              "id": 4975362431,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI4Bfw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/build",
              "name": "build",
              "description": "",
              "color": "2F66C4",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 22,
          "created_at": "2023-03-10T11:47:42Z",
          "updated_at": "2023-07-04T20:59:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-10T17:19:25Z",
      "updated_at": "2023-03-10T17:19:25Z",
      "source": {
        "issue": {
          "id": 1618191528,
          "node_id": "PR_kwDOAP4Jqs5LugFe",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1232",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1232/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1232/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1232/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1232",
          "number": 1232,
          "state": "closed",
          "state_reason": null,
          "title": "cmake: Set `POSITION_INDEPENDENT_CODE` property properly",
          "body": "This PR is an alternative to #1230.\r\n\r\nBenefits of this PR in comparison to #1230:\r\n- keeps ability to build a shared library and a static one simultaneously, which is convenient, for example, during a process of creating a distributable package like [`libsecp256k1-dev`](https://packages.debian.org/bookworm/amd64/libsecp256k1-dev/filelist) using [CPack](https://cmake.org/cmake/help/latest/module/CPack.html) tool\r\n- has smaller diff\r\n- does not require CMake version bumping\r\n\r\nNow, a user can set PIC/non-PIC mode for a static library using `CMAKE_POSITION_INDEPENDENT_CODE`, and this setting is independent from a shared library.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1232",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1232",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1232.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1232.patch"
          },
          "closed_at": "2023-03-10T18:13:23Z",
          "created_at": "2023-03-10T00:52:22Z",
          "updated_at": "2023-04-29T09:32:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-10T18:03:53Z",
      "updated_at": "2023-03-10T18:03:53Z",
      "source": {
        "issue": {
          "id": 1615989593,
          "node_id": "PR_kwDOAP4Jqs5Lm9PY",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1230",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1230/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1230/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1230/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1230",
          "number": 1230,
          "state": "closed",
          "state_reason": null,
          "title": "Build: allow static or shared but not both",
          "body": "Continuing from here: https://github.com/bitcoin-core/secp256k1/issues/1224#issuecomment-1460438227\r\n\r\nUnfortunately it wasn't really possible to keep a clean diff here because of the nature of the change. I suggest reviewing the lib creation stuff in its entirety, sorry about that :\\\r\n\r\nRather than allowing for shared and static libs to be built at the same time like autotools, this PR switches to the CMake convention of allowing only 1.\r\n\r\nA new `BUILD_SHARED_LIBS` option is added to match CMake convention, as well as a `SECP256K1_DISABLE_SHARED` option which overrides it. That way even projects which have `BUILD_SHARED_LIBS=1` can opt-into a static libsecp in particular.\r\n\r\nDetails:\r\n\r\nTwo object libraries are created: `secp256k1_asm` and `secp256k1_precomputed_objs`. Some tests/benchmarks use the object libraries directly, some link against the real lib: `secp256k1`.\r\n\r\n\r\nBecause the objs don't know what they're going to be linked into, they need to be told how to deal with PIC.\r\n\r\nThe `DEFINE_SYMBOL` property sets the `DLL_EXPORT` define as necessary (when building a shared lib)",
          "user": {
            "login": "theuni",
            "id": 417043,
            "node_id": "MDQ6VXNlcjQxNzA0Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theuni",
            "html_url": "https://github.com/theuni",
            "followers_url": "https://api.github.com/users/theuni/followers",
            "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
            "organizations_url": "https://api.github.com/users/theuni/orgs",
            "repos_url": "https://api.github.com/users/theuni/repos",
            "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theuni/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1230",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1230",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1230.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1230.patch"
          },
          "closed_at": "2023-04-18T10:54:12Z",
          "created_at": "2023-03-08T21:44:39Z",
          "updated_at": "2023-04-18T10:54:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 8748930011,
      "node_id": "REFE_lADOAP4Jqs5MuhVxzwAAAAIJehPb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8748930011",
      "actor": {
        "login": "div72",
        "id": 60045611,
        "node_id": "MDQ6VXNlcjYwMDQ1NjEx",
        "avatar_url": "https://avatars.githubusercontent.com/u/60045611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/div72",
        "html_url": "https://github.com/div72",
        "followers_url": "https://api.github.com/users/div72/followers",
        "following_url": "https://api.github.com/users/div72/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/div72/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/div72/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/div72/subscriptions",
        "organizations_url": "https://api.github.com/users/div72/orgs",
        "repos_url": "https://api.github.com/users/div72/repos",
        "events_url": "https://api.github.com/users/div72/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/div72/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "945b09457569a68ff338368a99234bd8473da1bf",
      "commit_url": "https://api.github.com/repos/div72/Gridcoin-Research/commits/945b09457569a68ff338368a99234bd8473da1bf",
      "created_at": "2023-03-14T22:13:59Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-10T09:13:23Z",
      "updated_at": "2023-04-10T09:13:23Z",
      "source": {
        "issue": {
          "id": 1659787478,
          "node_id": "PR_kwDOAP4Jqs5N4mgL",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1263",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1263/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1263/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1263/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1263",
          "number": 1263,
          "state": "closed",
          "state_reason": null,
          "title": "cmake: Make installation optional",
          "body": "Useful for embedding secp256k1 in a subproject.",
          "user": {
            "login": "CyberTailor",
            "id": 6988243,
            "node_id": "MDQ6VXNlcjY5ODgyNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6988243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CyberTailor",
            "html_url": "https://github.com/CyberTailor",
            "followers_url": "https://api.github.com/users/CyberTailor/followers",
            "following_url": "https://api.github.com/users/CyberTailor/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/CyberTailor/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/CyberTailor/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/CyberTailor/subscriptions",
            "organizations_url": "https://api.github.com/users/CyberTailor/orgs",
            "repos_url": "https://api.github.com/users/CyberTailor/repos",
            "events_url": "https://api.github.com/users/CyberTailor/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/CyberTailor/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1263",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1263",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1263.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1263.patch"
          },
          "closed_at": "2023-04-20T15:44:57Z",
          "created_at": "2023-04-09T07:53:31Z",
          "updated_at": "2023-07-20T08:35:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "giahuy98",
        "id": 100193713,
        "node_id": "U_kgDOBfjVsQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/100193713?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/giahuy98",
        "html_url": "https://github.com/giahuy98",
        "followers_url": "https://api.github.com/users/giahuy98/followers",
        "following_url": "https://api.github.com/users/giahuy98/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/giahuy98/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/giahuy98/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/giahuy98/subscriptions",
        "organizations_url": "https://api.github.com/users/giahuy98/orgs",
        "repos_url": "https://api.github.com/users/giahuy98/repos",
        "events_url": "https://api.github.com/users/giahuy98/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/giahuy98/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-14T11:18:50Z",
      "updated_at": "2023-04-14T11:18:50Z",
      "source": {
        "issue": {
          "id": 1667715705,
          "node_id": "PR_kwDOHWPuPs5OTJpu",
          "url": "https://api.github.com/repos/nunchuk-io/tap-protocol/issues/3",
          "repository_url": "https://api.github.com/repos/nunchuk-io/tap-protocol",
          "labels_url": "https://api.github.com/repos/nunchuk-io/tap-protocol/issues/3/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/nunchuk-io/tap-protocol/issues/3/comments",
          "events_url": "https://api.github.com/repos/nunchuk-io/tap-protocol/issues/3/events",
          "html_url": "https://github.com/nunchuk-io/tap-protocol/pull/3",
          "number": 3,
          "state": "closed",
          "state_reason": null,
          "title": "Fix 64-bit Android ABIs & allow manual ABI selection",
          "body": "Hi, I'm submitting fixes for the supported 64-bit ABIs (arm64-v8a & x86_64), details of which can be found in f173e63c2356fd0cabbaf3ea3abfdf8840b09088. Additionally I added a feature where you can manually specify the ABI to build for secp256 on Android, 20400fa1da1b3851aadfeab31103505372968593.\r\n\r\nThis PR also fixes https://github.com/nunchuk-io/tap-protocol/issues/2",
          "user": {
            "login": "PeteClubSeven",
            "id": 130258664,
            "node_id": "U_kgDOB8OW6A",
            "avatar_url": "https://avatars.githubusercontent.com/u/130258664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PeteClubSeven",
            "html_url": "https://github.com/PeteClubSeven",
            "followers_url": "https://api.github.com/users/PeteClubSeven/followers",
            "following_url": "https://api.github.com/users/PeteClubSeven/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/PeteClubSeven/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/PeteClubSeven/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/PeteClubSeven/subscriptions",
            "organizations_url": "https://api.github.com/users/PeteClubSeven/orgs",
            "repos_url": "https://api.github.com/users/PeteClubSeven/repos",
            "events_url": "https://api.github.com/users/PeteClubSeven/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/PeteClubSeven/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/nunchuk-io/tap-protocol/pulls/3",
            "html_url": "https://github.com/nunchuk-io/tap-protocol/pull/3",
            "diff_url": "https://github.com/nunchuk-io/tap-protocol/pull/3.diff",
            "patch_url": "https://github.com/nunchuk-io/tap-protocol/pull/3.patch"
          },
          "closed_at": "2023-04-14T11:18:57Z",
          "created_at": "2023-04-14T07:49:39Z",
          "updated_at": "2023-04-14T11:42:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-29T22:42:55Z",
      "updated_at": "2023-04-29T22:42:55Z",
      "source": {
        "issue": {
          "id": 1689708842,
          "node_id": "PR_kwDOAP4Jqs5Pchr_",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1291",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1291/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1291/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1291/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1291",
          "number": 1291,
          "state": "open",
          "state_reason": null,
          "title": "cmake: Use `SECP256K1_COVERAGE` option instead of `CMAKE_BUILD_TYPE=Coverage`",
          "body": "Providing `-DCMAKE_BUILD_TYPE=Coverage` does not work for multi-config generators.\r\n\r\nFor example:\r\n```\r\n$ cmake -S . -B ../build -G \"Ninja Multi-Config\"\r\n$ cmake --build ../build -C Coverage\r\n```\r\nstill builds the `tests` binary.\r\n\r\nThis PR:\r\n- fixes this issue\r\n- is based on the in-person discussion during the recent CoreDev\r\n- is an alternative to #1251\r\n\r\nThe last commit addresses [that](https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916977981) comment.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 4975362431,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI4Bfw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/build",
              "name": "build",
              "description": "",
              "color": "2F66C4",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1291",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1291",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1291.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1291.patch"
          },
          "created_at": "2023-04-29T22:42:55Z",
          "updated_at": "2023-07-02T17:14:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-30T16:03:01Z",
      "updated_at": "2023-04-30T16:03:01Z",
      "source": {
        "issue": {
          "id": 1689974882,
          "node_id": "PR_kwDOAP4Jqs5PdUSI",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1292",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1292/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1292/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1292/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1292",
          "number": 1292,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Make 64-bit shift explicit",
          "body": "Required to enable level 3 warnings. See: https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124276576.\r\n\r\nIn addition, this PR enables MSVC warning [C4334](https://learn.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-level-3-c4334) for the entire codebase.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1292",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1292",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1292.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1292.patch"
          },
          "closed_at": "2023-05-11T15:06:58Z",
          "created_at": "2023-04-30T16:03:01Z",
          "updated_at": "2023-05-11T15:32:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T10:27:39Z",
      "updated_at": "2023-05-30T10:27:39Z",
      "source": {
        "issue": {
          "id": 1731972063,
          "node_id": "PR_kwDOAP4Jqs5Rq58m",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1333",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1333/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1333/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1333/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1333",
          "number": 1333,
          "state": "closed",
          "state_reason": null,
          "title": "test: Warn if both `VERIFY` and `COVERAGE` are defined",
          "body": "Solves one item in https://github.com/bitcoin-core/secp256k1/issues/1235.\r\n\r\nAlso see: https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127856040.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 165017692,
              "node_id": "MDU6TGFiZWwxNjUwMTc2OTI=",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/assurance",
              "name": "assurance",
              "description": "",
              "color": "A6DF3D",
              "default": false
            },
            {
              "id": 4975362431,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI4Bfw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/build",
              "name": "build",
              "description": "",
              "color": "2F66C4",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1333",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1333",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1333.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1333.patch"
          },
          "closed_at": "2023-05-31T17:38:11Z",
          "created_at": "2023-05-30T10:27:38Z",
          "updated_at": "2023-06-01T09:22:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 9393479684,
      "node_id": "REFE_lADOAP4Jqs5MuhVxzwAAAAIv5SAE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9393479684",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d75dc59b58b0d8c8d779fe3a0a781305e3d6fb1b",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/d75dc59b58b0d8c8d779fe3a0a781305e3d6fb1b",
      "created_at": "2023-05-31T17:38:11Z"
    },
    {
      "event": "referenced",
      "id": 9425177731,
      "node_id": "REFE_lADOAP4Jqs5MuhVxzwAAAAIxyMyD",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9425177731",
      "actor": {
        "login": "vmta",
        "id": 23269741,
        "node_id": "MDQ6VXNlcjIzMjY5NzQx",
        "avatar_url": "https://avatars.githubusercontent.com/u/23269741?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vmta",
        "html_url": "https://github.com/vmta",
        "followers_url": "https://api.github.com/users/vmta/followers",
        "following_url": "https://api.github.com/users/vmta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vmta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vmta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vmta/subscriptions",
        "organizations_url": "https://api.github.com/users/vmta/orgs",
        "repos_url": "https://api.github.com/users/vmta/repos",
        "events_url": "https://api.github.com/users/vmta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vmta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e1120c94a1fe2208bfe6c939b4f67f6d37ce931c",
      "commit_url": "https://api.github.com/repos/umkoin/umkoin/commits/e1120c94a1fe2208bfe6c939b4f67f6d37ce931c",
      "created_at": "2023-06-04T15:42:06Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T10:21:51Z",
      "updated_at": "2023-06-28T10:21:51Z",
      "source": {
        "issue": {
          "id": 1777183597,
          "node_id": "PR_kwDOAP4Jqs5UDDg3",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1362",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1362/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1362/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1362/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1362",
          "number": 1362,
          "state": "closed",
          "state_reason": null,
          "title": "build: Improvements to symbol visibility logic on Windows",
          "body": "This is a somewhat more elaborate alternative to #1346.\r\n\r\nAs I said there:\r\n> Many hours of researching and experimenting went into that piece of code, so I'll probably follow up with a PR that adds extensive comments.",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 165020207,
              "node_id": "MDU6TGFiZWwxNjUwMjAyMDc=",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/documentation",
              "name": "documentation",
              "description": "",
              "color": "C5DEF5",
              "default": true
            },
            {
              "id": 4975362431,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI4Bfw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/build",
              "name": "build",
              "description": "",
              "color": "2F66C4",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1362",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1362",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1362.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1362.patch"
          },
          "closed_at": "2023-06-29T15:54:44Z",
          "created_at": "2023-06-27T15:01:15Z",
          "updated_at": "2023-06-29T15:54:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 9696152665,
      "node_id": "REFE_lADOAP4Jqs5MuhVxzwAAAAJB74xZ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9696152665",
      "actor": {
        "login": "vmta",
        "id": 23269741,
        "node_id": "MDQ6VXNlcjIzMjY5NzQx",
        "avatar_url": "https://avatars.githubusercontent.com/u/23269741?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vmta",
        "html_url": "https://github.com/vmta",
        "followers_url": "https://api.github.com/users/vmta/followers",
        "following_url": "https://api.github.com/users/vmta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vmta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vmta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vmta/subscriptions",
        "organizations_url": "https://api.github.com/users/vmta/orgs",
        "repos_url": "https://api.github.com/users/vmta/repos",
        "events_url": "https://api.github.com/users/vmta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vmta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8f03457eede9abfd1d7a0d26abc379a710e16755",
      "commit_url": "https://api.github.com/repos/umkoin/umkoin/commits/8f03457eede9abfd1d7a0d26abc379a710e16755",
      "created_at": "2023-07-01T12:32:49Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T13:36:00Z",
      "updated_at": "2023-07-21T13:36:00Z",
      "source": {
        "issue": {
          "id": 1815825313,
          "node_id": "PR_kwDOAjZbZs5WGXMX",
          "url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/252",
          "repository_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp",
          "labels_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/252/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/252/comments",
          "events_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/252/events",
          "html_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/252",
          "number": 252,
          "state": "closed",
          "state_reason": null,
          "title": "Upstream PRs 1113, 1225, 1227, 1229, 1223",
          "body": "[bitcoin-core/secp256k1#1113]: build: Add CMake-based build system\r\n[bitcoin-core/secp256k1#1225]: changelog: Add entry for CMake\r\n[bitcoin-core/secp256k1#1227]: readme: Use correct build type in CMake/Windows build instructions\r\n[bitcoin-core/secp256k1#1229]: cmake: Rename project to \"libsecp256k1\"\r\n[bitcoin-core/secp256k1#1223]: release: prepare for 0.3.0\r\n\r\nThis PR can be recreated with `./contrib/sync-upstream.sh -b sync-upstream range v0.3.0`.\r\nTip: Use `git show --remerge-diff` to show the changes manually added to the merge commit.\r\n\r\nRemoved mentions of cmake from README. CC @real-or-random ",
          "user": {
            "login": "jonasnick",
            "id": 2582071,
            "node_id": "MDQ6VXNlcjI1ODIwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasnick",
            "html_url": "https://github.com/jonasnick",
            "followers_url": "https://api.github.com/users/jonasnick/followers",
            "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasnick/orgs",
            "repos_url": "https://api.github.com/users/jonasnick/repos",
            "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasnick/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/pulls/252",
            "html_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/252",
            "diff_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/252.diff",
            "patch_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/252.patch"
          },
          "closed_at": "2023-07-21T14:57:30Z",
          "created_at": "2023-07-21T13:36:00Z",
          "updated_at": "2023-07-21T14:57:30Z"
        },
        "type": "issue"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908423002",
      "pull_request_review_id": 1021652809,
      "id": 908423002,
      "node_id": "PRRC_kwDOAP4Jqs42JW9a",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)",
      "path": "CMakeLists.txt",
      "position": 24,
      "original_position": 8,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "be3bb3072cf52202b3f334e340bf4992e19b8b5c",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be worth adding a comment that in cmake, 89/90 are the same option.",
      "created_at": "2022-06-28T12:33:08Z",
      "updated_at": "2022-06-28T12:58:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r908423002",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908423002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908424859",
      "pull_request_review_id": 1021652809,
      "id": 908424859,
      "node_id": "PRRC_kwDOAP4Jqs42JXab",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 3,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "be3bb3072cf52202b3f334e340bf4992e19b8b5c",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should probably use the same copyright header as every other file in the project. i.e:\r\n```bash\r\n/***********************************************************************\r\n * Copyright (c) 2022                                                                                      *\r\n * Distributed under the MIT software license, see the accompanying      *\r\n * file COPYING or https://www.opensource.org/licenses/mit-license.php. *\r\n   ***********************************************************************/\r\n```",
      "created_at": "2022-06-28T12:35:02Z",
      "updated_at": "2022-06-28T12:58:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r908424859",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908424859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908427880",
      "pull_request_review_id": 1021652809,
      "id": 908427880,
      "node_id": "PRRC_kwDOAP4Jqs42JYJo",
      "diff_hunk": "@@ -70,6 +68,38 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+    $ rm -rf build && mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ sudo make install  # optional\n+\n+To adjust the build system configuration, the following options can be provided to `cmake` call:\n+\n+| Option | Default value | Description |",
      "path": "README.md",
      "position": null,
      "original_position": 29,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "be3bb3072cf52202b3f334e340bf4992e19b8b5c",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does cmake have the equivalent of `./configure --help` that will just output the options? Otherwise you are creating documentation that will by default, go out of date, and/or need to be manually updated to stay in sync with the build system. It's easier to just get the options from the build system itself (as above), then they will always be correct.",
      "created_at": "2022-06-28T12:38:03Z",
      "updated_at": "2022-06-28T12:58:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r908427880",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908427880"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908464314",
      "pull_request_review_id": 1021713287,
      "id": 908464314,
      "node_id": "PRRC_kwDOAP4Jqs42JhC6",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 3,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "be3bb3072cf52202b3f334e340bf4992e19b8b5c",
      "in_reply_to_id": 908424859,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "CMake language have no `/*...*/` [comments](https://cmake.org/cmake/help/latest/manual/cmake-language.7.html#comments).",
      "created_at": "2022-06-28T13:13:35Z",
      "updated_at": "2022-06-28T13:13:35Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r908464314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908464314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908475953",
      "pull_request_review_id": 1021730588,
      "id": 908475953,
      "node_id": "PRRC_kwDOAP4Jqs42Jj4x",
      "diff_hunk": "@@ -70,6 +68,38 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+    $ rm -rf build && mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ sudo make install  # optional\n+\n+To adjust the build system configuration, the following options can be provided to `cmake` call:\n+\n+| Option | Default value | Description |",
      "path": "README.md",
      "position": null,
      "original_position": 29,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "be3bb3072cf52202b3f334e340bf4992e19b8b5c",
      "in_reply_to_id": 908427880,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Does cmake have the equivalent of `./configure --help` that will just output the options?\r\n\r\n```sh\r\ncmake -LH ..\r\n```",
      "created_at": "2022-06-28T13:24:07Z",
      "updated_at": "2022-06-28T13:36:54Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r908475953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908475953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908530023",
      "pull_request_review_id": 1021811321,
      "id": 908530023,
      "node_id": "PRRC_kwDOAP4Jqs42JxFn",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)",
      "path": "CMakeLists.txt",
      "position": 24,
      "original_position": 8,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "be3bb3072cf52202b3f334e340bf4992e19b8b5c",
      "in_reply_to_id": 908423002,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think that's necessary, they're also the same outside of cmake. \"C89\" and \"C90\" are just synonyms.",
      "created_at": "2022-06-28T14:08:21Z",
      "updated_at": "2022-06-28T14:08:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r908530023",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908530023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908545278",
      "pull_request_review_id": 1021833618,
      "id": 908545278,
      "node_id": "PRRC_kwDOAP4Jqs42J0z-",
      "diff_hunk": "@@ -70,6 +68,38 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+    $ rm -rf build && mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ sudo make install  # optional\n+\n+To adjust the build system configuration, the following options can be provided to `cmake` call:\n+\n+| Option | Default value | Description |",
      "path": "README.md",
      "position": null,
      "original_position": 29,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "be3bb3072cf52202b3f334e340bf4992e19b8b5c",
      "in_reply_to_id": 908427880,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice. Then I think the table could be dropped in favour of a line similar to above. i.e:\r\n\r\n\"To compile optional modules (such as Schnorr signatures), you need to run `cmake` with additional flags (such as `-DENABLE_MODULE_SCHNORRSIG=ON`). Run `cmake -LH ..` to see the full list of available flags.\"",
      "created_at": "2022-06-28T14:21:02Z",
      "updated_at": "2022-06-28T14:21:04Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r908545278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/908545278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909403708",
      "pull_request_review_id": 1023020823,
      "id": 909403708,
      "node_id": "PRRC_kwDOAP4Jqs42NGY8",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 9,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think we'll need this. I think this is rather for cases where you for example need C11 because your code uses C11 features. Then setting this to ON then forces an error if the compiler can do only C99.",
      "created_at": "2022-06-29T09:23:21Z",
      "updated_at": "2022-06-29T10:08:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909403708",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909403708"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909404819",
      "pull_request_review_id": 1023020823,
      "id": 909404819,
      "node_id": "PRRC_kwDOAP4Jqs42NGqT",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 14,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\noption(BUILD_BENCHMARK \"compile benchmarks\" ON)\r\n```\r\nmaybe we should even change the autoconf switch to plural, we have multiple benchmark binaries.",
      "created_at": "2022-06-29T09:24:27Z",
      "updated_at": "2022-06-29T10:08:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909404819",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909404819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909406486",
      "pull_request_review_id": 1023020823,
      "id": 909406486,
      "node_id": "PRRC_kwDOAP4Jqs42NHEW",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 14,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909404819,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: shouldn't this be rather \"build benchmarks\" (instead of \"compile\") if that's the wording of the variable. (I think \"build\" is better, it refers to the entire process, where \"compile\" wouldn't include \"link\"). ",
      "created_at": "2022-06-29T09:26:04Z",
      "updated_at": "2022-06-29T10:08:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909406486",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909406486"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909409634",
      "pull_request_review_id": 1023020823,
      "id": 909409634,
      "node_id": "PRRC_kwDOAP4Jqs42NH1i",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 26,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\noption(COVERAGE \"enable compiler flags to support coverage analysis\" ${ENABLE_DEV_MODE})\r\n```\r\nI think kcov is the tool special to the linux kernel. I don't think we'll need to mention the tool here.",
      "created_at": "2022-06-29T09:27:40Z",
      "updated_at": "2022-06-29T10:08:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909409634",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909409634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909413228",
      "pull_request_review_id": 1023020823,
      "id": 909413228,
      "node_id": "PRRC_kwDOAP4Jqs42NIts",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 32,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`LESS` and `GREATER` are only true if the arguments are a number, see https://cmake.org/cmake/help/latest/command/if.html#comparisons, so this could be simplified\r\n```suggestion\r\nif(ECMULT_WINDOW_SIZE GREATER 1 AND ECMULT_WINDOW_SIZE LESS 25)\r\n```",
      "created_at": "2022-06-29T09:30:59Z",
      "updated_at": "2022-06-29T10:08:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909413228",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909413228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909414650",
      "pull_request_review_id": 1023020823,
      "id": 909414650,
      "node_id": "PRRC_kwDOAP4Jqs42NJD6",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 40,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "maybe\r\n```suggestion\r\nif(NOT ECMULT_GEN_PREC_BITS EQUAL 2 AND NOT ECMULT_GEN_PREC_BITS EQUAL 4 AND NOT ECMULT_GEN_PREC_BITS EQUAL 8)\r\n```",
      "created_at": "2022-06-29T09:32:23Z",
      "updated_at": "2022-06-29T10:08:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909414650",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909414650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909416207",
      "pull_request_review_id": 1023020823,
      "id": 909416207,
      "node_id": "PRRC_kwDOAP4Jqs42NJcP",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"USE_FORCE_WIDEMUL_INT128 and USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 48,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a way to \"hide\" these options a little bit? These are really \"if you know what you're doing\" and intended for CI and maintainers. Maybe this here: https://cmake.org/cmake/help/latest/command/mark_as_advanced.html ?",
      "created_at": "2022-06-29T09:33:55Z",
      "updated_at": "2022-06-29T10:08:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909416207",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909416207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909432038",
      "pull_request_review_id": 1023020823,
      "id": 909432038,
      "node_id": "PRRC_kwDOAP4Jqs42NNTm",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"USE_FORCE_WIDEMUL_INT128 and USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+\n+configure_file(\n+  \"cmake/libsecp256k1-config.h.in\"\n+  \"${PROJECT_BINARY_DIR}/src/libsecp256k1-config.h\"\n+)\n+\n+include(cmake/secp_try_append_cflag.cmake)\n+secp_try_append_cflag(-pedantic)\n+secp_try_append_cflag(-Wno-long-long)\n+secp_try_append_cflag(-Wnested-externs)\n+secp_try_append_cflag(-Wshadow)\n+secp_try_append_cflag(-Wstrict-prototypes)\n+secp_try_append_cflag(-Wundef)\n+secp_try_append_cflag(-Wno-overlength-strings)\n+secp_try_append_cflag(-Wall)\n+secp_try_append_cflag(-Wno-unused-function)\n+secp_try_append_cflag(-Wextra)\n+secp_try_append_cflag(-Wcast-align)\n+secp_try_append_cflag(-Wcast-align=strict)\n+secp_try_append_cflag(-Wconditional-uninitialized)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  cmake_policy(SET CMP0063 NEW)\n+endif()",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Want to add a comment here?\r\n\r\nIt may be good to add also `CMP0092`:, `/W3` has thousands of annoying/stupid warnings for our code IIRC \r\nhttps://gitlab.kitware.com/cmake/cmake/-/merge_requests/3250/diffs?commit_id=1baf122cd41d6500139649661052236b8e684565",
      "created_at": "2022-06-29T09:50:13Z",
      "updated_at": "2022-06-29T10:08:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909432038",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909432038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 70,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909442003",
      "pull_request_review_id": 1023020823,
      "id": 909442003,
      "node_id": "PRRC_kwDOAP4Jqs42NPvT",
      "diff_hunk": "@@ -70,6 +68,58 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ rm -rf build && mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ sudo make install  # optional\n+\n+To adjust the build system configuration, the following options can be provided to `cmake` call:\n+\n+| Option | Default value | Description |\n+|--------|:-------------:|-------------|\n+| BUILD_BENCHMARK | ON | compile benchmark |\n+| BUILD_TESTS | ON | compile tests |\n+| BUILD_EXHAUSTIVE_TESTS | ON | compile exhaustive tests |\n+| BUILD_EXAMPLES | OFF | compile examples |\n+| ENABLE_MODULE_ECDH | OFF | enable ECDH module |\n+| ENABLE_MODULE_RECOVERY | OFF | enable ECDSA pubkey recovery module |\n+| ENABLE_MODULE_EXTRAKEYS | OFF |enable extrakeys module |\n+| ENABLE_MODULE_SCHNORRSIG | OFF | enable schnorrsig module |\n+\n+For example:\n+\n+    $ cmake -DBUILD_BENCHMARK=OFF -DENABLE_MODULE_ECDH=ON ..\n+\n+### Cross compiling\n+\n+To alleviate cross compiling, preconfigured toolchain files are available in the `toolchain` directory.\n+For example, to cross compile for Windows:\n+\n+    $ cmake -DCMAKE_TOOLCHAIN_FILE=../toolchain/x86_64-w64-mingw32.cmake ..\n+\n+To compile for Android with NDK (not using a toolchain file, and assuming the `ANDROID_HOME` environment variable has been set):",
      "path": "README.md",
      "position": null,
      "original_position": 53,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the correct variable is `ANDROID_NDK_ROOT`, see https://github.com/openssl/openssl/issues/11205 and the docs https://cmake.org/cmake/help/latest/manual/cmake-toolchains.7.html#cross-compiling-for-android . Maybe it makes sense to have a link to the docs, or only have that link. Not sure what others think.",
      "created_at": "2022-06-29T10:00:22Z",
      "updated_at": "2022-06-29T10:08:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909442003",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909442003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909499598",
      "pull_request_review_id": 1023156655,
      "id": 909499598,
      "node_id": "PRRC_kwDOAP4Jqs42NdzO",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 40,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909414650,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For some reasons (I did not investigate them) it will accept `-DECMULT_GEN_PREC_BITS=8a`.",
      "created_at": "2022-06-29T11:08:33Z",
      "updated_at": "2022-06-29T11:08:33Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909499598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909499598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909505710",
      "pull_request_review_id": 1023165468,
      "id": 909505710,
      "node_id": "PRRC_kwDOAP4Jqs42NfSu",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 32,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909413228,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Your suggestion checks for value validity, rather invalidity :)\r\n\r\nIf you mean to drop regexp, for some reasons (I did not investigate them) it will accept `-DECMULT_WINDOW_SIZE=8a`.",
      "created_at": "2022-06-29T11:16:11Z",
      "updated_at": "2022-06-29T11:16:24Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909505710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909505710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909652701",
      "pull_request_review_id": 1023389686,
      "id": 909652701,
      "node_id": "PRRC_kwDOAP4Jqs42ODLd",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 32,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909413228,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm, I see. It probably uses something like the C functions `atoi()` or `atol()` under the hood; I think they simply ignoring trailing garbage. We could also convert it to a number via `math()` but yeah, this is not elegant either.\r\n\r\n\r\n\r\n> Your suggestion checks for value validity, rather invalidity :)\r\n\r\nok yes but this could be fixed :)",
      "created_at": "2022-06-29T13:43:35Z",
      "updated_at": "2022-06-29T13:43:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r909652701",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/909652701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910322275",
      "pull_request_review_id": 1023881505,
      "id": 910322275,
      "node_id": "PRRC_kwDOAP4Jqs42Qmpj",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 9,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909403708,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1170397983).",
      "created_at": "2022-06-29T19:24:11Z",
      "updated_at": "2022-06-29T19:24:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910322275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910322275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910322511",
      "pull_request_review_id": 1023881869,
      "id": 910322511,
      "node_id": "PRRC_kwDOAP4Jqs42QmtP",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 14,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909404819,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1170397983).",
      "created_at": "2022-06-29T19:24:30Z",
      "updated_at": "2022-06-29T19:24:31Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910322511",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910322511"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910322622",
      "pull_request_review_id": 1023882005,
      "id": 910322622,
      "node_id": "PRRC_kwDOAP4Jqs42Qmu-",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 26,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909409634,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1170397983).",
      "created_at": "2022-06-29T19:24:38Z",
      "updated_at": "2022-06-29T19:24:38Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910322622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910322622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910323055",
      "pull_request_review_id": 1023882617,
      "id": 910323055,
      "node_id": "PRRC_kwDOAP4Jqs42Qm1v",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"USE_FORCE_WIDEMUL_INT128 and USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 48,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909416207,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1170397983).\r\n\r\nAlso included `ENABLE_DEV_MODE`.",
      "created_at": "2022-06-29T19:25:14Z",
      "updated_at": "2022-06-29T19:26:04Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910323055",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910323055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910323223",
      "pull_request_review_id": 1023882862,
      "id": 910323223,
      "node_id": "PRRC_kwDOAP4Jqs42Qm4X",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"USE_FORCE_WIDEMUL_INT128 and USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+\n+configure_file(\n+  \"cmake/libsecp256k1-config.h.in\"\n+  \"${PROJECT_BINARY_DIR}/src/libsecp256k1-config.h\"\n+)\n+\n+include(cmake/secp_try_append_cflag.cmake)\n+secp_try_append_cflag(-pedantic)\n+secp_try_append_cflag(-Wno-long-long)\n+secp_try_append_cflag(-Wnested-externs)\n+secp_try_append_cflag(-Wshadow)\n+secp_try_append_cflag(-Wstrict-prototypes)\n+secp_try_append_cflag(-Wundef)\n+secp_try_append_cflag(-Wno-overlength-strings)\n+secp_try_append_cflag(-Wall)\n+secp_try_append_cflag(-Wno-unused-function)\n+secp_try_append_cflag(-Wextra)\n+secp_try_append_cflag(-Wcast-align)\n+secp_try_append_cflag(-Wcast-align=strict)\n+secp_try_append_cflag(-Wconditional-uninitialized)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  cmake_policy(SET CMP0063 NEW)\n+endif()",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909432038,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1170397983).",
      "created_at": "2022-06-29T19:25:28Z",
      "updated_at": "2022-06-29T19:25:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910323223",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910323223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 70,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910323306",
      "pull_request_review_id": 1023882964,
      "id": 910323306,
      "node_id": "PRRC_kwDOAP4Jqs42Qm5q",
      "diff_hunk": "@@ -70,6 +68,58 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ rm -rf build && mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ sudo make install  # optional\n+\n+To adjust the build system configuration, the following options can be provided to `cmake` call:\n+\n+| Option | Default value | Description |\n+|--------|:-------------:|-------------|\n+| BUILD_BENCHMARK | ON | compile benchmark |\n+| BUILD_TESTS | ON | compile tests |\n+| BUILD_EXHAUSTIVE_TESTS | ON | compile exhaustive tests |\n+| BUILD_EXAMPLES | OFF | compile examples |\n+| ENABLE_MODULE_ECDH | OFF | enable ECDH module |\n+| ENABLE_MODULE_RECOVERY | OFF | enable ECDSA pubkey recovery module |\n+| ENABLE_MODULE_EXTRAKEYS | OFF |enable extrakeys module |\n+| ENABLE_MODULE_SCHNORRSIG | OFF | enable schnorrsig module |\n+\n+For example:\n+\n+    $ cmake -DBUILD_BENCHMARK=OFF -DENABLE_MODULE_ECDH=ON ..\n+\n+### Cross compiling\n+\n+To alleviate cross compiling, preconfigured toolchain files are available in the `toolchain` directory.\n+For example, to cross compile for Windows:\n+\n+    $ cmake -DCMAKE_TOOLCHAIN_FILE=../toolchain/x86_64-w64-mingw32.cmake ..\n+\n+To compile for Android with NDK (not using a toolchain file, and assuming the `ANDROID_HOME` environment variable has been set):",
      "path": "README.md",
      "position": null,
      "original_position": 53,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909442003,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1170397983).",
      "created_at": "2022-06-29T19:25:35Z",
      "updated_at": "2022-06-29T19:25:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910323306",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910323306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910837856",
      "pull_request_review_id": 1024597772,
      "id": 910837856,
      "node_id": "PRRC_kwDOAP4Jqs42Skhg",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"USE_FORCE_WIDEMUL_INT128 and USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+\n+configure_file(\n+  \"cmake/libsecp256k1-config.h.in\"\n+  \"${PROJECT_BINARY_DIR}/src/libsecp256k1-config.h\"\n+)\n+\n+include(cmake/secp_try_append_cflag.cmake)\n+secp_try_append_cflag(-pedantic)\n+secp_try_append_cflag(-Wno-long-long)\n+secp_try_append_cflag(-Wnested-externs)\n+secp_try_append_cflag(-Wshadow)\n+secp_try_append_cflag(-Wstrict-prototypes)\n+secp_try_append_cflag(-Wundef)\n+secp_try_append_cflag(-Wno-overlength-strings)\n+secp_try_append_cflag(-Wall)\n+secp_try_append_cflag(-Wno-unused-function)\n+secp_try_append_cflag(-Wextra)\n+secp_try_append_cflag(-Wcast-align)\n+secp_try_append_cflag(-Wcast-align=strict)\n+secp_try_append_cflag(-Wconditional-uninitialized)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  cmake_policy(SET CMP0063 NEW)\n+endif()",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909432038,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Want to add a comment here?\r\n\r\nstill open, I think the new one should also get a comment. I guess searching the web for CMP00XX will quickly give you a result but a one-line comment will help the reader ",
      "created_at": "2022-06-30T09:56:50Z",
      "updated_at": "2022-06-30T10:05:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910837856",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910837856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 70,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910838717",
      "pull_request_review_id": 1024597772,
      "id": 910838717,
      "node_id": "PRRC_kwDOAP4Jqs42Sku9",
      "diff_hunk": "@@ -70,6 +68,38 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+    $ rm -rf build && mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ sudo make install  # optional\n+\n+To adjust the build system configuration, the following options can be provided to `cmake` call:\n+\n+| Option | Default value | Description |",
      "path": "README.md",
      "position": null,
      "original_position": 29,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "be3bb3072cf52202b3f334e340bf4992e19b8b5c",
      "in_reply_to_id": 908427880,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree, this will be easier.",
      "created_at": "2022-06-30T09:57:46Z",
      "updated_at": "2022-06-30T10:05:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910838717",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910838717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910844178",
      "pull_request_review_id": 1024597772,
      "id": 910844178,
      "node_id": "PRRC_kwDOAP4Jqs42SmES",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 32,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909413228,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe it would make sense to extract `MATCHES ^[1-9][0-9]*$` into a separate macro/function IS_NUM or similar and then use it for all numeric options. \r\n\r\nJust a suggestion, I don't have strong opinions, as long as the code does what it's supposed to do.",
      "created_at": "2022-06-30T10:03:50Z",
      "updated_at": "2022-06-30T10:05:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910844178",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910844178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910845410",
      "pull_request_review_id": 1024597772,
      "id": 910845410,
      "node_id": "PRRC_kwDOAP4Jqs42SmXi",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+# Copyright 2022",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 1,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ff836b6199d81e63f61afee1b8385e815ca25c47",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You should probably add your name here and everywhere else. (I think that's an annoyance here in the library. It would be good to switch to \"libsecp256k1 contributors\" but last time I brought that up, it wasn't clear if this is legally okay.)",
      "created_at": "2022-06-30T10:05:16Z",
      "updated_at": "2022-06-30T10:06:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r910845410",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/910845410"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911105569",
      "pull_request_review_id": 1024990026,
      "id": 911105569,
      "node_id": "PRRC_kwDOAP4Jqs42Tl4h",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support coverage analysis\" ${ENABLE_DEV_MODE})",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 28,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ff836b6199d81e63f61afee1b8385e815ca25c47",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`COVERAGE` shouldn't be enabled by `ENABLE_DEV_MODE` ",
      "created_at": "2022-06-30T14:35:20Z",
      "updated_at": "2022-06-30T14:35:20Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r911105569",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911105569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911131601",
      "pull_request_review_id": 1025026646,
      "id": 911131601,
      "node_id": "PRRC_kwDOAP4Jqs42TsPR",
      "diff_hunk": "@@ -70,6 +68,38 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+    $ rm -rf build && mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ sudo make install  # optional\n+\n+To adjust the build system configuration, the following options can be provided to `cmake` call:\n+\n+| Option | Default value | Description |",
      "path": "README.md",
      "position": null,
      "original_position": 29,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "be3bb3072cf52202b3f334e340bf4992e19b8b5c",
      "in_reply_to_id": 908427880,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1171325257).",
      "created_at": "2022-06-30T14:57:01Z",
      "updated_at": "2022-06-30T14:57:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r911131601",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911131601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911135421",
      "pull_request_review_id": 1025032054,
      "id": 911135421,
      "node_id": "PRRC_kwDOAP4Jqs42TtK9",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 32,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909413228,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd leave it as is for now. Code still concise and readable, imo :)",
      "created_at": "2022-06-30T15:00:07Z",
      "updated_at": "2022-06-30T15:00:08Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r911135421",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911135421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911136102",
      "pull_request_review_id": 1025033070,
      "id": 911136102,
      "node_id": "PRRC_kwDOAP4Jqs42TtVm",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_STANDARD_REQUIRED ON)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"compile benchmark\" ON)\n+option(BUILD_TESTS \"compile tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"compile exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"compile examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support kcov coverage analysis\" ${ENABLE_DEV_MODE})\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"USE_FORCE_WIDEMUL_INT128 and USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+\n+configure_file(\n+  \"cmake/libsecp256k1-config.h.in\"\n+  \"${PROJECT_BINARY_DIR}/src/libsecp256k1-config.h\"\n+)\n+\n+include(cmake/secp_try_append_cflag.cmake)\n+secp_try_append_cflag(-pedantic)\n+secp_try_append_cflag(-Wno-long-long)\n+secp_try_append_cflag(-Wnested-externs)\n+secp_try_append_cflag(-Wshadow)\n+secp_try_append_cflag(-Wstrict-prototypes)\n+secp_try_append_cflag(-Wundef)\n+secp_try_append_cflag(-Wno-overlength-strings)\n+secp_try_append_cflag(-Wall)\n+secp_try_append_cflag(-Wno-unused-function)\n+secp_try_append_cflag(-Wextra)\n+secp_try_append_cflag(-Wcast-align)\n+secp_try_append_cflag(-Wcast-align=strict)\n+secp_try_append_cflag(-Wconditional-uninitialized)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  cmake_policy(SET CMP0063 NEW)\n+endif()",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ec372dc0b8a95053a771614931982e29291b6dd8",
      "in_reply_to_id": 909432038,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "CMake policies have been [commented](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1171325257).",
      "created_at": "2022-06-30T15:00:44Z",
      "updated_at": "2022-06-30T15:00:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r911136102",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911136102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 70,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911136717",
      "pull_request_review_id": 1025033984,
      "id": 911136717,
      "node_id": "PRRC_kwDOAP4Jqs42TtfN",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+# Copyright 2022",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 1,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ff836b6199d81e63f61afee1b8385e815ca25c47",
      "in_reply_to_id": 910845410,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1171325257).",
      "created_at": "2022-06-30T15:01:17Z",
      "updated_at": "2022-06-30T15:01:18Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r911136717",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911136717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911137107",
      "pull_request_review_id": 1025034561,
      "id": 911137107,
      "node_id": "PRRC_kwDOAP4Jqs42TtlT",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+# Copyright 2022\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support coverage analysis\" ${ENABLE_DEV_MODE})",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 28,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "ff836b6199d81e63f61afee1b8385e815ca25c47",
      "in_reply_to_id": 911105569,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Fixed](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1171325257).",
      "created_at": "2022-06-30T15:01:39Z",
      "updated_at": "2022-06-30T15:01:39Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r911137107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911137107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911167739",
      "pull_request_review_id": 1025081536,
      "id": 911167739,
      "node_id": "PRRC_kwDOAP4Jqs42T1D7",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+add_definitions(-DHAVE_CONFIG_H)\n+include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/include)\n+include_directories(${PROJECT_BINARY_DIR}/src)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 7,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "f587a8cfe16704d29ad0d4409a90807ef8320147",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n```\r\nThese lines can (and should) be removed once https://github.com/bitcoin-core/secp256k1/pull/1116 has been merged.\r\n\r\nThe only paths that needs to be set then is `${PROJECT_SOURCE_DIR}/include` for the code examples.\r\n\r\n\r\nedit: well no, it's more complicated, see below.",
      "created_at": "2022-06-30T15:29:55Z",
      "updated_at": "2022-06-30T15:37:10Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r911167739",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911167739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 6,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911230450",
      "pull_request_review_id": 1025178142,
      "id": 911230450,
      "node_id": "PRRC_kwDOAP4Jqs42UEXy",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+add_definitions(-DHAVE_CONFIG_H)\n+include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/include)\n+include_directories(${PROJECT_BINARY_DIR}/src)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 7,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "f587a8cfe16704d29ad0d4409a90807ef8320147",
      "in_reply_to_id": 911167739,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "While the `libsecp256k1-config.h` is still present in the project, including of `PROJECT_BINARY_DIR` is required because it is the place where all build artifacts, including the `libsecp256k1-config.h`, reside.",
      "created_at": "2022-06-30T16:29:36Z",
      "updated_at": "2022-06-30T16:29:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r911230450",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/911230450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 6,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912253900",
      "pull_request_review_id": 1026651111,
      "id": 912253900,
      "node_id": "PRRC_kwDOAP4Jqs42X-PM",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+add_definitions(-DHAVE_CONFIG_H)\n+include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/include)\n+include_directories(${PROJECT_BINARY_DIR}/src)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 7,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "f587a8cfe16704d29ad0d4409a90807ef8320147",
      "in_reply_to_id": 911167739,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/include)` has been [removed](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1172718404).",
      "created_at": "2022-07-01T21:16:40Z",
      "updated_at": "2022-07-01T21:16:40Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912253900",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912253900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 6,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912385895",
      "pull_request_review_id": 1026777065,
      "id": 912385895,
      "node_id": "PRRC_kwDOAP4Jqs42Yedn",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support coverage analysis\" OFF)\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"USE_FORCE_WIDEMUL_INT128 and USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+\n+mark_as_advanced(FORCE\n+  ENABLE_DEV_MODE\n+  USE_FORCE_WIDEMUL_INT128\n+  USE_FORCE_WIDEMUL_INT64\n+)\n+\n+include(cmake/secp_try_append_cflag.cmake)\n+secp_try_append_cflag(-pedantic)\n+secp_try_append_cflag(-Wno-long-long)\n+secp_try_append_cflag(-Wnested-externs)\n+secp_try_append_cflag(-Wshadow)\n+secp_try_append_cflag(-Wstrict-prototypes)\n+secp_try_append_cflag(-Wundef)\n+secp_try_append_cflag(-Wno-overlength-strings)\n+secp_try_append_cflag(-Wall)\n+secp_try_append_cflag(-Wno-unused-function)\n+secp_try_append_cflag(-Wextra)\n+secp_try_append_cflag(-Wcast-align)\n+secp_try_append_cflag(-Wcast-align=strict)\n+secp_try_append_cflag(-Wconditional-uninitialized)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+\n+add_subdirectory(src)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+if(CMAKE_CROSSCOMPILING)\n+  message(\"Cross compiling for ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+endif()\n+message(\"Optional binaries:\")\n+message(\"  benchmark ........................ ${BUILD_BENCHMARK}\")\n+message(\"  tests ............................ ${BUILD_TESTS}\")\n+message(\"  exhaustive tests ................. ${BUILD_EXHAUSTIVE_TESTS}\")\n+message(\"  examples ......................... ${BUILD_EXAMPLES}\")\n+message(\"Optional modules:\")\n+message(\"  ECDH ............................. ${ENABLE_MODULE_ECDH}\")\n+message(\"  ECDSA pubkey recovery ............ ${ENABLE_MODULE_RECOVERY}\")\n+message(\"  extrakeys ........................ ${ENABLE_MODULE_EXTRAKEYS}\")\n+message(\"  schnorrsig ....................... ${ENABLE_MODULE_SCHNORRSIG}\")\n+message(\"Parameters:\")\n+message(\"  ecmult window size ............... ${ECMULT_WINDOW_SIZE}\")\n+message(\"  ecmult gen precision bits ........ ${ECMULT_GEN_PREC_BITS}\")\n+message(\"Optional features:\")\n+message(\"  external callbacks ............... ${USE_EXTERNAL_DEFAULT_CALLBACKS}\")\n+if(BUILD_TESTS OR BUILD_EXHAUSTIVE_TESTS)\n+  message(\"  support kcov coverage analysis ... ${COVERAGE}\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 107,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n  message(\"  support coverage analysis ... ${COVERAGE}\")\r\n```\r\n",
      "created_at": "2022-07-02T17:55:50Z",
      "updated_at": "2022-07-02T18:32:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912385895",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912385895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912385940",
      "pull_request_review_id": 1026777065,
      "id": 912385940,
      "node_id": "PRRC_kwDOAP4Jqs42YeeU",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 21,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`BUILD_EXAMPLES` is without function currently.",
      "created_at": "2022-07-02T17:56:28Z",
      "updated_at": "2022-07-02T18:32:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912385940",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912385940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912386477",
      "pull_request_review_id": 1026777065,
      "id": 912386477,
      "node_id": "PRRC_kwDOAP4Jqs42Yemt",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 16,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm, I think having this as an option doesn't really work with CMake's \"cache-based\" config system. When `ENABLE_MODULE_RECOVERY` is `OFF` in the cache, setting `ENABLE_DEV_MODE` won't enable it. \r\n\r\nAlso there's no \"order\" on the config options. In ./configure, we process options from left-to-right, so later options can override the dev mode defaults. But this doesn't make sense in CMake. \r\n\r\nMaybe there's another way to express this . https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html looks promising. Though this could be done in a separate PR. dev-mode is not a crucial feature and anyway we'd still have autotools.",
      "created_at": "2022-07-02T18:02:07Z",
      "updated_at": "2022-07-02T18:32:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912386477",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912386477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912388136",
      "pull_request_review_id": 1026777065,
      "id": 912388136,
      "node_id": "PRRC_kwDOAP4Jqs42YfAo",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support coverage analysis\" OFF)\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 40,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nset(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\r\nset_property(CACHE ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"auto\" 2 4 8)\r\n```\r\n",
      "created_at": "2022-07-02T18:22:35Z",
      "updated_at": "2022-07-02T18:32:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912388136",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912388136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912388216",
      "pull_request_review_id": 1026777065,
      "id": 912388216,
      "node_id": "PRRC_kwDOAP4Jqs42YfB4",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support coverage analysis\" OFF)\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 40,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912388136,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This makes `ccmake` and `cmake-gui` offer a nicer selection. We should probably do the same above. Listing the numbers from 2 to 24 looks strange but why not. (We'd like to restrict this in the future anyway.)",
      "created_at": "2022-07-02T18:23:58Z",
      "updated_at": "2022-07-02T18:32:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912388216",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912388216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912388545",
      "pull_request_review_id": 1026777065,
      "id": 912388545,
      "node_id": "PRRC_kwDOAP4Jqs42YfHB",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support coverage analysis\" OFF)\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 50,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: all the others `if`s don't have a space after them. (but maybe it's nicer with a space?)",
      "created_at": "2022-07-02T18:27:25Z",
      "updated_at": "2022-07-02T18:32:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912388545",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912388545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912388646",
      "pull_request_review_id": 1026777065,
      "id": 912388646,
      "node_id": "PRRC_kwDOAP4Jqs42YfIm",
      "diff_hunk": "@@ -70,6 +68,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ rm -rf build && mkdir build && cd build",
      "path": "README.md",
      "position": null,
      "original_position": 24,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    $ mkdir build && cd build\r\n```\r\njust a nit but I wouldn't suggest invasive commands",
      "created_at": "2022-07-02T18:28:35Z",
      "updated_at": "2022-07-02T18:32:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912388646",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912388646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912388756",
      "pull_request_review_id": 1026777065,
      "id": 912388756,
      "node_id": "PRRC_kwDOAP4Jqs42YfKU",
      "diff_hunk": "@@ -70,6 +68,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ rm -rf build && mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ sudo make install  # optional\n+\n+To compile optional modules (such as Schnorr signatures), you need to run `cmake` with additional flags (such as `-DENABLE_MODULE_SCHNORRSIG=ON`). Run `cmake .. -LH` to see the full list of available flags.\n+\n+### Cross compiling\n+\n+To alleviate cross compiling, preconfigured toolchain files are available in the `cmake` directory.\n+For example, to cross compile for Windows:\n+\n+    $ cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/x86_64-w64-mingw32.toolchain.cmake\n+\n+To cross compile for Android with [NDK](https://developer.android.com/ndk/guides/cmake) (using NDK's toolchain file, and assuming the `ANDROID_NDK_ROOT` environment variable has been set):\n+\n+    $ cmake .. -DCMAKE_TOOLCHAIN_FILE=\"${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake\" -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=28\n+\n+### Building on Windows\n+\n+To build on Windows with Visual Studio, a proper [generator](https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html#visual-studio-generators) must be specified for a new build tree.\n+\n+The following example assumes using of Visual Studio 2022 and CMake v3.21+.\n+\n+In \"Developer Command Prompt for VS 2022\":\n+\n+    >rd /s /q build && mkdir build && cd build\n+    >cmake .. -G \"Visual Studio 17 2022\" -A x64 -DBUILD_BENCHMARK=OFF",
      "path": "README.md",
      "position": null,
      "original_position": 51,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is the reason for disabling the benchmarks that they don't work? If yes, have you tried on master? https://github.com/bitcoin-core/secp256k1/pull/1084 introduced benchmark support on Windows. ",
      "created_at": "2022-07-02T18:30:23Z",
      "updated_at": "2022-07-02T18:32:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r912388756",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/912388756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916787945",
      "pull_request_review_id": 1032871363,
      "id": 916787945,
      "node_id": "PRRC_kwDOAP4Jqs42pRLp",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 16,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912386477,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Hm, I think having this as an option doesn't really work with CMake's \"cache-based\" config system. When `ENABLE_MODULE_RECOVERY` is `OFF` in the cache, setting `ENABLE_DEV_MODE` won't enable it.\r\n\r\nIn such cases a `CMakeCache.txt` file in the top directory of the build tree must be deleted.\r\n\r\nFor example, \"File\" --> \"Delete Cache\" in the `cmake-gui` menu :)",
      "created_at": "2022-07-08T12:53:48Z",
      "updated_at": "2022-07-08T13:01:33Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916787945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916787945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916909015",
      "pull_request_review_id": 1033047308,
      "id": 916909015,
      "node_id": "PRRC_kwDOAP4Jqs42puvX",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support coverage analysis\" OFF)\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"USE_FORCE_WIDEMUL_INT128 and USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+\n+mark_as_advanced(FORCE\n+  ENABLE_DEV_MODE\n+  USE_FORCE_WIDEMUL_INT128\n+  USE_FORCE_WIDEMUL_INT64\n+)\n+\n+include(cmake/secp_try_append_cflag.cmake)\n+secp_try_append_cflag(-pedantic)\n+secp_try_append_cflag(-Wno-long-long)\n+secp_try_append_cflag(-Wnested-externs)\n+secp_try_append_cflag(-Wshadow)\n+secp_try_append_cflag(-Wstrict-prototypes)\n+secp_try_append_cflag(-Wundef)\n+secp_try_append_cflag(-Wno-overlength-strings)\n+secp_try_append_cflag(-Wall)\n+secp_try_append_cflag(-Wno-unused-function)\n+secp_try_append_cflag(-Wextra)\n+secp_try_append_cflag(-Wcast-align)\n+secp_try_append_cflag(-Wcast-align=strict)\n+secp_try_append_cflag(-Wconditional-uninitialized)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+\n+add_subdirectory(src)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+if(CMAKE_CROSSCOMPILING)\n+  message(\"Cross compiling for ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+endif()\n+message(\"Optional binaries:\")\n+message(\"  benchmark ........................ ${BUILD_BENCHMARK}\")\n+message(\"  tests ............................ ${BUILD_TESTS}\")\n+message(\"  exhaustive tests ................. ${BUILD_EXHAUSTIVE_TESTS}\")\n+message(\"  examples ......................... ${BUILD_EXAMPLES}\")\n+message(\"Optional modules:\")\n+message(\"  ECDH ............................. ${ENABLE_MODULE_ECDH}\")\n+message(\"  ECDSA pubkey recovery ............ ${ENABLE_MODULE_RECOVERY}\")\n+message(\"  extrakeys ........................ ${ENABLE_MODULE_EXTRAKEYS}\")\n+message(\"  schnorrsig ....................... ${ENABLE_MODULE_SCHNORRSIG}\")\n+message(\"Parameters:\")\n+message(\"  ecmult window size ............... ${ECMULT_WINDOW_SIZE}\")\n+message(\"  ecmult gen precision bits ........ ${ECMULT_GEN_PREC_BITS}\")\n+message(\"Optional features:\")\n+message(\"  external callbacks ............... ${USE_EXTERNAL_DEFAULT_CALLBACKS}\")\n+if(BUILD_TESTS OR BUILD_EXHAUSTIVE_TESTS)\n+  message(\"  support kcov coverage analysis ... ${COVERAGE}\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 107,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912385895,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179093852).",
      "created_at": "2022-07-08T15:08:44Z",
      "updated_at": "2022-07-08T15:08:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916909015",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916909015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916909389",
      "pull_request_review_id": 1033047828,
      "id": 916909389,
      "node_id": "PRRC_kwDOAP4Jqs42pu1N",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 21,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912385940,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Implemented](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179093852).",
      "created_at": "2022-07-08T15:09:10Z",
      "updated_at": "2022-07-08T15:09:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916909389",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916909389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916909899",
      "pull_request_review_id": 1033048518,
      "id": 916909899,
      "node_id": "PRRC_kwDOAP4Jqs42pu9L",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support coverage analysis\" OFF)\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 40,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912388136,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179093852).",
      "created_at": "2022-07-08T15:09:45Z",
      "updated_at": "2022-07-08T15:09:45Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916909899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916909899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916910628",
      "pull_request_review_id": 1033049509,
      "id": 916910628,
      "node_id": "PRRC_kwDOAP4Jqs42pvIk",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support coverage analysis\" OFF)\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 50,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912388545,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Fixed](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179093852).",
      "created_at": "2022-07-08T15:10:37Z",
      "updated_at": "2022-07-08T15:10:38Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916910628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916910628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916911066",
      "pull_request_review_id": 1033050129,
      "id": 916911066,
      "node_id": "PRRC_kwDOAP4Jqs42pvPa",
      "diff_hunk": "@@ -70,6 +68,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ rm -rf build && mkdir build && cd build",
      "path": "README.md",
      "position": null,
      "original_position": 24,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912388646,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179093852).",
      "created_at": "2022-07-08T15:11:06Z",
      "updated_at": "2022-07-08T15:11:07Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916911066",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916911066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916977981",
      "pull_request_review_id": 1033147902,
      "id": 916977981,
      "node_id": "PRRC_kwDOAP4Jqs42p_k9",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)\n+\n+option(BUILD_BENCHMARK \"build benchmarks\" ON)\n+option(BUILD_TESTS \"build tests\" ON)\n+option(BUILD_EXHAUSTIVE_TESTS \"build exhaustive tests\" ON)\n+option(BUILD_EXAMPLES \"build examples\" ${ENABLE_DEV_MODE})\n+\n+option(ENABLE_MODULE_ECDH \"enable ECDH module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_RECOVERY \"enable ECDSA pubkey recovery module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_EXTRAKEYS \"enable extrakeys module\" ${ENABLE_DEV_MODE})\n+option(ENABLE_MODULE_SCHNORRSIG \"enable schnorrsig module\" ${ENABLE_DEV_MODE})\n+\n+option(ALLOW_EXPERIMENTAL \"allow experimental configure options\" ${ENABLE_DEV_MODE})\n+option(USE_EXTERNAL_DEFAULT_CALLBACKS \"enable external default callback functions\" OFF)\n+option(COVERAGE \"enable compiler flags to support coverage analysis\" OFF)\n+\n+set(ECMULT_WINDOW_SIZE \"auto\" CACHE STRING \"window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(ECMULT_WINDOW_SIZE STREQUAL auto)\n+  set(ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR ECMULT_WINDOW_SIZE LESS 2 OR ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"ECMULT_WINDOW_SIZE value is \\\"${ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+\n+set(ECMULT_GEN_PREC_BITS \"auto\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+if(ECMULT_GEN_PREC_BITS STREQUAL auto)\n+  set(ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"ECMULT_GEN_PREC_BITS value is \\\"${ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+\n+option(USE_FORCE_WIDEMUL_INT128 \"force the use of the (unsigned) __int128 based wide multiplication implementation\" OFF)\n+option(USE_FORCE_WIDEMUL_INT64 \"force the use of the (u)int64_t based wide multiplication implementation\" OFF)\n+if (USE_FORCE_WIDEMUL_INT128 AND USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"USE_FORCE_WIDEMUL_INT128 and USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+\n+mark_as_advanced(FORCE\n+  ENABLE_DEV_MODE\n+  USE_FORCE_WIDEMUL_INT128\n+  USE_FORCE_WIDEMUL_INT64\n+)\n+\n+include(cmake/secp_try_append_cflag.cmake)\n+secp_try_append_cflag(-pedantic)\n+secp_try_append_cflag(-Wno-long-long)\n+secp_try_append_cflag(-Wnested-externs)\n+secp_try_append_cflag(-Wshadow)\n+secp_try_append_cflag(-Wstrict-prototypes)\n+secp_try_append_cflag(-Wundef)\n+secp_try_append_cflag(-Wno-overlength-strings)\n+secp_try_append_cflag(-Wall)\n+secp_try_append_cflag(-Wno-unused-function)\n+secp_try_append_cflag(-Wextra)\n+secp_try_append_cflag(-Wcast-align)\n+secp_try_append_cflag(-Wcast-align=strict)\n+secp_try_append_cflag(-Wconditional-uninitialized)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+\n+add_subdirectory(src)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+if(CMAKE_CROSSCOMPILING)\n+  message(\"Cross compiling for ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+endif()\n+message(\"Optional binaries:\")\n+message(\"  benchmark ........................ ${BUILD_BENCHMARK}\")\n+message(\"  tests ............................ ${BUILD_TESTS}\")\n+message(\"  exhaustive tests ................. ${BUILD_EXHAUSTIVE_TESTS}\")\n+message(\"  examples ......................... ${BUILD_EXAMPLES}\")\n+message(\"Optional modules:\")\n+message(\"  ECDH ............................. ${ENABLE_MODULE_ECDH}\")\n+message(\"  ECDSA pubkey recovery ............ ${ENABLE_MODULE_RECOVERY}\")\n+message(\"  extrakeys ........................ ${ENABLE_MODULE_EXTRAKEYS}\")\n+message(\"  schnorrsig ....................... ${ENABLE_MODULE_SCHNORRSIG}\")\n+message(\"Parameters:\")\n+message(\"  ecmult window size ............... ${ECMULT_WINDOW_SIZE}\")\n+message(\"  ecmult gen precision bits ........ ${ECMULT_GEN_PREC_BITS}\")\n+message(\"Optional features:\")\n+message(\"  external callbacks ............... ${USE_EXTERNAL_DEFAULT_CALLBACKS}\")\n+if(BUILD_TESTS OR BUILD_EXHAUSTIVE_TESTS)\n+  message(\"  support kcov coverage analysis ... ${COVERAGE}\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 107,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912385895,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I just realized that this says \"kcov\" because the `configure --help` uses the same wording. I guess we should should update this when tidying up the configuration options as outlaid above. Then it would be helpful to reduce the doc strings in autotools and here to a minimum, and add larger explanations to the README. (This won't avoid duplication entirely but at least makes it less worse...)",
      "created_at": "2022-07-08T16:35:18Z",
      "updated_at": "2022-07-08T16:35:18Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916977981",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916977981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916979117",
      "pull_request_review_id": 1033149575,
      "id": 916979117,
      "node_id": "PRRC_kwDOAP4Jqs42p_2t",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 16,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912386477,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> In such cases a `CMakeCache.txt` file in the top directory of the build tree must be deleted.\r\n\r\nRight that works but I doubt it's a great interface.  I think if this is hard to get right, then it shouldn't be in a way of this PR and we could introduce a dev mode later.",
      "created_at": "2022-07-08T16:37:03Z",
      "updated_at": "2022-07-08T16:37:03Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r916979117",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/916979117"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/917115207",
      "pull_request_review_id": 1033349587,
      "id": 917115207,
      "node_id": "PRRC_kwDOAP4Jqs42qhFH",
      "diff_hunk": "@@ -70,6 +68,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake\n+-------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ rm -rf build && mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ sudo make install  # optional\n+\n+To compile optional modules (such as Schnorr signatures), you need to run `cmake` with additional flags (such as `-DENABLE_MODULE_SCHNORRSIG=ON`). Run `cmake .. -LH` to see the full list of available flags.\n+\n+### Cross compiling\n+\n+To alleviate cross compiling, preconfigured toolchain files are available in the `cmake` directory.\n+For example, to cross compile for Windows:\n+\n+    $ cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/x86_64-w64-mingw32.toolchain.cmake\n+\n+To cross compile for Android with [NDK](https://developer.android.com/ndk/guides/cmake) (using NDK's toolchain file, and assuming the `ANDROID_NDK_ROOT` environment variable has been set):\n+\n+    $ cmake .. -DCMAKE_TOOLCHAIN_FILE=\"${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake\" -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=28\n+\n+### Building on Windows\n+\n+To build on Windows with Visual Studio, a proper [generator](https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html#visual-studio-generators) must be specified for a new build tree.\n+\n+The following example assumes using of Visual Studio 2022 and CMake v3.21+.\n+\n+In \"Developer Command Prompt for VS 2022\":\n+\n+    >rd /s /q build && mkdir build && cd build\n+    >cmake .. -G \"Visual Studio 17 2022\" -A x64 -DBUILD_BENCHMARK=OFF",
      "path": "README.md",
      "position": null,
      "original_position": 51,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912388756,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179331707).",
      "created_at": "2022-07-08T20:20:13Z",
      "updated_at": "2022-07-08T20:20:14Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r917115207",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/917115207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/917115537",
      "pull_request_review_id": 1033350093,
      "id": 917115537,
      "node_id": "PRRC_kwDOAP4Jqs42qhKR",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+# Copyright 2022 Hennadii Stepanov\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+cmake_minimum_required(VERSION 3.1)\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0092.html\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+project(secp256k1 VERSION 0.1.0 LANGUAGES C)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+option(ENABLE_DEV_MODE \"enable all binaries and modules by default but individual options can still be overridden explicitly\" OFF)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 16,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "6b65314195baeee982c7d5213377d493d073f119",
      "in_reply_to_id": 912386477,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `ENABLE_DEV_MODE` option has been [removed](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1179331707).",
      "created_at": "2022-07-08T20:20:51Z",
      "updated_at": "2022-07-08T20:20:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r917115537",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/917115537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1072671277",
      "pull_request_review_id": 1252228449,
      "id": 1072671277,
      "node_id": "PRRC_kwDOAP4Jqs4_76ot",
      "diff_hunk": "@@ -0,0 +1,252 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_ENABLE_EXPERIMENTAL \"Enable experimental configure options.\" OFF)\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT128 \"Force the use of the (unsigned) __int128 based wide multiplication implementation.\" OFF)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 81,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "On the configure side they're called `--with-test-override-...`; maybe it's useful to use a similar name on the cmake side (for the cmake flag, not the corresponding C macro), to make it clear they're not for normal usage?",
      "created_at": "2023-01-17T18:52:06Z",
      "updated_at": "2023-01-17T19:17:40Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1072671277",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1072671277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1072675257",
      "pull_request_review_id": 1252228449,
      "id": 1072675257,
      "node_id": "PRRC_kwDOAP4Jqs4_77m5",
      "diff_hunk": "@@ -0,0 +1,252 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_ENABLE_EXPERIMENTAL \"Enable experimental configure options.\" OFF)\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT128 \"Force the use of the (unsigned) __int128 based wide multiplication implementation.\" OFF)\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+endif()\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT64 \"Force the use of the (u)int64_t based wide multiplication implementation.\" OFF)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 85,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe this is missing an equivalent to the configure option `--with-test-override-widemul=int128_struct`, added in 2914bccbc0913806ee64425a27d38cdc27b288e8 (#1000).",
      "created_at": "2023-01-17T18:56:45Z",
      "updated_at": "2023-01-17T19:17:40Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1072675257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1072675257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1072677501",
      "pull_request_review_id": 1252228449,
      "id": 1072677501,
      "node_id": "PRRC_kwDOAP4Jqs4_78J9",
      "diff_hunk": "@@ -0,0 +1,252 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_ENABLE_EXPERIMENTAL \"Enable experimental configure options.\" OFF)\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT128 \"Force the use of the (unsigned) __int128 based wide multiplication implementation.\" OFF)\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+endif()\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT64 \"Force the use of the (u)int64_t based wide multiplication implementation.\" OFF)\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT64)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT64)\n+endif()\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128 AND SECP256K1_USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"SECP256K1_USE_FORCE_WIDEMUL_INT128 and SECP256K1_USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+mark_as_advanced(FORCE\n+  SECP256K1_USE_FORCE_WIDEMUL_INT128\n+  SECP256K1_USE_FORCE_WIDEMUL_INT64\n+)\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" OFF)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 104,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does this work on MSVC?",
      "created_at": "2023-01-17T18:59:15Z",
      "updated_at": "2023-01-17T19:17:40Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1072677501",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1072677501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1072678661",
      "pull_request_review_id": 1252228449,
      "id": 1072678661,
      "node_id": "PRRC_kwDOAP4Jqs4_78cF",
      "diff_hunk": "@@ -0,0 +1,252 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_ENABLE_EXPERIMENTAL \"Enable experimental configure options.\" OFF)\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT128 \"Force the use of the (unsigned) __int128 based wide multiplication implementation.\" OFF)\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+endif()\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT64 \"Force the use of the (u)int64_t based wide multiplication implementation.\" OFF)\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT64)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT64)\n+endif()\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128 AND SECP256K1_USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"SECP256K1_USE_FORCE_WIDEMUL_INT128 and SECP256K1_USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+mark_as_advanced(FORCE\n+  SECP256K1_USE_FORCE_WIDEMUL_INT128\n+  SECP256K1_USE_FORCE_WIDEMUL_INT64\n+)\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" OFF)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+if(MSVC)\n+  set(CMAKE_C_FLAGS_RELEASE \"/O2 /Ob2\")\n+else()\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(cmake/TryAddCompileOption.cmake)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)\n+else()\n+  try_add_compile_option(-pedantic)\n+  try_add_compile_option(-Wall)\n+  try_add_compile_option(-Wcast-align)\n+  try_add_compile_option(-Wcast-align=strict)\n+  try_add_compile_option(-Wconditional-uninitialized)\n+  try_add_compile_option(-Wextra)\n+  try_add_compile_option(-Wnested-externs)\n+  try_add_compile_option(-Wno-long-long)\n+  try_add_compile_option(-Wno-overlength-strings)\n+  try_add_compile_option(-Wno-unused-function)\n+  try_add_compile_option(-Wshadow)\n+  try_add_compile_option(-Wstrict-prototypes)\n+  try_add_compile_option(-Wundef)\n+endif()\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)\n+\n+include(CTest)\n+if(SECP256K1_BUILD_BENCHMARK OR SECP256K1_BUILD_TESTS OR SECP256K1_BUILD_CTIME_TESTS OR SECP256K1_BUILD_EXHAUSTIVE_TESTS OR SECP256K1_BUILD_EXAMPLES)\n+  # We do not use CMake CTest's BUILD_TESTING option.\n+  enable_testing()\n+endif()\n+\n+add_subdirectory(src)\n+if(SECP256K1_BUILD_EXAMPLES)\n+  add_subdirectory(examples)\n+endif()\n+\n+message(\"\\n\")\n+message(\"secp256k1 configure summary\")\n+message(\"===========================\")\n+message(\"Build artifacts:\")\n+message(\"  shared library ...................... ${SECP256K1_BUILD_SHARED}\")\n+message(\"  static library ...................... ${SECP256K1_BUILD_STATIC}\")\n+message(\"Optional modules:\")\n+message(\"  ECDH ................................ ${SECP256K1_ENABLE_MODULE_ECDH}\")\n+message(\"  ECDSA pubkey recovery ............... ${SECP256K1_ENABLE_MODULE_RECOVERY}\")\n+message(\"  extrakeys ........................... ${SECP256K1_ENABLE_MODULE_EXTRAKEYS}\")\n+message(\"  schnorrsig .......................... ${SECP256K1_ENABLE_MODULE_SCHNORRSIG}\")\n+message(\"Parameters:\")\n+message(\"  ecmult window size .................. ${SECP256K1_ECMULT_WINDOW_SIZE}\")\n+message(\"  ecmult gen precision bits ........... ${SECP256K1_ECMULT_GEN_PREC_BITS}\")\n+message(\"Optional features:\")\n+message(\"  external callbacks .................. ${SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS}\")\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128)\n+  set(widemul_status \"int128\")\n+elseif(SECP256K1_USE_FORCE_WIDEMUL_INT64)\n+  set(widemul_status \"int64\")\n+else()\n+  set(widemul_status OFF)\n+endif()\n+message(\"  override wide multiplication ........ ${widemul_status}\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 207,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps this should not be reported unless overridden (as it's a test-only option).",
      "created_at": "2023-01-17T19:00:37Z",
      "updated_at": "2023-01-17T19:17:40Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1072678661",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1072678661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1072776703",
      "pull_request_review_id": 1252416228,
      "id": 1072776703,
      "node_id": "PRRC_kwDOAP4Jqs4_8UX_",
      "diff_hunk": "@@ -0,0 +1,145 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+add_library(${PROJECT_NAME} SHARED \"\")\n+target_sources(${PROJECT_NAME} PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(WIN32)\n+  target_compile_definitions(${PROJECT_NAME} PRIVATE DLL_EXPORT)\n+endif()\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+else()\n+  set_target_properties(${PROJECT_NAME} PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC \"\")\n+target_sources(${PROJECT_NAME}_static PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}_static\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+else()\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+if(SECP256K1_BUILD_BENCHMARK OR SECP256K1_BUILD_TESTS OR SECP256K1_BUILD_CTIME_TESTS OR SECP256K1_BUILD_EXHAUSTIVE_TESTS)\n+  add_library(bench_or_test_binary INTERFACE)\n+  target_compile_definitions(bench_or_test_binary INTERFACE\n+    $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+  )\n+  target_link_libraries(bench_or_test_binary INTERFACE\n+    ${PROJECT_NAME}_static\n+  )\n+endif()\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench bench_or_test_binary)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 67,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think these link specifications are correct.\r\n\r\n* The examples, `bench`, and `ctime_tests` are supposed to be externally linked to libsecp256k1 (they're users of the library, and should just link to the built library, not to the objects inside of it).\r\n* `bench_internal`, `bench_ecmult`, `tests`, `noverify_tests` are supposed to be internally linked (so they're linked with the .o files from which the library is built from as well).\r\n\r\nSo for examples, when building with shared library (and no static library), I'd expect `ldd tests` to not show libsecp256k1.so, but `ldd ctime_tests` should show it.\r\n\r\nIn the other direction, `nm ctime_tests` should only show names of functions exported by the API, while `nm tests` should also show internal functions.\r\n\r\nIt appears that the current cmake code builds everything by linking with the internal objects. That will always work, however:\r\n* the ctime tests aren't exactly testing the release library file that's built.\r\n* the `bench` benchmarks similarly will not be benchmarking the release library.\r\n* the examples will be built in a way that's not available to actual users (as they only have the static/shared library, not the .o files it was built from).\r\n",
      "created_at": "2023-01-17T20:32:46Z",
      "updated_at": "2023-03-10T18:15:10Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1072776703",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1072776703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073730854",
      "pull_request_review_id": 1253775101,
      "id": 1073730854,
      "node_id": "PRRC_kwDOAP4Jqs4__9Um",
      "diff_hunk": "@@ -0,0 +1,252 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_ENABLE_EXPERIMENTAL \"Enable experimental configure options.\" OFF)\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT128 \"Force the use of the (unsigned) __int128 based wide multiplication implementation.\" OFF)\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+endif()\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT64 \"Force the use of the (u)int64_t based wide multiplication implementation.\" OFF)\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT64)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT64)\n+endif()\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128 AND SECP256K1_USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"SECP256K1_USE_FORCE_WIDEMUL_INT128 and SECP256K1_USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+mark_as_advanced(FORCE\n+  SECP256K1_USE_FORCE_WIDEMUL_INT128\n+  SECP256K1_USE_FORCE_WIDEMUL_INT64\n+)\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" OFF)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 104,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "in_reply_to_id": 1072677501,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Fixed](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1387305073).",
      "created_at": "2023-01-18T15:58:42Z",
      "updated_at": "2023-01-18T15:58:42Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073730854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073730854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073731594",
      "pull_request_review_id": 1253776271,
      "id": 1073731594,
      "node_id": "PRRC_kwDOAP4Jqs4__9gK",
      "diff_hunk": "@@ -0,0 +1,252 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_ENABLE_EXPERIMENTAL \"Enable experimental configure options.\" OFF)\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT128 \"Force the use of the (unsigned) __int128 based wide multiplication implementation.\" OFF)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 81,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "in_reply_to_id": 1072671277,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1387305073).",
      "created_at": "2023-01-18T15:59:02Z",
      "updated_at": "2023-01-18T15:59:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073731594",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073731594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073732315",
      "pull_request_review_id": 1253777361,
      "id": 1073732315,
      "node_id": "PRRC_kwDOAP4Jqs4__9rb",
      "diff_hunk": "@@ -0,0 +1,252 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_ENABLE_EXPERIMENTAL \"Enable experimental configure options.\" OFF)\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT128 \"Force the use of the (unsigned) __int128 based wide multiplication implementation.\" OFF)\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+endif()\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT64 \"Force the use of the (u)int64_t based wide multiplication implementation.\" OFF)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 85,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "in_reply_to_id": 1072675257,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1387305073).",
      "created_at": "2023-01-18T15:59:29Z",
      "updated_at": "2023-01-18T15:59:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073732315",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073732315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073732820",
      "pull_request_review_id": 1253778094,
      "id": 1073732820,
      "node_id": "PRRC_kwDOAP4Jqs4__9zU",
      "diff_hunk": "@@ -0,0 +1,252 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_ENABLE_EXPERIMENTAL \"Enable experimental configure options.\" OFF)\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT128 \"Force the use of the (unsigned) __int128 based wide multiplication implementation.\" OFF)\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+endif()\n+option(SECP256K1_USE_FORCE_WIDEMUL_INT64 \"Force the use of the (u)int64_t based wide multiplication implementation.\" OFF)\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT64)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT64)\n+endif()\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128 AND SECP256K1_USE_FORCE_WIDEMUL_INT64)\n+  message(FATAL_ERROR \"SECP256K1_USE_FORCE_WIDEMUL_INT128 and SECP256K1_USE_FORCE_WIDEMUL_INT64 cannot be enabled simultaneously.\")\n+endif()\n+mark_as_advanced(FORCE\n+  SECP256K1_USE_FORCE_WIDEMUL_INT128\n+  SECP256K1_USE_FORCE_WIDEMUL_INT64\n+)\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" OFF)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+if(MSVC)\n+  set(CMAKE_C_FLAGS_RELEASE \"/O2 /Ob2\")\n+else()\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(cmake/TryAddCompileOption.cmake)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)\n+else()\n+  try_add_compile_option(-pedantic)\n+  try_add_compile_option(-Wall)\n+  try_add_compile_option(-Wcast-align)\n+  try_add_compile_option(-Wcast-align=strict)\n+  try_add_compile_option(-Wconditional-uninitialized)\n+  try_add_compile_option(-Wextra)\n+  try_add_compile_option(-Wnested-externs)\n+  try_add_compile_option(-Wno-long-long)\n+  try_add_compile_option(-Wno-overlength-strings)\n+  try_add_compile_option(-Wno-unused-function)\n+  try_add_compile_option(-Wshadow)\n+  try_add_compile_option(-Wstrict-prototypes)\n+  try_add_compile_option(-Wundef)\n+endif()\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)\n+\n+include(CTest)\n+if(SECP256K1_BUILD_BENCHMARK OR SECP256K1_BUILD_TESTS OR SECP256K1_BUILD_CTIME_TESTS OR SECP256K1_BUILD_EXHAUSTIVE_TESTS OR SECP256K1_BUILD_EXAMPLES)\n+  # We do not use CMake CTest's BUILD_TESTING option.\n+  enable_testing()\n+endif()\n+\n+add_subdirectory(src)\n+if(SECP256K1_BUILD_EXAMPLES)\n+  add_subdirectory(examples)\n+endif()\n+\n+message(\"\\n\")\n+message(\"secp256k1 configure summary\")\n+message(\"===========================\")\n+message(\"Build artifacts:\")\n+message(\"  shared library ...................... ${SECP256K1_BUILD_SHARED}\")\n+message(\"  static library ...................... ${SECP256K1_BUILD_STATIC}\")\n+message(\"Optional modules:\")\n+message(\"  ECDH ................................ ${SECP256K1_ENABLE_MODULE_ECDH}\")\n+message(\"  ECDSA pubkey recovery ............... ${SECP256K1_ENABLE_MODULE_RECOVERY}\")\n+message(\"  extrakeys ........................... ${SECP256K1_ENABLE_MODULE_EXTRAKEYS}\")\n+message(\"  schnorrsig .......................... ${SECP256K1_ENABLE_MODULE_SCHNORRSIG}\")\n+message(\"Parameters:\")\n+message(\"  ecmult window size .................. ${SECP256K1_ECMULT_WINDOW_SIZE}\")\n+message(\"  ecmult gen precision bits ........... ${SECP256K1_ECMULT_GEN_PREC_BITS}\")\n+message(\"Optional features:\")\n+message(\"  external callbacks .................. ${SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS}\")\n+if(SECP256K1_USE_FORCE_WIDEMUL_INT128)\n+  set(widemul_status \"int128\")\n+elseif(SECP256K1_USE_FORCE_WIDEMUL_INT64)\n+  set(widemul_status \"int64\")\n+else()\n+  set(widemul_status OFF)\n+endif()\n+message(\"  override wide multiplication ........ ${widemul_status}\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 207,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "in_reply_to_id": 1072678661,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1387305073).",
      "created_at": "2023-01-18T15:59:46Z",
      "updated_at": "2023-01-18T15:59:46Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073732820",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073732820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073734116",
      "pull_request_review_id": 1253779715,
      "id": 1073734116,
      "node_id": "PRRC_kwDOAP4Jqs4__-Hk",
      "diff_hunk": "@@ -0,0 +1,145 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+add_library(${PROJECT_NAME} SHARED \"\")\n+target_sources(${PROJECT_NAME} PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(WIN32)\n+  target_compile_definitions(${PROJECT_NAME} PRIVATE DLL_EXPORT)\n+endif()\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+else()\n+  set_target_properties(${PROJECT_NAME} PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC \"\")\n+target_sources(${PROJECT_NAME}_static PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}_static\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+else()\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+if(SECP256K1_BUILD_BENCHMARK OR SECP256K1_BUILD_TESTS OR SECP256K1_BUILD_CTIME_TESTS OR SECP256K1_BUILD_EXHAUSTIVE_TESTS)\n+  add_library(bench_or_test_binary INTERFACE)\n+  target_compile_definitions(bench_or_test_binary INTERFACE\n+    $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+  )\n+  target_link_libraries(bench_or_test_binary INTERFACE\n+    ${PROJECT_NAME}_static\n+  )\n+endif()\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench bench_or_test_binary)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 67,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "858be0e97b05253a6274ec31e2eb321bc24dfcb4",
      "in_reply_to_id": 1072776703,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should work as expected [now](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1387305073).",
      "created_at": "2023-01-18T16:00:35Z",
      "updated_at": "2023-01-18T16:00:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073734116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073734116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073905654",
      "pull_request_review_id": 1254061521,
      "id": 1073905654,
      "node_id": "PRRC_kwDOAP4Jqs5AAn_2",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+add_library(${PROJECT_NAME} SHARED \"\")\n+target_sources(${PROJECT_NAME} PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(WIN32)\n+  target_compile_definitions(${PROJECT_NAME} PRIVATE DLL_EXPORT)\n+endif()\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+else()\n+  set_target_properties(${PROJECT_NAME} PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC \"\")\n+target_sources(${PROJECT_NAME}_static PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}_static\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+else()\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_shared INTERFACE)\n+target_link_libraries(link_shared INTERFACE\n+  ${PROJECT_NAME}\n+)\n+\n+add_library(link_static INTERFACE)\n+target_link_libraries(link_static INTERFACE\n+  ${PROJECT_NAME}_static\n+)\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_shared)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "84f1fd27a07eb7f54bd6454019384660b6b4a108",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this approach is correct either; it'll always link bench with the shared library, even when the shared library isn't being built. It should just link with whatever is being built - probably shared if shared is available, and static otherwise.\r\n\r\nAnd below the opposite problem occurs: it always links with the static library, even when the static library isn't being built. In fact, it shouldn't be linked with either the static or shared library; it just needs to link the common object files (precomputed stuff, asm if included).",
      "created_at": "2023-01-18T18:15:13Z",
      "updated_at": "2023-01-18T18:15:42Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073905654",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073905654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073919095",
      "pull_request_review_id": 1254079117,
      "id": 1073919095,
      "node_id": "PRRC_kwDOAP4Jqs5AArR3",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+add_library(${PROJECT_NAME} SHARED \"\")\n+target_sources(${PROJECT_NAME} PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(WIN32)\n+  target_compile_definitions(${PROJECT_NAME} PRIVATE DLL_EXPORT)\n+endif()\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+else()\n+  set_target_properties(${PROJECT_NAME} PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC \"\")\n+target_sources(${PROJECT_NAME}_static PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}_static\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+else()\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_shared INTERFACE)\n+target_link_libraries(link_shared INTERFACE\n+  ${PROJECT_NAME}\n+)\n+\n+add_library(link_static INTERFACE)\n+target_link_libraries(link_static INTERFACE\n+  ${PROJECT_NAME}_static\n+)\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_shared)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "84f1fd27a07eb7f54bd6454019384660b6b4a108",
      "in_reply_to_id": 1073905654,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> it'll always link bench with the shared library, even when the shared library isn't being built. It should just link with whatever is being built - probably shared if shared is available, and static otherwise.\r\n\r\nGoing to implement this suggestion.\r\n\r\n> And below the opposite problem occurs: it always links with the static library, even when the static library isn't being built. In fact, it shouldn't be linked with either the static or shared library; it just needs to link the common object files (precomputed stuff, asm if included).\r\n\r\nI believe there is no difference between linking against object files and linking against a static library, which is an archive of object files, no?",
      "created_at": "2023-01-18T18:26:08Z",
      "updated_at": "2023-01-18T18:26:08Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073919095",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073919095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073924290",
      "pull_request_review_id": 1254085286,
      "id": 1073924290,
      "node_id": "PRRC_kwDOAP4Jqs5AAsjC",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+add_library(${PROJECT_NAME} SHARED \"\")\n+target_sources(${PROJECT_NAME} PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(WIN32)\n+  target_compile_definitions(${PROJECT_NAME} PRIVATE DLL_EXPORT)\n+endif()\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+else()\n+  set_target_properties(${PROJECT_NAME} PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC \"\")\n+target_sources(${PROJECT_NAME}_static PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}_static\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+else()\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_shared INTERFACE)\n+target_link_libraries(link_shared INTERFACE\n+  ${PROJECT_NAME}\n+)\n+\n+add_library(link_static INTERFACE)\n+target_link_libraries(link_static INTERFACE\n+  ${PROJECT_NAME}_static\n+)\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_shared)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "84f1fd27a07eb7f54bd6454019384660b6b4a108",
      "in_reply_to_id": 1073905654,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, but the static library, as a build product, contains too much (it contains the entire library API code, which tests/exhaustive_tests/bench_ecmult/bench_internal don't need).\n\nThe point is that these binaries are at the same \"level\" as the library itself, not users of it.",
      "created_at": "2023-01-18T18:30:27Z",
      "updated_at": "2023-01-18T18:30:27Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073924290",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073924290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073985761",
      "pull_request_review_id": 1254182484,
      "id": 1073985761,
      "node_id": "PRRC_kwDOAP4Jqs5AA7jh",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+add_library(${PROJECT_NAME} SHARED \"\")\n+target_sources(${PROJECT_NAME} PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(WIN32)\n+  target_compile_definitions(${PROJECT_NAME} PRIVATE DLL_EXPORT)\n+endif()\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+else()\n+  set_target_properties(${PROJECT_NAME} PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC \"\")\n+target_sources(${PROJECT_NAME}_static PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}_static\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+else()\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_shared INTERFACE)\n+target_link_libraries(link_shared INTERFACE\n+  ${PROJECT_NAME}\n+)\n+\n+add_library(link_static INTERFACE)\n+target_link_libraries(link_static INTERFACE\n+  ${PROJECT_NAME}_static\n+)\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_shared)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "84f1fd27a07eb7f54bd6454019384660b6b4a108",
      "in_reply_to_id": 1073905654,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Sure, but the static library, as a build product, contains too much (it contains the entire library API code, which tests/exhaustive_tests/bench_ecmult/bench_internal don't need).\r\n\r\nFWIW, for example, the resulted `bench_internal` binary has the same `nm` output as it has being compiled on the master branch using Autotools-based build system.\r\n\r\n---\r\n\r\nLinking object files directly ends with linker errors like that:\r\n```\r\n/usr/bin/ld: CMakeFiles/secp256k1_obj.dir/secp256k1.c.o: in function `secp256k1_selftest':\r\n/home/hebasto/git/secp256k1/src/secp256k1.c:85: multiple definition of `secp256k1_selftest'; CMakeFiles/bench_internal.dir/bench_internal.c.o:/home/hebasto/git/secp256k1/src/secp256k1.c:85: first defined here\r\n```",
      "created_at": "2023-01-18T19:32:14Z",
      "updated_at": "2023-01-18T19:32:14Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073985761",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073985761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073987554",
      "pull_request_review_id": 1254186489,
      "id": 1073987554,
      "node_id": "PRRC_kwDOAP4Jqs5AA7_i",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+add_library(${PROJECT_NAME} SHARED \"\")\n+target_sources(${PROJECT_NAME} PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(WIN32)\n+  target_compile_definitions(${PROJECT_NAME} PRIVATE DLL_EXPORT)\n+endif()\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+else()\n+  set_target_properties(${PROJECT_NAME} PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC \"\")\n+target_sources(${PROJECT_NAME}_static PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}_static\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+else()\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_shared INTERFACE)\n+target_link_libraries(link_shared INTERFACE\n+  ${PROJECT_NAME}\n+)\n+\n+add_library(link_static INTERFACE)\n+target_link_libraries(link_static INTERFACE\n+  ${PROJECT_NAME}_static\n+)\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_shared)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "84f1fd27a07eb7f54bd6454019384660b6b4a108",
      "in_reply_to_id": 1073905654,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can't include the object built from secp256k1.c, because that's included in the tests.c code already (that's exactly the point; the built static library does include these).\n\nOnly link with the objects from precomputed_*, and if need be, external asm objects.",
      "created_at": "2023-01-18T19:33:56Z",
      "updated_at": "2023-01-18T19:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1073987554",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1073987554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1074034054",
      "pull_request_review_id": 1254260356,
      "id": 1074034054,
      "node_id": "PRRC_kwDOAP4Jqs5ABHWG",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+add_library(${PROJECT_NAME} SHARED \"\")\n+target_sources(${PROJECT_NAME} PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(WIN32)\n+  target_compile_definitions(${PROJECT_NAME} PRIVATE DLL_EXPORT)\n+endif()\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+else()\n+  set_target_properties(${PROJECT_NAME} PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC \"\")\n+target_sources(${PROJECT_NAME}_static PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}_static\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+else()\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_shared INTERFACE)\n+target_link_libraries(link_shared INTERFACE\n+  ${PROJECT_NAME}\n+)\n+\n+add_library(link_static INTERFACE)\n+target_link_libraries(link_static INTERFACE\n+  ${PROJECT_NAME}_static\n+)\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_shared)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "84f1fd27a07eb7f54bd6454019384660b6b4a108",
      "in_reply_to_id": 1073905654,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Easy to reproduce with:\r\n```\r\n$ gcc src/bench_internal.c src/precomputed_ecmult.c src/precomputed_ecmult_gen.c src/secp256k1.c\r\n```",
      "created_at": "2023-01-18T20:19:48Z",
      "updated_at": "2023-01-18T20:19:48Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1074034054",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1074034054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1074035055",
      "pull_request_review_id": 1254261924,
      "id": 1074035055,
      "node_id": "PRRC_kwDOAP4Jqs5ABHlv",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+add_library(${PROJECT_NAME} SHARED \"\")\n+target_sources(${PROJECT_NAME} PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(WIN32)\n+  target_compile_definitions(${PROJECT_NAME} PRIVATE DLL_EXPORT)\n+endif()\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+else()\n+  set_target_properties(${PROJECT_NAME} PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC \"\")\n+target_sources(${PROJECT_NAME}_static PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}_static\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+else()\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_shared INTERFACE)\n+target_link_libraries(link_shared INTERFACE\n+  ${PROJECT_NAME}\n+)\n+\n+add_library(link_static INTERFACE)\n+target_link_libraries(link_static INTERFACE\n+  ${PROJECT_NAME}_static\n+)\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_shared)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "84f1fd27a07eb7f54bd6454019384660b6b4a108",
      "in_reply_to_id": 1073905654,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Don't include `src/secp256k1.c`, that's the point. The static library includes it, but the \"internal\" binaries don't need it.",
      "created_at": "2023-01-18T20:20:55Z",
      "updated_at": "2023-01-18T20:26:35Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1074035055",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1074035055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1080561536",
      "pull_request_review_id": 1260778789,
      "id": 1080561536,
      "node_id": "PRRC_kwDOAP4Jqs5AaA-A",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+add_library(${PROJECT_NAME} SHARED \"\")\n+target_sources(${PROJECT_NAME} PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(WIN32)\n+  target_compile_definitions(${PROJECT_NAME} PRIVATE DLL_EXPORT)\n+endif()\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+else()\n+  set_target_properties(${PROJECT_NAME} PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC \"\")\n+target_sources(${PROJECT_NAME}_static PRIVATE\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+  secp256k1.c\n+)\n+target_include_directories(${PROJECT_NAME}_static\n+  INTERFACE\n+    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>\n+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+else()\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    EXCLUDE_FROM_ALL TRUE\n+  )\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_shared INTERFACE)\n+target_link_libraries(link_shared INTERFACE\n+  ${PROJECT_NAME}\n+)\n+\n+add_library(link_static INTERFACE)\n+target_link_libraries(link_static INTERFACE\n+  ${PROJECT_NAME}_static\n+)\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_shared)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 72,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "84f1fd27a07eb7f54bd6454019384660b6b4a108",
      "in_reply_to_id": 1073905654,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1396093991).",
      "created_at": "2023-01-18T21:12:20Z",
      "updated_at": "2023-01-18T21:12:21Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1080561536",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1080561536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1087070860",
      "pull_request_review_id": 1269956880,
      "id": 1087070860,
      "node_id": "PRRC_kwDOAP4Jqs5Ay2KM",
      "diff_hunk": "@@ -0,0 +1,301 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \"auto\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"auto\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"int128_struct\\\", \\\"int128\\\", \\\"int64\\\" or \\\"auto\\\". [default=auto]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"int128_struct\" \"int128\" \"int64\" \"auto\")\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int128_struct\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128_STRUCT)\n+elseif(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int128\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+elseif(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int64\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT64)\n+elseif(NOT SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"auto\")\n+  message(FATAL_ERROR \"SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY value is \\\"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\\\", but legal values are: \\\"int128_struct\\\", \\\"int128\\\", \\\"int64\\\" or \\\"auto\\\".\")\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+set(SECP256K1_ASM \"auto\" CACHE STRING \"Assembly optimizations to use: \\\"x86_64\\\", \\\"arm\\\" (experimental), \\\"OFF\\\" or \\\"auto\\\". [default=auto]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"x86_64\" \"arm\" \"OFF\" \"auto\")\n+include(Check64bitAssembly)\n+if(SECP256K1_ASM STREQUAL \"auto\")\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+  else()\n+    set(SECP256K1_ASM \"OFF\")\n+  endif()\n+elseif(SECP256K1_ASM STREQUAL \"x86_64\")\n+  check_64bit_assembly()\n+  if(NOT HAS_64BIT_ASM)\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+elseif(NOT SECP256K1_ASM STREQUAL \"arm\" AND NOT SECP256K1_ASM STREQUAL \"OFF\")\n+  message(FATAL_ERROR \"SECP256K1_ASM value is \\\"${SECP256K1_ASM}\\\", but legal values are: \\\"x86_64\\\", \\\"arm\\\", \\\"OFF\\\" or \\\"auto\\\".\")\n+endif()\n+if(SECP256K1_ASM STREQUAL \"x86_64\")\n+  add_definitions(-DUSE_ASM_X86_64)\n+elseif(SECP256K1_ASM STREQUAL \"arm\")\n+  add_definitions(-DUSE_EXTERNAL_ASM)\n+  set(USE_EXTERNAL_ASM TRUE)\n+  set(USE_ASM_ARM TRUE)\n+endif()\n+\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_VALGRIND \"Build with extra checks for running inside Valgrind.\" OFF)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 129,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "1b0e0ba27a57cf74fdd0f3c06e1441c44119883d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can this be auto-detected and on by default if detected?",
      "created_at": "2023-01-25T19:12:07Z",
      "updated_at": "2023-01-25T19:12:08Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1087070860",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1087070860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1087071529",
      "pull_request_review_id": 1269957928,
      "id": 1087071529,
      "node_id": "PRRC_kwDOAP4Jqs5Ay2Up",
      "diff_hunk": "@@ -0,0 +1,301 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \"auto\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"auto\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"int128_struct\\\", \\\"int128\\\", \\\"int64\\\" or \\\"auto\\\". [default=auto]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"int128_struct\" \"int128\" \"int64\" \"auto\")\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int128_struct\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128_STRUCT)\n+elseif(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int128\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+elseif(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int64\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT64)\n+elseif(NOT SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"auto\")\n+  message(FATAL_ERROR \"SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY value is \\\"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\\\", but legal values are: \\\"int128_struct\\\", \\\"int128\\\", \\\"int64\\\" or \\\"auto\\\".\")\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+set(SECP256K1_ASM \"auto\" CACHE STRING \"Assembly optimizations to use: \\\"x86_64\\\", \\\"arm\\\" (experimental), \\\"OFF\\\" or \\\"auto\\\". [default=auto]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"x86_64\" \"arm\" \"OFF\" \"auto\")\n+include(Check64bitAssembly)\n+if(SECP256K1_ASM STREQUAL \"auto\")\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+  else()\n+    set(SECP256K1_ASM \"OFF\")\n+  endif()\n+elseif(SECP256K1_ASM STREQUAL \"x86_64\")\n+  check_64bit_assembly()\n+  if(NOT HAS_64BIT_ASM)\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+elseif(NOT SECP256K1_ASM STREQUAL \"arm\" AND NOT SECP256K1_ASM STREQUAL \"OFF\")\n+  message(FATAL_ERROR \"SECP256K1_ASM value is \\\"${SECP256K1_ASM}\\\", but legal values are: \\\"x86_64\\\", \\\"arm\\\", \\\"OFF\\\" or \\\"auto\\\".\")\n+endif()\n+if(SECP256K1_ASM STREQUAL \"x86_64\")\n+  add_definitions(-DUSE_ASM_X86_64)\n+elseif(SECP256K1_ASM STREQUAL \"arm\")\n+  add_definitions(-DUSE_EXTERNAL_ASM)\n+  set(USE_EXTERNAL_ASM TRUE)\n+  set(USE_ASM_ARM TRUE)\n+endif()\n+\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_VALGRIND \"Build with extra checks for running inside Valgrind.\" OFF)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind REQUIRED)\n+  if(Valgrind_FOUND)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 142,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "1b0e0ba27a57cf74fdd0f3c06e1441c44119883d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It should be possible to configure enabling the ctime tests even when valgrind is not available (specifically, for building with msan).",
      "created_at": "2023-01-25T19:12:57Z",
      "updated_at": "2023-01-25T19:13:21Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1087071529",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1087071529"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1087084821",
      "pull_request_review_id": 1269977276,
      "id": 1087084821,
      "node_id": "PRRC_kwDOAP4Jqs5Ay5kV",
      "diff_hunk": "@@ -0,0 +1,301 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \"auto\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"auto\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"int128_struct\\\", \\\"int128\\\", \\\"int64\\\" or \\\"auto\\\". [default=auto]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"int128_struct\" \"int128\" \"int64\" \"auto\")\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int128_struct\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128_STRUCT)\n+elseif(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int128\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+elseif(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int64\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT64)\n+elseif(NOT SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"auto\")\n+  message(FATAL_ERROR \"SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY value is \\\"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\\\", but legal values are: \\\"int128_struct\\\", \\\"int128\\\", \\\"int64\\\" or \\\"auto\\\".\")\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+set(SECP256K1_ASM \"auto\" CACHE STRING \"Assembly optimizations to use: \\\"x86_64\\\", \\\"arm\\\" (experimental), \\\"OFF\\\" or \\\"auto\\\". [default=auto]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"x86_64\" \"arm\" \"OFF\" \"auto\")\n+include(Check64bitAssembly)\n+if(SECP256K1_ASM STREQUAL \"auto\")\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+  else()\n+    set(SECP256K1_ASM \"OFF\")\n+  endif()\n+elseif(SECP256K1_ASM STREQUAL \"x86_64\")\n+  check_64bit_assembly()\n+  if(NOT HAS_64BIT_ASM)\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+elseif(NOT SECP256K1_ASM STREQUAL \"arm\" AND NOT SECP256K1_ASM STREQUAL \"OFF\")\n+  message(FATAL_ERROR \"SECP256K1_ASM value is \\\"${SECP256K1_ASM}\\\", but legal values are: \\\"x86_64\\\", \\\"arm\\\", \\\"OFF\\\" or \\\"auto\\\".\")\n+endif()\n+if(SECP256K1_ASM STREQUAL \"x86_64\")\n+  add_definitions(-DUSE_ASM_X86_64)\n+elseif(SECP256K1_ASM STREQUAL \"arm\")\n+  add_definitions(-DUSE_EXTERNAL_ASM)\n+  set(USE_EXTERNAL_ASM TRUE)\n+  set(USE_ASM_ARM TRUE)\n+endif()\n+\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_VALGRIND \"Build with extra checks for running inside Valgrind.\" OFF)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind REQUIRED)\n+  if(Valgrind_FOUND)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 142,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "1b0e0ba27a57cf74fdd0f3c06e1441c44119883d",
      "in_reply_to_id": 1087071529,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The code defines the default value only. Consider:\r\n```\r\n$ cmake -S . -B build -DSECP256K1_VALGRIND=OFF -DSECP256K1_BUILD_CTIME_TESTS=ON\r\n...\r\nsecp256k1 configure summary\r\n===========================\r\n...\r\n  ctime_tests ......................... ON\r\n...\r\nValgrind .............................. OFF\r\n```",
      "created_at": "2023-01-25T19:28:58Z",
      "updated_at": "2023-01-25T19:29:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1087084821",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1087084821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1087085462",
      "pull_request_review_id": 1269978135,
      "id": 1087085462,
      "node_id": "PRRC_kwDOAP4Jqs5Ay5uW",
      "diff_hunk": "@@ -0,0 +1,301 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \"auto\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"auto\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"int128_struct\\\", \\\"int128\\\", \\\"int64\\\" or \\\"auto\\\". [default=auto]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"int128_struct\" \"int128\" \"int64\" \"auto\")\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int128_struct\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128_STRUCT)\n+elseif(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int128\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+elseif(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int64\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT64)\n+elseif(NOT SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"auto\")\n+  message(FATAL_ERROR \"SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY value is \\\"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\\\", but legal values are: \\\"int128_struct\\\", \\\"int128\\\", \\\"int64\\\" or \\\"auto\\\".\")\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+set(SECP256K1_ASM \"auto\" CACHE STRING \"Assembly optimizations to use: \\\"x86_64\\\", \\\"arm\\\" (experimental), \\\"OFF\\\" or \\\"auto\\\". [default=auto]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"x86_64\" \"arm\" \"OFF\" \"auto\")\n+include(Check64bitAssembly)\n+if(SECP256K1_ASM STREQUAL \"auto\")\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+  else()\n+    set(SECP256K1_ASM \"OFF\")\n+  endif()\n+elseif(SECP256K1_ASM STREQUAL \"x86_64\")\n+  check_64bit_assembly()\n+  if(NOT HAS_64BIT_ASM)\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+elseif(NOT SECP256K1_ASM STREQUAL \"arm\" AND NOT SECP256K1_ASM STREQUAL \"OFF\")\n+  message(FATAL_ERROR \"SECP256K1_ASM value is \\\"${SECP256K1_ASM}\\\", but legal values are: \\\"x86_64\\\", \\\"arm\\\", \\\"OFF\\\" or \\\"auto\\\".\")\n+endif()\n+if(SECP256K1_ASM STREQUAL \"x86_64\")\n+  add_definitions(-DUSE_ASM_X86_64)\n+elseif(SECP256K1_ASM STREQUAL \"arm\")\n+  add_definitions(-DUSE_EXTERNAL_ASM)\n+  set(USE_EXTERNAL_ASM TRUE)\n+  set(USE_ASM_ARM TRUE)\n+endif()\n+\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_VALGRIND \"Build with extra checks for running inside Valgrind.\" OFF)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind REQUIRED)\n+  if(Valgrind_FOUND)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 142,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "1b0e0ba27a57cf74fdd0f3c06e1441c44119883d",
      "in_reply_to_id": 1087071529,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Apologies, I should have tried!",
      "created_at": "2023-01-25T19:29:42Z",
      "updated_at": "2023-01-25T19:29:42Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1087085462",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1087085462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1087214132",
      "pull_request_review_id": 1270170814,
      "id": 1087214132,
      "node_id": "PRRC_kwDOAP4Jqs5AzZI0",
      "diff_hunk": "@@ -0,0 +1,301 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE auto CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"auto\\\" is a reasonable setting for desktop machines (currently 15). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \"auto\")\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+if(NOT SECP256K1_ECMULT_WINDOW_SIZE MATCHES ^[1-9][0-9]*$ OR SECP256K1_ECMULT_WINDOW_SIZE LESS 2 OR SECP256K1_ECMULT_WINDOW_SIZE GREATER 24)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_WINDOW_SIZE value is \\\"${SECP256K1_ECMULT_WINDOW_SIZE}\\\", but must an integer in range [2..24] or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS auto CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"auto\\\" is a reasonable setting for desktop machines (currently 4). [default=auto]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS auto 2 4 8)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"auto\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+if(NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 2 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 4 AND NOT SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL 8)\n+  message(FATAL_ERROR \"SECP256K1_ECMULT_GEN_PREC_BITS value is \\\"${SECP256K1_ECMULT_GEN_PREC_BITS}\\\", but must an integer 2, 4, 8, or \\\"auto\\\".\")\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"auto\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"int128_struct\\\", \\\"int128\\\", \\\"int64\\\" or \\\"auto\\\". [default=auto]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"int128_struct\" \"int128\" \"int64\" \"auto\")\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int128_struct\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128_STRUCT)\n+elseif(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int128\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT128)\n+elseif(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"int64\")\n+  add_definitions(-DUSE_FORCE_WIDEMUL_INT64)\n+elseif(NOT SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY STREQUAL \"auto\")\n+  message(FATAL_ERROR \"SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY value is \\\"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\\\", but legal values are: \\\"int128_struct\\\", \\\"int128\\\", \\\"int64\\\" or \\\"auto\\\".\")\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+set(SECP256K1_ASM \"auto\" CACHE STRING \"Assembly optimizations to use: \\\"x86_64\\\", \\\"arm\\\" (experimental), \\\"OFF\\\" or \\\"auto\\\". [default=auto]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"x86_64\" \"arm\" \"OFF\" \"auto\")\n+include(Check64bitAssembly)\n+if(SECP256K1_ASM STREQUAL \"auto\")\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+  else()\n+    set(SECP256K1_ASM \"OFF\")\n+  endif()\n+elseif(SECP256K1_ASM STREQUAL \"x86_64\")\n+  check_64bit_assembly()\n+  if(NOT HAS_64BIT_ASM)\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+elseif(NOT SECP256K1_ASM STREQUAL \"arm\" AND NOT SECP256K1_ASM STREQUAL \"OFF\")\n+  message(FATAL_ERROR \"SECP256K1_ASM value is \\\"${SECP256K1_ASM}\\\", but legal values are: \\\"x86_64\\\", \\\"arm\\\", \\\"OFF\\\" or \\\"auto\\\".\")\n+endif()\n+if(SECP256K1_ASM STREQUAL \"x86_64\")\n+  add_definitions(-DUSE_ASM_X86_64)\n+elseif(SECP256K1_ASM STREQUAL \"arm\")\n+  add_definitions(-DUSE_EXTERNAL_ASM)\n+  set(USE_EXTERNAL_ASM TRUE)\n+  set(USE_ASM_ARM TRUE)\n+endif()\n+\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_VALGRIND \"Build with extra checks for running inside Valgrind.\" OFF)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 129,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "1b0e0ba27a57cf74fdd0f3c06e1441c44119883d",
      "in_reply_to_id": 1087070860,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure! [Done](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1404261767).",
      "created_at": "2023-01-25T21:45:56Z",
      "updated_at": "2023-01-25T21:45:57Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1087214132",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1087214132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124253345",
      "pull_request_review_id": 1323437033,
      "id": 1124253345,
      "node_id": "PRRC_kwDOAP4Jqs5DAr6h",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Is there a reason why you set `LANGUAGES NONE` instead of `C` and use `enable_language(C)` below?",
      "created_at": "2023-03-03T10:05:30Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124253345",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124253345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124264718",
      "pull_request_review_id": 1323437033,
      "id": 1124264718,
      "node_id": "PRRC_kwDOAP4Jqs5DAusO",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 27,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason not rely to the default here? AFAIU we also don't set this explicitly in the autotools build.",
      "created_at": "2023-03-03T10:17:12Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124264718",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124264718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124265598",
      "pull_request_review_id": 1323437033,
      "id": 1124265598,
      "node_id": "PRRC_kwDOAP4Jqs5DAu5-",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.",
      "path": "CMakeLists.txt",
      "position": 29,
      "original_position": 31,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The reasoning should be documented.",
      "created_at": "2023-03-03T10:18:05Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124265598",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124265598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124269886",
      "pull_request_review_id": 1323437033,
      "id": 1124269886,
      "node_id": "PRRC_kwDOAP4Jqs5DAv8-",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)",
      "path": "CMakeLists.txt",
      "position": 118,
      "original_position": 120,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Is there a reason why you use a different capitalization for valgrind sometimes?",
      "created_at": "2023-03-03T10:22:39Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124269886",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124269886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 118,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124273356",
      "pull_request_review_id": 1323437033,
      "id": 1124273356,
      "node_id": "PRRC_kwDOAP4Jqs5DAwzM",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)\n+else()\n+  try_add_compile_option(-pedantic)\n+  try_add_compile_option(-Wall)\n+  try_add_compile_option(-Wcast-align)\n+  try_add_compile_option(-Wcast-align=strict)\n+  try_add_compile_option(-Wconditional-uninitialized)\n+  try_add_compile_option(-Wextra)\n+  try_add_compile_option(-Wnested-externs)\n+  try_add_compile_option(-Wno-long-long)\n+  try_add_compile_option(-Wno-overlength-strings)\n+  try_add_compile_option(-Wno-unused-function)\n+  try_add_compile_option(-Wreserved-identifier)\n+  try_add_compile_option(-Wshadow)\n+  try_add_compile_option(-Wstrict-prototypes)\n+  try_add_compile_option(-Wundef)\n+endif()\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 206,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here we deviate from autotools. It may indeed be a good idea to set `-fvisibility-inlines-hidden`, also in autotools, but I think this should be the concern of a different PR.\r\n\r\nI think it's a good idea to change this in lockstep in both build systems to keep the differences between them small.",
      "created_at": "2023-03-03T10:26:14Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124273356",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124273356"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 206,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124276576",
      "pull_request_review_id": 1323437033,
      "id": 1124276576,
      "node_id": "PRRC_kwDOAP4Jqs5DAxlg",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 182,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here, I think these are indeed better warning options than in `configure.ac` (awesome that you took the time to figure them out!), but this PR should keep them in sync with `configure.ac`.",
      "created_at": "2023-03-03T10:29:38Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124276576",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124276576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 178,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124301931",
      "pull_request_review_id": 1323437033,
      "id": 1124301931,
      "node_id": "PRRC_kwDOAP4Jqs5DA3xr",
      "diff_hunk": "@@ -73,6 +71,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake (experimental)\n+----------------------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ make check  # run the test suite\n+    $ sudo make install  # optional",
      "path": "README.md",
      "position": 28,
      "original_position": 28,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This obviously works, but I think the proper cmake way of doing this is like this: \r\n```suggestion\r\n    $ cmake --build .\r\n    $ cmake --build . --target check  # run the test suite\r\n    $ cmake --build . --target install  # optional\r\n```\r\n\r\nThen this works with every cmake backend, not only GNU make (as you describe below for windows). E.g. install ninja and try `cmake -G ninja ..` and then the above.\r\n\r\nSee https://cmake.org/cmake/help/latest/guide/tutorial/A%20Basic%20Starting%20Point.html and \"Invoking make\" here: https://web.archive.org/web/20190722182127/http://voices.canonical.com/jussi.pakkanen/2013/03/26/a-list-of-common-cmake-antipatterns/",
      "created_at": "2023-03-03T10:53:41Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124301931",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124301931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": 83,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124303691",
      "pull_request_review_id": 1323437033,
      "id": 1124303691,
      "node_id": "PRRC_kwDOAP4Jqs5DA4NL",
      "diff_hunk": "@@ -0,0 +1,36 @@\n+if(APPLE)\n+  find_program(BREW_COMMAND brew)\n+  execute_process(\n+    COMMAND ${BREW_COMMAND} --prefix valgrind\n+    OUTPUT_VARIABLE valgrind_brew_prefix\n+    ERROR_QUIET\n+    OUTPUT_STRIP_TRAILING_WHITESPACE\n+  )\n+endif()\n+\n+find_path(Valgrind_INCLUDE_DIR\n+  NAMES valgrind/memcheck.h\n+  HINTS ${valgrind_brew_prefix}/include",
      "path": "cmake/FindValgrind.cmake",
      "position": null,
      "original_position": 13,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n  HINTS $<valgrind_brew_prefix,{valgrind_brew_prefix}/include>$\r\n```\r\nI need this to get rid of a warning when I run cmake with the lint `--warn-uninitialized`.",
      "created_at": "2023-03-03T10:55:28Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124303691",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124303691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124443691",
      "pull_request_review_id": 1323437033,
      "id": 1124443691,
      "node_id": "PRRC_kwDOAP4Jqs5DBaYr",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 143,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm still not entirely convinced about this.\r\n\r\n * I think users familiar with CMake have an assumption that predefined targets do more or less what they're supposed to do. So, if we want debugging output by debug we should rather set our default target to `RelWithDebugInfo`.\r\n * CMake may have initialized the flags variables already, so we should probably not `set` it, but merely to replace them carefully. For example, [CMake supports countless compilers](https://gitlab.kitware.com/cmake/cmake/-/tree/master/Modules/Compiler) and for some -O2 is not a valid option at all.   \r\n\r\nI suggest this:\r\n```suggestion\r\n# Redefine configuration flags.\r\nif(MSVC)\r\n  string(REPLACE \" /DNDEBUG \"  \" \" CMAKE_C_FLAGS_RELEASE \" ${CMAKE_C_FLAGS_RELEASE} \")\r\n  string(REPLACE \" /DNDEBUG \"  \" \" CMAKE_C_FLAGS_RELWITHDEBINFO \" ${CMAKE_C_FLAGS_RELWITHDEBINFO} \")\r\n  string(REPLACE \" /DNDEBUG \"  \" \" CMAKE_C_FLAGS_MINSIZEREL \" ${CMAKE_C_FLAGS_MINSIZEREL} \")\r\nelse()\r\n  string(REPLACE \" -DNDEBUG \"  \" \" CMAKE_C_FLAGS_RELEASE \" ${CMAKE_C_FLAGS_RELEASE} \")\r\n  string(REPLACE \" -DNDEBUG \"  \" \" CMAKE_C_FLAGS_RELWITHDEBINFO \" ${CMAKE_C_FLAGS_RELWITHDEBINFO} \")\r\n  string(REPLACE \" -DNDEBUG \"  \" \" CMAKE_C_FLAGS_MINSIZEREL \" ${CMAKE_C_FLAGS_MINSIZEREL} \")\r\n  # Prefer -O2 optimization level\r\n  string(REPLACE \" -O3 \"  \" -O2 \" CMAKE_C_FLAGS_RELEASE \" ${CMAKE_C_FLAGS_RELEASE} \")\r\nendif()\r\n```\r\n\r\nNotes:\r\n - I tried to add some spacing to make sure we replace `-DNDEBUG` but not `-DNDEBUGGGG`.\r\n - As an even less aggressive variant, we could strip `-DNDEBUG` only in the `examples` directory... But not sure. That may be overkill. Stripping it everywhere is certainly okay and makes the compiler invocation a bit cleaner for non-exotic compilers. What do you think?\r\n - We could actually guard the replacing of O2 by a check for gcc/clang, but I'm not convinced. We don't do this in autotools either...\r\n - `set`ting is totally fine for the coverage build below. This is a developer thing anyway.",
      "created_at": "2023-03-03T13:18:58Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124443691",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124443691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 137,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124457430",
      "pull_request_review_id": 1323437033,
      "id": 1124457430,
      "node_id": "PRRC_kwDOAP4Jqs5DBdvW",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)\n+else()\n+  try_add_compile_option(-pedantic)\n+  try_add_compile_option(-Wall)\n+  try_add_compile_option(-Wcast-align)\n+  try_add_compile_option(-Wcast-align=strict)\n+  try_add_compile_option(-Wconditional-uninitialized)\n+  try_add_compile_option(-Wextra)\n+  try_add_compile_option(-Wnested-externs)\n+  try_add_compile_option(-Wno-long-long)\n+  try_add_compile_option(-Wno-overlength-strings)\n+  try_add_compile_option(-Wno-unused-function)\n+  try_add_compile_option(-Wreserved-identifier)\n+  try_add_compile_option(-Wshadow)\n+  try_add_compile_option(-Wstrict-prototypes)\n+  try_add_compile_option(-Wundef)\n+endif()\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)\n+\n+include(CTest)\n+if(SECP256K1_BUILD_BENCHMARK OR SECP256K1_BUILD_TESTS OR SECP256K1_BUILD_EXHAUSTIVE_TESTS OR SECP256K1_BUILD_CTIME_TESTS OR SECP256K1_BUILD_EXAMPLES)\n+  # We do not use CMake CTest's BUILD_TESTING option.\n+  mark_as_advanced(BUILD_TESTING)\n+  enable_testing()\n+  add_custom_target(check\n+    COMMAND ${CMAKE_CTEST_COMMAND} -C $<$<CONFIG:Release>:Release>$<$<CONFIG:Debug>:Debug>\n+    VERBATIM\n+  )\n+endif()\n+\n+add_subdirectory(src)\n+if(SECP256K1_BUILD_EXAMPLES)\n+  add_subdirectory(examples)\n+endif()\n+\n+message(\"\\n\")\n+message(\"secp256k1 configure summary\")\n+message(\"===========================\")\n+message(\"Build artifacts:\")\n+message(\"  shared library ...................... ${SECP256K1_BUILD_SHARED}\")\n+message(\"  static library ...................... ${SECP256K1_BUILD_STATIC}\")\n+message(\"Optional modules:\")\n+message(\"  ECDH ................................ ${SECP256K1_ENABLE_MODULE_ECDH}\")\n+message(\"  ECDSA pubkey recovery ............... ${SECP256K1_ENABLE_MODULE_RECOVERY}\")\n+message(\"  extrakeys ........................... ${SECP256K1_ENABLE_MODULE_EXTRAKEYS}\")\n+message(\"  schnorrsig .......................... ${SECP256K1_ENABLE_MODULE_SCHNORRSIG}\")\n+message(\"Parameters:\")\n+message(\"  ecmult window size .................. ${SECP256K1_ECMULT_WINDOW_SIZE}\")\n+message(\"  ecmult gen precision bits ........... ${SECP256K1_ECMULT_GEN_PREC_BITS}\")\n+message(\"Optional features:\")\n+message(\"  assembly optimization ............... ${SECP256K1_ASM}\")\n+message(\"  external callbacks .................. ${SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS}\")\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  message(\"  wide multiplication (test-only) ..... ${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\")\n+endif()\n+message(\"Optional binaries:\")\n+message(\"  benchmark ........................... ${SECP256K1_BUILD_BENCHMARK}\")\n+message(\"  noverify_tests ...................... ${SECP256K1_BUILD_TESTS}\")\n+set(tests_status \"${SECP256K1_BUILD_TESTS}\")\n+if(CMAKE_BUILD_TYPE STREQUAL \"Coverage\")\n+  set(tests_status OFF)\n+endif()\n+message(\"  tests ............................... ${tests_status}\")\n+message(\"  exhaustive tests .................... ${SECP256K1_BUILD_EXHAUSTIVE_TESTS}\")\n+message(\"  ctime_tests ......................... ${SECP256K1_BUILD_CTIME_TESTS}\")\n+message(\"  examples ............................ ${SECP256K1_BUILD_EXAMPLES}\")\n+message(\"\")\n+if(CMAKE_CROSSCOMPILING)\n+  set(cross_status \"TRUE, for ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+else()\n+  set(cross_status \"FALSE\")\n+endif()\n+message(\"Cross compiling ....................... ${cross_status}\")\n+message(\"Valgrind .............................. ${SECP256K1_VALGRIND}\")\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+string(REPLACE \";\" \" \" definitions \"${definitions}\")\n+message(\"Preprocessor defined macros ........... ${definitions}\")\n+message(\"C compiler ............................ ${CMAKE_C_COMPILER}\")\n+message(\"CFLAGS ................................ ${CMAKE_C_FLAGS}\")\n+get_directory_property(compile_options COMPILE_OPTIONS)\n+string(REPLACE \";\" \" \" compile_options \"${compile_options}\")\n+message(\"Compile options ....................... \" ${compile_options})\n+if(DEFINED CMAKE_BUILD_TYPE)\n+  message(\"Build type:\")\n+  message(\" - CMAKE_BUILD_TYPE ................... ${CMAKE_BUILD_TYPE}\")\n+  string(TOUPPER \"${CMAKE_BUILD_TYPE}\" build_type)\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_${build_type}}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_${build_type}}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_${build_type}}\")\n+else()\n+  message(\"Available configurations .............. ${CMAKE_CONFIGURATION_TYPES}\")\n+  message(\"Debug configuration:\")\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_DEBUG}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_DEBUG}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_DEBUG}\")\n+  message(\"Release configuration:\")\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_RELEASE}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_RELEASE}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_RELEASE}\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 287,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n  message(\"RelWithDebInfo configuration:\")\r\n  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\r\n  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO}\")\r\n  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO}\")\r\n```\r\n\r\nI don't think we'll typically `-O0`, so let's drop the \"Debug\" output here entirely \r\n\r\nAnyway, this is only for multi-config generators like -G \"Ninja Multi-Config\"...",
      "created_at": "2023-03-03T13:30:53Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124457430",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124457430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 280,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124460512",
      "pull_request_review_id": 1323437033,
      "id": 1124460512,
      "node_id": "PRRC_kwDOAP4Jqs5DBefg",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)\n+else()\n+  try_add_compile_option(-pedantic)\n+  try_add_compile_option(-Wall)\n+  try_add_compile_option(-Wcast-align)\n+  try_add_compile_option(-Wcast-align=strict)\n+  try_add_compile_option(-Wconditional-uninitialized)\n+  try_add_compile_option(-Wextra)\n+  try_add_compile_option(-Wnested-externs)\n+  try_add_compile_option(-Wno-long-long)\n+  try_add_compile_option(-Wno-overlength-strings)\n+  try_add_compile_option(-Wno-unused-function)\n+  try_add_compile_option(-Wreserved-identifier)\n+  try_add_compile_option(-Wshadow)\n+  try_add_compile_option(-Wstrict-prototypes)\n+  try_add_compile_option(-Wundef)\n+endif()\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)\n+\n+include(CTest)\n+if(SECP256K1_BUILD_BENCHMARK OR SECP256K1_BUILD_TESTS OR SECP256K1_BUILD_EXHAUSTIVE_TESTS OR SECP256K1_BUILD_CTIME_TESTS OR SECP256K1_BUILD_EXAMPLES)\n+  # We do not use CMake CTest's BUILD_TESTING option.\n+  mark_as_advanced(BUILD_TESTING)\n+  enable_testing()\n+  add_custom_target(check\n+    COMMAND ${CMAKE_CTEST_COMMAND} -C $<$<CONFIG:Release>:Release>$<$<CONFIG:Debug>:Debug>\n+    VERBATIM\n+  )\n+endif()\n+\n+add_subdirectory(src)\n+if(SECP256K1_BUILD_EXAMPLES)\n+  add_subdirectory(examples)\n+endif()\n+\n+message(\"\\n\")\n+message(\"secp256k1 configure summary\")\n+message(\"===========================\")\n+message(\"Build artifacts:\")\n+message(\"  shared library ...................... ${SECP256K1_BUILD_SHARED}\")\n+message(\"  static library ...................... ${SECP256K1_BUILD_STATIC}\")\n+message(\"Optional modules:\")\n+message(\"  ECDH ................................ ${SECP256K1_ENABLE_MODULE_ECDH}\")\n+message(\"  ECDSA pubkey recovery ............... ${SECP256K1_ENABLE_MODULE_RECOVERY}\")\n+message(\"  extrakeys ........................... ${SECP256K1_ENABLE_MODULE_EXTRAKEYS}\")\n+message(\"  schnorrsig .......................... ${SECP256K1_ENABLE_MODULE_SCHNORRSIG}\")\n+message(\"Parameters:\")\n+message(\"  ecmult window size .................. ${SECP256K1_ECMULT_WINDOW_SIZE}\")\n+message(\"  ecmult gen precision bits ........... ${SECP256K1_ECMULT_GEN_PREC_BITS}\")\n+message(\"Optional features:\")\n+message(\"  assembly optimization ............... ${SECP256K1_ASM}\")\n+message(\"  external callbacks .................. ${SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS}\")\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  message(\"  wide multiplication (test-only) ..... ${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\")\n+endif()\n+message(\"Optional binaries:\")\n+message(\"  benchmark ........................... ${SECP256K1_BUILD_BENCHMARK}\")\n+message(\"  noverify_tests ...................... ${SECP256K1_BUILD_TESTS}\")\n+set(tests_status \"${SECP256K1_BUILD_TESTS}\")\n+if(CMAKE_BUILD_TYPE STREQUAL \"Coverage\")\n+  set(tests_status OFF)\n+endif()\n+message(\"  tests ............................... ${tests_status}\")\n+message(\"  exhaustive tests .................... ${SECP256K1_BUILD_EXHAUSTIVE_TESTS}\")\n+message(\"  ctime_tests ......................... ${SECP256K1_BUILD_CTIME_TESTS}\")\n+message(\"  examples ............................ ${SECP256K1_BUILD_EXAMPLES}\")\n+message(\"\")\n+if(CMAKE_CROSSCOMPILING)\n+  set(cross_status \"TRUE, for ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+else()\n+  set(cross_status \"FALSE\")\n+endif()\n+message(\"Cross compiling ....................... ${cross_status}\")\n+message(\"Valgrind .............................. ${SECP256K1_VALGRIND}\")\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+string(REPLACE \";\" \" \" definitions \"${definitions}\")\n+message(\"Preprocessor defined macros ........... ${definitions}\")\n+message(\"C compiler ............................ ${CMAKE_C_COMPILER}\")\n+message(\"CFLAGS ................................ ${CMAKE_C_FLAGS}\")\n+get_directory_property(compile_options COMPILE_OPTIONS)\n+string(REPLACE \";\" \" \" compile_options \"${compile_options}\")\n+message(\"Compile options ....................... \" ${compile_options})\n+if(DEFINED CMAKE_BUILD_TYPE)",
      "path": "CMakeLists.txt",
      "position": 276,
      "original_position": 271,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe add a note that this can be replaced by `NOT GENERATOR_IS_MULTI_CONFIG` (https://cmake.org/cmake/help/latest/prop_gbl/GENERATOR_IS_MULTI_CONFIG.html) once we can require cmake 3.9 ",
      "created_at": "2023-03-03T13:33:27Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124460512",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124460512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 276,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124461398",
      "pull_request_review_id": 1323437033,
      "id": 1124461398,
      "node_id": "PRRC_kwDOAP4Jqs5DBetW",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 169,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nset(default_build_type \"RelWithDebInfo\")\r\n```",
      "created_at": "2023-03-03T13:34:12Z",
      "updated_at": "2023-03-03T14:35:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124461398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124461398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124484845",
      "pull_request_review_id": 1323437033,
      "id": 1124484845,
      "node_id": "PRRC_kwDOAP4Jqs5DBkbt",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)\n+else()\n+  try_add_compile_option(-pedantic)\n+  try_add_compile_option(-Wall)\n+  try_add_compile_option(-Wcast-align)\n+  try_add_compile_option(-Wcast-align=strict)\n+  try_add_compile_option(-Wconditional-uninitialized)\n+  try_add_compile_option(-Wextra)\n+  try_add_compile_option(-Wnested-externs)\n+  try_add_compile_option(-Wno-long-long)\n+  try_add_compile_option(-Wno-overlength-strings)\n+  try_add_compile_option(-Wno-unused-function)\n+  try_add_compile_option(-Wreserved-identifier)\n+  try_add_compile_option(-Wshadow)\n+  try_add_compile_option(-Wstrict-prototypes)\n+  try_add_compile_option(-Wundef)\n+endif()\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)\n+\n+include(CTest)\n+if(SECP256K1_BUILD_BENCHMARK OR SECP256K1_BUILD_TESTS OR SECP256K1_BUILD_EXHAUSTIVE_TESTS OR SECP256K1_BUILD_CTIME_TESTS OR SECP256K1_BUILD_EXAMPLES)\n+  # We do not use CMake CTest's BUILD_TESTING option.\n+  mark_as_advanced(BUILD_TESTING)\n+  enable_testing()\n+  add_custom_target(check\n+    COMMAND ${CMAKE_CTEST_COMMAND} -C $<$<CONFIG:Release>:Release>$<$<CONFIG:Debug>:Debug>",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 214,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    COMMAND ${CMAKE_CTEST_COMMAND} $<$<CONFIG:RelWithDebInfo>,-C RelWithDebInfo>\r\n```\r\nI think just testing `RelWithDebInfo` is good enough. (As I said, we use -O0 really rarely).\r\n\r\nThis should probably check if `RelWithDebInfo` is active. If yes, set `-C RelWithDebInfo` to have a sane default. Otherwise, we can simply omit -C entirely because it's not clear what the user wants.",
      "created_at": "2023-03-03T13:53:37Z",
      "updated_at": "2023-03-03T14:35:45Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124484845",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124484845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 214,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124507388",
      "pull_request_review_id": 1323437033,
      "id": 1124507388,
      "node_id": "PRRC_kwDOAP4Jqs5DBp78",
      "diff_hunk": "@@ -380,3 +380,30 @@ task:\n   test_script:\n     - cd sage\n     - sage prove_group_implementations.sage\n+\n+task:\n+  name: \"x86_64: Windows (VS 2022)\"\n+  windows_container:\n+    image: cirrusci/windowsservercore:visualstudio2022\n+    cpu: 4\n+    memory: 3840MB\n+  env:\n+    PATH: '%CIRRUS_WORKING_DIR%\\build\\src\\Release;%PATH%'\n+    x64_NATIVE_TOOLS: '\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat\"'\n+    # Ignore MSBuild warning MSB8029.\n+    # See: https://learn.microsoft.com/en-us/visualstudio/msbuild/errors/msb8029?view=vs-2022\n+    IgnoreWarnIntDirInTempDetected: 'true'\n+  merge_script:\n+    - PowerShell -NoLogo -Command if ($env:CIRRUS_PR -ne $null) { git fetch $env:CIRRUS_REPO_CLONE_URL pull/$env:CIRRUS_PR/merge; git reset --hard FETCH_HEAD; }\n+  configure_script:\n+    - '%x64_NATIVE_TOOLS%'\n+    - cmake -G \"Visual Studio 17 2022\" -A x64 -S . -B build -DSECP256K1_ENABLE_MODULE_RECOVERY=ON -DSECP256K1_BUILD_EXAMPLES=ON\n+  build_script:\n+    - '%x64_NATIVE_TOOLS%'\n+    - cmake --build build --config Release -j 5 -- /p:CL_MPcount=5",
      "path": ".cirrus.yml",
      "position": null,
      "original_position": 24,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    - cmake --build build --config RelWithDebInfo -j 5 -- /p:CL_MPcount=5\r\n```",
      "created_at": "2023-03-03T14:10:36Z",
      "updated_at": "2023-03-03T14:35:45Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124507388",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124507388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124531191",
      "pull_request_review_id": 1323437033,
      "id": 1124531191,
      "node_id": "PRRC_kwDOAP4Jqs5DBvv3",
      "diff_hunk": "@@ -0,0 +1,151 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL\n+  secp256k1.c\n+  ${internal_obj}\n+)\n+target_include_directories(${PROJECT_NAME} INTERFACE\n+  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+target_compile_definitions(${PROJECT_NAME} PRIVATE\n+  $<$<PLATFORM_ID:Windows>:DLL_EXPORT>\n+)\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  set_target_properties(${PROJECT_NAME} PROPERTIES EXCLUDE_FROM_ALL FALSE)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC EXCLUDE_FROM_ALL\n+  secp256k1.c\n+  ${internal_obj}\n+)\n+target_include_directories(${PROJECT_NAME}_static INTERFACE\n+  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES EXCLUDE_FROM_ALL FALSE)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_library INTERFACE)\n+if(SECP256K1_BUILD_SHARED)\n+  target_link_libraries(link_library INTERFACE ${PROJECT_NAME})\n+elseif(SECP256K1_BUILD_STATIC)\n+  target_link_libraries(link_library INTERFACE ${PROJECT_NAME}_static)\n+endif()\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_library)\n+  add_executable(bench_internal bench_internal.c ${internal_obj})\n+  target_link_libraries(bench_internal binary_interface)\n+  add_executable(bench_ecmult bench_ecmult.c ${internal_obj})\n+  target_link_libraries(bench_ecmult binary_interface)\n+endif()\n+\n+if(SECP256K1_BUILD_TESTS)\n+  add_executable(noverify_tests tests.c ${internal_obj})\n+  target_link_libraries(noverify_tests binary_interface)\n+  add_test(noverify_tests noverify_tests)\n+  if(NOT CMAKE_BUILD_TYPE STREQUAL \"Coverage\")\n+    add_executable(tests tests.c ${internal_obj})\n+    target_link_libraries(tests binary_interface)\n+    target_compile_definitions(tests PRIVATE VERIFY)\n+    add_test(tests tests)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 85,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This violates the advice in https://cmake.org/cmake/help/latest/manual/cmake-buildsystem.7.html#build-configurations and should probably use generator expressions to check for `DEBUG:Coverage`, at least for adding `VERIFY` in `target_compile_definitions(tests PRIVATE VERIFY)`. \r\n\r\nFor actually adding the tests, we can `add_test(NAME tests COMMAND tests CONFIGURATIONS RelWithDebInfo Release MinSizeRel Debug` to exclude `Coverage`.\r\n\r\n Maybe then just drop the if check? Running `add_executable` is not too bad, I guess. \r\n\r\nSame below for exhaustive tests.",
      "created_at": "2023-03-03T14:28:05Z",
      "updated_at": "2023-03-03T14:35:45Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124531191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124531191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 81,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124534212",
      "pull_request_review_id": 1323437033,
      "id": 1124534212,
      "node_id": "PRRC_kwDOAP4Jqs5DBwfE",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 166,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    STRINGS \"RelWithDebInfo\" \"Release\" \"MinSizeRel\" \"Debug\" \"Coverage\"\r\n```\r\n\r\n(just a more meaningful order with the default on the left)\r\n\r\n\r\nI think we should `CMAKE_CONFIGURATION_TYPES` to the same values (incl. Coverage), in that order. I've seen instances in the CMake manual where the first value of `CMAKE_CONFIGURATION_TYPES` is taken as default. (Hin:t: This variable expects that types are separated by `;`)",
      "created_at": "2023-03-03T14:30:21Z",
      "updated_at": "2023-03-03T14:35:45Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124534212",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124534212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 166,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124681739",
      "pull_request_review_id": 1324204055,
      "id": 1124681739,
      "node_id": "PRRC_kwDOAP4Jqs5DCUgL",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 27,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124264718,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree. Given the build targets, this seems like one of the teeny tiny subset of projects that may actually care. Like @real-or-random says here: https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124273356 , I think we should probably skip this for now and discuss it in a (likely one of many of such) follow-up PR.\r\n\r\nFWIW downstream Core sets this, so there's some precedent at least: https://github.com/bitcoin/bitcoin/blob/master/configure.ac#L1992",
      "created_at": "2023-03-03T16:16:11Z",
      "updated_at": "2023-03-03T16:16:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124681739",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124681739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124683786",
      "pull_request_review_id": 1324207566,
      "id": 1124683786,
      "node_id": "PRRC_kwDOAP4Jqs5DCVAK",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.",
      "path": "CMakeLists.txt",
      "position": 29,
      "original_position": 31,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124265598,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I'm curious to know why :)",
      "created_at": "2023-03-03T16:17:20Z",
      "updated_at": "2023-03-03T16:17:20Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124683786",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124683786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124690427",
      "pull_request_review_id": 1324218253,
      "id": 1124690427,
      "node_id": "PRRC_kwDOAP4Jqs5DCWn7",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 182,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124276576,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "After seeing a few of these very reasonable differences, I think a small follow-up TODO list would be really helpful. There are plenty of things that should be addressed after merge, but imo matching behaviors should generally be the goal of the initial pr.",
      "created_at": "2023-03-03T16:21:44Z",
      "updated_at": "2023-03-03T16:21:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124690427",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124690427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 178,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124695435",
      "pull_request_review_id": 1324226247,
      "id": 1124695435,
      "node_id": "PRRC_kwDOAP4Jqs5DCX2L",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 27,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124264718,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@theuni (Ignoring that this discussion may be long to a separate PR), what's the stories of enabling PIC for non-shared libraries? Are there any advantages or disadvantages? Why does Core set this for libsecp256k1? (This goes back to 2014 https://github.com/bitcoin/bitcoin/commit/07a99017033b23f840f602d768efa87e0e914e90 ) Should we enable this in our test and example binaries? (I guess that doesn't matter at all.)",
      "created_at": "2023-03-03T16:25:12Z",
      "updated_at": "2023-03-03T16:25:20Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124695435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124695435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124710969",
      "pull_request_review_id": 1324251020,
      "id": 1124710969,
      "node_id": "PRRC_kwDOAP4Jqs5DCbo5",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 27,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124264718,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@real-or-random Core builds a libsecp and links it into a shared libconsensus/libkernel, as well as hardened (-pie) binaries. For that reason, we always want a pic libsecp, even though we're building it statically.\r\n\r\nFor some platforms (x86 for ex) there may be a significant overhead, but we accept it because of the hardening (aslr) that comes with it. Some projects on niche and/or resource-starved architectures may not be so willing to accept the overhead.",
      "created_at": "2023-03-03T16:35:55Z",
      "updated_at": "2023-03-03T16:35:56Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124710969",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124710969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124913500",
      "pull_request_review_id": 1324474392,
      "id": 1124913500,
      "node_id": "PRRC_kwDOAP4Jqs5DDNFc",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 143,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124443691,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've been hacking around and the above is basically what I came up with as well. It's a shame we can't do make-style variable expansion like:\r\n```CMake\r\nstring(REPLACE -DNDEBUG \"\" CMAKE_${LANG}_FLAGS_${CONFIG} \"${CMAKE_${LANG}_FLAGS_${CONFIG}_INIT}\")\r\n```",
      "created_at": "2023-03-03T19:17:02Z",
      "updated_at": "2023-03-03T19:17:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124913500",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1124913500"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 137,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1125545613",
      "pull_request_review_id": 1325121096,
      "id": 1125545613,
      "node_id": "PRRC_kwDOAP4Jqs5DFnaN",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 143,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124443691,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n>  It's a shame we can't do make-style variable expansion like:\r\n> \r\n> ```cmake\r\n> string(REPLACE -DNDEBUG \"\" CMAKE_${LANG}_FLAGS_${CONFIG} \"${CMAKE_${LANG}_FLAGS_${CONFIG}_INIT}\")\r\n> ```\r\n\r\nThinking about this more, this can't work here. At the risk of explaining something you may already know (but others here may not): CMake supports not only single-config generators for systems like make, where CMake hardcodes the config in the generated Makefile. It also supports multi-config generators for build systems like Visual Studio, which natively support multiple configs/built types. (Multi-config is used when `CMAKE_CONFIGURATION_TYPES` is set). In that mode, what should `${CONFIG}` be expanded, too? The used configuration is not yet determined when CMake runs and writes the Visual Studio build files. [Generator expressions](https://cmake.org/cmake/help/latest/manual/cmake-generator-expressions.7.html#genex:CONFIG) like `$<CONFIG>` are CMake's mechanism to deal with this, but don't make sense here in this case of setting variables. See also https://cmake.org/cmake/help/latest/manual/cmake-buildsystem.7.html#build-configurations.\r\n\r\nOkay, now that I wrote that paragraph, I figured out that we could set `COMPILE_FLAGS` instead, which supports generator expressions. https://cmake.org/cmake/help/latest/prop_sf/COMPILE_FLAGS.html But if you ask me, that belongs exactly to the category of \"making things more CMake-ish\", which should not hold up this PR.",
      "created_at": "2023-03-04T20:36:27Z",
      "updated_at": "2023-03-04T20:36:27Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1125545613",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1125545613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 137,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126375487",
      "pull_request_review_id": 1326157589,
      "id": 1126375487,
      "node_id": "PRRC_kwDOAP4Jqs5DIyA_",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.",
      "path": "CMakeLists.txt",
      "position": 29,
      "original_position": 31,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124265598,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[`BUILD_SHARED_LIBS`](https://cmake.org/cmake/help/latest/variable/BUILD_SHARED_LIBS.html) is a global flag. I can imagine that a top project, which includes secp256k1 as a subproject, can use it on its own purpose.",
      "created_at": "2023-03-06T12:53:03Z",
      "updated_at": "2023-03-06T12:53:03Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126375487",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126375487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126392824",
      "pull_request_review_id": 1326194898,
      "id": 1126392824,
      "node_id": "PRRC_kwDOAP4Jqs5DI2P4",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)",
      "path": "CMakeLists.txt",
      "position": 118,
      "original_position": 120,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124269886,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1. `SECP256K1_VALGRIND` is a full capitalized user-configurable option.\r\n2. Our package search module is called `FindValgrind.cmake` which follows the [pattern](https://cmake.org/cmake/help/latest/command/find_package.html) `Find<PackageName>.cmake`. This assumes a capitalized package name `Valgrind`, which, in turn, is used as a part of [standard variable names](https://cmake.org/cmake/help/latest/manual/cmake-developer.7.html#standard-variable-names).\r\n3. `valgrind_brew_prefix` is a lowercase local variable.\r\n",
      "created_at": "2023-03-06T13:09:10Z",
      "updated_at": "2023-03-06T13:09:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126392824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126392824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 118,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126469129",
      "pull_request_review_id": 1326344055,
      "id": 1126469129,
      "node_id": "PRRC_kwDOAP4Jqs5DJI4J",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)",
      "path": "CMakeLists.txt",
      "position": 118,
      "original_position": 120,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124269886,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> 2\\. Our package search module is called `FindValgrind.cmake` which follows the [pattern](https://cmake.org/cmake/help/latest/command/find_package.html) `Find<PackageName>.cmake`. This assumes a capitalized package name `Valgrind`, which, in turn, is used as a part of [standard variable names](https://cmake.org/cmake/help/latest/manual/cmake-developer.7.html#standard-variable-names).\r\n\r\nThat's the part I was missing. Thanks, makes a lot of sense. ",
      "created_at": "2023-03-06T14:07:16Z",
      "updated_at": "2023-03-06T14:07:17Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126469129",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126469129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 118,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126469369",
      "pull_request_review_id": 1326344610,
      "id": 1126469369,
      "node_id": "PRRC_kwDOAP4Jqs5DJI75",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.",
      "path": "CMakeLists.txt",
      "position": 29,
      "original_position": 31,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124265598,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's a good reason, yes.",
      "created_at": "2023-03-06T14:07:29Z",
      "updated_at": "2023-03-06T14:07:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126469369",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126469369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126473725",
      "pull_request_review_id": 1326354042,
      "id": 1126473725,
      "node_id": "PRRC_kwDOAP4Jqs5DJJ_9",
      "diff_hunk": "@@ -73,6 +71,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake (experimental)\n+----------------------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ make check  # run the test suite\n+    $ sudo make install  # optional",
      "path": "README.md",
      "position": 28,
      "original_position": 28,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124301931,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My intention was to demonstrate 100% compatibility of the build/install steps with the Autotools based build system. If anyone uses them in their scripts, only the configuration step needs to be updated.",
      "created_at": "2023-03-06T14:11:05Z",
      "updated_at": "2023-03-06T14:11:06Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126473725",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126473725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": 83,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126513520",
      "pull_request_review_id": 1326453103,
      "id": 1126513520,
      "node_id": "PRRC_kwDOAP4Jqs5DJTtw",
      "diff_hunk": "@@ -0,0 +1,36 @@\n+if(APPLE)\n+  find_program(BREW_COMMAND brew)\n+  execute_process(\n+    COMMAND ${BREW_COMMAND} --prefix valgrind\n+    OUTPUT_VARIABLE valgrind_brew_prefix\n+    ERROR_QUIET\n+    OUTPUT_STRIP_TRAILING_WHITESPACE\n+  )\n+endif()\n+\n+find_path(Valgrind_INCLUDE_DIR\n+  NAMES valgrind/memcheck.h\n+  HINTS ${valgrind_brew_prefix}/include",
      "path": "cmake/FindValgrind.cmake",
      "position": null,
      "original_position": 13,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124303691,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Generator expressions do not work in this context. One could easily observe actual paths using `--debug-find` option.",
      "created_at": "2023-03-06T14:39:47Z",
      "updated_at": "2023-03-06T14:39:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126513520",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126513520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126775186",
      "pull_request_review_id": 1326792970,
      "id": 1126775186,
      "node_id": "PRRC_kwDOAP4Jqs5DKTmS",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.",
      "path": "CMakeLists.txt",
      "position": 29,
      "original_position": 31,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124265598,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks. Yes, it does seem that this is the convention.\r\n\r\nI wonder if the convention will begin change down the road after the introduction of [PROJECT_IS_TOP_LEVEL](https://cmake.org/cmake/help/latest/variable/PROJECT_IS_TOP_LEVEL.html) .",
      "created_at": "2023-03-06T17:10:16Z",
      "updated_at": "2023-03-06T17:33:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126775186",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126775186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126775982",
      "pull_request_review_id": 1326792970,
      "id": 1126775982,
      "node_id": "PRRC_kwDOAP4Jqs5DKTyu",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124253345,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd like to know this as well.",
      "created_at": "2023-03-06T17:10:56Z",
      "updated_at": "2023-03-06T17:33:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126775982",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126775982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126782159",
      "pull_request_review_id": 1326792970,
      "id": 1126782159,
      "node_id": "PRRC_kwDOAP4Jqs5DKVTP",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 27,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124264718,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just revisiting this to confirm...\r\n\r\nFrom `POSITION_INDEPENDENT_CODE`'s docs\r\n\r\n> This property is True by default for SHARED and MODULE library targets and False otherwise. This property is initialized by the value of the [CMAKE_POSITION_INDEPENDENT_CODE](https://cmake.org/cmake/help/latest/variable/CMAKE_POSITION_INDEPENDENT_CODE.html#variable:CMAKE_POSITION_INDEPENDENT_CODE) variable if it is set when a target is created.\r\n\r\n\r\nThis matches the current libtool behavior, so leaving it alone seems correct to me. Core should be able to set it at the top level in order to get PIC in our static libsecp.",
      "created_at": "2023-03-06T17:16:26Z",
      "updated_at": "2023-03-06T17:33:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126782159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126782159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126797102",
      "pull_request_review_id": 1326792970,
      "id": 1126797102,
      "node_id": "PRRC_kwDOAP4Jqs5DKY8u",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL\n+  secp256k1.c\n+  ${internal_obj}\n+)\n+target_include_directories(${PROJECT_NAME} INTERFACE\n+  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+target_compile_definitions(${PROJECT_NAME} PRIVATE\n+  $<$<PLATFORM_ID:Windows>:DLL_EXPORT>",
      "path": "src/CMakeLists.txt",
      "position": 28,
      "original_position": 28,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~Why only Windows?~\r\nEdit: nevermind, matches header behavior.\r\n\r\nAlso, as a follow-up, we should change this define to `SECP256k1_DLL_EXPORT` or so, to get away from the libtool naming confusion once and for all.",
      "created_at": "2023-03-06T17:29:52Z",
      "updated_at": "2023-03-06T17:35:04Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126797102",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126797102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126993450",
      "pull_request_review_id": 1327132672,
      "id": 1126993450,
      "node_id": "PRRC_kwDOAP4Jqs5DLI4q",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL\n+  secp256k1.c\n+  ${internal_obj}\n+)\n+target_include_directories(${PROJECT_NAME} INTERFACE\n+  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+target_compile_definitions(${PROJECT_NAME} PRIVATE\n+  $<$<PLATFORM_ID:Windows>:DLL_EXPORT>",
      "path": "src/CMakeLists.txt",
      "position": 28,
      "original_position": 28,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1126797102,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n> Also, as a follow-up, we should change this define to `SECP256k1_DLL_EXPORT` or so, to get away from the libtool naming confusion once and for all.\r\n\r\nadded to the list\r\n\r\n",
      "created_at": "2023-03-06T20:21:37Z",
      "updated_at": "2023-03-06T20:21:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126993450",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126993450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126995890",
      "pull_request_review_id": 1327135739,
      "id": 1126995890,
      "node_id": "PRRC_kwDOAP4Jqs5DLJey",
      "diff_hunk": "@@ -73,6 +71,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake (experimental)\n+----------------------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ make check  # run the test suite\n+    $ sudo make install  # optional",
      "path": "README.md",
      "position": 28,
      "original_position": 28,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124301931,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, yes, I don't have a strong preference here, and there are good arguments for either side. Please don't hesitate to omit my corresponding commit, and I'm happy to put this on the \"maybe later\" list.",
      "created_at": "2023-03-06T20:24:00Z",
      "updated_at": "2023-03-06T20:24:01Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126995890",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126995890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": 83,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126997648",
      "pull_request_review_id": 1327138200,
      "id": 1126997648,
      "node_id": "PRRC_kwDOAP4Jqs5DLJ6Q",
      "diff_hunk": "@@ -0,0 +1,36 @@\n+if(APPLE)\n+  find_program(BREW_COMMAND brew)\n+  execute_process(\n+    COMMAND ${BREW_COMMAND} --prefix valgrind\n+    OUTPUT_VARIABLE valgrind_brew_prefix\n+    ERROR_QUIET\n+    OUTPUT_STRIP_TRAILING_WHITESPACE\n+  )\n+endif()\n+\n+find_path(Valgrind_INCLUDE_DIR\n+  NAMES valgrind/memcheck.h\n+  HINTS ${valgrind_brew_prefix}/include",
      "path": "cmake/FindValgrind.cmake",
      "position": null,
      "original_position": 13,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124303691,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see, sorry. Not sure if there is another good/obvious way of getting rid of the warning. If not, let's not worry.",
      "created_at": "2023-03-06T20:25:34Z",
      "updated_at": "2023-03-06T20:25:34Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1126997648",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1126997648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127100813",
      "pull_request_review_id": 1327291455,
      "id": 1127100813,
      "node_id": "PRRC_kwDOAP4Jqs5DLjGN",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124253345,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241).",
      "created_at": "2023-03-06T22:24:27Z",
      "updated_at": "2023-03-06T22:24:27Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127100813",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127100813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127101559",
      "pull_request_review_id": 1327292508,
      "id": 1127101559,
      "node_id": "PRRC_kwDOAP4Jqs5DLjR3",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 27,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124264718,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241).",
      "created_at": "2023-03-06T22:25:06Z",
      "updated_at": "2023-03-06T22:25:06Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127101559",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127101559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127102765",
      "pull_request_review_id": 1327294353,
      "id": 1127102765,
      "node_id": "PRRC_kwDOAP4Jqs5DLjkt",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)\n+else()\n+  try_add_compile_option(-pedantic)\n+  try_add_compile_option(-Wall)\n+  try_add_compile_option(-Wcast-align)\n+  try_add_compile_option(-Wcast-align=strict)\n+  try_add_compile_option(-Wconditional-uninitialized)\n+  try_add_compile_option(-Wextra)\n+  try_add_compile_option(-Wnested-externs)\n+  try_add_compile_option(-Wno-long-long)\n+  try_add_compile_option(-Wno-overlength-strings)\n+  try_add_compile_option(-Wno-unused-function)\n+  try_add_compile_option(-Wreserved-identifier)\n+  try_add_compile_option(-Wshadow)\n+  try_add_compile_option(-Wstrict-prototypes)\n+  try_add_compile_option(-Wundef)\n+endif()\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 206,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124273356,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241).",
      "created_at": "2023-03-06T22:26:21Z",
      "updated_at": "2023-03-06T22:26:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127102765",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127102765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 206,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127103005",
      "pull_request_review_id": 1327294590,
      "id": 1127103005,
      "node_id": "PRRC_kwDOAP4Jqs5DLjod",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 182,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124276576,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241).",
      "created_at": "2023-03-06T22:26:35Z",
      "updated_at": "2023-03-06T22:26:35Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127103005",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127103005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 178,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127103591",
      "pull_request_review_id": 1327295864,
      "id": 1127103591,
      "node_id": "PRRC_kwDOAP4Jqs5DLjxn",
      "diff_hunk": "@@ -73,6 +71,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake (experimental)\n+----------------------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ make check  # run the test suite\n+    $ sudo make install  # optional",
      "path": "README.md",
      "position": 28,
      "original_position": 28,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124301931,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Please don't hesitate to omit my corresponding commit\r\n\r\nThanks! Omitted :)",
      "created_at": "2023-03-06T22:27:21Z",
      "updated_at": "2023-03-06T22:27:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127103591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127103591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": 83,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127105043",
      "pull_request_review_id": 1327299048,
      "id": 1127105043,
      "node_id": "PRRC_kwDOAP4Jqs5DLkIT",
      "diff_hunk": "@@ -0,0 +1,36 @@\n+if(APPLE)\n+  find_program(BREW_COMMAND brew)\n+  execute_process(\n+    COMMAND ${BREW_COMMAND} --prefix valgrind\n+    OUTPUT_VARIABLE valgrind_brew_prefix\n+    ERROR_QUIET\n+    OUTPUT_STRIP_TRAILING_WHITESPACE\n+  )\n+endif()\n+\n+find_path(Valgrind_INCLUDE_DIR\n+  NAMES valgrind/memcheck.h\n+  HINTS ${valgrind_brew_prefix}/include",
      "path": "cmake/FindValgrind.cmake",
      "position": null,
      "original_position": 13,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124303691,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A working implementation has been [suggested](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241).",
      "created_at": "2023-03-06T22:29:12Z",
      "updated_at": "2023-03-06T22:29:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127105043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127105043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127107877",
      "pull_request_review_id": 1327302826,
      "id": 1127107877,
      "node_id": "PRRC_kwDOAP4Jqs5DLk0l",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 143,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124443691,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241) with improved `REGEX REPLACE`.",
      "created_at": "2023-03-06T22:31:42Z",
      "updated_at": "2023-03-06T22:31:42Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127107877",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127107877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 137,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127114622",
      "pull_request_review_id": 1327315591,
      "id": 1127114622,
      "node_id": "PRRC_kwDOAP4Jqs5DLmd-",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)\n+else()\n+  try_add_compile_option(-pedantic)\n+  try_add_compile_option(-Wall)\n+  try_add_compile_option(-Wcast-align)\n+  try_add_compile_option(-Wcast-align=strict)\n+  try_add_compile_option(-Wconditional-uninitialized)\n+  try_add_compile_option(-Wextra)\n+  try_add_compile_option(-Wnested-externs)\n+  try_add_compile_option(-Wno-long-long)\n+  try_add_compile_option(-Wno-overlength-strings)\n+  try_add_compile_option(-Wno-unused-function)\n+  try_add_compile_option(-Wreserved-identifier)\n+  try_add_compile_option(-Wshadow)\n+  try_add_compile_option(-Wstrict-prototypes)\n+  try_add_compile_option(-Wundef)\n+endif()\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)\n+\n+include(CTest)\n+if(SECP256K1_BUILD_BENCHMARK OR SECP256K1_BUILD_TESTS OR SECP256K1_BUILD_EXHAUSTIVE_TESTS OR SECP256K1_BUILD_CTIME_TESTS OR SECP256K1_BUILD_EXAMPLES)\n+  # We do not use CMake CTest's BUILD_TESTING option.\n+  mark_as_advanced(BUILD_TESTING)\n+  enable_testing()\n+  add_custom_target(check\n+    COMMAND ${CMAKE_CTEST_COMMAND} -C $<$<CONFIG:Release>:Release>$<$<CONFIG:Debug>:Debug>\n+    VERBATIM\n+  )\n+endif()\n+\n+add_subdirectory(src)\n+if(SECP256K1_BUILD_EXAMPLES)\n+  add_subdirectory(examples)\n+endif()\n+\n+message(\"\\n\")\n+message(\"secp256k1 configure summary\")\n+message(\"===========================\")\n+message(\"Build artifacts:\")\n+message(\"  shared library ...................... ${SECP256K1_BUILD_SHARED}\")\n+message(\"  static library ...................... ${SECP256K1_BUILD_STATIC}\")\n+message(\"Optional modules:\")\n+message(\"  ECDH ................................ ${SECP256K1_ENABLE_MODULE_ECDH}\")\n+message(\"  ECDSA pubkey recovery ............... ${SECP256K1_ENABLE_MODULE_RECOVERY}\")\n+message(\"  extrakeys ........................... ${SECP256K1_ENABLE_MODULE_EXTRAKEYS}\")\n+message(\"  schnorrsig .......................... ${SECP256K1_ENABLE_MODULE_SCHNORRSIG}\")\n+message(\"Parameters:\")\n+message(\"  ecmult window size .................. ${SECP256K1_ECMULT_WINDOW_SIZE}\")\n+message(\"  ecmult gen precision bits ........... ${SECP256K1_ECMULT_GEN_PREC_BITS}\")\n+message(\"Optional features:\")\n+message(\"  assembly optimization ............... ${SECP256K1_ASM}\")\n+message(\"  external callbacks .................. ${SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS}\")\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  message(\"  wide multiplication (test-only) ..... ${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\")\n+endif()\n+message(\"Optional binaries:\")\n+message(\"  benchmark ........................... ${SECP256K1_BUILD_BENCHMARK}\")\n+message(\"  noverify_tests ...................... ${SECP256K1_BUILD_TESTS}\")\n+set(tests_status \"${SECP256K1_BUILD_TESTS}\")\n+if(CMAKE_BUILD_TYPE STREQUAL \"Coverage\")\n+  set(tests_status OFF)\n+endif()\n+message(\"  tests ............................... ${tests_status}\")\n+message(\"  exhaustive tests .................... ${SECP256K1_BUILD_EXHAUSTIVE_TESTS}\")\n+message(\"  ctime_tests ......................... ${SECP256K1_BUILD_CTIME_TESTS}\")\n+message(\"  examples ............................ ${SECP256K1_BUILD_EXAMPLES}\")\n+message(\"\")\n+if(CMAKE_CROSSCOMPILING)\n+  set(cross_status \"TRUE, for ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+else()\n+  set(cross_status \"FALSE\")\n+endif()\n+message(\"Cross compiling ....................... ${cross_status}\")\n+message(\"Valgrind .............................. ${SECP256K1_VALGRIND}\")\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+string(REPLACE \";\" \" \" definitions \"${definitions}\")\n+message(\"Preprocessor defined macros ........... ${definitions}\")\n+message(\"C compiler ............................ ${CMAKE_C_COMPILER}\")\n+message(\"CFLAGS ................................ ${CMAKE_C_FLAGS}\")\n+get_directory_property(compile_options COMPILE_OPTIONS)\n+string(REPLACE \";\" \" \" compile_options \"${compile_options}\")\n+message(\"Compile options ....................... \" ${compile_options})\n+if(DEFINED CMAKE_BUILD_TYPE)\n+  message(\"Build type:\")\n+  message(\" - CMAKE_BUILD_TYPE ................... ${CMAKE_BUILD_TYPE}\")\n+  string(TOUPPER \"${CMAKE_BUILD_TYPE}\" build_type)\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_${build_type}}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_${build_type}}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_${build_type}}\")\n+else()\n+  message(\"Available configurations .............. ${CMAKE_CONFIGURATION_TYPES}\")\n+  message(\"Debug configuration:\")\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_DEBUG}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_DEBUG}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_DEBUG}\")\n+  message(\"Release configuration:\")\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_RELEASE}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_RELEASE}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_RELEASE}\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 287,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124457430,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As configuration is not defined at the end of the configuring for multi-config generators, it seems important to present to a user flags for often used ones (output for all configurations could be noisy). I [left](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241) `RelWithDebInfo` and `Release`. Although, when using MSVC, the default configuration is \"Debug\".",
      "created_at": "2023-03-06T22:38:50Z",
      "updated_at": "2023-03-06T22:38:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127114622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127114622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 280,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127115628",
      "pull_request_review_id": 1327318040,
      "id": 1127115628,
      "node_id": "PRRC_kwDOAP4Jqs5DLmts",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 169,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124461398,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241).",
      "created_at": "2023-03-06T22:40:11Z",
      "updated_at": "2023-03-06T22:40:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127115628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127115628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127116121",
      "pull_request_review_id": 1327319216,
      "id": 1127116121,
      "node_id": "PRRC_kwDOAP4Jqs5DLm1Z",
      "diff_hunk": "@@ -380,3 +380,30 @@ task:\n   test_script:\n     - cd sage\n     - sage prove_group_implementations.sage\n+\n+task:\n+  name: \"x86_64: Windows (VS 2022)\"\n+  windows_container:\n+    image: cirrusci/windowsservercore:visualstudio2022\n+    cpu: 4\n+    memory: 3840MB\n+  env:\n+    PATH: '%CIRRUS_WORKING_DIR%\\build\\src\\Release;%PATH%'\n+    x64_NATIVE_TOOLS: '\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat\"'\n+    # Ignore MSBuild warning MSB8029.\n+    # See: https://learn.microsoft.com/en-us/visualstudio/msbuild/errors/msb8029?view=vs-2022\n+    IgnoreWarnIntDirInTempDetected: 'true'\n+  merge_script:\n+    - PowerShell -NoLogo -Command if ($env:CIRRUS_PR -ne $null) { git fetch $env:CIRRUS_REPO_CLONE_URL pull/$env:CIRRUS_PR/merge; git reset --hard FETCH_HEAD; }\n+  configure_script:\n+    - '%x64_NATIVE_TOOLS%'\n+    - cmake -G \"Visual Studio 17 2022\" -A x64 -S . -B build -DSECP256K1_ENABLE_MODULE_RECOVERY=ON -DSECP256K1_BUILD_EXAMPLES=ON\n+  build_script:\n+    - '%x64_NATIVE_TOOLS%'\n+    - cmake --build build --config Release -j 5 -- /p:CL_MPcount=5",
      "path": ".cirrus.yml",
      "position": null,
      "original_position": 24,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124507388,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241).",
      "created_at": "2023-03-06T22:40:53Z",
      "updated_at": "2023-03-06T22:40:53Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127116121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127116121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127116480",
      "pull_request_review_id": 1327320224,
      "id": 1127116480,
      "node_id": "PRRC_kwDOAP4Jqs5DLm7A",
      "diff_hunk": "@@ -0,0 +1,151 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL\n+  secp256k1.c\n+  ${internal_obj}\n+)\n+target_include_directories(${PROJECT_NAME} INTERFACE\n+  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+target_compile_definitions(${PROJECT_NAME} PRIVATE\n+  $<$<PLATFORM_ID:Windows>:DLL_EXPORT>\n+)\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  set_target_properties(${PROJECT_NAME} PROPERTIES EXCLUDE_FROM_ALL FALSE)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC EXCLUDE_FROM_ALL\n+  secp256k1.c\n+  ${internal_obj}\n+)\n+target_include_directories(${PROJECT_NAME}_static INTERFACE\n+  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES EXCLUDE_FROM_ALL FALSE)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_library INTERFACE)\n+if(SECP256K1_BUILD_SHARED)\n+  target_link_libraries(link_library INTERFACE ${PROJECT_NAME})\n+elseif(SECP256K1_BUILD_STATIC)\n+  target_link_libraries(link_library INTERFACE ${PROJECT_NAME}_static)\n+endif()\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_library)\n+  add_executable(bench_internal bench_internal.c ${internal_obj})\n+  target_link_libraries(bench_internal binary_interface)\n+  add_executable(bench_ecmult bench_ecmult.c ${internal_obj})\n+  target_link_libraries(bench_ecmult binary_interface)\n+endif()\n+\n+if(SECP256K1_BUILD_TESTS)\n+  add_executable(noverify_tests tests.c ${internal_obj})\n+  target_link_libraries(noverify_tests binary_interface)\n+  add_test(noverify_tests noverify_tests)\n+  if(NOT CMAKE_BUILD_TYPE STREQUAL \"Coverage\")\n+    add_executable(tests tests.c ${internal_obj})\n+    target_link_libraries(tests binary_interface)\n+    target_compile_definitions(tests PRIVATE VERIFY)\n+    add_test(tests tests)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 85,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124531191,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241).",
      "created_at": "2023-03-06T22:41:28Z",
      "updated_at": "2023-03-06T22:41:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127116480",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127116480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 81,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127117464",
      "pull_request_review_id": 1327321525,
      "id": 1127117464,
      "node_id": "PRRC_kwDOAP4Jqs5DLnKY",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 166,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124534212,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1457095241).",
      "created_at": "2023-03-06T22:42:35Z",
      "updated_at": "2023-03-06T22:42:35Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127117464",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127117464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 166,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127541967",
      "pull_request_review_id": 1327911499,
      "id": 1127541967,
      "node_id": "PRRC_kwDOAP4Jqs5DNOzP",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.",
      "path": "CMakeLists.txt",
      "position": 29,
      "original_position": 31,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "776ef08f1e6407eaf6d385ffdaa1cbaaedd2da63",
      "in_reply_to_id": 1124265598,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I wonder if the convention will begin change down the road after the introduction of [PROJECT_IS_TOP_LEVEL](https://cmake.org/cmake/help/latest/variable/PROJECT_IS_TOP_LEVEL.html) .\r\n\r\nAFAIU from the docs, PROJECT_IS_TOP_LEVEL will not help here. Since we have our own `project()` call, PROJECT_IS_TOP_LEVEL will still be true for libsecp256k1 in its root directory, even if it's included from another CMakeLists.txt.",
      "created_at": "2023-03-07T08:54:29Z",
      "updated_at": "2023-03-07T08:54:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127541967",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127541967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127813309",
      "pull_request_review_id": 1328382841,
      "id": 1127813309,
      "node_id": "PRRC_kwDOAP4Jqs5DORC9",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)\n+else()\n+  try_add_compile_option(-pedantic)\n+  try_add_compile_option(-Wall)\n+  try_add_compile_option(-Wcast-align)\n+  try_add_compile_option(-Wcast-align=strict)\n+  try_add_compile_option(-Wconditional-uninitialized)\n+  try_add_compile_option(-Wextra)\n+  try_add_compile_option(-Wnested-externs)\n+  try_add_compile_option(-Wno-long-long)\n+  try_add_compile_option(-Wno-overlength-strings)\n+  try_add_compile_option(-Wno-unused-function)\n+  try_add_compile_option(-Wreserved-identifier)\n+  try_add_compile_option(-Wshadow)\n+  try_add_compile_option(-Wstrict-prototypes)\n+  try_add_compile_option(-Wundef)\n+endif()\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)\n+\n+include(CTest)\n+if(SECP256K1_BUILD_BENCHMARK OR SECP256K1_BUILD_TESTS OR SECP256K1_BUILD_EXHAUSTIVE_TESTS OR SECP256K1_BUILD_CTIME_TESTS OR SECP256K1_BUILD_EXAMPLES)\n+  # We do not use CMake CTest's BUILD_TESTING option.\n+  mark_as_advanced(BUILD_TESTING)\n+  enable_testing()\n+  add_custom_target(check\n+    COMMAND ${CMAKE_CTEST_COMMAND} -C $<$<CONFIG:Release>:Release>$<$<CONFIG:Debug>:Debug>\n+    VERBATIM\n+  )\n+endif()\n+\n+add_subdirectory(src)\n+if(SECP256K1_BUILD_EXAMPLES)\n+  add_subdirectory(examples)\n+endif()\n+\n+message(\"\\n\")\n+message(\"secp256k1 configure summary\")\n+message(\"===========================\")\n+message(\"Build artifacts:\")\n+message(\"  shared library ...................... ${SECP256K1_BUILD_SHARED}\")\n+message(\"  static library ...................... ${SECP256K1_BUILD_STATIC}\")\n+message(\"Optional modules:\")\n+message(\"  ECDH ................................ ${SECP256K1_ENABLE_MODULE_ECDH}\")\n+message(\"  ECDSA pubkey recovery ............... ${SECP256K1_ENABLE_MODULE_RECOVERY}\")\n+message(\"  extrakeys ........................... ${SECP256K1_ENABLE_MODULE_EXTRAKEYS}\")\n+message(\"  schnorrsig .......................... ${SECP256K1_ENABLE_MODULE_SCHNORRSIG}\")\n+message(\"Parameters:\")\n+message(\"  ecmult window size .................. ${SECP256K1_ECMULT_WINDOW_SIZE}\")\n+message(\"  ecmult gen precision bits ........... ${SECP256K1_ECMULT_GEN_PREC_BITS}\")\n+message(\"Optional features:\")\n+message(\"  assembly optimization ............... ${SECP256K1_ASM}\")\n+message(\"  external callbacks .................. ${SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS}\")\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  message(\"  wide multiplication (test-only) ..... ${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\")\n+endif()\n+message(\"Optional binaries:\")\n+message(\"  benchmark ........................... ${SECP256K1_BUILD_BENCHMARK}\")\n+message(\"  noverify_tests ...................... ${SECP256K1_BUILD_TESTS}\")\n+set(tests_status \"${SECP256K1_BUILD_TESTS}\")\n+if(CMAKE_BUILD_TYPE STREQUAL \"Coverage\")\n+  set(tests_status OFF)\n+endif()\n+message(\"  tests ............................... ${tests_status}\")\n+message(\"  exhaustive tests .................... ${SECP256K1_BUILD_EXHAUSTIVE_TESTS}\")\n+message(\"  ctime_tests ......................... ${SECP256K1_BUILD_CTIME_TESTS}\")\n+message(\"  examples ............................ ${SECP256K1_BUILD_EXAMPLES}\")\n+message(\"\")\n+if(CMAKE_CROSSCOMPILING)\n+  set(cross_status \"TRUE, for ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+else()\n+  set(cross_status \"FALSE\")\n+endif()\n+message(\"Cross compiling ....................... ${cross_status}\")\n+message(\"Valgrind .............................. ${SECP256K1_VALGRIND}\")\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+string(REPLACE \";\" \" \" definitions \"${definitions}\")\n+message(\"Preprocessor defined macros ........... ${definitions}\")\n+message(\"C compiler ............................ ${CMAKE_C_COMPILER}\")\n+message(\"CFLAGS ................................ ${CMAKE_C_FLAGS}\")\n+get_directory_property(compile_options COMPILE_OPTIONS)\n+string(REPLACE \";\" \" \" compile_options \"${compile_options}\")\n+message(\"Compile options ....................... \" ${compile_options})\n+if(DEFINED CMAKE_BUILD_TYPE)\n+  message(\"Build type:\")\n+  message(\" - CMAKE_BUILD_TYPE ................... ${CMAKE_BUILD_TYPE}\")\n+  string(TOUPPER \"${CMAKE_BUILD_TYPE}\" build_type)\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_${build_type}}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_${build_type}}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_${build_type}}\")\n+else()\n+  message(\"Available configurations .............. ${CMAKE_CONFIGURATION_TYPES}\")\n+  message(\"Debug configuration:\")\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_DEBUG}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_DEBUG}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_DEBUG}\")\n+  message(\"Release configuration:\")\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_RELEASE}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_RELEASE}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_RELEASE}\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 287,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124457430,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Although, when using MSVC, the default configuration is \"Debug\".\r\n\r\nOh indeed, and we can't change this right now: https://gitlab.kitware.com/cmake/cmake/-/issues/20820\r\n\r\nI'm fine with either way, but you bring up an excellent point and printing `RelWithDebInfo` and `Debug` is probably slightly better than what we do now. Outputting all would also make sense, but yes, this is perhaps too noisy. ",
      "created_at": "2023-03-07T12:56:17Z",
      "updated_at": "2023-03-07T12:56:18Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127813309",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127813309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 280,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127856040",
      "pull_request_review_id": 1328468501,
      "id": 1127856040,
      "node_id": "PRRC_kwDOAP4Jqs5DObeo",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL\n+  secp256k1.c\n+  ${internal_obj}\n+)\n+target_include_directories(${PROJECT_NAME} INTERFACE\n+  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+target_compile_definitions(${PROJECT_NAME} PRIVATE\n+  $<$<PLATFORM_ID:Windows>:DLL_EXPORT>\n+)\n+set_target_properties(${PROJECT_NAME} PROPERTIES\n+  VERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}.${${PROJECT_NAME}_LIB_VERSION_AGE}.${${PROJECT_NAME}_LIB_VERSION_REVISION}\"\n+  SOVERSION \"${${PROJECT_NAME}_LIB_VERSION_CURRENT}\"\n+)\n+if(SECP256K1_BUILD_SHARED)\n+  set_target_properties(${PROJECT_NAME} PROPERTIES EXCLUDE_FROM_ALL FALSE)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME})\n+endif()\n+\n+add_library(${PROJECT_NAME}_static STATIC EXCLUDE_FROM_ALL\n+  secp256k1.c\n+  ${internal_obj}\n+)\n+target_include_directories(${PROJECT_NAME}_static INTERFACE\n+  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>\n+)\n+if(NOT MSVC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES\n+    OUTPUT_NAME ${PROJECT_NAME}\n+  )\n+endif()\n+if(SECP256K1_BUILD_STATIC)\n+  set_target_properties(${PROJECT_NAME}_static PROPERTIES EXCLUDE_FROM_ALL FALSE)\n+  list(APPEND ${PROJECT_NAME}_installables ${PROJECT_NAME}_static)\n+endif()\n+\n+add_library(binary_interface INTERFACE)\n+target_compile_definitions(binary_interface INTERFACE\n+  $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>\n+)\n+\n+add_library(link_library INTERFACE)\n+if(SECP256K1_BUILD_SHARED)\n+  target_link_libraries(link_library INTERFACE ${PROJECT_NAME})\n+elseif(SECP256K1_BUILD_STATIC)\n+  target_link_libraries(link_library INTERFACE ${PROJECT_NAME}_static)\n+endif()\n+\n+if(SECP256K1_BUILD_BENCHMARK)\n+  add_executable(bench bench.c)\n+  target_link_libraries(bench binary_interface link_library)\n+  add_executable(bench_internal bench_internal.c ${internal_obj})\n+  target_link_libraries(bench_internal binary_interface)\n+  add_executable(bench_ecmult bench_ecmult.c ${internal_obj})\n+  target_link_libraries(bench_ecmult binary_interface)\n+endif()\n+\n+if(SECP256K1_BUILD_TESTS)\n+  add_executable(noverify_tests tests.c ${internal_obj})\n+  target_link_libraries(noverify_tests binary_interface)\n+  add_test(noverify_tests noverify_tests)\n+  add_executable(tests tests.c ${internal_obj})\n+  target_compile_definitions(tests PRIVATE VERIFY)\n+  target_link_libraries(tests binary_interface)\n+  add_test(NAME tests COMMAND tests CONFIGURATIONS RelWithDebInfo Release MinSizeRel Debug)",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 84,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "b47a5e3e9defcd0caffdd44c0c5b0c56e6596466",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nif(NOT CMAKE_BUILD_TYPE STREQUAL \"Coverage\")\r\n  add_test(tests tests)\r\nendif()  \r\n```\r\n\r\nI think `CONFIGURATIONS` this was a mistake, sorry. While the docs say that this is supposed to work, `tests` is then omitted if one simply runs `ctest` or `make check`. See also https://cmake.org/pipermail/cmake/2016-September/064229.html where someone reported the same but got no reply, and see `src/CTestTestfile.cmake` in the build dir to see why this doesn't work.\r\n\r\nThe above does the right thing for single-config generators. It also adds a meaningless `tests` binary for Coverage mode on multi-config generators, but I guess we need to live with that for now. (We could address this issue in the source actually by printing out a warning when `VERIFY` and `COVERAGE` are enabled at the same time.)\r\n\r\n(`make check` now simply runs `ctest`. We could switch to the old behavior of running `ctest -C ...`, which works, but I doubt that will address the root cause. It's a reasonable requirement that just invoking `ctest` will do the right thing.)",
      "created_at": "2023-03-07T13:28:21Z",
      "updated_at": "2023-03-07T14:06:14Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127856040",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127856040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127902445",
      "pull_request_review_id": 1328531412,
      "id": 1127902445,
      "node_id": "PRRC_kwDOAP4Jqs5DOmzt",
      "diff_hunk": "@@ -0,0 +1,297 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES NONE)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+enable_language(C)\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+if(MSVC)\n+  string(REPLACE \"/DNDEBUG\" \"\" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})\n+else()\n+  set(CMAKE_C_FLAGS_DEBUG \"-O0 -g3\")\n+  set(CMAKE_C_FLAGS_RELEASE \"-O2 -g\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"-DCOVERAGE -O0 --coverage -Wno-unused-parameter\" CACHE STRING\n+  \"Flags used by the C compiler during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"Coverage\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_C_FLAGS_COVERAGE\n+  CMAKE_EXE_LINKER_FLAGS_COVERAGE\n+  CMAKE_SHARED_LINKER_FLAGS_COVERAGE\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"Coverage\"\n+  )\n+endif()\n+set(default_build_type \"Release\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+include(TryAddCompileOption)\n+if(MSVC)\n+  set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\n+  try_add_compile_option(/W3)\n+  try_add_compile_option(/wd4146)\n+  try_add_compile_option(/wd4244)\n+  try_add_compile_option(/wd4267)\n+  try_add_compile_option(/wd4334)\n+else()\n+  try_add_compile_option(-pedantic)\n+  try_add_compile_option(-Wall)\n+  try_add_compile_option(-Wcast-align)\n+  try_add_compile_option(-Wcast-align=strict)\n+  try_add_compile_option(-Wconditional-uninitialized)\n+  try_add_compile_option(-Wextra)\n+  try_add_compile_option(-Wnested-externs)\n+  try_add_compile_option(-Wno-long-long)\n+  try_add_compile_option(-Wno-overlength-strings)\n+  try_add_compile_option(-Wno-unused-function)\n+  try_add_compile_option(-Wreserved-identifier)\n+  try_add_compile_option(-Wshadow)\n+  try_add_compile_option(-Wstrict-prototypes)\n+  try_add_compile_option(-Wundef)\n+endif()\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.2)\n+  # Honor visibility properties for all target types.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0063.html\n+  cmake_policy(SET CMP0063 NEW)\n+endif()\n+set(CMAKE_C_VISIBILITY_PRESET hidden)\n+set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)\n+\n+include(CTest)\n+if(SECP256K1_BUILD_BENCHMARK OR SECP256K1_BUILD_TESTS OR SECP256K1_BUILD_EXHAUSTIVE_TESTS OR SECP256K1_BUILD_CTIME_TESTS OR SECP256K1_BUILD_EXAMPLES)\n+  # We do not use CMake CTest's BUILD_TESTING option.\n+  mark_as_advanced(BUILD_TESTING)\n+  enable_testing()\n+  add_custom_target(check\n+    COMMAND ${CMAKE_CTEST_COMMAND} -C $<$<CONFIG:Release>:Release>$<$<CONFIG:Debug>:Debug>\n+    VERBATIM\n+  )\n+endif()\n+\n+add_subdirectory(src)\n+if(SECP256K1_BUILD_EXAMPLES)\n+  add_subdirectory(examples)\n+endif()\n+\n+message(\"\\n\")\n+message(\"secp256k1 configure summary\")\n+message(\"===========================\")\n+message(\"Build artifacts:\")\n+message(\"  shared library ...................... ${SECP256K1_BUILD_SHARED}\")\n+message(\"  static library ...................... ${SECP256K1_BUILD_STATIC}\")\n+message(\"Optional modules:\")\n+message(\"  ECDH ................................ ${SECP256K1_ENABLE_MODULE_ECDH}\")\n+message(\"  ECDSA pubkey recovery ............... ${SECP256K1_ENABLE_MODULE_RECOVERY}\")\n+message(\"  extrakeys ........................... ${SECP256K1_ENABLE_MODULE_EXTRAKEYS}\")\n+message(\"  schnorrsig .......................... ${SECP256K1_ENABLE_MODULE_SCHNORRSIG}\")\n+message(\"Parameters:\")\n+message(\"  ecmult window size .................. ${SECP256K1_ECMULT_WINDOW_SIZE}\")\n+message(\"  ecmult gen precision bits ........... ${SECP256K1_ECMULT_GEN_PREC_BITS}\")\n+message(\"Optional features:\")\n+message(\"  assembly optimization ............... ${SECP256K1_ASM}\")\n+message(\"  external callbacks .................. ${SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS}\")\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  message(\"  wide multiplication (test-only) ..... ${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\")\n+endif()\n+message(\"Optional binaries:\")\n+message(\"  benchmark ........................... ${SECP256K1_BUILD_BENCHMARK}\")\n+message(\"  noverify_tests ...................... ${SECP256K1_BUILD_TESTS}\")\n+set(tests_status \"${SECP256K1_BUILD_TESTS}\")\n+if(CMAKE_BUILD_TYPE STREQUAL \"Coverage\")\n+  set(tests_status OFF)\n+endif()\n+message(\"  tests ............................... ${tests_status}\")\n+message(\"  exhaustive tests .................... ${SECP256K1_BUILD_EXHAUSTIVE_TESTS}\")\n+message(\"  ctime_tests ......................... ${SECP256K1_BUILD_CTIME_TESTS}\")\n+message(\"  examples ............................ ${SECP256K1_BUILD_EXAMPLES}\")\n+message(\"\")\n+if(CMAKE_CROSSCOMPILING)\n+  set(cross_status \"TRUE, for ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+else()\n+  set(cross_status \"FALSE\")\n+endif()\n+message(\"Cross compiling ....................... ${cross_status}\")\n+message(\"Valgrind .............................. ${SECP256K1_VALGRIND}\")\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+string(REPLACE \";\" \" \" definitions \"${definitions}\")\n+message(\"Preprocessor defined macros ........... ${definitions}\")\n+message(\"C compiler ............................ ${CMAKE_C_COMPILER}\")\n+message(\"CFLAGS ................................ ${CMAKE_C_FLAGS}\")\n+get_directory_property(compile_options COMPILE_OPTIONS)\n+string(REPLACE \";\" \" \" compile_options \"${compile_options}\")\n+message(\"Compile options ....................... \" ${compile_options})\n+if(DEFINED CMAKE_BUILD_TYPE)\n+  message(\"Build type:\")\n+  message(\" - CMAKE_BUILD_TYPE ................... ${CMAKE_BUILD_TYPE}\")\n+  string(TOUPPER \"${CMAKE_BUILD_TYPE}\" build_type)\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_${build_type}}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_${build_type}}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_${build_type}}\")\n+else()\n+  message(\"Available configurations .............. ${CMAKE_CONFIGURATION_TYPES}\")\n+  message(\"Debug configuration:\")\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_DEBUG}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_DEBUG}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_DEBUG}\")\n+  message(\"Release configuration:\")\n+  message(\" - CFLAGS ............................. ${CMAKE_C_FLAGS_RELEASE}\")\n+  message(\" - LDFLAGS for executables ............ ${CMAKE_EXE_LINKER_FLAGS_RELEASE}\")\n+  message(\" - LDFLAGS for shared libraries ....... ${CMAKE_SHARED_LINKER_FLAGS_RELEASE}\")",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 287,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "812cc7e248074f568da85306395ce8a423867885",
      "in_reply_to_id": 1124457430,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> ... printing `RelWithDebInfo` and `Debug` is probably slightly better than what we do now.\r\n\r\nDone in https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458211904.",
      "created_at": "2023-03-07T13:57:54Z",
      "updated_at": "2023-03-07T13:57:54Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1127902445",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1127902445"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": 280,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128562391",
      "pull_request_review_id": 1329494867,
      "id": 1128562391,
      "node_id": "PRRC_kwDOAP4Jqs5DRH7X",
      "diff_hunk": "@@ -73,6 +71,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake (experimental)\n+----------------------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ make check  # run the test suite\n+    $ sudo make install  # optional\n+\n+To compile optional modules (such as Schnorr signatures), you need to run `cmake` with additional flags (such as `-DSECP256K1_ENABLE_MODULE_SCHNORRSIG=ON`). Run `cmake .. -LH` to see the full list of available flags.\n+\n+### Cross compiling\n+\n+To alleviate cross compiling, preconfigured toolchain files are available in the `cmake` directory.",
      "path": "README.md",
      "position": null,
      "original_position": 34,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The verb \"alleviate\" is strange here. Do you mean something like \"To alleviate issues with cross compiling\", or \"To support cross compiling\"?",
      "created_at": "2023-03-07T20:42:16Z",
      "updated_at": "2023-03-07T20:42:16Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128562391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128562391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128564832",
      "pull_request_review_id": 1329498360,
      "id": 1128564832,
      "node_id": "PRRC_kwDOAP4Jqs5DRIhg",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+if(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")",
      "path": "cmake/FindValgrind.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Support for valgrind through brew was removed in #1152. I think most logic here can be dropped.",
      "created_at": "2023-03-07T20:44:45Z",
      "updated_at": "2023-03-07T20:44:46Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128564832",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128564832"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128567220",
      "pull_request_review_id": 1329502124,
      "id": 1128567220,
      "node_id": "PRRC_kwDOAP4Jqs5DRJG0",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+include(CheckCCompilerFlag)",
      "path": "cmake/TryAddCompileOption.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@hebasto Did you copy this from somewhere, or did you write it yourself?",
      "created_at": "2023-03-07T20:46:56Z",
      "updated_at": "2023-03-07T20:46:57Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128567220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128567220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128578698",
      "pull_request_review_id": 1329518968,
      "id": 1128578698,
      "node_id": "PRRC_kwDOAP4Jqs5DRL6K",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+include(CheckCCompilerFlag)",
      "path": "cmake/TryAddCompileOption.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "in_reply_to_id": 1128567220,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The latter.",
      "created_at": "2023-03-07T20:57:23Z",
      "updated_at": "2023-03-07T20:57:23Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128578698",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128578698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128582191",
      "pull_request_review_id": 1329523726,
      "id": 1128582191,
      "node_id": "PRRC_kwDOAP4Jqs5DRMwv",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+if(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")",
      "path": "cmake/FindValgrind.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "in_reply_to_id": 1128564832,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "#1152 changes CI only.\r\n\r\nThe build system still has support for valgrind through brew: https://github.com/bitcoin-core/secp256k1/blob/9d1b458d5fb3ea45c1a038aae4be35f828ffed31/configure.ac#L45-L56",
      "created_at": "2023-03-07T21:00:14Z",
      "updated_at": "2023-03-07T21:12:55Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128582191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128582191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128584969",
      "pull_request_review_id": 1329527559,
      "id": 1128584969,
      "node_id": "PRRC_kwDOAP4Jqs5DRNcJ",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+if(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")",
      "path": "cmake/FindValgrind.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "in_reply_to_id": 1128564832,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think most logic here can be dropped.\r\n\r\nFWIW, I tested [valgrind](https://github.com/LouisBrunner/valgrind-macos) on x86_64 macOS.\r\n\r\nIf you still thinking that dropping this piece of code is best, let me know.",
      "created_at": "2023-03-07T21:02:42Z",
      "updated_at": "2023-03-07T21:02:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128584969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128584969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128588031",
      "pull_request_review_id": 1329531593,
      "id": 1128588031,
      "node_id": "PRRC_kwDOAP4Jqs5DROL_",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+if(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")",
      "path": "cmake/FindValgrind.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "in_reply_to_id": 1128564832,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, fair enough - it makes sense to mimic what the existing build system supports.\r\n\r\nI do think that we should probably drop support for macos valgrind altogether, as macos is increasing ARM64-only, and valgrind doesn't support macos-ARM64. But that can be done in a separate PR later.",
      "created_at": "2023-03-07T21:05:45Z",
      "updated_at": "2023-03-07T21:05:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128588031",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128588031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128588423",
      "pull_request_review_id": 1329532164,
      "id": 1128588423,
      "node_id": "PRRC_kwDOAP4Jqs5DROSH",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+include(CheckCCompilerFlag)",
      "path": "cmake/TryAddCompileOption.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "in_reply_to_id": 1128567220,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also feedback from reviewing of the [similar project](https://github.com/bitcoin/bitcoin/pull/25797) in Bitcoin Core was used.",
      "created_at": "2023-03-07T21:06:10Z",
      "updated_at": "2023-03-07T21:06:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128588423",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128588423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128593009",
      "pull_request_review_id": 1329538051,
      "id": 1128593009,
      "node_id": "PRRC_kwDOAP4Jqs5DRPZx",
      "diff_hunk": "@@ -73,6 +71,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake (experimental)\n+----------------------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ make check  # run the test suite\n+    $ sudo make install  # optional\n+\n+To compile optional modules (such as Schnorr signatures), you need to run `cmake` with additional flags (such as `-DSECP256K1_ENABLE_MODULE_SCHNORRSIG=ON`). Run `cmake .. -LH` to see the full list of available flags.\n+\n+### Cross compiling\n+\n+To alleviate cross compiling, preconfigured toolchain files are available in the `cmake` directory.",
      "path": "README.md",
      "position": null,
      "original_position": 34,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "in_reply_to_id": 1128562391,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1458878616).",
      "created_at": "2023-03-07T21:10:17Z",
      "updated_at": "2023-03-07T21:10:18Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128593009",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128593009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128600128",
      "pull_request_review_id": 1329548058,
      "id": 1128600128,
      "node_id": "PRRC_kwDOAP4Jqs5DRRJA",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT",
      "path": "src/CMakeLists.txt",
      "position": 14,
      "original_position": 14,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this library used anywhere? I may be misunderstanding the syntax, but it seems its objects are only referenced through `${internal_obj}`?\r\n\r\nSame for `common`.",
      "created_at": "2023-03-07T21:16:20Z",
      "updated_at": "2023-03-07T21:20:18Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128600128",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128600128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128608359",
      "pull_request_review_id": 1329558535,
      "id": 1128608359,
      "node_id": "PRRC_kwDOAP4Jqs5DRTJn",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT",
      "path": "src/CMakeLists.txt",
      "position": 14,
      "original_position": 14,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": 1128600128,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Is this library...\r\n\r\nThis is not a real library, it is just a [collection](https://cmake.org/cmake/help/latest/manual/cmake-buildsystem.7.html#object-libraries) of object files, which indeed  \r\n\r\n> are only referenced through `${internal_obj}`\r\n\r\n",
      "created_at": "2023-03-07T21:24:30Z",
      "updated_at": "2023-03-07T21:24:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128608359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128608359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128610611",
      "pull_request_review_id": 1329561141,
      "id": 1128610611,
      "node_id": "PRRC_kwDOAP4Jqs5DRTsz",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT",
      "path": "src/CMakeLists.txt",
      "position": 14,
      "original_position": 14,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": 1128600128,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That is a way on CMake 3.1 to build a shared and a static libraries simultaneously.\r\n\r\nUPD. In CMake 3.12+, a more convenient syntax is available.",
      "created_at": "2023-03-07T21:26:23Z",
      "updated_at": "2023-03-07T21:38:20Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128610611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128610611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128616227",
      "pull_request_review_id": 1329567826,
      "id": 1128616227,
      "node_id": "PRRC_kwDOAP4Jqs5DRVEj",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT",
      "path": "src/CMakeLists.txt",
      "position": 14,
      "original_position": 14,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": 1128600128,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, I see!",
      "created_at": "2023-03-07T21:31:35Z",
      "updated_at": "2023-03-07T21:31:35Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128616227",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128616227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128699084",
      "pull_request_review_id": 1329673274,
      "id": 1128699084,
      "node_id": "PRRC_kwDOAP4Jqs5DRpTM",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+if(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")",
      "path": "cmake/FindValgrind.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "572ef697670bc6f468e95455f8f979cadcfb1fcd",
      "in_reply_to_id": 1128564832,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Ah, fair enough - it makes sense to mimic what the existing build system supports.\r\n\r\nIndeed.\r\n\r\n> I do think that we should probably drop support for macos valgrind altogether, as macos is increasing ARM64-only, and valgrind doesn't support macos-ARM64. But that can be done in a separate PR later.\r\n\r\nARM64 support is on the roadmap here https://github.com/LouisBrunner/valgrind-macos/issues/56... but yep, I added this to the list of [things to reconsider after the PR](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1453785807).",
      "created_at": "2023-03-07T22:46:53Z",
      "updated_at": "2023-03-07T22:46:53Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128699084",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128699084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128702492",
      "pull_request_review_id": 1329676552,
      "id": 1128702492,
      "node_id": "PRRC_kwDOAP4Jqs5DRqIc",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL",
      "path": "src/CMakeLists.txt",
      "position": 20,
      "original_position": 20,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This static/shared logic seems needlessly complicated to me, and from what I can tell largely bypasses CMake's typical machinery and customs.\r\n\r\nIs the extra work here primarily to support building a shared/static lib at the same time? If so, is that something we really need to carry forward?",
      "created_at": "2023-03-07T22:50:13Z",
      "updated_at": "2023-03-07T22:50:26Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128702492",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128702492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128709259",
      "pull_request_review_id": 1329684990,
      "id": 1128709259,
      "node_id": "PRRC_kwDOAP4Jqs5DRryL",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL",
      "path": "src/CMakeLists.txt",
      "position": 20,
      "original_position": 20,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": 1128702492,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Is the extra work here primarily to support building a shared/static lib at the same time? If so, is that something we really need to carry forward?\r\n\r\nI agree. If this is only done to support both types at the same time, this is something we could drop for sure, in particular if it helps with issues such as the PIC issue in the previous comment. No need to mimic that specific ability of autotools. If one needs both, one can invoke the build system twice. ",
      "created_at": "2023-03-07T22:58:02Z",
      "updated_at": "2023-03-07T22:59:33Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128709259",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128709259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128743528",
      "pull_request_review_id": 1329726936,
      "id": 1128743528,
      "node_id": "PRRC_kwDOAP4Jqs5DR0Jo",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL",
      "path": "src/CMakeLists.txt",
      "position": 20,
      "original_position": 20,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": 1128702492,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The PIC issue above is that the object lib doesn't know whether or not it should be built as PIC, so it defaults to no.\r\nFor static libs, that's the correct answer. For shared libs, that's wrong.\r\n\r\nBut since it's only built once no matter what, there's no correct answer to \"how should the object lib be built if we're building for both shared and static libs?\". The result is the hacky patch above.\r\n\r\nSo while I appreciate the attempt to do both at once, I think the only real \"clean\" way is to build objects twice. Which as @real-or-random said, means simply invoking twice.\r\n\r\nIn case it's helpful, yesterday I pushed a draft [CMake port of Minisketch](https://github.com/theuni/minisketch/commit/06a51b739da9faa8cb9f7f5c4765be090b657d7f) which I believe handles this correctly (though it currently uses `BUILD_SHARED_LIBS` directly). Notice how it gets/sets the `POSITION_INDEPENDENT_CODE` properly for the object lib so that it does the right thing whether it's building shared or static.\r\n\r\n",
      "created_at": "2023-03-07T23:35:59Z",
      "updated_at": "2023-03-07T23:35:59Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1128743528",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1128743528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129179414",
      "pull_request_review_id": 1330256970,
      "id": 1129179414,
      "node_id": "PRRC_kwDOAP4Jqs5DTekW",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL",
      "path": "src/CMakeLists.txt",
      "position": 20,
      "original_position": 20,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": 1128702492,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This static/shared logic seems needlessly complicated to me, and from what I can tell largely bypasses CMake's typical machinery and customs.\r\n> \r\n> Is the extra work here primarily to support building a shared/static lib at the same time?\r\n\r\nYes, it is.\r\n\r\n\r\n\r\n> The PIC issue above is that the object lib doesn't know whether or not it should be built as PIC, so it defaults to no.\r\n> For static libs, that's the correct answer. For shared libs, that's wrong.\r\n\r\nThat is why there was `set(CMAKE_POSITION_INDEPENDENT_CODE ON)` [initially](https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124264718).",
      "created_at": "2023-03-08T09:37:44Z",
      "updated_at": "2023-03-08T09:37:44Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1129179414",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129179414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129182092",
      "pull_request_review_id": 1330260673,
      "id": 1129182092,
      "node_id": "PRRC_kwDOAP4Jqs5DTfOM",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL",
      "path": "src/CMakeLists.txt",
      "position": 20,
      "original_position": 20,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": 1128702492,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> In case it's helpful, yesterday I pushed a draft [CMake port of Minisketch](https://github.com/theuni/minisketch/commit/06a51b739da9faa8cb9f7f5c4765be090b657d7f)...\r\n\r\nFWIW, https://github.com/sipa/minisketch/pull/75",
      "created_at": "2023-03-08T09:40:13Z",
      "updated_at": "2023-03-08T09:40:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1129182092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129182092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129248134",
      "pull_request_review_id": 1330386476,
      "id": 1129248134,
      "node_id": "PRRC_kwDOAP4Jqs5DTvWG",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL",
      "path": "src/CMakeLists.txt",
      "position": 20,
      "original_position": 20,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": 1128702492,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> So while I appreciate the attempt to do both at once, I think the only real \"clean\" way is to build objects twice. Which as @real-or-random said, means simply invoking twice.\r\n\r\nAgree.\r\n\r\nFWIW, [here](https://discourse.cmake.org/t/one-library-target-building-both-static-and-shared/3155) are some related thoughts from one of CMake developers.",
      "created_at": "2023-03-08T10:44:46Z",
      "updated_at": "2023-03-08T10:44:46Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1129248134",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129248134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129252000",
      "pull_request_review_id": 1330395275,
      "id": 1129252000,
      "node_id": "PRRC_kwDOAP4Jqs5DTwSg",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL",
      "path": "src/CMakeLists.txt",
      "position": 20,
      "original_position": 20,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": 1128702492,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> That is why there was `set(CMAKE_POSITION_INDEPENDENT_CODE ON)` [initially](https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1124264718).\r\n\r\nMakes sense! Sorry, I wasn't aware of all these issues when I suggested dropping that line.\r\n\r\nI think for now, we should either\r\n1. apply the patch suggested by @theuni \r\n2. or simply `set(CMAKE_POSITION_INDEPENDENT_CODE ON)` again -- sure it's a deviation from autotools then, but it's justified\r\n\r\nIf you ask me, I'd probably go with 1, but either is fine.\r\n\r\nIt's totally reasonable to say that dropping the ability to build shared and static libs at the same time belongs to the category of making things more CMake-ish and is probably better addressed in a separate PR. \r\n\r\nThe big advantage of getting this PR merged soon that it will be easier to refine separate aspects of the CMake build separately. This PR here is huge already now (with 240 comments and 47 revisions), and discussions will get much easier if they can happen in separate PRs which address only a single concern.\r\n\r\n\r\n",
      "created_at": "2023-03-08T10:48:32Z",
      "updated_at": "2023-03-08T10:48:39Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1129252000",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129252000"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129252983",
      "pull_request_review_id": 1330397451,
      "id": 1129252983,
      "node_id": "PRRC_kwDOAP4Jqs5DTwh3",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+# Must be included before CMAKE_INSTALL_INCLUDEDIR is used.\n+include(GNUInstallDirs)\n+set(${PROJECT_NAME}_installables \"\")\n+\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  add_library(common OBJECT\n+    asm/field_10x26_arm.s\n+  )\n+  set(common_obj \"$<TARGET_OBJECTS:common>\")\n+else()\n+  set(common_obj \"\")\n+endif()\n+\n+add_library(precomputed OBJECT\n+  precomputed_ecmult.c\n+  precomputed_ecmult_gen.c\n+)\n+set(internal_obj \"$<TARGET_OBJECTS:precomputed>\" \"${common_obj}\")\n+\n+add_library(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL",
      "path": "src/CMakeLists.txt",
      "position": 20,
      "original_position": 20,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "752ae70e1d77aff39498dcb6e0e7e162c392f6cb",
      "in_reply_to_id": 1128702492,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh. you already implemented suggestion 1 while I was writing this. :) ",
      "created_at": "2023-03-08T10:49:31Z",
      "updated_at": "2023-03-08T10:49:31Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1129252983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129252983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129429337",
      "pull_request_review_id": 1330670254,
      "id": 1129429337,
      "node_id": "PRRC_kwDOAP4Jqs5DUblZ",
      "diff_hunk": "@@ -0,0 +1,302 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES C)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+# We leave assertions on, because they are only used in the examples, and we want them always on there.\n+if(MSVC)\n+  string(REGEX REPLACE \"/DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+  string(REGEX REPLACE \"/DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\")\n+  string(REGEX REPLACE \"/DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_MINSIZEREL \"${CMAKE_C_FLAGS_MINSIZEREL}\")\n+else()\n+  string(REGEX REPLACE \"-DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+  string(REGEX REPLACE \"-DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\")\n+  string(REGEX REPLACE \"-DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_MINSIZEREL \"${CMAKE_C_FLAGS_MINSIZEREL}\")\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  string(REGEX REPLACE \"-O3[ \\t\\r\\n]*\" \"-O2\" CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -DCOVERAGE=1 --coverage -Wno-unused-parameter\" CACHE STRING",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 150,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "a846de12bae294f8f2877c585e57708949bec7b4",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nset(CMAKE_C_FLAGS_COVERAGE \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -O0 -DCOVERAGE=1 --coverage -Wno-unused-parameter\" CACHE STRING\r\n```",
      "created_at": "2023-03-08T13:28:42Z",
      "updated_at": "2023-03-08T13:28:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1129429337",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129429337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129441642",
      "pull_request_review_id": 1330684228,
      "id": 1129441642,
      "node_id": "PRRC_kwDOAP4Jqs5DUelq",
      "diff_hunk": "@@ -0,0 +1,302 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES C)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+# We leave assertions on, because they are only used in the examples, and we want them always on there.\n+if(MSVC)\n+  string(REGEX REPLACE \"/DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+  string(REGEX REPLACE \"/DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\")\n+  string(REGEX REPLACE \"/DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_MINSIZEREL \"${CMAKE_C_FLAGS_MINSIZEREL}\")\n+else()\n+  string(REGEX REPLACE \"-DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+  string(REGEX REPLACE \"-DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\")\n+  string(REGEX REPLACE \"-DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_MINSIZEREL \"${CMAKE_C_FLAGS_MINSIZEREL}\")\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  string(REGEX REPLACE \"-O3[ \\t\\r\\n]*\" \"-O2\" CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -DCOVERAGE=1 --coverage -Wno-unused-parameter\" CACHE STRING",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 150,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "a846de12bae294f8f2877c585e57708949bec7b4",
      "in_reply_to_id": 1129429337,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought that `-O0` was skipped for a reason in https://github.com/real-or-random/secp256k1/commit/3fde3022e6247ba07e5e5090834737fd3a13d65e, but forgot to ask about it :)\r\n\r\n[Updated](https://github.com/bitcoin-core/secp256k1/pull/1113#issuecomment-1460165200).",
      "created_at": "2023-03-08T13:37:54Z",
      "updated_at": "2023-03-08T13:37:55Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1129441642",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129441642"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129456634",
      "pull_request_review_id": 1330702558,
      "id": 1129456634,
      "node_id": "PRRC_kwDOAP4Jqs5DUiP6",
      "diff_hunk": "@@ -0,0 +1,302 @@\n+cmake_minimum_required(VERSION 3.1)\n+\n+if(CMAKE_VERSION VERSION_GREATER 3.14)\n+  # MSVC runtime library flags are selected by the CMAKE_MSVC_RUNTIME_LIBRARY abstraction.\n+  cmake_policy(SET CMP0091 NEW)\n+  # MSVC warning flags are not in CMAKE_<LANG>_FLAGS by default.\n+  cmake_policy(SET CMP0092 NEW)\n+endif()\n+\n+# The package (a.k.a. release) version is based on semantic versioning 2.0.0 of\n+# the API. All changes in experimental modules are treated as\n+# backwards-compatible and therefore at most increase the minor version.\n+project(secp256k1 VERSION 0.2.1 LANGUAGES C)\n+\n+# The library version is based on libtool versioning of the ABI. The set of\n+# rules for updating the version can be found here:\n+# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+# All changes in experimental modules are treated as if they don't affect the\n+# interface and therefore only increase the revision.\n+set(${PROJECT_NAME}_LIB_VERSION_CURRENT 1)\n+set(${PROJECT_NAME}_LIB_VERSION_REVISION 1)\n+set(${PROJECT_NAME}_LIB_VERSION_AGE 0)\n+\n+set(CMAKE_C_STANDARD 90)\n+set(CMAKE_C_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n+\n+# We do not use CMake's BUILD_SHARED_LIBS option.\n+option(SECP256K1_BUILD_SHARED \"Build shared library.\" ON)\n+option(SECP256K1_BUILD_STATIC \"Build static library.\" ON)\n+if(NOT SECP256K1_BUILD_SHARED AND NOT SECP256K1_BUILD_STATIC)\n+  message(FATAL_ERROR \"At least one of SECP256K1_BUILD_SHARED and SECP256K1_BUILD_STATIC must be enabled.\")\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_ECDH \"Enable ECDH module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_ECDH)\n+  add_definitions(-DENABLE_MODULE_ECDH=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_RECOVERY \"Enable ECDSA pubkey recovery module.\" OFF)\n+if(SECP256K1_ENABLE_MODULE_RECOVERY)\n+  add_definitions(-DENABLE_MODULE_RECOVERY=1)\n+endif()\n+\n+option(SECP256K1_ENABLE_MODULE_EXTRAKEYS \"Enable extrakeys module.\" ON)\n+option(SECP256K1_ENABLE_MODULE_SCHNORRSIG \"Enable schnorrsig module.\" ON)\n+if(SECP256K1_ENABLE_MODULE_SCHNORRSIG)\n+  set(SECP256K1_ENABLE_MODULE_EXTRAKEYS ON)\n+  add_definitions(-DENABLE_MODULE_SCHNORRSIG=1)\n+endif()\n+if(SECP256K1_ENABLE_MODULE_EXTRAKEYS)\n+  add_definitions(-DENABLE_MODULE_EXTRAKEYS=1)\n+endif()\n+\n+option(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS \"Enable external default callback functions.\" OFF)\n+if(SECP256K1_USE_EXTERNAL_DEFAULT_CALLBACKS)\n+  add_definitions(-DUSE_EXTERNAL_DEFAULT_CALLBACKS=1)\n+endif()\n+\n+set(SECP256K1_ECMULT_WINDOW_SIZE \"AUTO\" CACHE STRING \"Window size for ecmult precomputation for verification, specified as integer in range [2..24]. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 15). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_WINDOW_SIZE PROPERTY STRINGS \"AUTO\" 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24)\n+include(CheckStringOptionValue)\n+check_string_option_value(SECP256K1_ECMULT_WINDOW_SIZE)\n+if(SECP256K1_ECMULT_WINDOW_SIZE STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_WINDOW_SIZE 15)\n+endif()\n+add_definitions(-DECMULT_WINDOW_SIZE=${SECP256K1_ECMULT_WINDOW_SIZE})\n+\n+set(SECP256K1_ECMULT_GEN_PREC_BITS \"AUTO\" CACHE STRING \"Precision bits to tune the precomputed table size for signing, specified as integer 2, 4 or 8. \\\"AUTO\\\" is a reasonable setting for desktop machines (currently 4). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ECMULT_GEN_PREC_BITS PROPERTY STRINGS \"AUTO\" 2 4 8)\n+check_string_option_value(SECP256K1_ECMULT_GEN_PREC_BITS)\n+if(SECP256K1_ECMULT_GEN_PREC_BITS STREQUAL \"AUTO\")\n+  set(SECP256K1_ECMULT_GEN_PREC_BITS 4)\n+endif()\n+add_definitions(-DECMULT_GEN_PREC_BITS=${SECP256K1_ECMULT_GEN_PREC_BITS})\n+\n+set(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY \"OFF\" CACHE STRING \"Test-only override of the (autodetected by the C code) \\\"widemul\\\" setting. Legal values are: \\\"OFF\\\", \\\"int128_struct\\\", \\\"int128\\\" or \\\"int64\\\". [default=OFF]\")\n+set_property(CACHE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY PROPERTY STRINGS \"OFF\" \"int128_struct\" \"int128\" \"int64\")\n+check_string_option_value(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+if(SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+  string(TOUPPER \"${SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY}\" widemul_upper_value)\n+  add_definitions(-DUSE_FORCE_WIDEMUL_${widemul_upper_value}=1)\n+endif()\n+mark_as_advanced(FORCE SECP256K1_TEST_OVERRIDE_WIDE_MULTIPLY)\n+\n+set(SECP256K1_ASM \"AUTO\" CACHE STRING \"Assembly optimizations to use: \\\"AUTO\\\", \\\"OFF\\\", \\\"x86_64\\\" or \\\"arm\\\" (experimental). [default=AUTO]\")\n+set_property(CACHE SECP256K1_ASM PROPERTY STRINGS \"AUTO\" \"OFF\" \"x86_64\" \"arm\")\n+check_string_option_value(SECP256K1_ASM)\n+if(SECP256K1_ASM STREQUAL \"arm\")\n+  enable_language(ASM)\n+  add_definitions(-DUSE_EXTERNAL_ASM=1)\n+elseif(SECP256K1_ASM)\n+  include(Check64bitAssembly)\n+  check_64bit_assembly()\n+  if(HAS_64BIT_ASM)\n+    set(SECP256K1_ASM \"x86_64\")\n+    add_definitions(-DUSE_ASM_X86_64=1)\n+  elseif(SECP256K1_ASM STREQUAL \"AUTO\")\n+    set(SECP256K1_ASM \"OFF\")\n+  else()\n+    message(FATAL_ERROR \"x86_64 assembly optimization requested but not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_EXPERIMENTAL \"Allow experimental configuration options.\" OFF)\n+if(NOT SECP256K1_EXPERIMENTAL)\n+  if(SECP256K1_ASM STREQUAL \"arm\")\n+    message(FATAL_ERROR \"ARM assembly optimization is experimental. Use -DSECP256K1_EXPERIMENTAL=ON to allow.\")\n+  endif()\n+endif()\n+\n+set(SECP256K1_VALGRIND \"AUTO\" CACHE STRING \"Build with extra checks for running inside Valgrind. [default=AUTO]\")\n+set_property(CACHE SECP256K1_VALGRIND PROPERTY STRINGS \"AUTO\" \"OFF\" \"ON\")\n+check_string_option_value(SECP256K1_VALGRIND)\n+if(SECP256K1_VALGRIND)\n+  find_package(Valgrind MODULE)\n+  if(Valgrind_FOUND)\n+    set(SECP256K1_VALGRIND ON)\n+    include_directories(${Valgrind_INCLUDE_DIR})\n+    add_definitions(-DVALGRIND)\n+  elseif(SECP256K1_VALGRIND STREQUAL \"AUTO\")\n+    set(SECP256K1_VALGRIND OFF)\n+  else()\n+    message(FATAL_ERROR \"Valgrind support requested but valgrind/memcheck.h header not available.\")\n+  endif()\n+endif()\n+\n+option(SECP256K1_BUILD_BENCHMARK \"Build benchmarks.\" ON)\n+option(SECP256K1_BUILD_TESTS \"Build tests.\" ON)\n+option(SECP256K1_BUILD_EXHAUSTIVE_TESTS \"Build exhaustive tests.\" ON)\n+option(SECP256K1_BUILD_CTIME_TESTS \"Build constant-time tests.\" ${SECP256K1_VALGRIND})\n+option(SECP256K1_BUILD_EXAMPLES \"Build examples.\" OFF)\n+\n+# Redefine configuration flags.\n+# We leave assertions on, because they are only used in the examples, and we want them always on there.\n+if(MSVC)\n+  string(REGEX REPLACE \"/DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+  string(REGEX REPLACE \"/DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\")\n+  string(REGEX REPLACE \"/DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_MINSIZEREL \"${CMAKE_C_FLAGS_MINSIZEREL}\")\n+else()\n+  string(REGEX REPLACE \"-DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+  string(REGEX REPLACE \"-DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\")\n+  string(REGEX REPLACE \"-DNDEBUG[ \\t\\r\\n]*\" \"\" CMAKE_C_FLAGS_MINSIZEREL \"${CMAKE_C_FLAGS_MINSIZEREL}\")\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  string(REGEX REPLACE \"-O3[ \\t\\r\\n]*\" \"-O2\" CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\")\n+endif()\n+\n+# Define custom \"Coverage\" build type.\n+set(CMAKE_C_FLAGS_COVERAGE \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -DCOVERAGE=1 --coverage -Wno-unused-parameter\" CACHE STRING",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 150,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "a846de12bae294f8f2877c585e57708949bec7b4",
      "in_reply_to_id": 1129429337,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, but the reason is my stupidity. :)",
      "created_at": "2023-03-08T13:48:32Z",
      "updated_at": "2023-03-08T13:48:33Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1129456634",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129456634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129842212",
      "pull_request_review_id": 1331173276,
      "id": 1129842212,
      "node_id": "PRRC_kwDOAP4Jqs5DWAYk",
      "diff_hunk": "@@ -73,6 +71,43 @@ libsecp256k1 is built using autotools:\n \n To compile optional modules (such as Schnorr signatures), you need to run `./configure` with additional flags (such as `--enable-module-schnorrsig`). Run `./configure --help` to see the full list of available flags.\n \n+Building with CMake (experimental)\n+----------------------------------\n+\n+To maintain a pristine source tree, CMake encourages to perform an out-of-source build by using a separate dedicated build tree.\n+\n+### Building on POSIX systems\n+\n+    $ mkdir build && cd build\n+    $ cmake ..\n+    $ make\n+    $ make check  # run the test suite\n+    $ sudo make install  # optional\n+\n+To compile optional modules (such as Schnorr signatures), you need to run `cmake` with additional flags (such as `-DSECP256K1_ENABLE_MODULE_SCHNORRSIG=ON`). Run `cmake .. -LH` to see the full list of available flags.\n+\n+### Cross compiling\n+\n+To alleviate issues with cross compiling, preconfigured toolchain files are available in the `cmake` directory.\n+For example, to cross compile for Windows:\n+\n+    $ cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/x86_64-w64-mingw32.toolchain.cmake\n+\n+To cross compile for Android with [NDK](https://developer.android.com/ndk/guides/cmake) (using NDK's toolchain file, and assuming the `ANDROID_NDK_ROOT` environment variable has been set):\n+\n+    $ cmake .. -DCMAKE_TOOLCHAIN_FILE=\"${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake\" -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=28\n+\n+### Building on Windows\n+\n+To build on Windows with Visual Studio, a proper [generator](https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html#visual-studio-generators) must be specified for a new build tree.\n+\n+The following example assumes using of Visual Studio 2022 and CMake v3.21+.\n+\n+In \"Developer Command Prompt for VS 2022\":\n+\n+    >cmake -G \"Visual Studio 17 2022\" -A x64 -S . -B build\n+    >cmake --build build --config Release",
      "path": "README.md",
      "position": 52,
      "original_position": 52,
      "commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "original_commit_id": "e1eb33724c2ca47855a8c1dada421cabdb717fe7",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now that I've read this again this in the merged README:  :see_no_evil: \r\n```suggestion\r\n    >cmake --build build --config RelWithDebInfo\r\n```\r\n\r\n",
      "created_at": "2023-03-08T17:58:24Z",
      "updated_at": "2023-03-08T17:58:25Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1113#discussion_r1129842212",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1129842212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1113"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    }
  ]
}