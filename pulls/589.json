{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589",
    "id": 253201101,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUzMjAxMTAx",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/589.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/589.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/b631248693702b7b95449de185caef0f8c117f6a",
    "number": 589,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Allow sign-to-contract commitments in schnorrsigs [̶a̶l̶t̶e̶r̶n̶a̶t̶i̶v̶e̶]̶",
    "user": {
      "login": "jonasnick",
      "id": 2582071,
      "node_id": "MDQ6VXNlcjI1ODIwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasnick",
      "html_url": "https://github.com/jonasnick",
      "followers_url": "https://api.github.com/users/jonasnick/followers",
      "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasnick/orgs",
      "repos_url": "https://api.github.com/users/jonasnick/repos",
      "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasnick/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "~~This is an alternative to #588 as requested by @real-or-random which I also slightly prefer~~ (EDIT: this seems to be generally preferred now). The main difference is that the sign-to-contract commitment step happens in the signature function and not the nonce function. Also the `nonce_is_negated` argument in `schnorrsig_sign` is replaced by an `s2c_opening` object. A new argument to `schnorrsig_sign` is added called `s2c_data`. There's no need to add a context argument to nonce functions. I also added parsing and serialization for `s2c_opening`s. Manual initialization of `s2c_opening` is not necessary anymore.\r\n\r\nExample:\r\n```\r\n/* Signer */\r\nsecp256k1_s2c_opening opening;\r\nunsigned char s2c_data[32];\r\nsecp256k1_schnorrsig_sign(sign, &sig, &opening, msg, sk1, &s2c_data, NULL, NULL);\r\n\r\n/* Verifier */\r\nsecp256k1_schnorrsig_verify_s2c_commit(ctx, &sig, s2c_data, &opening);\r\n```",
    "labels": [],
    "created_at": "2019-02-14T19:52:06Z",
    "updated_at": "2022-03-24T14:05:49Z",
    "closed_at": "2022-03-24T14:05:49Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "f563097d358238083b721f80937a6cb95ecaf863",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "jonasnick:schnorrsig-s2c-only-new",
      "ref": "schnorrsig-s2c-only-new",
      "sha": "b631248693702b7b95449de185caef0f8c117f6a",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 57937974,
        "node_id": "MDEwOlJlcG9zaXRvcnk1NzkzNzk3NA==",
        "name": "secp256k1",
        "full_name": "jonasnick/secp256k1",
        "owner": {
          "login": "jonasnick",
          "id": 2582071,
          "node_id": "MDQ6VXNlcjI1ODIwNzE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasnick",
          "html_url": "https://github.com/jonasnick",
          "followers_url": "https://api.github.com/users/jonasnick/followers",
          "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasnick/orgs",
          "repos_url": "https://api.github.com/users/jonasnick/repos",
          "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasnick/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasnick/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/jonasnick/secp256k1",
        "archive_url": "https://api.github.com/repos/jonasnick/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasnick/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasnick/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasnick/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasnick/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasnick/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasnick/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasnick/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasnick/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/jonasnick/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/jonasnick/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/jonasnick/secp256k1/events",
        "forks_url": "https://api.github.com/repos/jonasnick/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/jonasnick/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasnick/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasnick/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasnick/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasnick/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasnick/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasnick/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/jonasnick/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/jonasnick/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasnick/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasnick/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasnick/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasnick/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/jonasnick/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasnick/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasnick/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasnick/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/jonasnick/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/jonasnick/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/jonasnick/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasnick/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/jonasnick/secp256k1/hooks",
        "svn_url": "https://github.com/jonasnick/secp256k1",
        "language": "C",
        "forks_count": 4,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 11430,
        "default_branch": "master",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-24T13:49:16Z",
        "created_at": "2016-05-03T03:14:21Z",
        "updated_at": "2023-03-16T11:44:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "fa3301713549d118e57ebe6551d062903ddd6b63",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 948,
        "stargazers_count": 1768,
        "watchers_count": 1768,
        "size": 10062,
        "default_branch": "master",
        "open_issues_count": 142,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-12T16:38:48Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-06-12T17:38:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 2225,
    "deletions": 7,
    "changed_files": 16,
    "commits": 7,
    "review_comments": 39,
    "comments": 12
  },
  "events": [
    {
      "event": "mentioned",
      "id": 2140702937,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjE0MDcwMjkzNw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2140702937",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T19:52:06Z"
    },
    {
      "event": "subscribed",
      "id": 2140702939,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxNDA3MDI5Mzk=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2140702939",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T19:52:06Z"
    },
    {
      "event": "commented",
      "id": 463856277,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Mzg1NjI3Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/463856277",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-15T00:17:08Z",
      "updated_at": "2019-02-15T00:17:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "That workflow doesn't make it look as easy to implement s2c anti-sidechannel blinding, if I understand it.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-463856277",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "commented",
      "id": 463974256,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Mzk3NDI1Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/463974256",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-15T09:49:25Z",
      "updated_at": "2019-02-15T09:49:25Z",
      "author_association": "MEMBER",
      "body": "Hm, I've done a quick and dirty rebase of the anti-nonce-sidechannel and it seems straight forward. It's even a bit simpler on the client side.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-463974256",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "commented",
      "id": 464052816,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDA1MjgxNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/464052816",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-15T13:36:16Z",
      "updated_at": "2019-02-15T13:36:16Z",
      "author_association": "MEMBER",
      "body": "I opened PR #590 to show the anti nonce-sidechannel protocol can be built on this PR in a similar way.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-464052816",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "commented",
      "id": 464078745,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDA3ODc0NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/464078745",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-15T14:56:16Z",
      "updated_at": "2019-02-15T14:56:16Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-464078745",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "commented",
      "id": 464080558,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDA4MDU1OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/464080558",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-15T15:01:23Z",
      "updated_at": "2019-02-15T15:01:23Z",
      "author_association": "MEMBER",
      "body": "I guess this is a more general discussion because it's also in ECDSA:\r\nWhat's the exact benefit of the user being able to provide a nonce function (and possibly shoot herself in the foot?) I'm not sure if there are meaningful cases,so I'm somewhat curious if anybody currently  uses this in practice with ECDSA.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-464080558",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "commented",
      "id": 465041116,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTA0MTExNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/465041116",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-19T08:45:42Z",
      "updated_at": "2019-02-19T08:45:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "@real-or-random  IIRC it's actually used by joinmarket to do ECDH with the R value for a stealth payment donation feature.   (like one of the outputs pays to  P+H(kP)G  for some pubkey P).  The payments can be found by the recipient simply scanning every signature in the chain, performing ECDH with it, and checking the outputs...\r\n\r\nLess cosmically RFC6979 is kind of absurd and actually makes signing measurably slower compared to just a simple hash-- for applications that care about signing speed (like matt's betterhash) substituting it is probably a good idea.  Not sure who if anyone is doing that right now, but some things probably should be.  (Though those same applications should probably also do batch nonce generation and other stuff that wouldn't really be simple with the current nonce function interface)\r\n\r\nRe: footgunnery,  I haven't yet seen anyone footgun themselves that way. Creating a working nonce function takes a fair amount of work, so I think it's likely that if anyone bothers they at least have a fighting chance to get it right.  I think the best mental model is that we're trying to defend against users that are equal parts lazy and ignorant.   Give them a nonce argument and they will set the nonce to private key xor messagehash (actual example which demonstrates lazy+ignorant),  but give them a nonce function argument and they'll leave it null unless they actually have a real reason to do otherwise. :)\r\n\r\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-465041116",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "mentioned",
      "id": 2148157823,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjE0ODE1NzgyMw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2148157823",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-19T08:45:42Z"
    },
    {
      "event": "subscribed",
      "id": 2148157824,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxNDgxNTc4MjQ=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2148157824",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-19T08:45:42Z"
    },
    {
      "event": "commented",
      "id": 465161206,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTE2MTIwNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/465161206",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-19T14:54:36Z",
      "updated_at": "2019-02-19T14:54:36Z",
      "author_association": "MEMBER",
      "body": "Okay, convinced.\r\n\r\n> I think the best mental model is that we're trying to defend against users that are equal parts lazy and ignorant.\r\n\r\nThat's indeed a good way to think about it. \r\n\r\nMaybe it's still a good idea to make it more prominent in the docs that people should use the default unless they really know what they are doing. ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-465161206",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "commented",
      "id": 465504549,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTUwNDU0OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/465504549",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-20T09:53:52Z",
      "updated_at": "2019-02-20T09:53:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sounds fine to me.  I also think we could explicitly say that the nonce function isn't an interface that we particularly care about keeping stable.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-465504549",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "reviewed",
      "id": 206342281,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjA2MzQyMjgx",
      "url": null,
      "actor": null,
      "commit_id": "4debe3008928c18924da9dfd5aa0aa863e5e35f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-206342281",
      "submitted_at": "2019-02-21T14:45:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 206343158,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjA2MzQzMTU4",
      "url": null,
      "actor": null,
      "commit_id": "4debe3008928c18924da9dfd5aa0aa863e5e35f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-206343158",
      "submitted_at": "2019-02-21T14:46:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 206348811,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjA2MzQ4ODEx",
      "url": null,
      "actor": null,
      "commit_id": "ed20dbd2c83efe9479a3d6ef33a461d7947476ba",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-206348811",
      "submitted_at": "2019-02-21T14:56:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 206355363,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjA2MzU1MzYz",
      "url": null,
      "actor": null,
      "commit_id": "ed20dbd2c83efe9479a3d6ef33a461d7947476ba",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-206355363",
      "submitted_at": "2019-02-21T15:07:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 206358116,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjA2MzU4MTE2",
      "url": null,
      "actor": null,
      "commit_id": "16a7592fd19b048e720be01ec47c5e2245385096",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-206358116",
      "submitted_at": "2019-02-21T15:11:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 206362158,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjA2MzYyMTU4",
      "url": null,
      "actor": null,
      "commit_id": "16a7592fd19b048e720be01ec47c5e2245385096",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-206362158",
      "submitted_at": "2019-02-21T15:18:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "commented",
      "id": 466044314,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA0NDMxNA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/466044314",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-21T15:33:15Z",
      "updated_at": "2019-02-21T15:33:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "`valgrind ./tests 1` shows a bunch of branches on uninitialized memory.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-466044314",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "reviewed",
      "id": 206435562,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjA2NDM1NTYy",
      "url": null,
      "actor": null,
      "commit_id": "16a7592fd19b048e720be01ec47c5e2245385096",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-206435562",
      "submitted_at": "2019-02-21T17:23:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 256583065,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU2NTgzMDY1",
      "url": null,
      "actor": null,
      "commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-256583065",
      "submitted_at": "2019-07-01T22:04:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 256587782,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU2NTg3Nzgy",
      "url": null,
      "actor": null,
      "commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-256587782",
      "submitted_at": "2019-07-01T22:19:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 256594120,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU2NTk0MTIw",
      "url": null,
      "actor": null,
      "commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-256594120",
      "submitted_at": "2019-07-01T22:43:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 256596329,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU2NTk2MzI5",
      "url": null,
      "actor": null,
      "commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-256596329",
      "submitted_at": "2019-07-01T22:51:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "commented",
      "id": 507453688,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzQ1MzY4OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/507453688",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-01T22:53:06Z",
      "updated_at": "2019-07-01T22:53:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "(I also prefer this design over #588)",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-507453688",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "renamed",
      "id": 2457494006,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjQ1NzQ5NDAwNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2457494006",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-03T13:00:50Z",
      "rename": {
        "from": "Allow sign-to-contract commitments in schnorrsigs [alternative]",
        "to": "Allow sign-to-contract commitments in schnorrsigs ~~[alternative]~~"
      }
    },
    {
      "event": "renamed",
      "id": 2457498928,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjQ1NzQ5ODkyOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2457498928",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-03T13:02:26Z",
      "rename": {
        "from": "Allow sign-to-contract commitments in schnorrsigs ~~[alternative]~~",
        "to": "Allow sign-to-contract commitments in schnorrsigs [̶a̶l̶t̶e̶r̶n̶a̶t̶i̶v̶e̶]̶"
      }
    },
    {
      "event": "reviewed",
      "id": 258175048,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTc1MDQ4",
      "url": null,
      "actor": null,
      "commit_id": "779458a2be5fe42f4edd25aaea553e12f5a8e940",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-258175048",
      "submitted_at": "2019-07-04T21:50:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2461382859,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjQ2MTM4Mjg1OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2461382859",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-04T22:08:14Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6MmY0MGUxZWMyZWY4OWFhYzUwYjI5ZWViYWNlNTJjYmY3YWYyOTRlYw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/2f40e1ec2ef89aac50b29eebace52cbf7af294ec",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/2f40e1ec2ef89aac50b29eebace52cbf7af294ec",
      "tree": {
        "sha": "d8996c0e986040267ac75236377485dc78958654",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/d8996c0e986040267ac75236377485dc78958654"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/e541a90ef6461007d9c6a74b9f9a7fb8aa34aaa8",
          "sha": "e541a90ef6461007d9c6a74b9f9a7fb8aa34aaa8",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/e541a90ef6461007d9c6a74b9f9a7fb8aa34aaa8"
        }
      ],
      "message": "add chacha20 function",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-07-04T22:09:43Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2018-04-03T22:06:07Z"
      },
      "sha": "2f40e1ec2ef89aac50b29eebace52cbf7af294ec"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6ODI2NDU3MjljYzcxN2FhZjIyNGQxMzBlOGJjYzI1ODY1ZDYyMmU4Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/82645729cc717aaf224d130e8bcc25865d622e87",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/82645729cc717aaf224d130e8bcc25865d622e87",
      "tree": {
        "sha": "a529aa422bc81b4573451ad1cea9ab966f6f39ac",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/a529aa422bc81b4573451ad1cea9ab966f6f39ac"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/2f40e1ec2ef89aac50b29eebace52cbf7af294ec",
          "sha": "2f40e1ec2ef89aac50b29eebace52cbf7af294ec",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/2f40e1ec2ef89aac50b29eebace52cbf7af294ec"
        }
      ],
      "message": "Add schnorrsig module which implements BIP-schnorr [0] compatible signing, verification and batch verification.\n\n[0] https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr.mediawiki",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-07-04T22:09:43Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2018-05-09T15:37:35Z"
      },
      "sha": "82645729cc717aaf224d130e8bcc25865d622e87"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6MGI0YmVmNDUyN2UyYjQ2OTRhODMzMDZmNDk1Y2E2MWQ1NzRkMmMxZg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/0b4bef4527e2b4694a83306f495ca61d574d2c1f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/0b4bef4527e2b4694a83306f495ca61d574d2c1f",
      "tree": {
        "sha": "073fed1a472202457de8ef09b0cea8e60d92cd51",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/073fed1a472202457de8ef09b0cea8e60d92cd51"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/82645729cc717aaf224d130e8bcc25865d622e87",
          "sha": "82645729cc717aaf224d130e8bcc25865d622e87",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/82645729cc717aaf224d130e8bcc25865d622e87"
        }
      ],
      "message": "Add ec_commitments which are essentially the pay-to-contract-style tweaks of public keys.\nThe functionality is not exposed.",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-07-04T22:09:43Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2018-11-01T10:31:24Z"
      },
      "sha": "0b4bef4527e2b4694a83306f495ca61d574d2c1f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6ODU0YzFjNDk1ZmU2Y2Y0ZTE3ZjcxZDE0ODMyOTA5NjU5Y2EyZDkyMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/854c1c495fe6cf4e17f71d14832909659ca2d922",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/854c1c495fe6cf4e17f71d14832909659ca2d922",
      "tree": {
        "sha": "7e7bac2c90bd28c566ae07c1670c4e540b82b7b8",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/7e7bac2c90bd28c566ae07c1670c4e540b82b7b8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/0b4bef4527e2b4694a83306f495ca61d574d2c1f",
          "sha": "0b4bef4527e2b4694a83306f495ca61d574d2c1f",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/0b4bef4527e2b4694a83306f495ca61d574d2c1f"
        }
      ],
      "message": "Add and expose sign-to-contract opening with parse and serialize functions",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-07-04T22:09:43Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-02-13T14:15:23Z"
      },
      "sha": "854c1c495fe6cf4e17f71d14832909659ca2d922"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6OTAzN2JjZjVlODMyMWM5ZTYzOGY5MTBiNjgwNzE1YzYxYWRkN2RiOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/9037bcf5e8321c9e638f910b680715c61add7db9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/9037bcf5e8321c9e638f910b680715c61add7db9",
      "tree": {
        "sha": "d49f72009ed016606646d07079800cdd7dff06c6",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/d49f72009ed016606646d07079800cdd7dff06c6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/854c1c495fe6cf4e17f71d14832909659ca2d922",
          "sha": "854c1c495fe6cf4e17f71d14832909659ca2d922",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/854c1c495fe6cf4e17f71d14832909659ca2d922"
        }
      ],
      "message": "Allow creating and verifying Schnorr sign-to-contract commitments",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-07-04T22:09:43Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-07-04T22:04:00Z"
      },
      "sha": "9037bcf5e8321c9e638f910b680715c61add7db9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2461383920,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjQ2MTM4MzkyMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2461383920",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-04T22:09:50Z"
    },
    {
      "event": "commented",
      "id": 508583837,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwODU4MzgzNw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/508583837",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-04T22:10:36Z",
      "updated_at": "2019-07-04T22:10:36Z",
      "author_association": "MEMBER",
      "body": "rebased on schnorrsigs PR and squashed",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-508583837",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "reviewed",
      "id": 267487152,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjY3NDg3MTUy",
      "url": null,
      "actor": null,
      "commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-267487152",
      "submitted_at": "2019-07-28T01:48:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 267487607,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjY3NDg3NjA3",
      "url": null,
      "actor": null,
      "commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-267487607",
      "submitted_at": "2019-07-28T02:19:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "reviewed",
      "id": 267488391,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjY3NDg4Mzkx",
      "url": null,
      "actor": null,
      "commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-267488391",
      "submitted_at": "2019-07-28T03:14:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6MDMxY2EzNGE0ZjQ0ZWQ2NzRjNTFkNjY5N2QyNWFjZDgwMWM5YmVkNw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/031ca34a4f44ed674c51d6697d25acd801c9bed7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/031ca34a4f44ed674c51d6697d25acd801c9bed7",
      "tree": {
        "sha": "36af623273ee0329697d8dda561fa98c1e66990a",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/36af623273ee0329697d8dda561fa98c1e66990a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/9037bcf5e8321c9e638f910b680715c61add7db9",
          "sha": "9037bcf5e8321c9e638f910b680715c61add7db9",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/9037bcf5e8321c9e638f910b680715c61add7db9"
        }
      ],
      "message": "f Add ec_commitments",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-07-30T16:34:08Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-07-30T16:34:08Z"
      },
      "sha": "031ca34a4f44ed674c51d6697d25acd801c9bed7"
    },
    {
      "event": "reviewed",
      "id": 268521981,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjY4NTIxOTgx",
      "url": null,
      "actor": null,
      "commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Added commit to make the opening serialization 33 bytes instead of 34.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#pullrequestreview-268521981",
      "submitted_at": "2019-07-31T08:47:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6YjYzMTI0ODY5MzcwMmI3Yjk1NDQ5ZGUxODVjYWVmMGY4YzExN2Y2YQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/b631248693702b7b95449de185caef0f8c117f6a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/b631248693702b7b95449de185caef0f8c117f6a",
      "tree": {
        "sha": "546d0e6981cecc694041590043e9646f22879258",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/546d0e6981cecc694041590043e9646f22879258"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/031ca34a4f44ed674c51d6697d25acd801c9bed7",
          "sha": "031ca34a4f44ed674c51d6697d25acd801c9bed7",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/031ca34a4f44ed674c51d6697d25acd801c9bed7"
        }
      ],
      "message": "f serialize s2c_opening as 33 bytes instead of 34",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-07-31T08:47:43Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-07-31T08:47:43Z"
      },
      "sha": "b631248693702b7b95449de185caef0f8c117f6a"
    },
    {
      "event": "commented",
      "id": 1077665834,
      "node_id": "IC_kwDOAP4Jqs5AO-Aq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1077665834",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T14:05:49Z",
      "updated_at": "2022-03-24T14:05:49Z",
      "author_association": "MEMBER",
      "body": "This PR is quite outdated. Sign-to-contract should use the schnorrsig_sign_custom API. PR #1018 is a WIP continuation of this work. Closing.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#issuecomment-1077665834",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/589"
    },
    {
      "event": "closed",
      "id": 6299789480,
      "node_id": "CE_lADOAP4Jqs4YdzEZzwAAAAF3fyio",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6299789480",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T14:05:49Z"
    },
    {
      "event": "referenced",
      "id": 7361734180,
      "node_id": "REFE_lADOAP4Jqs4YdzEZzwAAAAG2yyYk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7361734180",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6daba2638e7f16254332cc6d04a219271c36b0c5",
      "commit_url": "https://api.github.com/repos/benma/secp256k1/commits/6daba2638e7f16254332cc6d04a219271c36b0c5",
      "created_at": "2022-09-11T02:34:51Z"
    },
    {
      "event": "referenced",
      "id": 7361734181,
      "node_id": "REFE_lADOAP4Jqs4YdzEZzwAAAAG2yyYl",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7361734181",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b26da2a4c59e63366de5a547682bb4d09987985b",
      "commit_url": "https://api.github.com/repos/benma/secp256k1/commits/b26da2a4c59e63366de5a547682bb4d09987985b",
      "created_at": "2022-09-11T02:34:51Z"
    },
    {
      "event": "referenced",
      "id": 7363067850,
      "node_id": "REFE_lADOAP4Jqs4YdzEZzwAAAAG233_K",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7363067850",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3d1c3013cc5575128369b476a4aa774355c317f5",
      "commit_url": "https://api.github.com/repos/benma/secp256k1/commits/3d1c3013cc5575128369b476a4aa774355c317f5",
      "created_at": "2022-09-11T23:04:39Z"
    },
    {
      "event": "referenced",
      "id": 7363067851,
      "node_id": "REFE_lADOAP4Jqs4YdzEZzwAAAAG233_L",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7363067851",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d69625bece023c8aeea76dfe6fb6a72ff1c8191b",
      "commit_url": "https://api.github.com/repos/benma/secp256k1/commits/d69625bece023c8aeea76dfe6fb6a72ff1c8191b",
      "created_at": "2022-09-11T23:04:39Z"
    },
    {
      "event": "referenced",
      "id": 7366095169,
      "node_id": "REFE_lADOAP4Jqs4YdzEZzwAAAAG3DbFB",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7366095169",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a90387515145fda16018f4efb7a3a1d9c7b6fbca",
      "commit_url": "https://api.github.com/repos/benma/secp256k1/commits/a90387515145fda16018f4efb7a3a1d9c7b6fbca",
      "created_at": "2022-09-12T10:19:29Z"
    },
    {
      "event": "referenced",
      "id": 7366095175,
      "node_id": "REFE_lADOAP4Jqs4YdzEZzwAAAAG3DbFH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7366095175",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c1904b124645ea862a6449f4de70af74e32d2441",
      "commit_url": "https://api.github.com/repos/benma/secp256k1/commits/c1904b124645ea862a6449f4de70af74e32d2441",
      "created_at": "2022-09-12T10:19:29Z"
    },
    {
      "event": "referenced",
      "id": 7376124078,
      "node_id": "REFE_lADOAP4Jqs4YdzEZzwAAAAG3priu",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7376124078",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2c50310e9165612e5173ccc5685b215f464e03f5",
      "commit_url": "https://api.github.com/repos/benma/secp256k1/commits/2c50310e9165612e5173ccc5685b215f464e03f5",
      "created_at": "2022-09-13T12:22:37Z"
    },
    {
      "event": "referenced",
      "id": 7376124089,
      "node_id": "REFE_lADOAP4Jqs4YdzEZzwAAAAG3pri5",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7376124089",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "972f413720bb028b5eae2667cdaa0f299e09efba",
      "commit_url": "https://api.github.com/repos/benma/secp256k1/commits/972f413720bb028b5eae2667cdaa0f299e09efba",
      "created_at": "2022-09-13T12:22:37Z"
    },
    {
      "event": "referenced",
      "id": 9140480236,
      "node_id": "REFE_lADOAP4Jqs4YdzEZzwAAAAIg0Kjs",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9140480236",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "81a745c99878601925398444975af8e23dd6ea3e",
      "commit_url": "https://api.github.com/repos/benma/secp256k1/commits/81a745c99878601925398444975af8e23dd6ea3e",
      "created_at": "2023-05-01T23:45:13Z"
    },
    {
      "event": "referenced",
      "id": 9140480243,
      "node_id": "REFE_lADOAP4Jqs4YdzEZzwAAAAIg0Kjz",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9140480243",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5d768de16a59669944770fec79df565ae384d15c",
      "commit_url": "https://api.github.com/repos/benma/secp256k1/commits/5d768de16a59669944770fec79df565ae384d15c",
      "created_at": "2023-05-01T23:45:13Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258956955",
      "pull_request_review_id": 206342281,
      "id": 258956955,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk1Njk1NQ==",
      "diff_hunk": "@@ -609,6 +609,103 @@ int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *\n     return 1;\n }\n \n+/* Compute an ec commitment tweak as hash(pubkey, data). */\n+static int secp256k1_ec_commit_tweak(const secp256k1_context *ctx, unsigned char *tweak32, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_ge p;\n+    unsigned char rbuf[33];\n+    size_t rbuf_size = sizeof(rbuf);\n+    secp256k1_sha256 sha;\n+\n+    if (data_size == 0) {\n+        /* That's probably not what the caller wanted */\n+        return 0;\n+    }\n+    if(!secp256k1_pubkey_load(ctx, &p, pubkey)) {\n+        return 0;\n+    }\n+    secp256k1_eckey_pubkey_serialize(&p, rbuf, &rbuf_size, 1);\n+\n+    secp256k1_sha256_initialize(&sha);\n+    secp256k1_sha256_write(&sha, rbuf, rbuf_size);\n+    secp256k1_sha256_write(&sha, data, data_size);\n+    secp256k1_sha256_finalize(&sha, tweak32);\n+    return 1;\n+}\n+\n+/* Compute an ec commitment as pubkey + hash(pubkey, data)*G. */\n+static int secp256k1_ec_commit(const secp256k1_context* ctx, secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(commitment != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+    ARG_CHECK(data != NULL);",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 34,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "4debe3008928c18924da9dfd5aa0aa863e5e35f0",
      "in_reply_to_id": null,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We generally don't have `ARG_CHECK`s in `static` functions.",
      "created_at": "2019-02-21T14:45:03Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r258956955",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258956955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 642,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258957210",
      "pull_request_review_id": 206342556,
      "id": 258957210,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk1NzIxMA==",
      "diff_hunk": "@@ -609,6 +609,103 @@ int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *\n     return 1;\n }\n \n+/* Compute an ec commitment tweak as hash(pubkey, data). */\n+static int secp256k1_ec_commit_tweak(const secp256k1_context *ctx, unsigned char *tweak32, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_ge p;\n+    unsigned char rbuf[33];\n+    size_t rbuf_size = sizeof(rbuf);\n+    secp256k1_sha256 sha;\n+\n+    if (data_size == 0) {\n+        /* That's probably not what the caller wanted */\n+        return 0;\n+    }\n+    if(!secp256k1_pubkey_load(ctx, &p, pubkey)) {\n+        return 0;\n+    }\n+    secp256k1_eckey_pubkey_serialize(&p, rbuf, &rbuf_size, 1);\n+\n+    secp256k1_sha256_initialize(&sha);\n+    secp256k1_sha256_write(&sha, rbuf, rbuf_size);\n+    secp256k1_sha256_write(&sha, data, data_size);\n+    secp256k1_sha256_finalize(&sha, tweak32);\n+    return 1;\n+}\n+\n+/* Compute an ec commitment as pubkey + hash(pubkey, data)*G. */\n+static int secp256k1_ec_commit(const secp256k1_context* ctx, secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(commitment != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+    ARG_CHECK(data != NULL);",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 34,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "4debe3008928c18924da9dfd5aa0aa863e5e35f0",
      "in_reply_to_id": 258956955,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same below in `ec_commit_seckey`",
      "created_at": "2019-02-21T14:45:32Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r258957210",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258957210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 642,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258957689",
      "pull_request_review_id": 206343158,
      "id": 258957689,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk1NzY4OQ==",
      "diff_hunk": "@@ -609,6 +609,103 @@ int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *\n     return 1;\n }\n \n+/* Compute an ec commitment tweak as hash(pubkey, data). */\n+static int secp256k1_ec_commit_tweak(const secp256k1_context *ctx, unsigned char *tweak32, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_ge p;\n+    unsigned char rbuf[33];\n+    size_t rbuf_size = sizeof(rbuf);\n+    secp256k1_sha256 sha;\n+\n+    if (data_size == 0) {\n+        /* That's probably not what the caller wanted */\n+        return 0;\n+    }\n+    if(!secp256k1_pubkey_load(ctx, &p, pubkey)) {\n+        return 0;\n+    }\n+    secp256k1_eckey_pubkey_serialize(&p, rbuf, &rbuf_size, 1);\n+\n+    secp256k1_sha256_initialize(&sha);\n+    secp256k1_sha256_write(&sha, rbuf, rbuf_size);\n+    secp256k1_sha256_write(&sha, data, data_size);\n+    secp256k1_sha256_finalize(&sha, tweak32);\n+    return 1;\n+}\n+\n+/* Compute an ec commitment as pubkey + hash(pubkey, data)*G. */\n+static int secp256k1_ec_commit(const secp256k1_context* ctx, secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(commitment != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+    ARG_CHECK(data != NULL);\n+\n+    *commitment = *pubkey;\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, commitment, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_pubkey_tweak_add(ctx, commitment, tweak);\n+}\n+\n+/* Compute the seckey of an ec commitment from the original secret key of the pubkey as seckey +\n+ * hash(pubkey, data). */\n+static int secp256k1_ec_commit_seckey(const secp256k1_context* ctx, unsigned char *seckey, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+    secp256k1_pubkey pubkey_tmp;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    ARG_CHECK(data != NULL);\n+\n+    if (pubkey == NULL) {\n+        /* Compute pubkey from seckey if not provided */\n+        int overflow;\n+        secp256k1_scalar x;\n+        secp256k1_gej pj;\n+        secp256k1_ge p;\n+\n+        secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+        if (overflow != 0) {\n+            return 0;\n+        }\n+        secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pj, &x);\n+        secp256k1_ge_set_gej(&p, &pj);\n+        secp256k1_pubkey_save(&pubkey_tmp, &p);\n+        pubkey = &pubkey_tmp;\n+    }\n+\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_privkey_tweak_add(ctx, seckey, tweak);\n+}\n+\n+/* Verify an ec commitment as pubkey + hash(pubkey, data)*G ?= commitment. */\n+static int secp256k1_ec_commit_verify(const secp256k1_context* ctx, const secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_gej pj;\n+    secp256k1_ge p;\n+    secp256k1_pubkey commitment_tmp;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(commitment != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+    ARG_CHECK(data != NULL);\n+\n+    if (!secp256k1_ec_commit(ctx, &commitment_tmp, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+\n+    /* Return commitment == commitment_tmp */\n+    secp256k1_gej_set_infinity(&pj);\n+    secp256k1_pubkey_load(ctx, &p, &commitment_tmp);\n+    secp256k1_gej_add_ge(&pj, &pj, &p);",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 94,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "4debe3008928c18924da9dfd5aa0aa863e5e35f0",
      "in_reply_to_id": null,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We can use the `_var` variant of this function (same with below).",
      "created_at": "2019-02-21T14:46:34Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r258957689",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258957689"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 702,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258962377",
      "pull_request_review_id": 206348811,
      "id": 258962377,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk2MjM3Nw==",
      "diff_hunk": "@@ -80,6 +80,26 @@ typedef struct {\n     unsigned char data[64];\n } secp256k1_ecdsa_signature;\n \n+/** Data structure that holds a sign-to-contract (\"s2c\") opening. Sign-to-contract\n+ *  allows a signer to commit to some data as part of a signature. It can be used as\n+ *  an Out-argument in certain signing functions.\n+ *\n+ *  This structure is not opaque, but it is strongly discouraged to read or write to\n+ *  it directly.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is however\n+ *  guaranteed to be 73 bytes in size, and can be safely copied/moved.",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 13,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "ed20dbd2c83efe9479a3d6ef33a461d7947476ba",
      "in_reply_to_id": null,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This guarantee is basically impossible to make for a data structure with multiple heterogeneous fields.",
      "created_at": "2019-02-21T14:56:06Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r258962377",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258962377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258962553",
      "pull_request_review_id": 206349041,
      "id": 258962553,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk2MjU1Mw==",
      "diff_hunk": "@@ -80,6 +80,26 @@ typedef struct {\n     unsigned char data[64];\n } secp256k1_ecdsa_signature;\n \n+/** Data structure that holds a sign-to-contract (\"s2c\") opening. Sign-to-contract\n+ *  allows a signer to commit to some data as part of a signature. It can be used as\n+ *  an Out-argument in certain signing functions.\n+ *\n+ *  This structure is not opaque, but it is strongly discouraged to read or write to\n+ *  it directly.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is however\n+ *  guaranteed to be 73 bytes in size, and can be safely copied/moved.",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 13,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "ed20dbd2c83efe9479a3d6ef33a461d7947476ba",
      "in_reply_to_id": 258962377,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"safely copied/moved\" is OK, but the exact size is implementation dependent.",
      "created_at": "2019-02-21T14:56:31Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r258962553",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258962553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258967353",
      "pull_request_review_id": 206355363,
      "id": 258967353,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk2NzM1Mw==",
      "diff_hunk": "@@ -706,6 +706,38 @@ static int secp256k1_ec_commit_verify(const secp256k1_context* ctx, const secp25\n     return secp256k1_gej_is_infinity(&pj);\n }\n \n+static uint64_t s2c_opening_magic = 0x5d0520b8b7f2b168;",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 4,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "ed20dbd2c83efe9479a3d6ef33a461d7947476ba",
      "in_reply_to_id": null,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Using `uint64_t` here rather than `char[8]` introduces an endianness dependency. Is this on purpose?",
      "created_at": "2019-02-21T15:07:15Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r258967353",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258967353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258969501",
      "pull_request_review_id": 206358116,
      "id": 258969501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk2OTUwMQ==",
      "diff_hunk": "@@ -61,19 +61,24 @@ SECP256K1_API int secp256k1_schnorrsig_parse(\n  * Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:     sig: pointer to the returned signature (cannot be NULL)\n- *       nonce_is_negated: a pointer to an integer indicates if signing algorithm negated the\n- *                nonce (can be NULL)\n+ *      s2c_data: pointer to an secp256k1_s2c_opening structure which can be\n+ *                NULL but is required to be not NULL if this signature creates\n+ *                a sign-to-contract commitment (i.e. the `s2c_data` argument\n+ *                is not NULL).\n  *  In:    msg32: the 32-byte message hash being signed (cannot be NULL)\n  *        seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *    s2c_data32: pointer to a 32-byte data to create an optional\n+ *                sign-to-contract commitment to if non-NULL (non-NULL).",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 13,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "16a7592fd19b048e720be01ec47c5e2245385096",
      "in_reply_to_id": null,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`(non-NULL)` should be removed.",
      "created_at": "2019-02-21T15:11:49Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r258969501",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258969501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258972615",
      "pull_request_review_id": 206362158,
      "id": 258972615,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk3MjYxNQ==",
      "diff_hunk": "@@ -61,19 +61,24 @@ SECP256K1_API int secp256k1_schnorrsig_parse(\n  * Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:     sig: pointer to the returned signature (cannot be NULL)\n- *       nonce_is_negated: a pointer to an integer indicates if signing algorithm negated the\n- *                nonce (can be NULL)\n+ *      s2c_data: pointer to an secp256k1_s2c_opening structure which can be\n+ *                NULL but is required to be not NULL if this signature creates\n+ *                a sign-to-contract commitment (i.e. the `s2c_data` argument\n+ *                is not NULL).\n  *  In:    msg32: the 32-byte message hash being signed (cannot be NULL)\n  *        seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *    s2c_data32: pointer to a 32-byte data to create an optional\n+ *                sign-to-contract commitment to if non-NULL (non-NULL).\n  *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bipschnorr is used",
      "path": "include/secp256k1_schnorrsig.h",
      "position": 78,
      "original_position": 14,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "16a7592fd19b048e720be01ec47c5e2245385096",
      "in_reply_to_id": null,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you add a comment to `noncefp` saying that it has to be `NULL` (or the default) if `s2c_data` is not NULL?",
      "created_at": "2019-02-21T15:18:08Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r258972615",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258972615"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258986054",
      "pull_request_review_id": 206378447,
      "id": 258986054,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk4NjA1NA==",
      "diff_hunk": "@@ -706,6 +706,38 @@ static int secp256k1_ec_commit_verify(const secp256k1_context* ctx, const secp25\n     return secp256k1_gej_is_infinity(&pj);\n }\n \n+static uint64_t s2c_opening_magic = 0x5d0520b8b7f2b168;",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 4,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "ed20dbd2c83efe9479a3d6ef33a461d7947476ba",
      "in_reply_to_id": 258967353,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not purposefully endian dependent, but purposefully uint64. Just looks nicer and the object is documented to be \"implementation defined\" anyway. But agree char should be better.",
      "created_at": "2019-02-21T15:43:52Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r258986054",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/258986054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259030862",
      "pull_request_review_id": 206435562,
      "id": 259030862,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTAzMDg2Mg==",
      "diff_hunk": "@@ -0,0 +1,392 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {\n+    secp256k1_fe rx;\n+    secp256k1_ge R;\n+    secp256k1_pubkey pubnonce;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(data32 != NULL);\n+    ARG_CHECK(opening != NULL);\n+    ARG_CHECK(secp256k1_s2c_commit_is_init(opening));\n+\n+    if (!secp256k1_fe_set_b32(&rx, &sig->data[0])) {\n+        return 0;\n+    }\n+    if (!secp256k1_ge_set_xquad(&R, &rx)) {\n+        return 0;\n+    }\n+    if (opening->nonce_is_negated) {\n+        secp256k1_ge_neg(&R, &R);\n+    }\n+    secp256k1_pubkey_save(&pubnonce, &R);\n+    return secp256k1_ec_commit_verify(ctx, &pubnonce, &opening->original_pubnonce, data32, 32);\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, secp256k1_s2c_opening *s2c_opening, const unsigned char *msg32, const unsigned char *seckey, const unsigned char *s2c_data32, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[33];\n+    size_t buflen = sizeof(buf);\n+    unsigned char noncedata[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    /* sign-to-contract commitments only work with the default nonce function,\n+     * because we need to ensure that s2c_data is actually hashed into the nonce and\n+     * not just ignored. */\n+    ARG_CHECK(s2c_data32 == NULL || (noncefp == NULL || noncefp == secp256k1_nonce_function_bipschnorr));\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    if(s2c_data32 != NULL) {",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": null,
      "original_position": 93,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "16a7592fd19b048e720be01ec47c5e2245385096",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: spacing",
      "created_at": "2019-02-21T17:19:39Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r259030862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259030862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259137023",
      "pull_request_review_id": 206566459,
      "id": 259137023,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTEzNzAyMw==",
      "diff_hunk": "@@ -80,6 +80,26 @@ typedef struct {\n     unsigned char data[64];\n } secp256k1_ecdsa_signature;\n \n+/** Data structure that holds a sign-to-contract (\"s2c\") opening. Sign-to-contract\n+ *  allows a signer to commit to some data as part of a signature. It can be used as\n+ *  an Out-argument in certain signing functions.\n+ *\n+ *  This structure is not opaque, but it is strongly discouraged to read or write to\n+ *  it directly.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is however\n+ *  guaranteed to be 73 bytes in size, and can be safely copied/moved.",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 13,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "ed20dbd2c83efe9479a3d6ef33a461d7947476ba",
      "in_reply_to_id": 258962377,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(if it wasn't clear, due to alignment padding, which could basically be anything)",
      "created_at": "2019-02-21T22:07:44Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r259137023",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259137023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581137",
      "pull_request_review_id": 207112036,
      "id": 259581137,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4MTEzNw==",
      "diff_hunk": "@@ -0,0 +1,392 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {\n+    secp256k1_fe rx;\n+    secp256k1_ge R;\n+    secp256k1_pubkey pubnonce;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(data32 != NULL);\n+    ARG_CHECK(opening != NULL);\n+    ARG_CHECK(secp256k1_s2c_commit_is_init(opening));\n+\n+    if (!secp256k1_fe_set_b32(&rx, &sig->data[0])) {\n+        return 0;\n+    }\n+    if (!secp256k1_ge_set_xquad(&R, &rx)) {\n+        return 0;\n+    }\n+    if (opening->nonce_is_negated) {\n+        secp256k1_ge_neg(&R, &R);\n+    }\n+    secp256k1_pubkey_save(&pubnonce, &R);\n+    return secp256k1_ec_commit_verify(ctx, &pubnonce, &opening->original_pubnonce, data32, 32);\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, secp256k1_s2c_opening *s2c_opening, const unsigned char *msg32, const unsigned char *seckey, const unsigned char *s2c_data32, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[33];\n+    size_t buflen = sizeof(buf);\n+    unsigned char noncedata[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    /* sign-to-contract commitments only work with the default nonce function,\n+     * because we need to ensure that s2c_data is actually hashed into the nonce and\n+     * not just ignored. */\n+    ARG_CHECK(s2c_data32 == NULL || (noncefp == NULL || noncefp == secp256k1_nonce_function_bipschnorr));\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    if(s2c_data32 != NULL) {",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": null,
      "original_position": 93,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "16a7592fd19b048e720be01ec47c5e2245385096",
      "in_reply_to_id": 259030862,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-02-23T14:48:48Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r259581137",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581140",
      "pull_request_review_id": 207112041,
      "id": 259581140,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4MTE0MA==",
      "diff_hunk": "@@ -61,19 +61,24 @@ SECP256K1_API int secp256k1_schnorrsig_parse(\n  * Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:     sig: pointer to the returned signature (cannot be NULL)\n- *       nonce_is_negated: a pointer to an integer indicates if signing algorithm negated the\n- *                nonce (can be NULL)\n+ *      s2c_data: pointer to an secp256k1_s2c_opening structure which can be\n+ *                NULL but is required to be not NULL if this signature creates\n+ *                a sign-to-contract commitment (i.e. the `s2c_data` argument\n+ *                is not NULL).\n  *  In:    msg32: the 32-byte message hash being signed (cannot be NULL)\n  *        seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *    s2c_data32: pointer to a 32-byte data to create an optional\n+ *                sign-to-contract commitment to if non-NULL (non-NULL).\n  *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bipschnorr is used",
      "path": "include/secp256k1_schnorrsig.h",
      "position": 78,
      "original_position": 14,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "16a7592fd19b048e720be01ec47c5e2245385096",
      "in_reply_to_id": 258972615,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-02-23T14:48:59Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r259581140",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581145",
      "pull_request_review_id": 207112046,
      "id": 259581145,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4MTE0NQ==",
      "diff_hunk": "@@ -61,19 +61,24 @@ SECP256K1_API int secp256k1_schnorrsig_parse(\n  * Returns 1 on success, 0 on failure.\n  *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:     sig: pointer to the returned signature (cannot be NULL)\n- *       nonce_is_negated: a pointer to an integer indicates if signing algorithm negated the\n- *                nonce (can be NULL)\n+ *      s2c_data: pointer to an secp256k1_s2c_opening structure which can be\n+ *                NULL but is required to be not NULL if this signature creates\n+ *                a sign-to-contract commitment (i.e. the `s2c_data` argument\n+ *                is not NULL).\n  *  In:    msg32: the 32-byte message hash being signed (cannot be NULL)\n  *        seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *    s2c_data32: pointer to a 32-byte data to create an optional\n+ *                sign-to-contract commitment to if non-NULL (non-NULL).",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 13,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "16a7592fd19b048e720be01ec47c5e2245385096",
      "in_reply_to_id": 258969501,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-02-23T14:49:09Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r259581145",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581145"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581161",
      "pull_request_review_id": 207112068,
      "id": 259581161,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4MTE2MQ==",
      "diff_hunk": "@@ -706,6 +706,38 @@ static int secp256k1_ec_commit_verify(const secp256k1_context* ctx, const secp25\n     return secp256k1_gej_is_infinity(&pj);\n }\n \n+static uint64_t s2c_opening_magic = 0x5d0520b8b7f2b168;",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 4,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "ed20dbd2c83efe9479a3d6ef33a461d7947476ba",
      "in_reply_to_id": 258967353,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-02-23T14:49:37Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r259581161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581166",
      "pull_request_review_id": 207112077,
      "id": 259581166,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4MTE2Ng==",
      "diff_hunk": "@@ -609,6 +609,103 @@ int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *\n     return 1;\n }\n \n+/* Compute an ec commitment tweak as hash(pubkey, data). */\n+static int secp256k1_ec_commit_tweak(const secp256k1_context *ctx, unsigned char *tweak32, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_ge p;\n+    unsigned char rbuf[33];\n+    size_t rbuf_size = sizeof(rbuf);\n+    secp256k1_sha256 sha;\n+\n+    if (data_size == 0) {\n+        /* That's probably not what the caller wanted */\n+        return 0;\n+    }\n+    if(!secp256k1_pubkey_load(ctx, &p, pubkey)) {\n+        return 0;\n+    }\n+    secp256k1_eckey_pubkey_serialize(&p, rbuf, &rbuf_size, 1);\n+\n+    secp256k1_sha256_initialize(&sha);\n+    secp256k1_sha256_write(&sha, rbuf, rbuf_size);\n+    secp256k1_sha256_write(&sha, data, data_size);\n+    secp256k1_sha256_finalize(&sha, tweak32);\n+    return 1;\n+}\n+\n+/* Compute an ec commitment as pubkey + hash(pubkey, data)*G. */\n+static int secp256k1_ec_commit(const secp256k1_context* ctx, secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(commitment != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+    ARG_CHECK(data != NULL);\n+\n+    *commitment = *pubkey;\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, commitment, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_pubkey_tweak_add(ctx, commitment, tweak);\n+}\n+\n+/* Compute the seckey of an ec commitment from the original secret key of the pubkey as seckey +\n+ * hash(pubkey, data). */\n+static int secp256k1_ec_commit_seckey(const secp256k1_context* ctx, unsigned char *seckey, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+    secp256k1_pubkey pubkey_tmp;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    ARG_CHECK(data != NULL);\n+\n+    if (pubkey == NULL) {\n+        /* Compute pubkey from seckey if not provided */\n+        int overflow;\n+        secp256k1_scalar x;\n+        secp256k1_gej pj;\n+        secp256k1_ge p;\n+\n+        secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+        if (overflow != 0) {\n+            return 0;\n+        }\n+        secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pj, &x);\n+        secp256k1_ge_set_gej(&p, &pj);\n+        secp256k1_pubkey_save(&pubkey_tmp, &p);\n+        pubkey = &pubkey_tmp;\n+    }\n+\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_privkey_tweak_add(ctx, seckey, tweak);\n+}\n+\n+/* Verify an ec commitment as pubkey + hash(pubkey, data)*G ?= commitment. */\n+static int secp256k1_ec_commit_verify(const secp256k1_context* ctx, const secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_gej pj;\n+    secp256k1_ge p;\n+    secp256k1_pubkey commitment_tmp;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(commitment != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+    ARG_CHECK(data != NULL);\n+\n+    if (!secp256k1_ec_commit(ctx, &commitment_tmp, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+\n+    /* Return commitment == commitment_tmp */\n+    secp256k1_gej_set_infinity(&pj);\n+    secp256k1_pubkey_load(ctx, &p, &commitment_tmp);\n+    secp256k1_gej_add_ge(&pj, &pj, &p);",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 94,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "4debe3008928c18924da9dfd5aa0aa863e5e35f0",
      "in_reply_to_id": 258957689,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-02-23T14:49:45Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r259581166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 702,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581182",
      "pull_request_review_id": 207112091,
      "id": 259581182,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4MTE4Mg==",
      "diff_hunk": "@@ -609,6 +609,103 @@ int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *\n     return 1;\n }\n \n+/* Compute an ec commitment tweak as hash(pubkey, data). */\n+static int secp256k1_ec_commit_tweak(const secp256k1_context *ctx, unsigned char *tweak32, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_ge p;\n+    unsigned char rbuf[33];\n+    size_t rbuf_size = sizeof(rbuf);\n+    secp256k1_sha256 sha;\n+\n+    if (data_size == 0) {\n+        /* That's probably not what the caller wanted */\n+        return 0;\n+    }\n+    if(!secp256k1_pubkey_load(ctx, &p, pubkey)) {\n+        return 0;\n+    }\n+    secp256k1_eckey_pubkey_serialize(&p, rbuf, &rbuf_size, 1);\n+\n+    secp256k1_sha256_initialize(&sha);\n+    secp256k1_sha256_write(&sha, rbuf, rbuf_size);\n+    secp256k1_sha256_write(&sha, data, data_size);\n+    secp256k1_sha256_finalize(&sha, tweak32);\n+    return 1;\n+}\n+\n+/* Compute an ec commitment as pubkey + hash(pubkey, data)*G. */\n+static int secp256k1_ec_commit(const secp256k1_context* ctx, secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(commitment != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+    ARG_CHECK(data != NULL);",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 34,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "4debe3008928c18924da9dfd5aa0aa863e5e35f0",
      "in_reply_to_id": 258956955,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thought this could be non-static soon, but removed it nonetheless for now",
      "created_at": "2019-02-23T14:50:12Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r259581182",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581182"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 642,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581361",
      "pull_request_review_id": 207112297,
      "id": 259581361,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4MTM2MQ==",
      "diff_hunk": "@@ -80,6 +80,26 @@ typedef struct {\n     unsigned char data[64];\n } secp256k1_ecdsa_signature;\n \n+/** Data structure that holds a sign-to-contract (\"s2c\") opening. Sign-to-contract\n+ *  allows a signer to commit to some data as part of a signature. It can be used as\n+ *  an Out-argument in certain signing functions.\n+ *\n+ *  This structure is not opaque, but it is strongly discouraged to read or write to\n+ *  it directly.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is however\n+ *  guaranteed to be 73 bytes in size, and can be safely copied/moved.",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 13,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "ed20dbd2c83efe9479a3d6ef33a461d7947476ba",
      "in_reply_to_id": 258962377,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah, not sure what's got into me",
      "created_at": "2019-02-23T14:56:51Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r259581361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581365",
      "pull_request_review_id": 207112299,
      "id": 259581365,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4MTM2NQ==",
      "diff_hunk": "@@ -80,6 +80,26 @@ typedef struct {\n     unsigned char data[64];\n } secp256k1_ecdsa_signature;\n \n+/** Data structure that holds a sign-to-contract (\"s2c\") opening. Sign-to-contract\n+ *  allows a signer to commit to some data as part of a signature. It can be used as\n+ *  an Out-argument in certain signing functions.\n+ *\n+ *  This structure is not opaque, but it is strongly discouraged to read or write to\n+ *  it directly.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is however\n+ *  guaranteed to be 73 bytes in size, and can be safely copied/moved.",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 13,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "ed20dbd2c83efe9479a3d6ef33a461d7947476ba",
      "in_reply_to_id": 258962377,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-02-23T14:56:55Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r259581365",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/259581365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299234531",
      "pull_request_review_id": 256583065,
      "id": 299234531,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5OTIzNDUzMQ==",
      "diff_hunk": "@@ -588,10 +611,129 @@ int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *\n     return 1;\n }\n \n+/* Compute an ec commitment tweak as hash(pubkey, data). */\n+static int secp256k1_ec_commit_tweak(const secp256k1_context *ctx, unsigned char *tweak32, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_ge p;\n+    unsigned char rbuf[33];\n+    size_t rbuf_size = sizeof(rbuf);\n+    secp256k1_sha256 sha;\n+\n+    if (data_size == 0) {\n+        /* That's probably not what the caller wanted */\n+        return 0;\n+    }\n+    if(!secp256k1_pubkey_load(ctx, &p, pubkey)) {\n+        return 0;\n+    }\n+    secp256k1_eckey_pubkey_serialize(&p, rbuf, &rbuf_size, 1);\n+\n+    secp256k1_sha256_initialize(&sha);\n+    secp256k1_sha256_write(&sha, rbuf, rbuf_size);\n+    secp256k1_sha256_write(&sha, data, data_size);\n+    secp256k1_sha256_finalize(&sha, tweak32);\n+    return 1;\n+}\n+\n+/* Compute an ec commitment as pubkey + hash(pubkey, data)*G. */\n+static int secp256k1_ec_commit(const secp256k1_context* ctx, secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+\n+    *commitment = *pubkey;\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, commitment, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_pubkey_tweak_add(ctx, commitment, tweak);\n+}\n+\n+/* Compute the seckey of an ec commitment from the original secret key of the pubkey as seckey +\n+ * hash(pubkey, data). */\n+static int secp256k1_ec_commit_seckey(const secp256k1_context* ctx, unsigned char *seckey, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+    secp256k1_pubkey pubkey_tmp;\n+\n+    if (pubkey == NULL) {\n+        /* Compute pubkey from seckey if not provided */\n+        int overflow;\n+        secp256k1_scalar x;\n+        secp256k1_gej pj;\n+        secp256k1_ge p;\n+\n+        secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+        if (overflow != 0) {\n+            return 0;\n+        }\n+        secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pj, &x);\n+        secp256k1_ge_set_gej(&p, &pj);\n+        secp256k1_pubkey_save(&pubkey_tmp, &p);\n+        pubkey = &pubkey_tmp;\n+    }\n+\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_privkey_tweak_add(ctx, seckey, tweak);\n+}\n+\n+/* Verify an ec commitment as pubkey + hash(pubkey, data)*G ?= commitment. */\n+static int secp256k1_ec_commit_verify(const secp256k1_context* ctx, const secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_gej pj;\n+    secp256k1_ge p;\n+    secp256k1_pubkey commitment_tmp;\n+\n+    if (!secp256k1_ec_commit(ctx, &commitment_tmp, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+\n+    /* Return commitment == commitment_tmp */\n+    secp256k1_gej_set_infinity(&pj);\n+    secp256k1_pubkey_load(ctx, &p, &commitment_tmp);\n+    secp256k1_gej_add_ge_var(&pj, &pj, &p, NULL);\n+    secp256k1_pubkey_load(ctx, &p, commitment);\n+    secp256k1_ge_neg(&p, &p);\n+    secp256k1_gej_add_ge_var(&pj, &pj, &p, NULL);\n+    return secp256k1_gej_is_infinity(&pj);\n+}\n+\n+static char s2c_opening_magic[8] = { 0x5d, 0x05, 0x20, 0xb8, 0xb7, 0xf2, 0xb1, 0x68 };",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 117,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here it's `char` but in the struct it's `unsigned char`.",
      "created_at": "2019-07-01T22:04:06Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r299234531",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299234531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 697,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299238663",
      "pull_request_review_id": 256587782,
      "id": 299238663,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5OTIzODY2Mw==",
      "diff_hunk": "@@ -0,0 +1,392 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {\n+    secp256k1_fe rx;\n+    secp256k1_ge R;\n+    secp256k1_pubkey pubnonce;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(data32 != NULL);\n+    ARG_CHECK(opening != NULL);\n+    ARG_CHECK(secp256k1_s2c_commit_is_init(opening));\n+\n+    if (!secp256k1_fe_set_b32(&rx, &sig->data[0])) {\n+        return 0;\n+    }\n+    if (!secp256k1_ge_set_xquad(&R, &rx)) {\n+        return 0;\n+    }\n+    if (opening->nonce_is_negated) {\n+        secp256k1_ge_neg(&R, &R);\n+    }\n+    secp256k1_pubkey_save(&pubnonce, &R);\n+    return secp256k1_ec_commit_verify(ctx, &pubnonce, &opening->original_pubnonce, data32, 32);\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, secp256k1_s2c_opening *s2c_opening, const unsigned char *msg32, const unsigned char *seckey, const unsigned char *s2c_data32, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[33];\n+    size_t buflen = sizeof(buf);\n+    unsigned char noncedata[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    /* sign-to-contract commitments only work with the default nonce function,\n+     * because we need to ensure that s2c_data is actually hashed into the nonce and\n+     * not just ignored. */\n+    ARG_CHECK(s2c_data32 == NULL || (noncefp == NULL || noncefp == secp256k1_nonce_function_bipschnorr));\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    if (s2c_data32 != NULL) {\n+        /* Provide s2c_data32 and ndata (if not NULL) to the the nonce function\n+         * as additional data to derive the nonce from. If both pointers are\n+         * not NULL, they need to be hashed to get the nonce data 32 bytes.\n+         * Even if only s2c_data32 is not NULL, it's hashed because it should\n+         * be possible to derive nonces even if only a SHA256 commitment to the\n+         * data is known. This is for example important in the anti nonce\n+         * sidechannel protocol.\n+         */\n+        secp256k1_sha256_initialize(&sha);\n+        secp256k1_sha256_write(&sha, s2c_data32, 32);\n+        if (ndata != NULL) {\n+            secp256k1_sha256_write(&sha, ndata, 32);\n+        }\n+        secp256k1_sha256_finalize(&sha, noncedata);\n+        ndata = &noncedata;\n+    }\n+\n+    if (!noncefp(buf, msg32, seckey, NULL, (void*)ndata, 0)) {\n+        return 0;\n+    }\n+    secp256k1_scalar_set_b32(&k, buf, NULL);\n+    if (secp256k1_scalar_is_zero(&k)) {\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);\n+    secp256k1_ge_set_gej(&r, &rj);\n+    if (s2c_opening != NULL) {\n+        secp256k1_s2c_opening_init(s2c_opening);\n+        if (s2c_data32 != NULL) {",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": 126,
      "original_position": 123,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe add a check if `s2c_opening == NULL || s2c_data32 == NULL`? Because if that's true I think it means the user made a mistake",
      "created_at": "2019-07-01T22:19:42Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r299238663",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299238663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 126,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299244019",
      "pull_request_review_id": 256594120,
      "id": 299244019,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5OTI0NDAxOQ==",
      "diff_hunk": "@@ -80,6 +80,26 @@ typedef struct {\n     unsigned char data[64];\n } secp256k1_ecdsa_signature;\n \n+/** Data structure that holds a sign-to-contract (\"s2c\") opening. Sign-to-contract\n+ *  allows a signer to commit to some data as part of a signature. It can be used as\n+ *  an Out-argument in certain signing functions.\n+ *\n+ *  This structure is not opaque, but it is strongly discouraged to read or write to\n+ *  it directly.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It can\n+ *  be safely copied/moved.\n+ */\n+typedef struct {\n+    /* magic is set during initialization */\n+    unsigned char magic[8];\n+    /* Public nonce before applying the sign-to-contract commitment */\n+    secp256k1_pubkey original_pubnonce;\n+    /* Integer indicating if signing algorithm negated the nonce */\n+    unsigned char nonce_is_negated;",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 21,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this a computational optimization to avoid computing the jacobi symbol on `secp256k1_schnorrsig_verify_s2c_commit`?",
      "created_at": "2019-07-01T22:43:13Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r299244019",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299244019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299245892",
      "pull_request_review_id": 256596329,
      "id": 299245892,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5OTI0NTg5Mg==",
      "diff_hunk": "@@ -0,0 +1,392 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": 32,
      "original_position": 32,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should this function be constant time? could `data32` actually be a secret worth guarding?",
      "created_at": "2019-07-01T22:51:56Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r299245892",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299245892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299719195",
      "pull_request_review_id": 257191985,
      "id": 299719195,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5OTcxOTE5NQ==",
      "diff_hunk": "@@ -0,0 +1,392 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": 32,
      "original_position": 32,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "in_reply_to_id": 299245892,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you're right but it seems that it is constant time in `data32`.",
      "created_at": "2019-07-02T23:06:16Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r299719195",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299719195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299936062",
      "pull_request_review_id": 257460408,
      "id": 299936062,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5OTkzNjA2Mg==",
      "diff_hunk": "@@ -80,6 +80,26 @@ typedef struct {\n     unsigned char data[64];\n } secp256k1_ecdsa_signature;\n \n+/** Data structure that holds a sign-to-contract (\"s2c\") opening. Sign-to-contract\n+ *  allows a signer to commit to some data as part of a signature. It can be used as\n+ *  an Out-argument in certain signing functions.\n+ *\n+ *  This structure is not opaque, but it is strongly discouraged to read or write to\n+ *  it directly.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It can\n+ *  be safely copied/moved.\n+ */\n+typedef struct {\n+    /* magic is set during initialization */\n+    unsigned char magic[8];\n+    /* Public nonce before applying the sign-to-contract commitment */\n+    secp256k1_pubkey original_pubnonce;\n+    /* Integer indicating if signing algorithm negated the nonce */\n+    unsigned char nonce_is_negated;",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 21,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "in_reply_to_id": 299244019,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, we could could compute the ec_commitment of `original_pubnonce` and `data` then negate if this is not a valid nonce. But this prevents batch verification. I will mention this in the doc. ",
      "created_at": "2019-07-03T12:45:10Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r299936062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299936062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299938333",
      "pull_request_review_id": 257463320,
      "id": 299938333,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5OTkzODMzMw==",
      "diff_hunk": "@@ -0,0 +1,392 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {\n+    secp256k1_fe rx;\n+    secp256k1_ge R;\n+    secp256k1_pubkey pubnonce;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(data32 != NULL);\n+    ARG_CHECK(opening != NULL);\n+    ARG_CHECK(secp256k1_s2c_commit_is_init(opening));\n+\n+    if (!secp256k1_fe_set_b32(&rx, &sig->data[0])) {\n+        return 0;\n+    }\n+    if (!secp256k1_ge_set_xquad(&R, &rx)) {\n+        return 0;\n+    }\n+    if (opening->nonce_is_negated) {\n+        secp256k1_ge_neg(&R, &R);\n+    }\n+    secp256k1_pubkey_save(&pubnonce, &R);\n+    return secp256k1_ec_commit_verify(ctx, &pubnonce, &opening->original_pubnonce, data32, 32);\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, secp256k1_s2c_opening *s2c_opening, const unsigned char *msg32, const unsigned char *seckey, const unsigned char *s2c_data32, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[33];\n+    size_t buflen = sizeof(buf);\n+    unsigned char noncedata[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    /* sign-to-contract commitments only work with the default nonce function,\n+     * because we need to ensure that s2c_data is actually hashed into the nonce and\n+     * not just ignored. */\n+    ARG_CHECK(s2c_data32 == NULL || (noncefp == NULL || noncefp == secp256k1_nonce_function_bipschnorr));\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    if (s2c_data32 != NULL) {\n+        /* Provide s2c_data32 and ndata (if not NULL) to the the nonce function\n+         * as additional data to derive the nonce from. If both pointers are\n+         * not NULL, they need to be hashed to get the nonce data 32 bytes.\n+         * Even if only s2c_data32 is not NULL, it's hashed because it should\n+         * be possible to derive nonces even if only a SHA256 commitment to the\n+         * data is known. This is for example important in the anti nonce\n+         * sidechannel protocol.\n+         */\n+        secp256k1_sha256_initialize(&sha);\n+        secp256k1_sha256_write(&sha, s2c_data32, 32);\n+        if (ndata != NULL) {\n+            secp256k1_sha256_write(&sha, ndata, 32);\n+        }\n+        secp256k1_sha256_finalize(&sha, noncedata);\n+        ndata = &noncedata;\n+    }\n+\n+    if (!noncefp(buf, msg32, seckey, NULL, (void*)ndata, 0)) {\n+        return 0;\n+    }\n+    secp256k1_scalar_set_b32(&k, buf, NULL);\n+    if (secp256k1_scalar_is_zero(&k)) {\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);\n+    secp256k1_ge_set_gej(&r, &rj);\n+    if (s2c_opening != NULL) {\n+        secp256k1_s2c_opening_init(s2c_opening);\n+        if (s2c_data32 != NULL) {",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": 126,
      "original_position": 123,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "in_reply_to_id": 299238663,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You mean `CHECK((s2c_opening != NULL) == (s2c_data32 != NULL))` (both should be NULL or both should be non-NULL)? Yes, I'll add an ARG_CHECK",
      "created_at": "2019-07-03T12:50:30Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r299938333",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/299938333"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 126,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/300498183",
      "pull_request_review_id": 258168759,
      "id": 300498183,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDQ5ODE4Mw==",
      "diff_hunk": "@@ -588,10 +611,129 @@ int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *\n     return 1;\n }\n \n+/* Compute an ec commitment tweak as hash(pubkey, data). */\n+static int secp256k1_ec_commit_tweak(const secp256k1_context *ctx, unsigned char *tweak32, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_ge p;\n+    unsigned char rbuf[33];\n+    size_t rbuf_size = sizeof(rbuf);\n+    secp256k1_sha256 sha;\n+\n+    if (data_size == 0) {\n+        /* That's probably not what the caller wanted */\n+        return 0;\n+    }\n+    if(!secp256k1_pubkey_load(ctx, &p, pubkey)) {\n+        return 0;\n+    }\n+    secp256k1_eckey_pubkey_serialize(&p, rbuf, &rbuf_size, 1);\n+\n+    secp256k1_sha256_initialize(&sha);\n+    secp256k1_sha256_write(&sha, rbuf, rbuf_size);\n+    secp256k1_sha256_write(&sha, data, data_size);\n+    secp256k1_sha256_finalize(&sha, tweak32);\n+    return 1;\n+}\n+\n+/* Compute an ec commitment as pubkey + hash(pubkey, data)*G. */\n+static int secp256k1_ec_commit(const secp256k1_context* ctx, secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+\n+    *commitment = *pubkey;\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, commitment, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_pubkey_tweak_add(ctx, commitment, tweak);\n+}\n+\n+/* Compute the seckey of an ec commitment from the original secret key of the pubkey as seckey +\n+ * hash(pubkey, data). */\n+static int secp256k1_ec_commit_seckey(const secp256k1_context* ctx, unsigned char *seckey, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+    secp256k1_pubkey pubkey_tmp;\n+\n+    if (pubkey == NULL) {\n+        /* Compute pubkey from seckey if not provided */\n+        int overflow;\n+        secp256k1_scalar x;\n+        secp256k1_gej pj;\n+        secp256k1_ge p;\n+\n+        secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+        if (overflow != 0) {\n+            return 0;\n+        }\n+        secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pj, &x);\n+        secp256k1_ge_set_gej(&p, &pj);\n+        secp256k1_pubkey_save(&pubkey_tmp, &p);\n+        pubkey = &pubkey_tmp;\n+    }\n+\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_privkey_tweak_add(ctx, seckey, tweak);\n+}\n+\n+/* Verify an ec commitment as pubkey + hash(pubkey, data)*G ?= commitment. */\n+static int secp256k1_ec_commit_verify(const secp256k1_context* ctx, const secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_gej pj;\n+    secp256k1_ge p;\n+    secp256k1_pubkey commitment_tmp;\n+\n+    if (!secp256k1_ec_commit(ctx, &commitment_tmp, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+\n+    /* Return commitment == commitment_tmp */\n+    secp256k1_gej_set_infinity(&pj);\n+    secp256k1_pubkey_load(ctx, &p, &commitment_tmp);\n+    secp256k1_gej_add_ge_var(&pj, &pj, &p, NULL);\n+    secp256k1_pubkey_load(ctx, &p, commitment);\n+    secp256k1_ge_neg(&p, &p);\n+    secp256k1_gej_add_ge_var(&pj, &pj, &p, NULL);\n+    return secp256k1_gej_is_infinity(&pj);\n+}\n+\n+static char s2c_opening_magic[8] = { 0x5d, 0x05, 0x20, 0xb8, 0xb7, 0xf2, 0xb1, 0x68 };",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 117,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "in_reply_to_id": 299234531,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Switched to `uint64_t` because there's less room for mistakes and it's easier to read. ",
      "created_at": "2019-07-04T20:55:58Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r300498183",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/300498183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 697,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/300498204",
      "pull_request_review_id": 258168784,
      "id": 300498204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDQ5ODIwNA==",
      "diff_hunk": "@@ -0,0 +1,392 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {\n+    secp256k1_fe rx;\n+    secp256k1_ge R;\n+    secp256k1_pubkey pubnonce;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(data32 != NULL);\n+    ARG_CHECK(opening != NULL);\n+    ARG_CHECK(secp256k1_s2c_commit_is_init(opening));\n+\n+    if (!secp256k1_fe_set_b32(&rx, &sig->data[0])) {\n+        return 0;\n+    }\n+    if (!secp256k1_ge_set_xquad(&R, &rx)) {\n+        return 0;\n+    }\n+    if (opening->nonce_is_negated) {\n+        secp256k1_ge_neg(&R, &R);\n+    }\n+    secp256k1_pubkey_save(&pubnonce, &R);\n+    return secp256k1_ec_commit_verify(ctx, &pubnonce, &opening->original_pubnonce, data32, 32);\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, secp256k1_s2c_opening *s2c_opening, const unsigned char *msg32, const unsigned char *seckey, const unsigned char *s2c_data32, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[33];\n+    size_t buflen = sizeof(buf);\n+    unsigned char noncedata[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    /* sign-to-contract commitments only work with the default nonce function,\n+     * because we need to ensure that s2c_data is actually hashed into the nonce and\n+     * not just ignored. */\n+    ARG_CHECK(s2c_data32 == NULL || (noncefp == NULL || noncefp == secp256k1_nonce_function_bipschnorr));\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    if (s2c_data32 != NULL) {\n+        /* Provide s2c_data32 and ndata (if not NULL) to the the nonce function\n+         * as additional data to derive the nonce from. If both pointers are\n+         * not NULL, they need to be hashed to get the nonce data 32 bytes.\n+         * Even if only s2c_data32 is not NULL, it's hashed because it should\n+         * be possible to derive nonces even if only a SHA256 commitment to the\n+         * data is known. This is for example important in the anti nonce\n+         * sidechannel protocol.\n+         */\n+        secp256k1_sha256_initialize(&sha);\n+        secp256k1_sha256_write(&sha, s2c_data32, 32);\n+        if (ndata != NULL) {\n+            secp256k1_sha256_write(&sha, ndata, 32);\n+        }\n+        secp256k1_sha256_finalize(&sha, noncedata);\n+        ndata = &noncedata;\n+    }\n+\n+    if (!noncefp(buf, msg32, seckey, NULL, (void*)ndata, 0)) {\n+        return 0;\n+    }\n+    secp256k1_scalar_set_b32(&k, buf, NULL);\n+    if (secp256k1_scalar_is_zero(&k)) {\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);\n+    secp256k1_ge_set_gej(&r, &rj);\n+    if (s2c_opening != NULL) {\n+        secp256k1_s2c_opening_init(s2c_opening);\n+        if (s2c_data32 != NULL) {",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": 126,
      "original_position": 123,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "in_reply_to_id": 299238663,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-07-04T20:56:05Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r300498204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/300498204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 126,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/300498238",
      "pull_request_review_id": 258168816,
      "id": 300498238,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDQ5ODIzOA==",
      "diff_hunk": "@@ -80,6 +80,26 @@ typedef struct {\n     unsigned char data[64];\n } secp256k1_ecdsa_signature;\n \n+/** Data structure that holds a sign-to-contract (\"s2c\") opening. Sign-to-contract\n+ *  allows a signer to commit to some data as part of a signature. It can be used as\n+ *  an Out-argument in certain signing functions.\n+ *\n+ *  This structure is not opaque, but it is strongly discouraged to read or write to\n+ *  it directly.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It can\n+ *  be safely copied/moved.\n+ */\n+typedef struct {\n+    /* magic is set during initialization */\n+    unsigned char magic[8];\n+    /* Public nonce before applying the sign-to-contract commitment */\n+    secp256k1_pubkey original_pubnonce;\n+    /* Integer indicating if signing algorithm negated the nonce */\n+    unsigned char nonce_is_negated;",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 21,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "68a8ca45837fb1ff36ec766ce3bed380d103e6f6",
      "in_reply_to_id": 299244019,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "added comment to explain this",
      "created_at": "2019-07-04T20:56:16Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r300498238",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/300498238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/300503368",
      "pull_request_review_id": 258175048,
      "id": 300503368,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDUwMzM2OA==",
      "diff_hunk": "@@ -97,7 +97,10 @@ typedef struct {\n     uint64_t magic;\n     /* Public nonce before applying the sign-to-contract commitment */\n     secp256k1_pubkey original_pubnonce;\n-    /* Integer indicating if signing algorithm negated the nonce */\n+    /* Byte indicating if signing algorithm negated the nonce. Alternatively when\n+     * verifying we could compute the EC commitment of original_pubnonce and the\n+     * data and negate if this would not be a valid nonce. But this would prevent\n+     * batch verification of sign-to-contract commitments. */\n     unsigned char nonce_is_negated;",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 22,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "779458a2be5fe42f4edd25aaea553e12f5a8e940",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, feel free to ignore: Boolean values are typically represented by `int` and not `unsigned char`. ",
      "created_at": "2019-07-04T21:50:20Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r300503368",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/300503368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/300504826",
      "pull_request_review_id": 258176775,
      "id": 300504826,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDUwNDgyNg==",
      "diff_hunk": "@@ -97,7 +97,10 @@ typedef struct {\n     uint64_t magic;\n     /* Public nonce before applying the sign-to-contract commitment */\n     secp256k1_pubkey original_pubnonce;\n-    /* Integer indicating if signing algorithm negated the nonce */\n+    /* Byte indicating if signing algorithm negated the nonce. Alternatively when\n+     * verifying we could compute the EC commitment of original_pubnonce and the\n+     * data and negate if this would not be a valid nonce. But this would prevent\n+     * batch verification of sign-to-contract commitments. */\n     unsigned char nonce_is_negated;",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 22,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "779458a2be5fe42f4edd25aaea553e12f5a8e940",
      "in_reply_to_id": 300503368,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes but ints are the worst. Since `nonce_is_negated` is only ever 0 or 1 I changed this to int.",
      "created_at": "2019-07-04T22:09:20Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r300504826",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/300504826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/307982461",
      "pull_request_review_id": 267487152,
      "id": 307982461,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk4MjQ2MQ==",
      "diff_hunk": "@@ -444,6 +468,37 @@ SECP256K1_API int secp256k1_ecdsa_signature_serialize_compact(\n     const secp256k1_ecdsa_signature* sig\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n+/** Parse a sign-to-contract opening.\n+ *\n+ *  Returns: 1 if the opening was fully valid.\n+ *           0 if the opening could not be parsed or is invalid.\n+ *  Args:    ctx: a secp256k1 context object.\n+ *  Out: opening: pointer to an opening object. If 1 is returned, it is set to a\n+ *                 parsed version of input. If not, its value is undefined.\n+ *  In:  input34: pointer to 34-byte array with a serialized opening\n+ *\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_s2c_opening_parse(\n+    const secp256k1_context* ctx,\n+    secp256k1_s2c_opening* opening,\n+    const unsigned char *input34",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 55,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it worth it to optimize this down to 33 bytes by just using a single bit to mark if the nonce has been negated?(we can use the same byte that we use to signal the parity)",
      "created_at": "2019-07-28T01:48:19Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r307982461",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/307982461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 484,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/307982935",
      "pull_request_review_id": 267487607,
      "id": 307982935,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk4MjkzNQ==",
      "diff_hunk": "@@ -0,0 +1,395 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {\n+    secp256k1_fe rx;\n+    secp256k1_ge R;\n+    secp256k1_pubkey pubnonce;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(data32 != NULL);\n+    ARG_CHECK(opening != NULL);\n+    ARG_CHECK(secp256k1_s2c_commit_is_init(opening));\n+\n+    if (!secp256k1_fe_set_b32(&rx, &sig->data[0])) {\n+        return 0;\n+    }\n+    if (!secp256k1_ge_set_xquad(&R, &rx)) {\n+        return 0;\n+    }\n+    if (opening->nonce_is_negated) {\n+        secp256k1_ge_neg(&R, &R);\n+    }\n+    secp256k1_pubkey_save(&pubnonce, &R);\n+    return secp256k1_ec_commit_verify(ctx, &pubnonce, &opening->original_pubnonce, data32, 32);\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, secp256k1_s2c_opening *s2c_opening, const unsigned char *msg32, const unsigned char *seckey, const unsigned char *s2c_data32, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[33];\n+    size_t buflen = sizeof(buf);\n+    unsigned char noncedata[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    /* sign-to-contract commitments only work with the default nonce function,\n+     * because we need to ensure that s2c_data is actually hashed into the nonce and\n+     * not just ignored because otherwise this could result in nonce reuse. */\n+    ARG_CHECK(s2c_data32 == NULL || (noncefp == NULL || noncefp == secp256k1_nonce_function_bipschnorr));\n+    /* s2c_opening and s2c_data32 should be either both non-NULL or both NULL. */\n+    ARG_CHECK((s2c_opening != NULL) == (s2c_data32 != NULL));\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    if (s2c_data32 != NULL) {\n+        /* Provide s2c_data32 and ndata (if not NULL) to the the nonce function\n+         * as additional data to derive the nonce from. If both pointers are\n+         * not NULL, they need to be hashed to get the nonce data 32 bytes.\n+         * Even if only s2c_data32 is not NULL, it's hashed because it should\n+         * be possible to derive nonces even if only a SHA256 commitment to the\n+         * data is known. This is for example important in the anti nonce\n+         * sidechannel protocol.\n+         */\n+        secp256k1_sha256_initialize(&sha);\n+        secp256k1_sha256_write(&sha, s2c_data32, 32);\n+        if (ndata != NULL) {\n+            secp256k1_sha256_write(&sha, ndata, 32);\n+        }\n+        secp256k1_sha256_finalize(&sha, noncedata);\n+        ndata = &noncedata;\n+    }\n+\n+    if (!noncefp(buf, msg32, seckey, NULL, (void*)ndata, 0)) {\n+        return 0;\n+    }\n+    secp256k1_scalar_set_b32(&k, buf, NULL);\n+    if (secp256k1_scalar_is_zero(&k)) {\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);\n+    secp256k1_ge_set_gej(&r, &rj);\n+\n+    if (s2c_opening != NULL) {\n+        secp256k1_s2c_opening_init(s2c_opening);\n+        if (s2c_data32 != NULL) {\n+            /* Create sign-to-contract commitment */\n+            secp256k1_pubkey_save(&s2c_opening->original_pubnonce, &r);\n+            secp256k1_ec_commit_seckey(ctx, buf, &s2c_opening->original_pubnonce, s2c_data32, 32);\n+            secp256k1_scalar_set_b32(&k, buf, NULL);\n+            secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": 131,
      "original_position": 131,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe instead of recomputing the secret key and multiplying by the generator you can compute `H(R, data)*G` and add that to the R you already have? \r\n(although since all of this is constant time it might result in no performance change? I'm not sure about it)",
      "created_at": "2019-07-28T02:19:09Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r307982935",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/307982935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/307983709",
      "pull_request_review_id": 267488391,
      "id": 307983709,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk4MzcwOQ==",
      "diff_hunk": "@@ -681,10 +705,130 @@ int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *\n     return 1;\n }\n \n+/* Compute an ec commitment tweak as hash(pubkey, data). */\n+static int secp256k1_ec_commit_tweak(const secp256k1_context *ctx, unsigned char *tweak32, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_ge p;\n+    unsigned char rbuf[33];\n+    size_t rbuf_size = sizeof(rbuf);\n+    secp256k1_sha256 sha;\n+\n+    if (data_size == 0) {\n+        /* That's probably not what the caller wanted */\n+        return 0;\n+    }\n+    if(!secp256k1_pubkey_load(ctx, &p, pubkey)) {\n+        return 0;\n+    }\n+    secp256k1_eckey_pubkey_serialize(&p, rbuf, &rbuf_size, 1);\n+\n+    secp256k1_sha256_initialize(&sha);\n+    secp256k1_sha256_write(&sha, rbuf, rbuf_size);\n+    secp256k1_sha256_write(&sha, data, data_size);\n+    secp256k1_sha256_finalize(&sha, tweak32);\n+    return 1;\n+}\n+\n+/* Compute an ec commitment as pubkey + hash(pubkey, data)*G. */\n+static int secp256k1_ec_commit(const secp256k1_context* ctx, secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+\n+    *commitment = *pubkey;\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, commitment, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_pubkey_tweak_add(ctx, commitment, tweak);\n+}\n+\n+/* Compute the seckey of an ec commitment from the original secret key of the pubkey as seckey +\n+ * hash(pubkey, data). */\n+static int secp256k1_ec_commit_seckey(const secp256k1_context* ctx, unsigned char *seckey, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+    secp256k1_pubkey pubkey_tmp;\n+\n+    if (pubkey == NULL) {\n+        /* Compute pubkey from seckey if not provided */\n+        int overflow;\n+        secp256k1_scalar x;\n+        secp256k1_gej pj;\n+        secp256k1_ge p;\n+\n+        secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+        if (overflow != 0) {\n+            return 0;\n+        }\n+        secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pj, &x);\n+        secp256k1_ge_set_gej(&p, &pj);\n+        secp256k1_pubkey_save(&pubkey_tmp, &p);\n+        pubkey = &pubkey_tmp;\n+    }\n+\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_privkey_tweak_add(ctx, seckey, tweak);\n+}\n+\n+/* Verify an ec commitment as pubkey + hash(pubkey, data)*G ?= commitment. */\n+static int secp256k1_ec_commit_verify(const secp256k1_context* ctx, const secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_gej pj;\n+    secp256k1_ge p;\n+    secp256k1_pubkey commitment_tmp;\n+\n+    if (!secp256k1_ec_commit(ctx, &commitment_tmp, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+\n+    /* Return commitment == commitment_tmp */\n+    secp256k1_gej_set_infinity(&pj);\n+    secp256k1_pubkey_load(ctx, &p, &commitment_tmp);\n+    secp256k1_gej_add_ge_var(&pj, &pj, &p, NULL);",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 118,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can use `secp256k1_gej_set_ge()` instead of setting to infinity and adding ",
      "created_at": "2019-07-28T03:14:50Z",
      "updated_at": "2019-07-31T08:46:47Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r307983709",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/307983709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 784,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/308824759",
      "pull_request_review_id": 268521981,
      "id": 308824759,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODgyNDc1OQ==",
      "diff_hunk": "@@ -0,0 +1,395 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {\n+    secp256k1_fe rx;\n+    secp256k1_ge R;\n+    secp256k1_pubkey pubnonce;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(data32 != NULL);\n+    ARG_CHECK(opening != NULL);\n+    ARG_CHECK(secp256k1_s2c_commit_is_init(opening));\n+\n+    if (!secp256k1_fe_set_b32(&rx, &sig->data[0])) {\n+        return 0;\n+    }\n+    if (!secp256k1_ge_set_xquad(&R, &rx)) {\n+        return 0;\n+    }\n+    if (opening->nonce_is_negated) {\n+        secp256k1_ge_neg(&R, &R);\n+    }\n+    secp256k1_pubkey_save(&pubnonce, &R);\n+    return secp256k1_ec_commit_verify(ctx, &pubnonce, &opening->original_pubnonce, data32, 32);\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, secp256k1_s2c_opening *s2c_opening, const unsigned char *msg32, const unsigned char *seckey, const unsigned char *s2c_data32, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[33];\n+    size_t buflen = sizeof(buf);\n+    unsigned char noncedata[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    /* sign-to-contract commitments only work with the default nonce function,\n+     * because we need to ensure that s2c_data is actually hashed into the nonce and\n+     * not just ignored because otherwise this could result in nonce reuse. */\n+    ARG_CHECK(s2c_data32 == NULL || (noncefp == NULL || noncefp == secp256k1_nonce_function_bipschnorr));\n+    /* s2c_opening and s2c_data32 should be either both non-NULL or both NULL. */\n+    ARG_CHECK((s2c_opening != NULL) == (s2c_data32 != NULL));\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    if (s2c_data32 != NULL) {\n+        /* Provide s2c_data32 and ndata (if not NULL) to the the nonce function\n+         * as additional data to derive the nonce from. If both pointers are\n+         * not NULL, they need to be hashed to get the nonce data 32 bytes.\n+         * Even if only s2c_data32 is not NULL, it's hashed because it should\n+         * be possible to derive nonces even if only a SHA256 commitment to the\n+         * data is known. This is for example important in the anti nonce\n+         * sidechannel protocol.\n+         */\n+        secp256k1_sha256_initialize(&sha);\n+        secp256k1_sha256_write(&sha, s2c_data32, 32);\n+        if (ndata != NULL) {\n+            secp256k1_sha256_write(&sha, ndata, 32);\n+        }\n+        secp256k1_sha256_finalize(&sha, noncedata);\n+        ndata = &noncedata;\n+    }\n+\n+    if (!noncefp(buf, msg32, seckey, NULL, (void*)ndata, 0)) {\n+        return 0;\n+    }\n+    secp256k1_scalar_set_b32(&k, buf, NULL);\n+    if (secp256k1_scalar_is_zero(&k)) {\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);\n+    secp256k1_ge_set_gej(&r, &rj);\n+\n+    if (s2c_opening != NULL) {\n+        secp256k1_s2c_opening_init(s2c_opening);\n+        if (s2c_data32 != NULL) {\n+            /* Create sign-to-contract commitment */\n+            secp256k1_pubkey_save(&s2c_opening->original_pubnonce, &r);\n+            secp256k1_ec_commit_seckey(ctx, buf, &s2c_opening->original_pubnonce, s2c_data32, 32);\n+            secp256k1_scalar_set_b32(&k, buf, NULL);\n+            secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": 131,
      "original_position": 131,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "in_reply_to_id": 307982935,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's `R + H(R, data)*G` vs. `k*G`. The latter is less code and faster (no addition). This is independent of being constant time.",
      "created_at": "2019-07-30T16:36:56Z",
      "updated_at": "2019-07-31T08:47:18Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r308824759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/308824759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/308831543",
      "pull_request_review_id": 268521981,
      "id": 308831543,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODgzMTU0Mw==",
      "diff_hunk": "@@ -444,6 +468,37 @@ SECP256K1_API int secp256k1_ecdsa_signature_serialize_compact(\n     const secp256k1_ecdsa_signature* sig\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n+/** Parse a sign-to-contract opening.\n+ *\n+ *  Returns: 1 if the opening was fully valid.\n+ *           0 if the opening could not be parsed or is invalid.\n+ *  Args:    ctx: a secp256k1 context object.\n+ *  Out: opening: pointer to an opening object. If 1 is returned, it is set to a\n+ *                 parsed version of input. If not, its value is undefined.\n+ *  In:  input34: pointer to 34-byte array with a serialized opening\n+ *\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_s2c_opening_parse(\n+    const secp256k1_context* ctx,\n+    secp256k1_s2c_opening* opening,\n+    const unsigned char *input34",
      "path": "include/secp256k1.h",
      "position": null,
      "original_position": 55,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "in_reply_to_id": 307982461,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good idea",
      "created_at": "2019-07-30T16:52:29Z",
      "updated_at": "2019-07-31T08:47:18Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r308831543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/308831543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 484,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/309105184",
      "pull_request_review_id": 268867150,
      "id": 309105184,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTEwNTE4NA==",
      "diff_hunk": "@@ -681,10 +705,130 @@ int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *\n     return 1;\n }\n \n+/* Compute an ec commitment tweak as hash(pubkey, data). */\n+static int secp256k1_ec_commit_tweak(const secp256k1_context *ctx, unsigned char *tweak32, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_ge p;\n+    unsigned char rbuf[33];\n+    size_t rbuf_size = sizeof(rbuf);\n+    secp256k1_sha256 sha;\n+\n+    if (data_size == 0) {\n+        /* That's probably not what the caller wanted */\n+        return 0;\n+    }\n+    if(!secp256k1_pubkey_load(ctx, &p, pubkey)) {\n+        return 0;\n+    }\n+    secp256k1_eckey_pubkey_serialize(&p, rbuf, &rbuf_size, 1);\n+\n+    secp256k1_sha256_initialize(&sha);\n+    secp256k1_sha256_write(&sha, rbuf, rbuf_size);\n+    secp256k1_sha256_write(&sha, data, data_size);\n+    secp256k1_sha256_finalize(&sha, tweak32);\n+    return 1;\n+}\n+\n+/* Compute an ec commitment as pubkey + hash(pubkey, data)*G. */\n+static int secp256k1_ec_commit(const secp256k1_context* ctx, secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+\n+    *commitment = *pubkey;\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, commitment, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_pubkey_tweak_add(ctx, commitment, tweak);\n+}\n+\n+/* Compute the seckey of an ec commitment from the original secret key of the pubkey as seckey +\n+ * hash(pubkey, data). */\n+static int secp256k1_ec_commit_seckey(const secp256k1_context* ctx, unsigned char *seckey, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    unsigned char tweak[32];\n+    secp256k1_pubkey pubkey_tmp;\n+\n+    if (pubkey == NULL) {\n+        /* Compute pubkey from seckey if not provided */\n+        int overflow;\n+        secp256k1_scalar x;\n+        secp256k1_gej pj;\n+        secp256k1_ge p;\n+\n+        secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+        if (overflow != 0) {\n+            return 0;\n+        }\n+        secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pj, &x);\n+        secp256k1_ge_set_gej(&p, &pj);\n+        secp256k1_pubkey_save(&pubkey_tmp, &p);\n+        pubkey = &pubkey_tmp;\n+    }\n+\n+    if (!secp256k1_ec_commit_tweak(ctx, tweak, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+    return secp256k1_ec_privkey_tweak_add(ctx, seckey, tweak);\n+}\n+\n+/* Verify an ec commitment as pubkey + hash(pubkey, data)*G ?= commitment. */\n+static int secp256k1_ec_commit_verify(const secp256k1_context* ctx, const secp256k1_pubkey *commitment, const secp256k1_pubkey *pubkey, const unsigned char *data, size_t data_size) {\n+    secp256k1_gej pj;\n+    secp256k1_ge p;\n+    secp256k1_pubkey commitment_tmp;\n+\n+    if (!secp256k1_ec_commit(ctx, &commitment_tmp, pubkey, data, data_size)) {\n+        return 0;\n+    }\n+\n+    /* Return commitment == commitment_tmp */\n+    secp256k1_gej_set_infinity(&pj);\n+    secp256k1_pubkey_load(ctx, &p, &commitment_tmp);\n+    secp256k1_gej_add_ge_var(&pj, &pj, &p, NULL);",
      "path": "src/secp256k1.c",
      "position": null,
      "original_position": 118,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "in_reply_to_id": 307983709,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-07-31T08:47:37Z",
      "updated_at": "2019-07-31T08:47:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r309105184",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/309105184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 784,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/309231749",
      "pull_request_review_id": 269026305,
      "id": 309231749,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTIzMTc0OQ==",
      "diff_hunk": "@@ -0,0 +1,395 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {\n+    secp256k1_fe rx;\n+    secp256k1_ge R;\n+    secp256k1_pubkey pubnonce;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(data32 != NULL);\n+    ARG_CHECK(opening != NULL);\n+    ARG_CHECK(secp256k1_s2c_commit_is_init(opening));\n+\n+    if (!secp256k1_fe_set_b32(&rx, &sig->data[0])) {\n+        return 0;\n+    }\n+    if (!secp256k1_ge_set_xquad(&R, &rx)) {\n+        return 0;\n+    }\n+    if (opening->nonce_is_negated) {\n+        secp256k1_ge_neg(&R, &R);\n+    }\n+    secp256k1_pubkey_save(&pubnonce, &R);\n+    return secp256k1_ec_commit_verify(ctx, &pubnonce, &opening->original_pubnonce, data32, 32);\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, secp256k1_s2c_opening *s2c_opening, const unsigned char *msg32, const unsigned char *seckey, const unsigned char *s2c_data32, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[33];\n+    size_t buflen = sizeof(buf);\n+    unsigned char noncedata[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    /* sign-to-contract commitments only work with the default nonce function,\n+     * because we need to ensure that s2c_data is actually hashed into the nonce and\n+     * not just ignored because otherwise this could result in nonce reuse. */\n+    ARG_CHECK(s2c_data32 == NULL || (noncefp == NULL || noncefp == secp256k1_nonce_function_bipschnorr));\n+    /* s2c_opening and s2c_data32 should be either both non-NULL or both NULL. */\n+    ARG_CHECK((s2c_opening != NULL) == (s2c_data32 != NULL));\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    if (s2c_data32 != NULL) {\n+        /* Provide s2c_data32 and ndata (if not NULL) to the the nonce function\n+         * as additional data to derive the nonce from. If both pointers are\n+         * not NULL, they need to be hashed to get the nonce data 32 bytes.\n+         * Even if only s2c_data32 is not NULL, it's hashed because it should\n+         * be possible to derive nonces even if only a SHA256 commitment to the\n+         * data is known. This is for example important in the anti nonce\n+         * sidechannel protocol.\n+         */\n+        secp256k1_sha256_initialize(&sha);\n+        secp256k1_sha256_write(&sha, s2c_data32, 32);\n+        if (ndata != NULL) {\n+            secp256k1_sha256_write(&sha, ndata, 32);\n+        }\n+        secp256k1_sha256_finalize(&sha, noncedata);\n+        ndata = &noncedata;\n+    }\n+\n+    if (!noncefp(buf, msg32, seckey, NULL, (void*)ndata, 0)) {\n+        return 0;\n+    }\n+    secp256k1_scalar_set_b32(&k, buf, NULL);\n+    if (secp256k1_scalar_is_zero(&k)) {\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);\n+    secp256k1_ge_set_gej(&r, &rj);\n+\n+    if (s2c_opening != NULL) {\n+        secp256k1_s2c_opening_init(s2c_opening);\n+        if (s2c_data32 != NULL) {\n+            /* Create sign-to-contract commitment */\n+            secp256k1_pubkey_save(&s2c_opening->original_pubnonce, &r);\n+            secp256k1_ec_commit_seckey(ctx, buf, &s2c_opening->original_pubnonce, s2c_data32, 32);\n+            secp256k1_scalar_set_b32(&k, buf, NULL);\n+            secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": 131,
      "original_position": 131,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "in_reply_to_id": 307982935,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess the performance will be a matter of will this wrap around the order or not. (if it will cause a wrap than `k*G` is gonna be faster, if it doesn't then calculating the `H(R,data)*G` and adding to R should be faster i think)",
      "created_at": "2019-07-31T13:51:29Z",
      "updated_at": "2019-07-31T13:51:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r309231749",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/309231749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/309236349",
      "pull_request_review_id": 269032276,
      "id": 309236349,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTIzNjM0OQ==",
      "diff_hunk": "@@ -0,0 +1,395 @@\n+/**********************************************************************\n+ * Copyright (c) 2018 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+#define _SECP256K1_MODULE_SCHNORRSIG_MAIN_\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorrsig.h\"\n+#include \"hash.h\"\n+\n+int secp256k1_schnorrsig_serialize(const secp256k1_context* ctx, unsigned char *out64, const secp256k1_schnorrsig* sig) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(out64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    memcpy(out64, sig->data, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_parse(const secp256k1_context* ctx, secp256k1_schnorrsig* sig, const unsigned char *in64) {\n+    (void) ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(in64 != NULL);\n+    memcpy(sig->data, in64, 64);\n+    return 1;\n+}\n+\n+int secp256k1_schnorrsig_verify_s2c_commit(const secp256k1_context* ctx, const secp256k1_schnorrsig *sig, const unsigned char *data32, const secp256k1_s2c_opening *opening) {\n+    secp256k1_fe rx;\n+    secp256k1_ge R;\n+    secp256k1_pubkey pubnonce;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(data32 != NULL);\n+    ARG_CHECK(opening != NULL);\n+    ARG_CHECK(secp256k1_s2c_commit_is_init(opening));\n+\n+    if (!secp256k1_fe_set_b32(&rx, &sig->data[0])) {\n+        return 0;\n+    }\n+    if (!secp256k1_ge_set_xquad(&R, &rx)) {\n+        return 0;\n+    }\n+    if (opening->nonce_is_negated) {\n+        secp256k1_ge_neg(&R, &R);\n+    }\n+    secp256k1_pubkey_save(&pubnonce, &R);\n+    return secp256k1_ec_commit_verify(ctx, &pubnonce, &opening->original_pubnonce, data32, 32);\n+}\n+\n+int secp256k1_schnorrsig_sign(const secp256k1_context* ctx, secp256k1_schnorrsig *sig, secp256k1_s2c_opening *s2c_opening, const unsigned char *msg32, const unsigned char *seckey, const unsigned char *s2c_data32, secp256k1_nonce_function noncefp, void *ndata) {\n+    secp256k1_scalar x;\n+    secp256k1_scalar e;\n+    secp256k1_scalar k;\n+    secp256k1_gej pkj;\n+    secp256k1_gej rj;\n+    secp256k1_ge pk;\n+    secp256k1_ge r;\n+    secp256k1_sha256 sha;\n+    int overflow;\n+    unsigned char buf[33];\n+    size_t buflen = sizeof(buf);\n+    unsigned char noncedata[32];\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    /* sign-to-contract commitments only work with the default nonce function,\n+     * because we need to ensure that s2c_data is actually hashed into the nonce and\n+     * not just ignored because otherwise this could result in nonce reuse. */\n+    ARG_CHECK(s2c_data32 == NULL || (noncefp == NULL || noncefp == secp256k1_nonce_function_bipschnorr));\n+    /* s2c_opening and s2c_data32 should be either both non-NULL or both NULL. */\n+    ARG_CHECK((s2c_opening != NULL) == (s2c_data32 != NULL));\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_bipschnorr;\n+    }\n+    secp256k1_scalar_set_b32(&x, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (overflow || secp256k1_scalar_is_zero(&x)) {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pkj, &x);\n+    secp256k1_ge_set_gej(&pk, &pkj);\n+\n+    if (s2c_data32 != NULL) {\n+        /* Provide s2c_data32 and ndata (if not NULL) to the the nonce function\n+         * as additional data to derive the nonce from. If both pointers are\n+         * not NULL, they need to be hashed to get the nonce data 32 bytes.\n+         * Even if only s2c_data32 is not NULL, it's hashed because it should\n+         * be possible to derive nonces even if only a SHA256 commitment to the\n+         * data is known. This is for example important in the anti nonce\n+         * sidechannel protocol.\n+         */\n+        secp256k1_sha256_initialize(&sha);\n+        secp256k1_sha256_write(&sha, s2c_data32, 32);\n+        if (ndata != NULL) {\n+            secp256k1_sha256_write(&sha, ndata, 32);\n+        }\n+        secp256k1_sha256_finalize(&sha, noncedata);\n+        ndata = &noncedata;\n+    }\n+\n+    if (!noncefp(buf, msg32, seckey, NULL, (void*)ndata, 0)) {\n+        return 0;\n+    }\n+    secp256k1_scalar_set_b32(&k, buf, NULL);\n+    if (secp256k1_scalar_is_zero(&k)) {\n+        return 0;\n+    }\n+\n+    secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);\n+    secp256k1_ge_set_gej(&r, &rj);\n+\n+    if (s2c_opening != NULL) {\n+        secp256k1_s2c_opening_init(s2c_opening);\n+        if (s2c_data32 != NULL) {\n+            /* Create sign-to-contract commitment */\n+            secp256k1_pubkey_save(&s2c_opening->original_pubnonce, &r);\n+            secp256k1_ec_commit_seckey(ctx, buf, &s2c_opening->original_pubnonce, s2c_data32, 32);\n+            secp256k1_scalar_set_b32(&k, buf, NULL);\n+            secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &rj, &k);",
      "path": "src/modules/schnorrsig/main_impl.h",
      "position": 131,
      "original_position": 131,
      "commit_id": "b631248693702b7b95449de185caef0f8c117f6a",
      "original_commit_id": "9037bcf5e8321c9e638f910b680715c61add7db9",
      "in_reply_to_id": 307982935,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No. Adding two curve points is completely separate from \"wrapping around the order\".",
      "created_at": "2019-07-31T13:59:55Z",
      "updated_at": "2019-07-31T13:59:56Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/589#discussion_r309236349",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/309236349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/589"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    }
  ]
}