{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/572",
    "id": 227669492,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3NjY5NDky",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/572",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/572.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/572.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/572",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/572/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/572/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/572/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/bcfc256f0b856001d1a84cf3706d12daaa4d723a",
    "number": 572,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Add anti nonce-sidechannel protocol to schnorrsigs",
    "user": {
      "login": "jonasnick",
      "id": 2582071,
      "node_id": "MDQ6VXNlcjI1ODIwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasnick",
      "html_url": "https://github.com/jonasnick",
      "followers_url": "https://api.github.com/users/jonasnick/followers",
      "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasnick/orgs",
      "repos_url": "https://api.github.com/users/jonasnick/repos",
      "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasnick/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Based on #588.\r\n\r\nAdding anti nonce-sidechannel functionality was a request in the schnorrsig module PR. The use case is to prevent a signing device from exfiltrating the secret signing keys through biased signature nonces, for example after a bad firmware update. It uses sign-to-contract commitments to host supplied randomness which forces the signer to randomize the nonce.\r\n\r\nIn order to add more sign-to-contract commitments the host can create a merkle tree of data to be committed and randomness and send that to the signing device as \"host randomness\". \r\n\r\nSee https://github.com/bitcoin-core/secp256k1/pull/572/files#diff-b19c5ee427283d4d82bc5beb4e2f4777R59 for the workflow.",
    "labels": [],
    "created_at": "2018-11-01T16:00:18Z",
    "updated_at": "2019-07-03T13:00:25Z",
    "closed_at": "2019-07-03T13:00:25Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "5ad46c23f675f63aba8c8b831835726a2a8163b1",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jonasnick:schnorrsig-s2c",
      "ref": "schnorrsig-s2c",
      "sha": "bcfc256f0b856001d1a84cf3706d12daaa4d723a",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 57937974,
        "node_id": "MDEwOlJlcG9zaXRvcnk1NzkzNzk3NA==",
        "name": "secp256k1",
        "full_name": "jonasnick/secp256k1",
        "owner": {
          "login": "jonasnick",
          "id": 2582071,
          "node_id": "MDQ6VXNlcjI1ODIwNzE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasnick",
          "html_url": "https://github.com/jonasnick",
          "followers_url": "https://api.github.com/users/jonasnick/followers",
          "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasnick/orgs",
          "repos_url": "https://api.github.com/users/jonasnick/repos",
          "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasnick/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasnick/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/jonasnick/secp256k1",
        "archive_url": "https://api.github.com/repos/jonasnick/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasnick/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasnick/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasnick/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasnick/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasnick/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasnick/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasnick/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasnick/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/jonasnick/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/jonasnick/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/jonasnick/secp256k1/events",
        "forks_url": "https://api.github.com/repos/jonasnick/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/jonasnick/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasnick/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasnick/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasnick/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasnick/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasnick/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasnick/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/jonasnick/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/jonasnick/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasnick/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasnick/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasnick/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasnick/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/jonasnick/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasnick/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasnick/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasnick/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/jonasnick/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/jonasnick/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/jonasnick/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasnick/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/jonasnick/secp256k1/hooks",
        "svn_url": "https://github.com/jonasnick/secp256k1",
        "language": "C",
        "forks_count": 4,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 11430,
        "default_branch": "master",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-24T13:49:16Z",
        "created_at": "2016-05-03T03:14:21Z",
        "updated_at": "2023-03-16T11:44:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "e34ceb333b1c0e6f4115ecbb80c632ac1042fa49",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 948,
        "stargazers_count": 1768,
        "watchers_count": 1768,
        "size": 10062,
        "default_branch": "master",
        "open_issues_count": 142,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-12T16:38:48Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-06-12T17:38:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/572"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 2343,
    "deletions": 15,
    "changed_files": 18,
    "commits": 7,
    "review_comments": 2,
    "comments": 3
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 1941189831,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk0MTE4OTgzMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/1941189831",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-01T18:07:38Z"
    },
    {
      "event": "commented",
      "id": 435132294,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTEzMjI5NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/435132294",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-01T18:08:07Z",
      "updated_at": "2018-11-01T18:08:07Z",
      "author_association": "MEMBER",
      "body": "rebased on #558 ",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/572#issuecomment-435132294",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/572"
    },
    {
      "event": "reviewed",
      "id": 183693687,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgzNjkzNjg3",
      "url": null,
      "actor": null,
      "commit_id": "a75765668a6f0363155a95f6f319dab221efb253",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/572#pullrequestreview-183693687",
      "submitted_at": "2018-12-11T14:14:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/572"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6ZjQxNTNhMjlhYmFiOWJmODcxMDc4NDZmMTI1YzRmNjc5NTg3OWNhZQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/f4153a29abab9bf87107846f125c4f6795879cae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/f4153a29abab9bf87107846f125c4f6795879cae",
      "tree": {
        "sha": "0e10baa1ecbab9f3be113f08ab7d862cecf157d4",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/0e10baa1ecbab9f3be113f08ab7d862cecf157d4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/1086fda4c1975d0cad8d3cad96794a64ec12dca4",
          "sha": "1086fda4c1975d0cad8d3cad96794a64ec12dca4",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/1086fda4c1975d0cad8d3cad96794a64ec12dca4"
        }
      ],
      "message": "add chacha20 function",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-01-29T10:17:36Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2018-04-03T22:06:07Z"
      },
      "sha": "f4153a29abab9bf87107846f125c4f6795879cae"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6ZDY1YWRjODJmOGU3YmEwYWI0YWE3MjMxMDU4MmUxZWQ3N2NhYjE3MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d65adc82f8e7ba0ab4aa72310582e1ed77cab171",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d65adc82f8e7ba0ab4aa72310582e1ed77cab171",
      "tree": {
        "sha": "0b6f4753822601c2f4c12e01765bcd39c0843dd3",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/0b6f4753822601c2f4c12e01765bcd39c0843dd3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/f4153a29abab9bf87107846f125c4f6795879cae",
          "sha": "f4153a29abab9bf87107846f125c4f6795879cae",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/f4153a29abab9bf87107846f125c4f6795879cae"
        }
      ],
      "message": "Add schnorrsig module which implements BIP-schnorr [0] compatible signing, verification and batch verification.\n\n[0] https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr.mediawiki",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-01-29T10:17:39Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2018-05-09T15:37:35Z"
      },
      "sha": "d65adc82f8e7ba0ab4aa72310582e1ed77cab171"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6MzlmZTc5MGI4OWM2NjRiYTJmMGNiOWQ5NTM4OTVhNDM0MWYyNTExMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/39fe790b89c664ba2f0cb9d953895a4341f25111",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/39fe790b89c664ba2f0cb9d953895a4341f25111",
      "tree": {
        "sha": "aba67a858a1895388cd2dd30f41dc9ab23edc1ba",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/aba67a858a1895388cd2dd30f41dc9ab23edc1ba"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d65adc82f8e7ba0ab4aa72310582e1ed77cab171",
          "sha": "d65adc82f8e7ba0ab4aa72310582e1ed77cab171",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d65adc82f8e7ba0ab4aa72310582e1ed77cab171"
        }
      ],
      "message": "Add secp256k1_context argument to secp256k1_nonce_functions",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-01-29T22:06:10Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2018-10-16T16:07:56Z"
      },
      "sha": "39fe790b89c664ba2f0cb9d953895a4341f25111"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6NzIzNDJkNGZlYzg2MmZmNGQzNTVkOTQ0OTMwOWU5MzI1NDAxZjU5OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/72342d4fec862ff4d355d9449309e9325401f599",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/72342d4fec862ff4d355d9449309e9325401f599",
      "tree": {
        "sha": "14520048e0a6fb6f653614f677344dbe53593dee",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/14520048e0a6fb6f653614f677344dbe53593dee"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/39fe790b89c664ba2f0cb9d953895a4341f25111",
          "sha": "39fe790b89c664ba2f0cb9d953895a4341f25111",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/39fe790b89c664ba2f0cb9d953895a4341f25111"
        }
      ],
      "message": "Add ec_commitments which are essentially the pay-to-contract-style tweaks of public keys.\nThe functionality is not exposed.",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-01-29T22:06:12Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2018-11-01T10:31:24Z"
      },
      "sha": "72342d4fec862ff4d355d9449309e9325401f599"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6NjczZDBlMzVhMGE4Mjg5YjU5NjVlN2FhOTQ2MTZlNTA1YmM0NmM5OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/673d0e35a0a8289b5965e7aa94616e505bc46c98",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/673d0e35a0a8289b5965e7aa94616e505bc46c98",
      "tree": {
        "sha": "6d2ec8ecbff64bbbed00fd08f192bc7649926fcd",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/6d2ec8ecbff64bbbed00fd08f192bc7649926fcd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/72342d4fec862ff4d355d9449309e9325401f599",
          "sha": "72342d4fec862ff4d355d9449309e9325401f599",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/72342d4fec862ff4d355d9449309e9325401f599"
        }
      ],
      "message": "Add and expose sign-to-contract contexts and make nonce_function_bipschnorr do sign-to-contract commitments if an s2c context is provided as nonce data",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-01-29T22:06:14Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2018-11-01T10:31:47Z"
      },
      "sha": "673d0e35a0a8289b5965e7aa94616e505bc46c98"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6MzBjMWQ3MTMxMTM5ZmRlM2VkZDhmOGY1ZTQwNDExMzhjNGRlZTU1Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/30c1d7131139fde3edd8f8f5e4041138c4dee557",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/30c1d7131139fde3edd8f8f5e4041138c4dee557",
      "tree": {
        "sha": "ea354d47153bb7b61bc3d436bc2c5c8ca01bae55",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/ea354d47153bb7b61bc3d436bc2c5c8ca01bae55"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/673d0e35a0a8289b5965e7aa94616e505bc46c98",
          "sha": "673d0e35a0a8289b5965e7aa94616e505bc46c98",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/673d0e35a0a8289b5965e7aa94616e505bc46c98"
        }
      ],
      "message": "Add verification of schnorrsig sign-to-contract commitments",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-01-29T22:06:15Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-01-29T13:52:56Z"
      },
      "sha": "30c1d7131139fde3edd8f8f5e4041138c4dee557"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6YmNmYzI1NmYwYjg1NjAwMWQxYTg0Y2YzNzA2ZDEyZGFhYTRkNzIzYQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/bcfc256f0b856001d1a84cf3706d12daaa4d723a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/bcfc256f0b856001d1a84cf3706d12daaa4d723a",
      "tree": {
        "sha": "ff83a34d8e4538820928317bcfb262f5c800be13",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/ff83a34d8e4538820928317bcfb262f5c800be13"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/30c1d7131139fde3edd8f8f5e4041138c4dee557",
          "sha": "30c1d7131139fde3edd8f8f5e4041138c4dee557",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/30c1d7131139fde3edd8f8f5e4041138c4dee557"
        }
      ],
      "message": "Add anti nonce sidechannel protocol for schnorrsigs using nonce_function_bipschnorr",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-01-29T22:21:24Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-01-29T13:58:27Z"
      },
      "sha": "bcfc256f0b856001d1a84cf3706d12daaa4d723a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2105014249,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwNTAxNDI0OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2105014249",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T22:22:30Z"
    },
    {
      "event": "renamed",
      "id": 2105015753,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjEwNTAxNTc1Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2105015753",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T22:23:13Z",
      "rename": {
        "from": "Add sign-to-contract and an anti nonce-sidechannel protocol to schnorrsigs",
        "to": "Add anti nonce-sidechannel protocol to schnorrsigs"
      }
    },
    {
      "event": "commented",
      "id": 458732545,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODczMjU0NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/458732545",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T22:26:39Z",
      "updated_at": "2019-01-29T22:26:39Z",
      "author_association": "MEMBER",
      "body": "The sign-to-contract functionality is not split off into new PR #588.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/572#issuecomment-458732545",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/572"
    },
    {
      "event": "commented",
      "id": 508082800,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwODA4MjgwMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/508082800",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-03T13:00:23Z",
      "updated_at": "2019-07-03T13:00:23Z",
      "author_association": "MEMBER",
      "body": "Closing in favor of #590",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/572#issuecomment-508082800",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/572"
    },
    {
      "event": "closed",
      "id": 2457492627,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjQ1NzQ5MjYyNw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2457492627",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-03T13:00:25Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/240623745",
      "pull_request_review_id": 183693687,
      "id": 240623745,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDYyMzc0NQ==",
      "diff_hunk": "@@ -0,0 +1,210 @@\n+#ifndef SECP256K1_SCHNORRSIG_H\n+#define SECP256K1_SCHNORRSIG_H\n+\n+/** This module implements a variant of Schnorr signatures compliant with\n+ * BIP-schnorr\n+ * (https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr.mediawiki).\n+ */\n+\n+/** Opaque data structure that holds a parsed Schnorr signature.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is\n+ *  however guaranteed to be 64 bytes in size, and can be safely copied/moved.\n+ *  If you need to convert to a format suitable for storage, transmission, or\n+ *  comparison, use the `secp256k1_schnorrsig_serialize` and\n+ *  `secp256k1_schnorrsig_parse` functions.\n+ */\n+typedef struct {\n+    unsigned char data[64];\n+} secp256k1_schnorrsig;\n+\n+/** Serialize a Schnorr signature.\n+ *\n+ *  Returns: 1\n+ *  Args:    ctx: a secp256k1 context object\n+ *  Out:   out64: pointer to a 64-byte array to store the serialized signature\n+ *  In:      sig: pointer to the signature\n+ *\n+ *  See secp256k1_schnorrsig_parse for details about the encoding.\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_serialize(\n+    const secp256k1_context* ctx,\n+    unsigned char *out64,\n+    const secp256k1_schnorrsig* sig\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Parse a Schnorr signature.\n+ *\n+ *  Returns: 1 when the signature could be parsed, 0 otherwise.\n+ *  Args:    ctx: a secp256k1 context object\n+ *  Out:     sig: pointer to a signature object\n+ *  In:     in64: pointer to the 64-byte signature to be parsed\n+ *\n+ * The signature is serialized in the form R||s, where R is a 32-byte public\n+ * key (x-coordinate only; the y-coordinate is considered to be the unique\n+ * y-coordinate satisfying the curve equation that is a quadratic residue)\n+ * and s is a 32-byte big-endian scalar.\n+ *\n+ * After the call, sig will always be initialized. If parsing failed or the\n+ * encoded numbers are out of range, signature validation with it is\n+ * guaranteed to fail for every message and public key.\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_parse(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig* sig,\n+    const unsigned char *in64\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Anti Nonce Sidechannel Protocol\n+ *\n+ *  The next functions can be used to prevent a signing device from exfiltrating the secret signing\n+ *  keys through biased signature nonces. The general idea is that a host provides additional\n+ *  randomness to the signing device client and the client commits to the randomness in the nonce\n+ *  using sign-to-contract.\n+ *  In order to make the randomness unpredictable, the host and client must engage in a\n+ *  commit-reveal protocol as follows:\n+ *  1. The host draws the randomness, commits to it with the anti_nonce_sidechan_host_commit\n+ *     function and sends the commitment to the client.\n+ *  2. The client commits to its sign-to-contract original nonce (which is the nonce without the\n+ *     sign-to-contract tweak) using the hosts commitment by calling the\n+ *     secp256k1_schnorrsig_anti_nonce_sidechan_client_commit function. The client gets the original\n+ *     nonce of the sign-to-contract commitment using secp256k1_s2c_commit_get_original_nonce and\n+ *     sends it to the host.\n+ *  3. The host replies with the randomness generated in step 1.\n+ *  4. The client uses anti_nonce_sidechan_client_setrand to check that the hosts commitment opens\n+ *     to the provided randomness. If not, it waits until the host sends the correct randomness or\n+ *     the protocol restarts. If the randomness matches the commitment, the client signs with the\n+ *     nonce_function_bipschnorr using the s2c context as nonce data and sends the signature and\n+ *     negated nonce flag to the host.\n+ *  5. The host checks that the signature contains an sign-to-contract commitment to the randomness\n+ *     by calling verify_s2c_commit with the original nonce received in step 2 and the signature and\n+ *     negated nonce flag received in step 4. If verification does not succeed, it waits until the\n+ *     client sends a signature with a correct commitment or the protocol is restarted.\n+ */\n+\n+/** Create a randomness commitment on the host as part of the Anti Nonce Sidechannel Protocol.\n+ *\n+ *  Returns 1 on success, 0 on failure.\n+ *  Args:              ctx: pointer to a context object (cannot be NULL)\n+ *  Out: rand_commitment32: pointer to 32-byte array to store the returned commitment (cannot be NULL)\n+ *  In:             rand32: the 32-byte randomness to commit to (cannot be NULL)\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_anti_nonce_sidechan_host_commit(\n+    secp256k1_context *ctx,\n+    unsigned char *rand_commitment32,\n+    const unsigned char *rand32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Compute commitment on the client as part of the Anti Nonce Sidechannel Protocol.\n+ *\n+ *  Returns 1 on success, 0 on failure.\n+ *  Args:           ctx: pointer to a context object (cannot be NULL)\n+ *  Out:        s2c_ctx: pointer to an s2c context where the opening will be placed (cannot be NULL)\n+ *  In:           msg32: the 32-byte message hash to be signed (cannot be NULL)\n+ *             seckey32: the 32-byte secret key used for signing (cannot be NULL)\n+ *    rand_commitment32: the 32-byte randomness commitment from the host (cannot be NULL)\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_anti_nonce_sidechan_client_commit(\n+    secp256k1_context *ctx,\n+    secp256k1_s2c_commit_context *s2c_ctx,\n+    const unsigned char *msg32,\n+    const unsigned char *seckey32,\n+    const unsigned char *rand_commitment32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4) SECP256K1_ARG_NONNULL(5);\n+\n+/** Set host randomness on the client as part of the Anti Nonce Sidechannel Protocol.\n+ *\n+ *  Returns:    1: given randomness matches randomness commitment stored in s2c_ctx\n+ *              0: failure\n+ *  Args:     ctx: pointer to a context object (cannot be NULL)\n+ *  Out:  s2c_ctx: pointer to an s2c context where the randomness will be stored (cannot be NULL)\n+ *  In:    rand32: 32-byte randomness matching the previously received commitment (cannot be NULL)\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_anti_nonce_sidechan_client_setrand(\n+    secp256k1_context *ctx,\n+    secp256k1_s2c_commit_context *s2c_ctx,\n+    const unsigned char *rand32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Create a Schnorr signature.\n+ *\n+ * Returns 1 on success, 0 on failure.\n+ *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n+ *  Out:     sig: pointer to the returned signature (cannot be NULL)\n+ *      negated_nonce: a pointer to an integer indicates if signing algorithm negated the\n+ *                nonce (can be NULL)\n+ *  In:    msg32: the 32-byte message hash being signed (cannot be NULL)\n+ *        seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bipschnorr is used\n+ *         ndata: pointer to arbitrary data used by the nonce generation function. If non-NULL must\n+ *                be a pointer to a s2c_context object when using the default nonce function\n+ *                secp256k1_nonce_function_bipschnorr (can be NULL)\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_sign(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig *sig,\n+    int *negated_nonce,\n+    const unsigned char *msg32,\n+    const unsigned char *seckey,\n+    secp256k1_nonce_function noncefp,\n+    void *ndata\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(4) SECP256K1_ARG_NONNULL(5);\n+\n+/** Verify a Schnorr signature.\n+ *\n+ *  Returns: 1: correct signature\n+ *           0: incorrect or unparseable signature\n+ *  Args:    ctx: a secp256k1 context object, initialized for verification.\n+ *  In:      sig: the signature being verified (cannot be NULL)\n+ *         msg32: the 32-byte message hash being verified (cannot be NULL)\n+ *        pubkey: pointer to a public key to verify with (cannot be NULL)\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_schnorrsig_verify(\n+    const secp256k1_context* ctx,\n+    const secp256k1_schnorrsig *sig,\n+    const unsigned char *msg32,\n+    const secp256k1_pubkey *pubkey\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Verifies a set of Schnorr signatures.\n+ *\n+ * Returns 1 if all succeeded, 0 otherwise. In particular, returns 1 if n_sigs is 0.\n+ *\n+ *  Args:    ctx: a secp256k1 context object, initialized for verification.\n+ *       scratch: scratch space used for the multiexponentiation\n+ *  In:      sig: array of signatures, or NULL if there are no signatures\n+ *         msg32: array of messages, or NULL if there are no signatures\n+ *            pk: array of public keys, or NULL if there are no signatures\n+ *        n_sigs: number of signatures in above arrays. Must be smaller than\n+ *                2^31 and smaller than half the maximum size_t value. Must be 0\n+ *                if above arrays are NULL.\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_schnorrsig_verify_batch(\n+    const secp256k1_context* ctx,\n+    secp256k1_scratch_space *scratch,\n+    const secp256k1_schnorrsig *const *sig,\n+    const unsigned char *const *msg32,\n+    const secp256k1_pubkey *const *pk,\n+    size_t n_sigs\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2);\n+\n+/** Verify a sign-to-contract commitment.\n+ *\n+ *  Returns: 1: the signature contains a commitment to data32\n+ *           0: incorrect opening\n+ *  Args:    ctx: a secp256k1 context object, initialized for verification.\n+ *  In:      sig: the signature containing the sign-to-contract commitment (cannot be NULL)\n+ *        data32: the 32-byte data that was committed to (cannot be NULL)\n+ *       original_nonce: pointer to the original_nonce created when signing (cannot be NULL)\n+ * negated_nonce: integer indicating if signing algorithm negated the nonce (can be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 200,
      "commit_id": "bcfc256f0b856001d1a84cf3706d12daaa4d723a",
      "original_commit_id": "a75765668a6f0363155a95f6f319dab221efb253",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">(can be NULL)\r\n\r\nNah\r\n\r\nAlso specify what the integer must be to be considered true/false",
      "created_at": "2018-12-11T14:09:57Z",
      "updated_at": "2019-01-29T22:22:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/572#discussion_r240623745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/240623745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/572"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/252044064",
      "pull_request_review_id": 197817158,
      "id": 252044064,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjA0NDA2NA==",
      "diff_hunk": "@@ -0,0 +1,210 @@\n+#ifndef SECP256K1_SCHNORRSIG_H\n+#define SECP256K1_SCHNORRSIG_H\n+\n+/** This module implements a variant of Schnorr signatures compliant with\n+ * BIP-schnorr\n+ * (https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr.mediawiki).\n+ */\n+\n+/** Opaque data structure that holds a parsed Schnorr signature.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is\n+ *  however guaranteed to be 64 bytes in size, and can be safely copied/moved.\n+ *  If you need to convert to a format suitable for storage, transmission, or\n+ *  comparison, use the `secp256k1_schnorrsig_serialize` and\n+ *  `secp256k1_schnorrsig_parse` functions.\n+ */\n+typedef struct {\n+    unsigned char data[64];\n+} secp256k1_schnorrsig;\n+\n+/** Serialize a Schnorr signature.\n+ *\n+ *  Returns: 1\n+ *  Args:    ctx: a secp256k1 context object\n+ *  Out:   out64: pointer to a 64-byte array to store the serialized signature\n+ *  In:      sig: pointer to the signature\n+ *\n+ *  See secp256k1_schnorrsig_parse for details about the encoding.\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_serialize(\n+    const secp256k1_context* ctx,\n+    unsigned char *out64,\n+    const secp256k1_schnorrsig* sig\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Parse a Schnorr signature.\n+ *\n+ *  Returns: 1 when the signature could be parsed, 0 otherwise.\n+ *  Args:    ctx: a secp256k1 context object\n+ *  Out:     sig: pointer to a signature object\n+ *  In:     in64: pointer to the 64-byte signature to be parsed\n+ *\n+ * The signature is serialized in the form R||s, where R is a 32-byte public\n+ * key (x-coordinate only; the y-coordinate is considered to be the unique\n+ * y-coordinate satisfying the curve equation that is a quadratic residue)\n+ * and s is a 32-byte big-endian scalar.\n+ *\n+ * After the call, sig will always be initialized. If parsing failed or the\n+ * encoded numbers are out of range, signature validation with it is\n+ * guaranteed to fail for every message and public key.\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_parse(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig* sig,\n+    const unsigned char *in64\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Anti Nonce Sidechannel Protocol\n+ *\n+ *  The next functions can be used to prevent a signing device from exfiltrating the secret signing\n+ *  keys through biased signature nonces. The general idea is that a host provides additional\n+ *  randomness to the signing device client and the client commits to the randomness in the nonce\n+ *  using sign-to-contract.\n+ *  In order to make the randomness unpredictable, the host and client must engage in a\n+ *  commit-reveal protocol as follows:\n+ *  1. The host draws the randomness, commits to it with the anti_nonce_sidechan_host_commit\n+ *     function and sends the commitment to the client.\n+ *  2. The client commits to its sign-to-contract original nonce (which is the nonce without the\n+ *     sign-to-contract tweak) using the hosts commitment by calling the\n+ *     secp256k1_schnorrsig_anti_nonce_sidechan_client_commit function. The client gets the original\n+ *     nonce of the sign-to-contract commitment using secp256k1_s2c_commit_get_original_nonce and\n+ *     sends it to the host.\n+ *  3. The host replies with the randomness generated in step 1.\n+ *  4. The client uses anti_nonce_sidechan_client_setrand to check that the hosts commitment opens\n+ *     to the provided randomness. If not, it waits until the host sends the correct randomness or\n+ *     the protocol restarts. If the randomness matches the commitment, the client signs with the\n+ *     nonce_function_bipschnorr using the s2c context as nonce data and sends the signature and\n+ *     negated nonce flag to the host.\n+ *  5. The host checks that the signature contains an sign-to-contract commitment to the randomness\n+ *     by calling verify_s2c_commit with the original nonce received in step 2 and the signature and\n+ *     negated nonce flag received in step 4. If verification does not succeed, it waits until the\n+ *     client sends a signature with a correct commitment or the protocol is restarted.\n+ */\n+\n+/** Create a randomness commitment on the host as part of the Anti Nonce Sidechannel Protocol.\n+ *\n+ *  Returns 1 on success, 0 on failure.\n+ *  Args:              ctx: pointer to a context object (cannot be NULL)\n+ *  Out: rand_commitment32: pointer to 32-byte array to store the returned commitment (cannot be NULL)\n+ *  In:             rand32: the 32-byte randomness to commit to (cannot be NULL)\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_anti_nonce_sidechan_host_commit(\n+    secp256k1_context *ctx,\n+    unsigned char *rand_commitment32,\n+    const unsigned char *rand32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Compute commitment on the client as part of the Anti Nonce Sidechannel Protocol.\n+ *\n+ *  Returns 1 on success, 0 on failure.\n+ *  Args:           ctx: pointer to a context object (cannot be NULL)\n+ *  Out:        s2c_ctx: pointer to an s2c context where the opening will be placed (cannot be NULL)\n+ *  In:           msg32: the 32-byte message hash to be signed (cannot be NULL)\n+ *             seckey32: the 32-byte secret key used for signing (cannot be NULL)\n+ *    rand_commitment32: the 32-byte randomness commitment from the host (cannot be NULL)\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_anti_nonce_sidechan_client_commit(\n+    secp256k1_context *ctx,\n+    secp256k1_s2c_commit_context *s2c_ctx,\n+    const unsigned char *msg32,\n+    const unsigned char *seckey32,\n+    const unsigned char *rand_commitment32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4) SECP256K1_ARG_NONNULL(5);\n+\n+/** Set host randomness on the client as part of the Anti Nonce Sidechannel Protocol.\n+ *\n+ *  Returns:    1: given randomness matches randomness commitment stored in s2c_ctx\n+ *              0: failure\n+ *  Args:     ctx: pointer to a context object (cannot be NULL)\n+ *  Out:  s2c_ctx: pointer to an s2c context where the randomness will be stored (cannot be NULL)\n+ *  In:    rand32: 32-byte randomness matching the previously received commitment (cannot be NULL)\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_anti_nonce_sidechan_client_setrand(\n+    secp256k1_context *ctx,\n+    secp256k1_s2c_commit_context *s2c_ctx,\n+    const unsigned char *rand32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Create a Schnorr signature.\n+ *\n+ * Returns 1 on success, 0 on failure.\n+ *  Args:    ctx: pointer to a context object, initialized for signing (cannot be NULL)\n+ *  Out:     sig: pointer to the returned signature (cannot be NULL)\n+ *      negated_nonce: a pointer to an integer indicates if signing algorithm negated the\n+ *                nonce (can be NULL)\n+ *  In:    msg32: the 32-byte message hash being signed (cannot be NULL)\n+ *        seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *       noncefp: pointer to a nonce generation function. If NULL, secp256k1_nonce_function_bipschnorr is used\n+ *         ndata: pointer to arbitrary data used by the nonce generation function. If non-NULL must\n+ *                be a pointer to a s2c_context object when using the default nonce function\n+ *                secp256k1_nonce_function_bipschnorr (can be NULL)\n+ */\n+SECP256K1_API int secp256k1_schnorrsig_sign(\n+    const secp256k1_context* ctx,\n+    secp256k1_schnorrsig *sig,\n+    int *negated_nonce,\n+    const unsigned char *msg32,\n+    const unsigned char *seckey,\n+    secp256k1_nonce_function noncefp,\n+    void *ndata\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(4) SECP256K1_ARG_NONNULL(5);\n+\n+/** Verify a Schnorr signature.\n+ *\n+ *  Returns: 1: correct signature\n+ *           0: incorrect or unparseable signature\n+ *  Args:    ctx: a secp256k1 context object, initialized for verification.\n+ *  In:      sig: the signature being verified (cannot be NULL)\n+ *         msg32: the 32-byte message hash being verified (cannot be NULL)\n+ *        pubkey: pointer to a public key to verify with (cannot be NULL)\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_schnorrsig_verify(\n+    const secp256k1_context* ctx,\n+    const secp256k1_schnorrsig *sig,\n+    const unsigned char *msg32,\n+    const secp256k1_pubkey *pubkey\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Verifies a set of Schnorr signatures.\n+ *\n+ * Returns 1 if all succeeded, 0 otherwise. In particular, returns 1 if n_sigs is 0.\n+ *\n+ *  Args:    ctx: a secp256k1 context object, initialized for verification.\n+ *       scratch: scratch space used for the multiexponentiation\n+ *  In:      sig: array of signatures, or NULL if there are no signatures\n+ *         msg32: array of messages, or NULL if there are no signatures\n+ *            pk: array of public keys, or NULL if there are no signatures\n+ *        n_sigs: number of signatures in above arrays. Must be smaller than\n+ *                2^31 and smaller than half the maximum size_t value. Must be 0\n+ *                if above arrays are NULL.\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_schnorrsig_verify_batch(\n+    const secp256k1_context* ctx,\n+    secp256k1_scratch_space *scratch,\n+    const secp256k1_schnorrsig *const *sig,\n+    const unsigned char *const *msg32,\n+    const secp256k1_pubkey *const *pk,\n+    size_t n_sigs\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2);\n+\n+/** Verify a sign-to-contract commitment.\n+ *\n+ *  Returns: 1: the signature contains a commitment to data32\n+ *           0: incorrect opening\n+ *  Args:    ctx: a secp256k1 context object, initialized for verification.\n+ *  In:      sig: the signature containing the sign-to-contract commitment (cannot be NULL)\n+ *        data32: the 32-byte data that was committed to (cannot be NULL)\n+ *       original_nonce: pointer to the original_nonce created when signing (cannot be NULL)\n+ * negated_nonce: integer indicating if signing algorithm negated the nonce (can be NULL)",
      "path": "include/secp256k1_schnorrsig.h",
      "position": null,
      "original_position": 200,
      "commit_id": "bcfc256f0b856001d1a84cf3706d12daaa4d723a",
      "original_commit_id": "a75765668a6f0363155a95f6f319dab221efb253",
      "in_reply_to_id": 240623745,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-01-29T22:25:55Z",
      "updated_at": "2019-01-29T22:25:55Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/572#discussion_r252044064",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/252044064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/572"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    }
  ]
}