{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734",
    "id": 2800197744,
    "node_id": "PR_kwDOAP4Jqs6m56Bw",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1734.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1734.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/726e70b899f370e26990d74dfbdde1d6df5ddd11",
    "number": 1734,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Introduce (mini) unit test framework",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Early Note:\r\nDon’t be scared by the PR’s line changes count — most of it’s just doc or part of the test framework API.\r\n\r\nContext:\r\nCurrently, all tests run single-threaded sequentially and the library lacks the ability to specify which test (or group of tests) you would like to run. This is not only inconvenient as more tests are added but also time consuming during development and affects downstream projects that may want to parallelize the workload (such as Bitcoin-Core CI).\r\n\r\nPR Goal:\r\nIntroduce a lightweight, extensible C89 unit test framework with no dynamic memory allocations, providing a structured way to register, execute, and report tests. The framework supports named command-line arguments in `-key=value` form, parallel test execution across multiple worker processes, granular test selection (selecting tests either by name or by module name), and time accumulation reports.\r\n\r\nThe introduced framework supports:\r\n* `-help` or `-h`: display list of available commands along with their descriptions.\r\n* `-jobs=<num>`: distribute tests across multiple worker processes (default: sequential if 0).\r\n* `-target=<name>` or `-t=<name>`: run only specific tests by name; can be repeated to select multiple tests.\r\n*  `-target=<module name>`, `-t=<module>`  Run all tests within a specific module (can be provided multiple times)\r\n* `-seed=<hex>`: set a specific RNG seed (defaults to random if unspecified).\r\n* `-iter=<n>`: specify the number of iterations.\r\n* `-print_tests`:   display list of available tests and modules you can run.\r\n* `-log=<0|1>`: enable or disable test execution logging (default: 0 = disabled).\r\n\r\nBeyond these features, the idea is to also make future developments smoother, as adding new tests require only a single entry in the central test registry, and new command-line options can be introduced easily by extending the framework’s `parse_arg()` function.\r\n\r\nCompatibility Note:\r\nThe framework continues accepting the two positional arguments previously supported (iterations and seed), ensuring existing workflows remain intact.\r\n\r\nTesting Notes:\r\nHave fun. You can quickly try it through `./tests -j=<workers_num>` for parallel execution  or `./tests -t=<test_name>` to run a specific test (call `./tests -print_tests` to display all available tests and modules).\r\n\r\nExtra Note:\r\nI haven't checked the exhaustive tests file so far, but I will soon. For now, this only runs all tests declared in the `tests` binary.\r\n\r\nTesting Results: (Current master branch vs PR in seconds)\r\n\r\n* Raspberry Pi 5: master \\~100 s → PR \\~38 s (5 jobs)\r\n* MacBook Pro M1: master \\~30 s → PR \\~10 s (6 jobs)\r\n",
    "labels": [
      {
        "id": 165017692,
        "node_id": "MDU6TGFiZWwxNjUwMTc2OTI=",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/assurance",
        "name": "assurance",
        "description": "",
        "color": "A6DF3D",
        "default": false
      },
      {
        "id": 4975353639,
        "node_id": "LA_kwDOAP4Jqs8AAAABKI3fJw",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/feature",
        "name": "feature",
        "description": "",
        "color": "731E95",
        "default": false
      }
    ],
    "created_at": "2025-09-04T17:12:36Z",
    "updated_at": "2025-09-14T13:39:46Z",
    "mergeable": true,
    "mergeable_state": "unstable",
    "merged": false,
    "merge_commit_sha": "0919a81f2bb0c23489b92ecae3c0c63c9197188a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "furszy:2025_unit_test_framework",
      "ref": "2025_unit_test_framework",
      "sha": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1049838831,
        "node_id": "R_kgDOPpNE7w",
        "name": "secp256k1",
        "full_name": "furszy/secp256k1",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/furszy/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/secp256k1",
        "archive_url": "https://api.github.com/repos/furszy/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/furszy/secp256k1/events",
        "forks_url": "https://api.github.com/repos/furszy/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/furszy/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/furszy/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/furszy/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/furszy/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/furszy/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/furszy/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/furszy/secp256k1/hooks",
        "svn_url": "https://github.com/furszy/secp256k1",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 12773,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-14T13:34:57Z",
        "created_at": "2025-09-03T15:10:42Z",
        "updated_at": "2025-09-03T15:10:42Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "88be4e8d86773dd6882d32ad0a6cd8892b31eacd",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 1087,
        "stargazers_count": 2299,
        "watchers_count": 2299,
        "size": 12715,
        "default_branch": "master",
        "open_issues_count": 156,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-12T11:01:06Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2025-09-13T06:55:19Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 842,
    "deletions": 238,
    "changed_files": 14,
    "commits": 7,
    "review_comments": 34,
    "comments": 18
  },
  "events": [
    {
      "event": "renamed",
      "id": 19510084729,
      "node_id": "RTE_lADOAP4Jqs7JvTsvzwAAAASK5ER5",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19510084729",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T17:16:26Z",
      "rename": {
        "from": "Introduce (mini) unit test framework",
        "to": "WIP: Introduce (mini) unit test framework"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19511434329,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASK-NxZ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19511434329",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "303ac0bff947922001c6f0757678d2384aab37cd",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/303ac0bff947922001c6f0757678d2384aab37cd",
      "created_at": "2025-09-04T18:13:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19511858684,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASK_1X8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19511858684",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1af6e6c18de603f24611cf7b94de2a29282547cc",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/1af6e6c18de603f24611cf7b94de2a29282547cc",
      "created_at": "2025-09-04T18:31:21Z"
    },
    {
      "event": "unsubscribed",
      "id": 19511884332,
      "node_id": "UE_lADOAP4Jqs7JvTsvzwAAAASK_7os",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19511884332",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T18:32:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19512159238,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASLA-wG",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19512159238",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bd0b00199973b74ac677801ab08d5e0601206d64",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/bd0b00199973b74ac677801ab08d5e0601206d64",
      "created_at": "2025-09-04T18:44:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19514688196,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASLKoLE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19514688196",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "16822f51a6585d19aa67424bd0fae9f0a10f8a3b",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/16822f51a6585d19aa67424bd0fae9f0a10f8a3b",
      "created_at": "2025-09-04T20:37:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19519845184,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASLeTNA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19519845184",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5fcb69c5f126d321b3202ccea5a5a1056e00d690",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/5fcb69c5f126d321b3202ccea5a5a1056e00d690",
      "created_at": "2025-09-05T01:05:10Z"
    },
    {
      "event": "connected",
      "id": 19522648755,
      "node_id": "COE_lADOAP4Jqs7JvTsvzwAAAASLo_qz",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19522648755",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-05T06:28:32Z"
    },
    {
      "event": "labeled",
      "id": 19522691256,
      "node_id": "LE_lADOAP4Jqs7JvTsvzwAAAASLpKC4",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19522691256",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-05T06:32:18Z",
      "label": {
        "name": "assurance",
        "color": "A6DF3D"
      }
    },
    {
      "event": "labeled",
      "id": 19522691264,
      "node_id": "LE_lADOAP4Jqs7JvTsvzwAAAASLpKDA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19522691264",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-05T06:32:18Z",
      "label": {
        "name": "feature",
        "color": "731E95"
      }
    },
    {
      "event": "commented",
      "id": 3257234819,
      "node_id": "IC_kwDOAP4Jqs7CJXWD",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3257234819",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-05T06:36:15Z",
      "updated_at": "2025-09-05T06:36:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nice!\r\n\r\nI looked at existing unit test frameworks in the past, but nothing seemed appropriate for us. There are not that many for C, and they were either overkill or too simple (just handful of ifdefs) so they didn't add any functionality. I thought writing our own is too annoying (or I was just lazy). But the framework is ~300 lines, that seems fine to me.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3257234819",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "reviewed",
      "id": 3188181909,
      "node_id": "PRR_kwDOAP4Jqs6-B8uV",
      "url": null,
      "actor": null,
      "commit_id": "8a3b9d3141ba66bf5a759854abbaa2257cf56c30",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-05T06:40:28Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3188181909",
      "submitted_at": "2025-09-05T06:40:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "commented",
      "id": 3257536001,
      "node_id": "IC_kwDOAP4Jqs7CKg4B",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3257536001",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-05T08:34:43Z",
      "updated_at": "2025-09-05T08:34:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "see also #1211 ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3257536001",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19533049594,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASMQq76",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19533049594",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b1de6412f4c856d37f65cd4fce16384122ff6ed3",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/b1de6412f4c856d37f65cd4fce16384122ff6ed3",
      "created_at": "2025-09-05T17:13:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19534163919,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASMU6_P",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19534163919",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7b184a171b67b1bab86b1f583c1c0f944a6f8e2f",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/7b184a171b67b1bab86b1f583c1c0f944a6f8e2f",
      "created_at": "2025-09-05T18:36:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19538780770,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASMmiJi",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19538780770",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fdffb0fbfe4abad19264a19e302757b1e12e0687",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/fdffb0fbfe4abad19264a19e302757b1e12e0687",
      "created_at": "2025-09-06T02:47:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19539038117,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASMng-l",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19539038117",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "938962336d36e659157b75750d57b27d0ef1d77d",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/938962336d36e659157b75750d57b27d0ef1d77d",
      "created_at": "2025-09-06T03:33:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19543903952,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASM6E7Q",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19543903952",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f49e57004aa34fe8afda489c6154e3c79a8e828e",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/f49e57004aa34fe8afda489c6154e3c79a8e828e",
      "created_at": "2025-09-06T14:37:22Z"
    },
    {
      "event": "reviewed",
      "id": 3194488618,
      "node_id": "PRR_kwDOAP4Jqs6-aAcq",
      "url": null,
      "actor": null,
      "commit_id": "f49e57004aa34fe8afda489c6154e3c79a8e828e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-07T15:21:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @furszy. I played around with this a little bit. It reduces the execution time on my machine from 26 seconds to 10 seconds (`-jobs=16`). Very nice! Some observations:\r\n\r\n- It would be helpful if a helptext would be output when `tests` is run with `-h` or `--help`.\r\n- I think showing all the tests that have passed is a bit overkill. I'm already assuming that the tests pass if they do not show up in the output. I only need to see tests that don't pass.\r\n- Maybe a future PR can autodetect the number of cores and set `-jobs` automatically by default? \r\n- There's an `-iter` command line flag, but the test output shows \"`test count`\". It would be better if we were consistent.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3194488618",
      "submitted_at": "2025-09-07T15:21:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "commented",
      "id": 3263851731,
      "node_id": "IC_kwDOAP4Jqs7CimzT",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3263851731",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-07T15:29:35Z",
      "updated_at": "2025-09-07T15:29:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "- The available \"targets\" seem to be a bit arbitary. Maybe we can try to put them into groups (perhaps similar to the [grouping in #1211](https://github.com/bitcoin-core/secp256k1/pull/1211/files#diff-c2d5f1f7616875ab71cd41b053cfb428696988ff89642b931a0963d50f34f7e8R7495))?\r\n    ```\r\n    ./tests -print_tests\r\n    Available tests (58):\r\n        --------------------------------------------------\r\n        [  1] selftest_tests\r\n        [  2] all_proper_context_tests\r\n        [  3] all_static_context_tests\r\n        [  4] deprecated_context_flags_test\r\n        [  5] scratch_tests\r\n        [  6] int128_tests\r\n        [  7] ctz_tests\r\n        [  8] modinv_tests\r\n        [  9] inverse_tests\r\n        [ 10] hsort_tests\r\n        [ 11] sha256_known_output_tests\r\n        [ 12] sha256_counter_tests\r\n        [ 13] hmac_sha256_tests\r\n        [ 14] rfc6979_hmac_sha256_tests\r\n        [ 15] tagged_sha256_tests\r\n        [ 16] scalar_tests\r\n        [ 17] field_half\r\n        [ 18] field_misc\r\n        [ 19] field_convert\r\n        [ 20] field_be32_overflow\r\n        [ 21] fe_mul\r\n        [ 22] sqr\r\n        [ 23] sqrt\r\n        [ 24] ge\r\n        [ 25] gej\r\n        [ 26] group_decompress\r\n        [ 27] ecmult_pre_g\r\n        [ 28] wnaf\r\n        [ 29] point_times_order\r\n        [ 30] ecmult_near_split_bound\r\n        [ 31] ecmult_chain\r\n        [ 32] ecmult_constants\r\n        [ 33] ecmult_gen_blind\r\n        [ 34] ecmult_const_tests\r\n        [ 35] ecmult_multi_tests\r\n        [ 36] ec_combine\r\n        [ 37] endomorphism_tests\r\n        [ 38] ec_pubkey_parse_test\r\n        [ 39] eckey_edge_case_test\r\n        [ 40] eckey_negate_test\r\n        [ 41] ecdh_tests\r\n        [ 42] ec_illegal_argument_tests\r\n        [ 43] pubkey_comparison\r\n        [ 44] pubkey_sort\r\n        [ 45] random_pubkeys\r\n        [ 46] ecdsa_der_parse\r\n        [ 47] ecdsa_sign_verify\r\n        [ 48] ecdsa_end_to_end\r\n        [ 49] ecdsa_edge_cases\r\n        [ 50] ecdsa_wycheproof\r\n        [ 51] extrakeys_tests\r\n        [ 52] schnorrsig_tests\r\n        [ 53] musig_tests\r\n        [ 54] ellswift_tests\r\n        [ 55] secp256k1_memczero_test\r\n        [ 56] secp256k1_is_zero_array_test\r\n        [ 57] secp256k1_byteorder_tests\r\n        [ 58] cmov_tests\r\n    ```",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3263851731",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19571195804,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASOiL-c",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19571195804",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "050d455270389032b6553be655106a3d07104185",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/050d455270389032b6553be655106a3d07104185",
      "created_at": "2025-09-08T18:25:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19571338225,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASOiuvx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19571338225",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "af43348419eeef9a0a2a264be7a0bee66e70b819",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/af43348419eeef9a0a2a264be7a0bee66e70b819",
      "created_at": "2025-09-08T18:33:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19572361215,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASOmof_",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19572361215",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0b3c74f95ba03789a02028c0bd6144999cc8f97f",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/0b3c74f95ba03789a02028c0bd6144999cc8f97f",
      "created_at": "2025-09-08T19:29:16Z"
    },
    {
      "event": "commented",
      "id": 3270923881,
      "node_id": "IC_kwDOAP4Jqs7C9lZp",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3270923881",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-09T14:10:37Z",
      "updated_at": "2025-09-09T14:10:37Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review jonasnick!\r\n\r\n> Thanks @furszy. I played around with this a little bit. It reduces the execution time on my machine from 26 seconds to 10 seconds (`-jobs=16`). Very nice! \r\n\r\nAwesome :). I think we can actually do even better, will do some changes.\r\n\r\n> * It would be helpful if a helptext would be output when `tests` is run with `-h` or `--help`.\r\n\r\nThe help message was actually already there, but for `-help` only (with a single `-` and I forgot to add it to the PR description).\r\nI just pushed support for `-h` as well.\r\n\r\n> * I think showing all the tests that have passed is a bit overkill. I'm already assuming that the tests pass if they do not show up in the output. I only need to see tests that don't pass.\r\n\r\nSure. Will hide the logging behind a `-log` option (or `-silent` if we want the opposite behavior).\r\nFrom my experience, logging sometimes helps spot regressions or areas that can be improved (like when a test suddenly takes longer than usual), and it’s also reassuring to see them run and pass when you have a large number of them.\r\nI’ve also been thinking about adding per-test execution time loggings, might be a good opportunity to include it too.\r\n\r\n> * Maybe a future PR can autodetect the number of cores and set `-jobs` automatically by default?\r\n\r\nI'm not sure we want that. Sequential execution is usually \"standard\" on any system because we don’t know what else the user might be running. Picking a number of parallel tasks automatically (even if it is a low number) could hang the CPU or even make it run slower than sequential if the system is overloaded.\r\n\r\n> * There's an `-iter` command line flag, but the test output shows \"`test count`\". It would be better if we were consistent.\r\n\r\nSure 👍🏼. That was carried over from the previous code; will improve it.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3270923881",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "mentioned",
      "id": 19591206998,
      "node_id": "MEE_lADOAP4Jqs7JvTsvzwAAAASPuhhW",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19591206998",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-09T14:10:39Z"
    },
    {
      "event": "subscribed",
      "id": 19591207036,
      "node_id": "SE_lADOAP4Jqs7JvTsvzwAAAASPuhh8",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19591207036",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-09T14:10:39Z"
    },
    {
      "event": "commented",
      "id": 3270969135,
      "node_id": "IC_kwDOAP4Jqs7C9wcv",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3270969135",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-09T14:21:20Z",
      "updated_at": "2025-09-09T15:20:31Z",
      "author_association": "MEMBER",
      "body": "> The available \"targets\" seem to be a bit arbitary. Maybe we can try to put them into groups (perhaps similar to the [grouping in #1211](https://github.com/bitcoin-core/secp256k1/pull/1211/files#diff-c2d5f1f7616875ab71cd41b053cfb428696988ff89642b931a0963d50f34f7e8R7495))?\r\n\r\nYeah. Just reworked the framework to support registering and running groups of tests in a generic manner. This means we can now run specific tests and/or specific groups of tests via the `-target`/`-t` arg.\r\n\r\nOn top of that, made the framework reusable across binaries and improved the overall API (we can now easily connect the `tests_exhaustive` binary to it too — probably something for a follow-up), along with improvements to the consumers’ structure, enforcing consistency and a specific pattern that all consumers will follow.\r\n\r\nOther than that, the `-print_tests` option was improved to display the available modules and tests.\r\n\r\nA simple usage example:\r\n`./tests -print_tests` → pick any module (like `field`) and run: `./tests -t=field`\r\nYou can also combine this with `-j=<num_workers>`, plus specify multiple targets as needed.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3270969135",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19592729730,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASP0VSC",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19592729730",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4900aee07d528522098e82f4d7e45692407839e4",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/4900aee07d528522098e82f4d7e45692407839e4",
      "created_at": "2025-09-09T15:16:54Z"
    },
    {
      "event": "reviewed",
      "id": 3202289828,
      "node_id": "PRR_kwDOAP4Jqs6-3xCk",
      "url": null,
      "actor": null,
      "commit_id": "4900aee07d528522098e82f4d7e45692407839e4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-09T15:58:00Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3202289828",
      "submitted_at": "2025-09-09T15:58:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19597422408,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASQGO9I",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19597422408",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "aa5f041f2fe77624bb77fdb64ca6974b5cc23542",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/aa5f041f2fe77624bb77fdb64ca6974b5cc23542",
      "created_at": "2025-09-09T19:41:38Z"
    },
    {
      "event": "renamed",
      "id": 19598167506,
      "node_id": "RTE_lADOAP4Jqs7JvTsvzwAAAASQJE3S",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19598167506",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-09T20:27:59Z",
      "rename": {
        "from": "WIP: Introduce (mini) unit test framework",
        "to": "Introduce (mini) unit test framework"
      }
    },
    {
      "event": "commented",
      "id": 3275069300,
      "node_id": "IC_kwDOAP4Jqs7DNZd0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3275069300",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T13:49:23Z",
      "updated_at": "2025-09-10T13:49:23Z",
      "author_association": "MEMBER",
      "body": "> Context:\r\n> Currently, all tests run single-threaded sequentially and the library lacks the ability to specify which test (or group of tests) you would like to run. This is not only inconvenient as more tests are added but also time consuming during development and affects downstream projects that may want to parallelize the workload (such as Bitcoin-Core CI).\r\n\r\nI agree with this assessment.\r\n\r\nFor now, I slightly prefer https://github.com/bitcoin-core/secp256k1/pull/1211 for the following reasons:\r\n- smaller diff;\r\n- adding a new test does not seem convoluted in that branch;\r\n- it [scales reasonably well](https://github.com/bitcoin-core/secp256k1/pull/1211#pullrequestreview-3206161437) (though not perfectly).\r\n\r\nIn general, I believe parallelism management could (and I believe it should) be offloaded from the C code to the build system. Moreover, CTest provides a range of options to customize test execution and output. This functionality could of course be ported to the Autotools-based build system, but I am not sure it would be worth the effort.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3275069300",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "commented",
      "id": 3275261629,
      "node_id": "IC_kwDOAP4Jqs7DOIa9",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3275261629",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T14:33:34Z",
      "updated_at": "2025-09-10T14:33:34Z",
      "author_association": "MEMBER",
      "body": "> smaller diff;\r\n\r\nI wouldn’t consider the larger diff a complication. The size comes from reorganizing tests under a proper framework and introducing features like granular test/group selection and a named command-line options. In my view, it should be seen as a one-off restructuring that makes testing scalable and smoother for development, and it sets us up much better long term.\r\n\r\n> * adding a new test does not seem convoluted in that branch;\r\n\r\nAdding new tests is not hard but granularly selecting them to run in isolation is not possible. You will continue be forced to comment code from a long main function if you just want to run a single test or a mix of single tests from different groups.\r\n\r\n> * it [scales reasonably well](https://github.com/bitcoin-core/secp256k1/pull/1211#pullrequestreview-3206161437) (though not perfectly).\r\n\r\nHave you tested how fast this one gets if you parallelize it in the same way you did for #1211? This one should go faster because we can select and run each individual test on a different process (in #1211 you can only run groups of tests).\r\n\r\n> In general, I believe parallelism management could (and I believe it should) be offloaded from the C code to the build system. Moreover, CTest provides a range of options to customize test execution and output. This functionality could of course be ported to the Autotools-based build system, but I am not sure it would be worth the effort.\r\n\r\nIt could be added here for CI too (I would be very interested to see your results), but I don’t think `ctest` is very useful for daily development. It adds another layer of complexity; for example, you can’t easily pass command-line arguments to the binaries you’re running (as far as I have seen, it requires you to enable the \"script mode\" and even that is not enough). I think both approaches can coexist as long as the maintenance burden stays minimal.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3275261629",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "reviewed",
      "id": 3206568066,
      "node_id": "PRR_kwDOAP4Jqs6_IFiC",
      "url": null,
      "actor": null,
      "commit_id": "aa5f041f2fe77624bb77fdb64ca6974b5cc23542",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-10T14:54:32Z",
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3206568066",
      "submitted_at": "2025-09-10T14:54:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "reviewed",
      "id": 3206644081,
      "node_id": "PRR_kwDOAP4Jqs6_IYFx",
      "url": null,
      "actor": null,
      "commit_id": "aa5f041f2fe77624bb77fdb64ca6974b5cc23542",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-10T15:13:39Z",
      "author_association": "MEMBER",
      "body": "In case of a disable module, could the output be made more explanatory instead of this:\r\n```\r\n$ ./build/bin/tests -target=recovery\r\nError: target not found: 'recovery'\r\n```\r\n\r\nFor example (from https://github.com/bitcoin-core/secp256k1/pull/1211): https://github.com/bitcoin-core/secp256k1/blob/3e404f2b8643493854e664389dbc7817763ad4ac/src/tests.c#L7475-L7482",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3206644081",
      "submitted_at": "2025-09-10T15:13:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "commented",
      "id": 3275440608,
      "node_id": "IC_kwDOAP4Jqs7DO0Hg",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3275440608",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T15:19:21Z",
      "updated_at": "2025-09-10T15:19:21Z",
      "author_association": "MEMBER",
      "body": "> In case of a disable module, could the output be made more explanatory instead of this:\r\n> \r\n> ```\r\n> $ ./build/bin/tests -target=recovery\r\n> Error: target not found: 'recovery'\r\n> ```\r\n\r\nYeah sure.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3275440608",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "reviewed",
      "id": 3206862857,
      "node_id": "PRR_kwDOAP4Jqs6_JNgJ",
      "url": null,
      "actor": null,
      "commit_id": "aa5f041f2fe77624bb77fdb64ca6974b5cc23542",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-10T16:16:44Z",
      "author_association": "MEMBER",
      "body": "~Removed~\r\n\r\nnm",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3206862857",
      "submitted_at": "2025-09-10T16:09:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "commented",
      "id": 3275667392,
      "node_id": "IC_kwDOAP4Jqs7DPrfA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3275667392",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T16:24:43Z",
      "updated_at": "2025-09-10T16:27:33Z",
      "author_association": "MEMBER",
      "body": "> Have you tested how fast this one gets if you parallelize it in the same way you did for #1211? This one should go faster because we can select and run each individual test on a different process (in #1211 you can only run groups of tests).\r\n\r\n[This](https://github.com/hebasto/secp256k1/commits/pr1734/0910/) branch with splitting by modules:\r\n```\r\n$ ctest --test-dir build -j 16 --output-on-failure\r\nTest project /home/hebasto/dev/secp256k1/secp256k1/build\r\n      Start  1: secp256k1_tests::general\r\n      Start  2: secp256k1_tests::integer\r\n      Start  3: secp256k1_tests::hash\r\n      Start  4: secp256k1_tests::scalar\r\n      Start  5: secp256k1_tests::field\r\n      Start  6: secp256k1_tests::group\r\n      Start  7: secp256k1_tests::ecmult\r\n      Start  8: secp256k1_tests::ec\r\n      Start  9: secp256k1_tests::ecdh\r\n      Start 10: secp256k1_tests::ecdsa\r\n      Start 11: secp256k1_tests::recovery\r\n      Start 12: secp256k1_tests::extrakeys\r\n      Start 13: secp256k1_tests::schnorrsig\r\n      Start 14: secp256k1_tests::musig\r\n      Start 15: secp256k1_tests::ellswift\r\n      Start 16: secp256k1_tests::utils\r\n 1/33 Test  #1: secp256k1_tests::general ...............   Passed    0.01 sec\r\n 2/33 Test #11: secp256k1_tests::recovery ..............***Skipped   0.00 sec\r\n      Start 17: secp256k1_noverify_tests::general\r\n      Start 18: secp256k1_noverify_tests::integer\r\n 3/33 Test #16: secp256k1_tests::utils .................   Passed    0.00 sec\r\n 4/33 Test #17: secp256k1_noverify_tests::general ......   Passed    0.00 sec\r\n      Start 19: secp256k1_noverify_tests::hash\r\n      Start 20: secp256k1_noverify_tests::scalar\r\n 5/33 Test  #3: secp256k1_tests::hash ..................   Passed    0.02 sec\r\n      Start 21: secp256k1_noverify_tests::field\r\n 6/33 Test  #8: secp256k1_tests::ec ....................   Passed    0.03 sec\r\n      Start 22: secp256k1_noverify_tests::group\r\n 7/33 Test #12: secp256k1_tests::extrakeys .............   Passed    0.03 sec\r\n 8/33 Test #19: secp256k1_noverify_tests::hash .........   Passed    0.02 sec\r\n      Start 23: secp256k1_noverify_tests::ecmult\r\n      Start 24: secp256k1_noverify_tests::ec\r\n 9/33 Test #20: secp256k1_noverify_tests::scalar .......   Passed    0.03 sec\r\n      Start 25: secp256k1_noverify_tests::ecdh\r\n10/33 Test #24: secp256k1_noverify_tests::ec ...........   Passed    0.02 sec\r\n      Start 26: secp256k1_noverify_tests::ecdsa\r\n11/33 Test  #4: secp256k1_tests::scalar ................   Passed    0.05 sec\r\n      Start 27: secp256k1_noverify_tests::recovery\r\n12/33 Test #27: secp256k1_noverify_tests::recovery .....***Skipped   0.00 sec\r\n      Start 28: secp256k1_noverify_tests::extrakeys\r\n13/33 Test #28: secp256k1_noverify_tests::extrakeys ....   Passed    0.01 sec\r\n      Start 29: secp256k1_noverify_tests::schnorrsig\r\n14/33 Test #13: secp256k1_tests::schnorrsig ............   Passed    0.07 sec\r\n      Start 30: secp256k1_noverify_tests::musig\r\n15/33 Test #25: secp256k1_noverify_tests::ecdh .........   Passed    0.05 sec\r\n      Start 31: secp256k1_noverify_tests::ellswift\r\n16/33 Test #29: secp256k1_noverify_tests::schnorrsig ...   Passed    0.03 sec\r\n      Start 32: secp256k1_noverify_tests::utils\r\n17/33 Test #32: secp256k1_noverify_tests::utils ........   Passed    0.00 sec\r\n      Start 33: secp256k1_exhaustive_tests\r\n18/33 Test  #9: secp256k1_tests::ecdh ..................   Passed    0.13 sec\r\n19/33 Test #30: secp256k1_noverify_tests::musig ........   Passed    0.11 sec\r\n20/33 Test #14: secp256k1_tests::musig .................   Passed    0.29 sec\r\n21/33 Test #26: secp256k1_noverify_tests::ecdsa ........   Passed    0.98 sec\r\n22/33 Test  #5: secp256k1_tests::field .................   Passed    1.24 sec\r\n23/33 Test #22: secp256k1_noverify_tests::group ........   Passed    1.71 sec\r\n24/33 Test #10: secp256k1_tests::ecdsa .................   Passed    1.95 sec\r\n25/33 Test #21: secp256k1_noverify_tests::field ........   Passed    1.94 sec\r\n26/33 Test  #2: secp256k1_tests::integer ...............   Passed    2.47 sec\r\n27/33 Test #18: secp256k1_noverify_tests::integer ......   Passed    2.47 sec\r\n28/33 Test  #6: secp256k1_tests::group .................   Passed    4.24 sec\r\n29/33 Test #31: secp256k1_noverify_tests::ellswift .....   Passed    4.32 sec\r\n30/33 Test #33: secp256k1_exhaustive_tests .............   Passed    7.87 sec\r\n31/33 Test #23: secp256k1_noverify_tests::ecmult .......   Passed    8.77 sec\r\n32/33 Test #15: secp256k1_tests::ellswift ..............   Passed   13.11 sec\r\n33/33 Test  #7: secp256k1_tests::ecmult ................   Passed   17.27 sec\r\n\r\n100% tests passed, 0 tests failed out of 33\r\n\r\nTotal Test time (real) =  17.31 sec\r\n\r\nThe following tests did not run:\r\n\t 11 - secp256k1_tests::recovery (Skipped)\r\n\t 27 - secp256k1_noverify_tests::recovery (Skipped)\r\n```\r\n\r\nUPD. Even after splitting up the `ecmult` tests, the `ellswift` tests are still the longest.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3275667392",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "commented",
      "id": 3275695689,
      "node_id": "IC_kwDOAP4Jqs7DPyZJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3275695689",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T16:34:29Z",
      "updated_at": "2025-09-10T16:34:54Z",
      "author_association": "MEMBER",
      "body": "> [This](https://github.com/hebasto/secp256k1/commits/pr1734/0910/) branch with splitting by modules\r\n\r\nNice thanks, so this doesn’t introduce any overhead compared to #1211 when run by modules (same functionality in both places). That’s good to know.\r\n\r\nNow, here you can go faster by parallelizing by test cases instead of modules. Can run `./tests -print_tests` to see all available individual cases.\r\n\r\n> UPD. Even after splitting up the ecmult tests, the ellswift tests are still the longest.\r\n\r\nI left a todo comment about that. We can subdivide the `ellswift` tests (there is a single function atm) and they will be automatically parallelizable here too.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3275695689",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "connected",
      "id": 19617248588,
      "node_id": "COE_lADOAP4Jqs7JvTsvzwAAAASRR3VM",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19617248588",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T16:43:33Z"
    },
    {
      "event": "commented",
      "id": 3275778970,
      "node_id": "IC_kwDOAP4Jqs7DQGua",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3275778970",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T17:04:52Z",
      "updated_at": "2025-09-10T17:04:52Z",
      "author_association": "MEMBER",
      "body": "> Now, here you can go faster by parallelizing by test cases instead of modules. Can run `./tests -print_tests` to see all available individual cases.\r\n\r\nYes, but that output can be quite noisy, especially when running in downstream projects such as Bitcoin Core.\r\n\r\nThat said, combining both approaches should work.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3275778970",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "commented",
      "id": 3275863496,
      "node_id": "IC_kwDOAP4Jqs7DQbXI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3275863496",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T17:28:19Z",
      "updated_at": "2025-09-10T17:28:19Z",
      "author_association": "MEMBER",
      "body": "> > Now, here you can go faster by parallelizing by test cases instead of modules. Can run `./tests -print_tests` to see all available individual cases.\r\n> \r\n> Yes, but that output can be quite noisy, especially when running in downstream projects such as Bitcoin Core.\r\n> \r\n> That said, combining both approaches should work.\r\n\r\nFor example, for [this](https://github.com/hebasto/secp256k1/commits/pr1734/0910a/) branch:\r\n```\r\n$ ctest --test-dir build -j 16 --output-on-failure\r\nTest project /home/hebasto/dev/secp256k1/secp256k1/build\r\n      Start  1: secp256k1_tests::ecmult_constants\r\n      Start  2: secp256k1_tests::ecmult\r\n      Start  3: secp256k1_tests::general\r\n      Start  4: secp256k1_tests::integer\r\n      Start  5: secp256k1_tests::hash\r\n      Start  6: secp256k1_tests::scalar\r\n      Start  7: secp256k1_tests::field\r\n      Start  8: secp256k1_tests::group\r\n      Start  9: secp256k1_tests::ec\r\n      Start 10: secp256k1_tests::ecdh\r\n      Start 11: secp256k1_tests::ecdsa\r\n      Start 12: secp256k1_tests::recovery\r\n      Start 13: secp256k1_tests::extrakeys\r\n      Start 14: secp256k1_tests::schnorrsig\r\n      Start 15: secp256k1_tests::musig\r\n      Start 16: secp256k1_tests::ellswift\r\n 1/35 Test  #3: secp256k1_tests::general .....................   Passed    0.01 sec\r\n 2/35 Test #12: secp256k1_tests::recovery ....................***Skipped   0.00 sec\r\n      Start 17: secp256k1_tests::utils\r\n      Start 18: secp256k1_noverify_tests::ecmult_constants\r\n 3/35 Test #17: secp256k1_tests::utils .......................   Passed    0.00 sec\r\n      Start 19: secp256k1_noverify_tests::ecmult\r\n 4/35 Test  #5: secp256k1_tests::hash ........................   Passed    0.02 sec\r\n      Start 20: secp256k1_noverify_tests::general\r\n 5/35 Test #20: secp256k1_noverify_tests::general ............   Passed    0.00 sec\r\n      Start 21: secp256k1_noverify_tests::integer\r\n 6/35 Test #13: secp256k1_tests::extrakeys ...................   Passed    0.03 sec\r\n      Start 22: secp256k1_noverify_tests::hash\r\n 7/35 Test  #9: secp256k1_tests::ec ..........................   Passed    0.03 sec\r\n      Start 23: secp256k1_noverify_tests::scalar\r\n 8/35 Test  #6: secp256k1_tests::scalar ......................   Passed    0.05 sec\r\n      Start 24: secp256k1_noverify_tests::field\r\n 9/35 Test #22: secp256k1_noverify_tests::hash ...............   Passed    0.02 sec\r\n      Start 25: secp256k1_noverify_tests::group\r\n10/35 Test #23: secp256k1_noverify_tests::scalar .............   Passed    0.03 sec\r\n      Start 26: secp256k1_noverify_tests::ec\r\n11/35 Test #26: secp256k1_noverify_tests::ec .................   Passed    0.01 sec\r\n      Start 27: secp256k1_noverify_tests::ecdh\r\n12/35 Test #14: secp256k1_tests::schnorrsig ..................   Passed    0.07 sec\r\n      Start 28: secp256k1_noverify_tests::ecdsa\r\n13/35 Test #27: secp256k1_noverify_tests::ecdh ...............   Passed    0.05 sec\r\n      Start 29: secp256k1_noverify_tests::recovery\r\n14/35 Test #29: secp256k1_noverify_tests::recovery ...........***Skipped   0.00 sec\r\n      Start 30: secp256k1_noverify_tests::extrakeys\r\n15/35 Test #30: secp256k1_noverify_tests::extrakeys ..........   Passed    0.01 sec\r\n      Start 31: secp256k1_noverify_tests::schnorrsig\r\n16/35 Test #10: secp256k1_tests::ecdh ........................   Passed    0.14 sec\r\n      Start 32: secp256k1_noverify_tests::musig\r\n17/35 Test #31: secp256k1_noverify_tests::schnorrsig .........   Passed    0.03 sec\r\n      Start 33: secp256k1_noverify_tests::ellswift\r\n18/35 Test #32: secp256k1_noverify_tests::musig ..............   Passed    0.12 sec\r\n      Start 34: secp256k1_noverify_tests::utils\r\n19/35 Test #34: secp256k1_noverify_tests::utils ..............   Passed    0.00 sec\r\n      Start 35: secp256k1_exhaustive_tests\r\n20/35 Test #15: secp256k1_tests::musig .......................   Passed    0.29 sec\r\n21/35 Test #28: secp256k1_noverify_tests::ecdsa ..............   Passed    0.97 sec\r\n22/35 Test  #7: secp256k1_tests::field .......................   Passed    1.62 sec\r\n23/35 Test #25: secp256k1_noverify_tests::group ..............   Passed    1.75 sec\r\n24/35 Test #24: secp256k1_noverify_tests::field ..............   Passed    1.97 sec\r\n25/35 Test #11: secp256k1_tests::ecdsa .......................   Passed    2.80 sec\r\n26/35 Test #21: secp256k1_noverify_tests::integer ............   Passed    3.79 sec\r\n27/35 Test  #4: secp256k1_tests::integer .....................   Passed    3.99 sec\r\n28/35 Test #33: secp256k1_noverify_tests::ellswift ...........   Passed    4.26 sec\r\n29/35 Test  #8: secp256k1_tests::group .......................   Passed    4.75 sec\r\n30/35 Test #18: secp256k1_noverify_tests::ecmult_constants ...   Passed    5.71 sec\r\n31/35 Test #19: secp256k1_noverify_tests::ecmult .............   Passed    8.26 sec\r\n32/35 Test #35: secp256k1_exhaustive_tests ...................   Passed    8.61 sec\r\n33/35 Test  #1: secp256k1_tests::ecmult_constants ............   Passed   10.30 sec\r\n34/35 Test  #2: secp256k1_tests::ecmult ......................   Passed   10.98 sec\r\n35/35 Test #16: secp256k1_tests::ellswift ....................   Passed   12.77 sec\r\n\r\n100% tests passed, 0 tests failed out of 35\r\n\r\nTotal Test time (real) =  12.78 sec\r\n\r\nThe following tests did not run:\r\n\t 12 - secp256k1_tests::recovery (Skipped)\r\n\t 29 - secp256k1_noverify_tests::recovery (Skipped)\r\n```",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3275863496",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "commented",
      "id": 3275867033,
      "node_id": "IC_kwDOAP4Jqs7DQcOZ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3275867033",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T17:28:57Z",
      "updated_at": "2025-09-10T17:28:57Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3275867033",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "commented",
      "id": 3275930639,
      "node_id": "IC_kwDOAP4Jqs7DQrwP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3275930639",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T17:42:10Z",
      "updated_at": "2025-09-10T17:42:10Z",
      "author_association": "MEMBER",
      "body": "> > > Now, here you can go faster by parallelizing by test cases instead of modules. Can run `./tests -print_tests` to see all available individual cases.\r\n> > \r\n> > \r\n> > Yes, but that output can be quite noisy, especially when running in downstream projects such as Bitcoin Core.\r\n> > That said, combining both approaches should work.\r\n> \r\n> For example, for [this](https://github.com/hebasto/secp256k1/commits/pr1734/0910a/) branch:\r\n> \r\n> ```\r\n> $ ctest --test-dir build -j 16 --output-on-failure\r\n> ...\r\n> \r\n> 100% tests passed, 0 tests failed out of 35\r\n> \r\n> Total Test time (real) =  12.78 sec\r\n> \r\n\r\nCool, thanks for testing! That's a good speedup.\r\nAnd we can do even better, because your branch only specifies a few single test cases, not all, to run in isolation; the rest are still running as a single process group (the library currently has 88 single test cases, and your output shows that only 35 were run - so you must have grouped most of them).\r\n\r\n> > Now, here you can go faster by parallelizing by test cases instead of modules. Can run `./tests -print_tests` to see all available individual cases.\r\n> \r\n> Yes, but that output can be quite noisy, especially when running in downstream projects such as Bitcoin Core.\r\n\r\nIt may worth to try using the binary `-j` (or `-jobs`) command-line arg from `ctest` in some way if excessive logging is a concern on the CI. Because we can control it internally; the output will be minimal (unless you specify `-log=1`).\r\n\r\n",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3275930639",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "commented",
      "id": 3275942928,
      "node_id": "IC_kwDOAP4Jqs7DQuwQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3275942928",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T17:46:55Z",
      "updated_at": "2025-09-10T17:46:55Z",
      "author_association": "MEMBER",
      "body": "> And we can do even better, because your branch only specifies a few single test cases, not all, to run in isolation; the rest are still running as a single process group (the library currently has 88 single test cases, and your output shows that only 35 were run - so you must have grouped most of them).\r\n\r\nI doubt this would improve performance, since the total runtime is now constrained by the longest-running test.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3275942928",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "commented",
      "id": 3276213192,
      "node_id": "IC_kwDOAP4Jqs7DRwvI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3276213192",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-10T19:15:38Z",
      "updated_at": "2025-09-10T19:15:38Z",
      "author_association": "MEMBER",
      "body": "> I doubt this would improve performance, since the total runtime is now constrained by the longest-running test.\r\n\r\nAh, I see. We could split the test in a follow-up then. At first glance, it seems internal cases are well defined.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3276213192",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19620199698,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASRdH0S",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19620199698",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "created_at": "2025-09-10T19:26:17Z"
    },
    {
      "event": "reviewed",
      "id": 3210722154,
      "node_id": "PRR_kwDOAP4Jqs6_X7tq",
      "url": null,
      "actor": null,
      "commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-11T11:47:16Z",
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3210722154",
      "submitted_at": "2025-09-11T11:47:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "reviewed",
      "id": 3212434784,
      "node_id": "PRR_kwDOAP4Jqs6_ed1g",
      "url": null,
      "actor": null,
      "commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-11T15:41:18Z",
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3212434784",
      "submitted_at": "2025-09-11T15:41:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "reviewed",
      "id": 3216917039,
      "node_id": "PRR_kwDOAP4Jqs6_vkIv",
      "url": null,
      "actor": null,
      "commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-12T15:09:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nTested this quickly on an arm64 machine and observed a nice >2x speedup (~24.4s `j=1` vs. ~11.1s `j=6`), also played around running only tests of certain modules, which worked as expected. Left just a few first-look nits.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3216917039",
      "submitted_at": "2025-09-12T15:09:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19667095849,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASUQBEp",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19667095849",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/5a501061ea082d66e193234023843738a328e4a4",
      "created_at": "2025-09-12T18:40:19Z"
    },
    {
      "event": "commented",
      "id": 3286462029,
      "node_id": "IC_kwDOAP4Jqs7D425N",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3286462029",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-12T18:46:10Z",
      "updated_at": "2025-09-12T18:46:10Z",
      "author_association": "MEMBER",
      "body": "Updated per feedback, thanks theStack and hebasto!",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3286462029",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    },
    {
      "event": "reviewed",
      "id": 3220441643,
      "node_id": "PRR_kwDOAP4Jqs6_9Aor",
      "url": null,
      "actor": null,
      "commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-13T11:57:59Z",
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3220441643",
      "submitted_at": "2025-09-13T11:57:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "reviewed",
      "id": 3220531146,
      "node_id": "PRR_kwDOAP4Jqs6_9WfK",
      "url": null,
      "actor": null,
      "commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-13T12:16:30Z",
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3220531146",
      "submitted_at": "2025-09-13T12:16:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "reviewed",
      "id": 3220629500,
      "node_id": "PRR_kwDOAP4Jqs6_9uf8",
      "url": null,
      "actor": null,
      "commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-13T12:48:39Z",
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3220629500",
      "submitted_at": "2025-09-13T12:48:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "reviewed",
      "id": 3220704460,
      "node_id": "PRR_kwDOAP4Jqs6_-AzM",
      "url": null,
      "actor": null,
      "commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-13T13:13:25Z",
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3220704460",
      "submitted_at": "2025-09-13T13:13:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "reviewed",
      "id": 3220733885,
      "node_id": "PRR_kwDOAP4Jqs6_-H-9",
      "url": null,
      "actor": null,
      "commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-13T13:21:50Z",
      "author_association": "MEMBER",
      "body": "Approach ACK 5a501061ea082d66e193234023843738a328e4a4.\r\n\r\nI've completed my first round of reviewing. The code looks good.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#pullrequestreview-3220733885",
      "submitted_at": "2025-09-13T13:21:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDljY2U3MDM4NjM1YWZhN2U5NGM0MzRmMTU3MWE4ZTQzNTM1MGNiNTE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/9cce7038635afa7e94c434f1571a8e435350cb51",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/9cce7038635afa7e94c434f1571a8e435350cb51",
      "tree": {
        "sha": "e97c592e8ad6aba0d0001220bb8cfa0068d5917b",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/e97c592e8ad6aba0d0001220bb8cfa0068d5917b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e97c592e8ad6aba0d0001220bb8cfa0068d5917b\nparent 03fb60ad2e38ae9415e64bf5ba523a10100d4c3c\nauthor furszy <matiasfurszyfer@protonmail.com> 1757446547 -0400\ncommitter furszy <matiasfurszyfer@protonmail.com> 1757771728 -0400\n\nrefactor: move 'gettime_i64()' to tests_common.h\n\nRelocate the clock time getter to tests_common.h to\nmake it easily reusable across test programs. This\nwill be useful for the upcoming unit test framework.\n\nContext - why not placing it inside testutil.h?:\nThe bench program links against the production-compiled library,\nnot its own compiled version. Therefore, `gettime_i64()` cannot\nbe moved to testutil.h, because testutil.h calls\n`secp256k1_pubkey_save()`, which exists only in the internal\nsecp256k1.c and not in the public API.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmjFd9AACgkQXdI8zGhq\npiNenBAAszAARpOFqJ+AJ40Ptw7HLsV2KvBzQPoA9SJngNQCfBc2aBPw05+lnlZq\n10wCX94HkEe9aTVIhWW5iDPMmHrBRz+N13kBD4TTvO9aYt28fJPd04E3KRdHfFzm\nCKCP1UlDgPiLyrHe7JepVeJcd2pnaReVSRkB8AKIi4Ya1P1pAKMNP6HRtIHsLivu\nDug1w1ovc+g5TrVyCakKqCYl7gJwlqvpczPsvPoLLOYAf9RAl/6DtdaLe/5CoNjc\nNfubYmZd6ojvgHqyagNAj0q/WT4hsKmavoem+30ahQPv00U9y4OERuv5hP2JCF9Y\naHyhh5z7eOEy8SGta9f0KvZA6UJjKuLQr6zKOkPY0l6XPh6hi1yNcFlQgBLhw+iF\n5dyo9R2yjkwA26PomcBzO/DAJFvlR3WvpahQboDE/n9xK1vS/sR9LgcBChPfbps5\nscuYDWZMIuF3iwmuZUMpnw4En4Q0Fb2dsqB6LTh2ILGRLye124/pJZi3x1D70ZQB\noDiKMVdDPhdR0vvUEcTMKSz/VXyvazECuQIfSmpIBoV9D3N8fBkReHifBWiyUeO8\nuD7DVnGrR/LUb7hCbMQNdvhxpJ9bXQ/T1wXelEwB1vbEFY2ZsZ/paiWuOI6095x/\nnQ+r0T0Fbbn9j2dROkH/BLZY/rdwReEbjYEYpgROvHVDTaDP/R0=\n=lTsC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/03fb60ad2e38ae9415e64bf5ba523a10100d4c3c",
          "sha": "03fb60ad2e38ae9415e64bf5ba523a10100d4c3c",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/03fb60ad2e38ae9415e64bf5ba523a10100d4c3c"
        }
      ],
      "message": "refactor: move 'gettime_i64()' to tests_common.h\n\nRelocate the clock time getter to tests_common.h to\nmake it easily reusable across test programs. This\nwill be useful for the upcoming unit test framework.\n\nContext - why not placing it inside testutil.h?:\nThe bench program links against the production-compiled library,\nnot its own compiled version. Therefore, `gettime_i64()` cannot\nbe moved to testutil.h, because testutil.h calls\n`secp256k1_pubkey_save()`, which exists only in the internal\nsecp256k1.c and not in the public API.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-13T13:55:28Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-09T19:35:47Z"
      },
      "sha": "9cce7038635afa7e94c434f1571a8e435350cb51"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDRlN2JkYzEzNWE2YmI4NzZhMzg5NDMxZDRkZjIwOWRmMjEyOTc0YWQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/4e7bdc135a6bb876a389431d4df209df212974ad",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/4e7bdc135a6bb876a389431d4df209df212974ad",
      "tree": {
        "sha": "e7365b9a9045239923f3a624c3d2afae40f0dc17",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/e7365b9a9045239923f3a624c3d2afae40f0dc17"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e7365b9a9045239923f3a624c3d2afae40f0dc17\nparent 9cce7038635afa7e94c434f1571a8e435350cb51\nauthor furszy <matiasfurszyfer@protonmail.com> 1756911577 -0400\ncommitter furszy <matiasfurszyfer@protonmail.com> 1757778683 -0400\n\ntest: introduce (mini) unit test framework\n\nLightweight unit testing framework, providing a structured way to define,\nexecute, and report tests. It includes a central test registry, a flexible\ncommand-line argument parser of the form \"-key=value\" (facilitating future\nframework extensions), ability to run tests in parallel and accumulated\ntest time logging reports.\n\nSo far the supported command-line args are:\n- \"-jobs=<num>\" to specify the number of parallel workers.\n- \"-seed=<hex>\" to specify the context seed (random if not set).\n- \"-iterations=<value>\" to specify the number of iterations.\n\nCompatibility Note:\nTo stay compatible with previous versions, the framework also supports\nthe two original positional arguments: the iterations count and the\nRNG seed (in that order).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmjFkvsACgkQXdI8zGhq\npiMWQA/+L8zsVTQRZLa2ikv4hXhclFErl3pk+lnWcU7G+VKtuzICewFR3dosX5OC\nu+FzcL9ucfyfJtZg2ic1K0HZ5/tagFA1+nm1Yf5fEDPOHmx5vnw1yunRIIjJTXQY\nFUw56oGaffTdL5T1ALGAs9AfsAVLW0YWdfVNxtyp1rnvu/aSZPBPQO+qA0Hyg7Yr\n3o5dxdtxr2nfgWZRpfDM4R+AYl9Yc+LjtgViVgpVPFmN+ltmNNeKS5AdZWPLHhSe\n6Rt274zvqARZ/MujFdt15fLx5vuumRgk6kRa+VquJi6c5rzZJHKEAR1vZJElcn7a\nWR9rN+bE0JbA6FgJKI2TjxGHofjpUQc+gwfLSnRgwXf0/isRjQyoWx3DEc1ndHS0\nJV9oth4lI2F2/J8g474z+38aRjNcheTiZm5qE+sn8F1vMGcqlE8XXL8sTFqRWu4G\ni66k597kVxwboVpY5r1hhBRtBQ5Bv57g79PVBYgZTZx7VCSmLiw/4KS172lRb+am\n5/+tCGfqKWuc0v6nmfr2pqT2W/LPrZ4nRuuafInJgP5a3jn8Zqgh5IDlVR4cb4UN\ni3uaOYbla3lL7TVkE8DW/LwjWlPOQtPIpff88LR464uYHu6q+z0/Zjz+nFhzqhog\nOIw2SG/w9kcSYuMvpO4gQ9Dch+Lya/HaeAOACzsbzcwXRLY3xnU=\n=v9uD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/9cce7038635afa7e94c434f1571a8e435350cb51",
          "sha": "9cce7038635afa7e94c434f1571a8e435350cb51",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/9cce7038635afa7e94c434f1571a8e435350cb51"
        }
      ],
      "message": "test: introduce (mini) unit test framework\n\nLightweight unit testing framework, providing a structured way to define,\nexecute, and report tests. It includes a central test registry, a flexible\ncommand-line argument parser of the form \"-key=value\" (facilitating future\nframework extensions), ability to run tests in parallel and accumulated\ntest time logging reports.\n\nSo far the supported command-line args are:\n- \"-jobs=<num>\" to specify the number of parallel workers.\n- \"-seed=<hex>\" to specify the context seed (random if not set).\n- \"-iterations=<value>\" to specify the number of iterations.\n\nCompatibility Note:\nTo stay compatible with previous versions, the framework also supports\nthe two original positional arguments: the iterations count and the\nRNG seed (in that order).",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-13T15:51:23Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-03T14:59:37Z"
      },
      "sha": "4e7bdc135a6bb876a389431d4df209df212974ad"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDM1OTIzYzg3ZDRmYjgzZDRkODE3NzJhNGNkNzM0MjI2MjQ3MGZiYzA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/35923c87d4fb83d4d81772a4cd7342262470fbc0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/35923c87d4fb83d4d81772a4cd7342262470fbc0",
      "tree": {
        "sha": "d6ce48508c2a99cf459ea6c34c1d6d2515bf4f0b",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/d6ce48508c2a99cf459ea6c34c1d6d2515bf4f0b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d6ce48508c2a99cf459ea6c34c1d6d2515bf4f0b\nparent 4e7bdc135a6bb876a389431d4df209df212974ad\nauthor furszy <matiasfurszyfer@protonmail.com> 1757432717 -0400\ncommitter furszy <matiasfurszyfer@protonmail.com> 1757778683 -0400\n\ntest: adapt modules to the new test infrastructure\n\nThis not only provides a structural improvement but also\nallows us to (1) specify individual tests to run and (2)\nexecute each of them concurrently.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmjFkvsACgkQXdI8zGhq\npiPvOA//beXaDG6lS75mVAA3meVAftPvbwKJwdh77M3ZPu9IgFKJbzvm2YwHOxQG\nb0yBeFVVi6h043ij0L/SAgHkhKDWd4+v/OA2j5LAnUoLyLF4Mn8wBks3nrhGjZJ0\nk5gCLyPVGePCQpanPyyhAOdS2Fw3meQ840bZBJO11ro/Fffk94GUBAgDeSLPTlBK\nR0CDtJh1Bz497L1dOCrkADVkQy2uawcMYo5XqP3vRgY4T+qyBVAImf5dobyq0MlY\n8n3RBrtHjEv3jxTrc1UMDkaKYUxqGP3z/tlme4PIo4VVf53bD4CboS8ZJWI9S04k\nCbgi8IiGzldFoXWvQ5lNhonXBdzH5jQpz7bZ3tGQ0E+moQUM6z7+TDco1MLNJpAB\nSaO/Z5dCx2UNlGX361QUpWlPNKMFQwubeVywa8RtQiJwAZO+IIeFI6DZzOmvT2Rh\nvw4DOFTTEcgOZb7aIvbzZ/Suv1Q3TFwo8seohK2i0ndveXBRnec1JfrYNpCx3UQR\ngaqKqA1jStLBvzOROJI4PBoPDrKAVkh5ywr9y4zHW96lUuVPzsDQdF2HlbwTPxZk\nJ9zkXuDg8iQtuZ+BYy0JqxyOMgKtfjxa7p2GdbG+dW6g5EV1vEXpti1+YfyPyqO4\nAqWKojmi7SIQ081WXQb9KYvAOPoKIhR2kTE+2haKy5lqQJA6mxA=\n=LCYl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/4e7bdc135a6bb876a389431d4df209df212974ad",
          "sha": "4e7bdc135a6bb876a389431d4df209df212974ad",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/4e7bdc135a6bb876a389431d4df209df212974ad"
        }
      ],
      "message": "test: adapt modules to the new test infrastructure\n\nThis not only provides a structural improvement but also\nallows us to (1) specify individual tests to run and (2)\nexecute each of them concurrently.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-13T15:51:23Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-09T15:45:17Z"
      },
      "sha": "35923c87d4fb83d4d81772a4cd7342262470fbc0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDQzZjAyYjNkNmRmODgzOThjMmY5MjQ4YWZiYWY4ZjczZjViMzQ2ZjA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/43f02b3d6df88398c2f9248afbaf8f73f5b346f0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/43f02b3d6df88398c2f9248afbaf8f73f5b346f0",
      "tree": {
        "sha": "c0043039157a5ed043f4f07ea43c2fca1d9fbbad",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/c0043039157a5ed043f4f07ea43c2fca1d9fbbad"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c0043039157a5ed043f4f07ea43c2fca1d9fbbad\nparent 35923c87d4fb83d4d81772a4cd7342262470fbc0\nauthor furszy <matiasfurszyfer@protonmail.com> 1756927643 -0400\ncommitter furszy <matiasfurszyfer@protonmail.com> 1757778683 -0400\n\ntest: add -help for command-line options\n\nAdd a help message for the test suite, documenting available options,\ndefaults, and backward-compatible positional arguments.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmjFkvsACgkQXdI8zGhq\npiOrAA/+MiJrprBJkzJgH+hbBc4pk8cr7NP6fEhcgaW1rqejYPHRsmAESE+/qHOL\nZdGAfNuHkK1QYCX1pnjuSTqzI+PBfz83YtqGlLU4SiWVIHHpgChlqmtzIFo6jxHJ\nJNtt5He6NpqxiNYr0pkDSruLSx9tXipm16DVfaOJIAUF2bZGVi/PkG2DOcr2biOC\nhVbC3GxdPFdr4y+hL4MCt5e8Jb09pDH0RLZiVtHm78+b5H2Vwp2XTL6DshAzXZg4\n/7kxeOxBr7z4vMtrGiCNB+4vP7Gz7EaH0swQfk/hA4Tvw02D5SRcHSWuuhXXNbGx\n2FfezDyeoeMu7ApwWZfRVtoOJUaSmvqtFiSkU2DmsjSBn1ZFil3nrUe2USvtW95h\n5w5x4cug1uBQKwRjJyhHRhg6oT4a32RegPjAKuliJ6npy1gwMtaHD664aroGkazZ\nHqpvXcm+VBWpzr835lgkZUbdzK9lg1gTFXIEBGbTHQxYiTwlClHt2Q2D4NGZSKiG\nup9FYbv0uAQz7zS+7WIE8TbpZf8y5/t89F18pQFyyBr9r/YdED5JgXuvx/zrCjP2\ntQ0mhxDdlXtrkFg4awyrehGPMYw6tpMIYiH5fEXBap+N1GaBrWMZA4wbXqvBaHzg\nj+9lnJy+1wSzQQEV80HLhTwDekSl+rwasQbZefiDg2vIuyIDWPM=\n=snPj\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/35923c87d4fb83d4d81772a4cd7342262470fbc0",
          "sha": "35923c87d4fb83d4d81772a4cd7342262470fbc0",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/35923c87d4fb83d4d81772a4cd7342262470fbc0"
        }
      ],
      "message": "test: add -help for command-line options\n\nAdd a help message for the test suite, documenting available options,\ndefaults, and backward-compatible positional arguments.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-13T15:51:23Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-03T19:27:23Z"
      },
      "sha": "43f02b3d6df88398c2f9248afbaf8f73f5b346f0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDViZmRkYzRjNjc1Y2FlNzE2YzA2OTk0YmE1NzM0NjU4OTEwZjhiNjE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5bfddc4c675cae716c06994ba5734658910f8b61",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5bfddc4c675cae716c06994ba5734658910f8b61",
      "tree": {
        "sha": "1dedd1a58ba955a937cafb28d238cfa2fdbfac92",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/1dedd1a58ba955a937cafb28d238cfa2fdbfac92"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1dedd1a58ba955a937cafb28d238cfa2fdbfac92\nparent 43f02b3d6df88398c2f9248afbaf8f73f5b346f0\nauthor furszy <matiasfurszyfer@protonmail.com> 1756934303 -0400\ncommitter furszy <matiasfurszyfer@protonmail.com> 1757778683 -0400\n\ntest: support running specific tests/modules targets\n\nAdd support for specifying single tests or modules to run via the\n\"-target\" or \"-t\" command-line option. Multiple targets can be\nprovided; only the specified tests or all tests in the specified\nmodule/s will run instead of the full suite.\n\nExamples:\n-t=<test name> runs an specific test.\n-t=<module name> runs all tests within the specified module.\n\nBoth options can be provided multiple times.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmjFkvsACgkQXdI8zGhq\npiOqoQ//YrmbRy77kmljtmqEMbUjUgVSbIAwP2S9N8pzpDK5n90FNzPlEOcB/A8u\nPeARwZiSfaGBamxTprjn+L3g9VX0Ecg/Rc3uKUOiUnxvEEXYE8IsFrYk6K2+zSvd\nhm4McZR20kTc6CJzOkmLNcXPO6EH67ZKSJSWEgDKPD8MdrtKjNH3oHLB6d/Ut5lA\nVnOWS2Lc5Ylzn8re2hRIM/upeCDy0NbWcFVAcnu1BcXVgtjyV4XwI+zupbkYvFYp\nHZ3+1B3w4pqsCwaqs4vXrpIotmcwGE3v0ZOUrFPOa6T9moMOT4I6bvpGFzApHiKu\nVpscPFBpiTvPfnaF7uCbssEluhU3z+Tg9s+2ZQ7CKj/me4zxgkHs4j5VbeRVrv2C\nZf4SchN2FKlQyHRtvEe1UIEEzGSC/FhdL3EZ7jyTa/MR0hmFIu6w1TXsU2B7Gskv\n+zED4OUZRNhZj0hYRRXQ8UKHk9Bf2rJ6/aH0o1cVroRVUutKhGLJe8CobyX6ME/T\n0VEeit+ZV7ww5x9eTwiZqORc75SjNsr6eT30FS2UAAss3iwnrD1wQG5aAsk/XsCf\nPdk5d+bzTDSDJHzBfGXovaMZTMCf/jNwmQRVry26QSMkYMYZW1QCByY3HCuZHFVs\no4Dxlh3AKmb0LkHSsSv/obX5QmGKYQn6EoQuJi4xnQWC0QDfPDY=\n=gx9A\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/43f02b3d6df88398c2f9248afbaf8f73f5b346f0",
          "sha": "43f02b3d6df88398c2f9248afbaf8f73f5b346f0",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/43f02b3d6df88398c2f9248afbaf8f73f5b346f0"
        }
      ],
      "message": "test: support running specific tests/modules targets\n\nAdd support for specifying single tests or modules to run via the\n\"-target\" or \"-t\" command-line option. Multiple targets can be\nprovided; only the specified tests or all tests in the specified\nmodule/s will run instead of the full suite.\n\nExamples:\n-t=<test name> runs an specific test.\n-t=<module name> runs all tests within the specified module.\n\nBoth options can be provided multiple times.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-13T15:51:23Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-03T21:18:23Z"
      },
      "sha": "5bfddc4c675cae716c06994ba5734658910f8b61"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDViMjYwY2Y0YTk1ZmM4OWE0ZTY1ODM5ODVmYjUyZTIzYmNlNjE0M2Q",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5b260cf4a95fc89a4e6583985fb52e23bce6143d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5b260cf4a95fc89a4e6583985fb52e23bce6143d",
      "tree": {
        "sha": "83ccaa237bd0ebf704568708e7a2f810fbf65b76",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/83ccaa237bd0ebf704568708e7a2f810fbf65b76"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 83ccaa237bd0ebf704568708e7a2f810fbf65b76\nparent 5bfddc4c675cae716c06994ba5734658910f8b61\nauthor furszy <matiasfurszyfer@protonmail.com> 1757355432 -0400\ncommitter furszy <matiasfurszyfer@protonmail.com> 1757778683 -0400\n\ntest: Add option to display all available tests\n\nUseful option to avoid opening the large tests.c file just to find\nthe test case you want to run.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmjFkvsACgkQXdI8zGhq\npiMXkQ//f4ytpL4kNN+T55HV6p8MHReuDjMwhE2JoO8dW7sv7baxVWMuYbbS5ZKG\nzrHMzyu9eZn8DFl6P0Sjph85QqgRIf++C0gICx6QkzKlCeBlWVDppbZIMPmwUDRB\n89qkPWIfZtPEkekhUQuxfb6bTpVznq9blICQvfFxuogEAzSfd+XIeHghQu2dhj2Z\nOuF6H6ia6jzeGGb5zFBm2tj8Y3s0AoXmFcqv+maufc7K2K8GaPxJiPi+pao1EKkp\nMXca8Ya5kfcSVjHbse+kjZ7ny/MEPpYEKOunS3cyYE1OXHsl74iB8KI7K/K9QXn4\nF7u4H1mdgdIOMjo31hml6tJs1rPAZLXMLGq7qIWzM4URVmhIqi69E0ZqkMREyXDL\n/uR2QPiVowpWkQp3XocXJeOSsSY8CdXlpKcs12CLpgU77UP+XzZdXVGFKtenucLN\nSL0ipAyh72OwXIX8N/mpw7JymDVbhaGV20ZFRlGWb4R/D6okozjx1WUQKhHsasAH\nt2b+sTadYteFYA6OfkpAZWzy6/Y4U4tbETU57/D7QhGwxB9Ny5GlMSPZRzUWinNG\nL15mB2T0R9R4hGrGpX8FqZVTOeNuPBO5cPpzCdfY+Vp0UVUyJvuunIIxP9Mhx20A\nVqztk+CRwzBvDMc+c8UCpBw5mOacV61v3nc/oUnUb2E3XWElcSM=\n=sR+0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5bfddc4c675cae716c06994ba5734658910f8b61",
          "sha": "5bfddc4c675cae716c06994ba5734658910f8b61",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5bfddc4c675cae716c06994ba5734658910f8b61"
        }
      ],
      "message": "test: Add option to display all available tests\n\nUseful option to avoid opening the large tests.c file just to find\nthe test case you want to run.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-13T15:51:23Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-08T18:17:12Z"
      },
      "sha": "5b260cf4a95fc89a4e6583985fb52e23bce6143d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDcyNmU3MGI4OTlmMzcwZTI2OTkwZDc0ZGZiZGRlMWQ2ZGY1ZGRkMTE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "tree": {
        "sha": "7f6a30306addc1f8aae222c4e0ac9f8f8dc5f6f9",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/7f6a30306addc1f8aae222c4e0ac9f8f8dc5f6f9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7f6a30306addc1f8aae222c4e0ac9f8f8dc5f6f9\nparent 5b260cf4a95fc89a4e6583985fb52e23bce6143d\nauthor furszy <matiasfurszyfer@protonmail.com> 1757430125 -0400\ncommitter furszy <matiasfurszyfer@protonmail.com> 1757778684 -0400\n\ntest: add -log option to display tests execution\n\nWhen enabled (-log=1), shows test start, completion, and execution time.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmjFkvwACgkQXdI8zGhq\npiMInRAAgyZv5FwxDNLlKMNXqSVdhxBRsrWGQMTmWyc0vX5ypW5OXWHK7PxChAk9\nbjlwRBTI+z8un8GTUBJiPfhqTE+dMjbrPYavZTwXZCvBWQZMmDOwnZBeUMynG6jg\nKxkGPIGYP+WyRFVjV1OF+M8uBjklCA+aDLCoqaNntFM6HoKN7DovFQg8Hnfq9mPc\nxotB5VL+guKTIB+oc0sFj13LQFD+exf/x7yQqiQx4gOjSZihlIe420WdKEdrXh64\nwxNFI+ND/EoBG8gEluTc7bZE59kM2rApC+AJt93tcBwhWp0wSM5zhHbsXA9YK1iM\neXtYTn67oJ1Z9UBVYxYkSlqTXZfXqyd3Xx7CRKMetXO/fsnQB2d/urcAV1RpRU24\ns4gNBzig/LNsvOWVng23CNK1lpku5njsdqbWj7jsiVu1+q2N+SqoAycnsmxsCQYZ\n4L8qr7XJkijVTlv0+LkJZEfE1jPBjS7+e6DJDUCr3OAh+nU/JUTu+uDNSQxxDw8I\nQOvvwzpp8m9ZjmuEOoyXE6mvBpsb+VS5169OKXUwKfOUiMLXnua/D1bbvoHAatev\ntta5lHxIhr0glt26Y/o6ZaBC8ue/49v/MZkTdhHg4IijilBzyt3ywWFkiDV2sGkD\ns4FxDg4rBq+xiwgjcNVS+QHTLx+Zqu3meh0g0iIeDsQlm0xffHg=\n=faOu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5b260cf4a95fc89a4e6583985fb52e23bce6143d",
          "sha": "5b260cf4a95fc89a4e6583985fb52e23bce6143d",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5b260cf4a95fc89a4e6583985fb52e23bce6143d"
        }
      ],
      "message": "test: add -log option to display tests execution\n\nWhen enabled (-log=1), shows test start, completion, and execution time.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-13T15:51:24Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2025-09-09T15:02:05Z"
      },
      "sha": "726e70b899f370e26990d74dfbdde1d6df5ddd11"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19685480168,
      "node_id": "HRFPE_lADOAP4Jqs7JvTsvzwAAAASVWJbo",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19685480168",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "commit_url": "https://api.github.com/repos/furszy/secp256k1/commits/726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "created_at": "2025-09-14T13:34:59Z"
    },
    {
      "event": "commented",
      "id": 3289554155,
      "node_id": "IC_kwDOAP4Jqs7EEpzr",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3289554155",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-14T13:38:24Z",
      "updated_at": "2025-09-14T13:38:24Z",
      "author_association": "MEMBER",
      "body": "Updated per feedback, thanks Hebasto!  \r\nMoved the headers existence check to the build systems (both).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#issuecomment-3289554155",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1734"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2324239128",
      "pull_request_review_id": 3188181909,
      "id": 2324239128,
      "node_id": "PRRC_kwDOAP4Jqs6KiRMY",
      "diff_hunk": "",
      "path": "src/util.h",
      "position": 1,
      "original_position": 1,
      "commit_id": "5fcb69c5f126d321b3202ccea5a5a1056e00d690",
      "original_commit_id": "8a3b9d3141ba66bf5a759854abbaa2257cf56c30",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The commit message says that the function is moved to `testutil.h` but it's actually moved to `util.h`, which is included in the library. But we don't want to add a dependency on headers like `<time.h>` in the real library (we currently call only `malloc`, `free`, `printf`, and `abort` and even these can be avoided if the user insists).\r\n\r\nI think it's perfectly fine to include `testutil.h` in the benchmarks if this is necessary to avoid code duplication.",
      "created_at": "2025-09-05T06:40:27Z",
      "updated_at": "2025-09-05T06:40:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2324239128",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2324239128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2325662100",
      "pull_request_review_id": 3190193578,
      "id": 2325662100,
      "node_id": "PRRC_kwDOAP4Jqs6KnsmU",
      "diff_hunk": "",
      "path": "src/util.h",
      "position": 1,
      "original_position": 1,
      "commit_id": "5fcb69c5f126d321b3202ccea5a5a1056e00d690",
      "original_commit_id": "8a3b9d3141ba66bf5a759854abbaa2257cf56c30",
      "in_reply_to_id": 2324239128,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> The commit message says that the function is moved to `testutil.h` but it's actually moved to `util.h`, which is included in the library. But we don't want to add a dependency on headers like `<time.h>` in the real library (we currently call only `malloc`, `free`, `printf`, and `abort` and even these can be avoided if the user insists).\r\n> \r\n> I think it's perfectly fine to include `testutil.h` in the benchmarks if this is necessary to avoid code duplication.\r\n\r\nYeah, I initially did that but ended up moving it to `util.h` (without updating the commit message…) because including `testutil.h` alone in the `bench.h` file was not enough. I also needed to include `testrand_impl.h` to get access to the testrand implementation (which was blocking me from doing it because I wasn’t expecting to have to include implementation files manually at the binary top level file - it just felt odd), as well as `time.h`, and change cmake for the benchmark target to get access to the precomputed tables files.\r\n\r\nBut all good now, got some clarifications from Pieter.\r\nPR updated per feedback. Thanks!",
      "created_at": "2025-09-05T17:24:37Z",
      "updated_at": "2025-09-05T17:25:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2325662100",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2325662100"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2334102368",
      "pull_request_review_id": 3202289828,
      "id": 2334102368,
      "node_id": "PRRC_kwDOAP4Jqs6LH5Ng",
      "diff_hunk": "@@ -7,9 +7,13 @@\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n+#include <time.h>\n \n+#include \"secp256k1.c\"",
      "path": "src/bench.c",
      "position": 1,
      "original_position": 6,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "4900aee07d528522098e82f4d7e45692407839e4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sorry, NACK this.\n\nThe (external) benchmark should link against the production-compiled library, not compile its own version.",
      "created_at": "2025-09-09T15:58:00Z",
      "updated_at": "2025-09-09T15:58:00Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2334102368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2334102368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2334181263",
      "pull_request_review_id": 3202409728,
      "id": 2334181263,
      "node_id": "PRRC_kwDOAP4Jqs6LIMeP",
      "diff_hunk": "@@ -7,9 +7,13 @@\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n+#include <time.h>\n \n+#include \"secp256k1.c\"",
      "path": "src/bench.c",
      "position": 1,
      "original_position": 6,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "4900aee07d528522098e82f4d7e45692407839e4",
      "in_reply_to_id": 2334102368,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "np, that's from the first move-only commit that is merely there to gain access to the existing `gettime()` function from the test framework. Worst-case scenario I can dedup the code (or create an `util_time.h` file). Will see how to adapt it. I remember that this had some extra complications because including `testutil.h` requires `secp256k1_pubkey_save` which only exists on `secp256k1.c`. But will check it again, I got more insights of the library now.",
      "created_at": "2025-09-09T16:31:47Z",
      "updated_at": "2025-09-09T16:36:08Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2334181263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2334181263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2334620199",
      "pull_request_review_id": 3203064618,
      "id": 2334620199,
      "node_id": "PRRC_kwDOAP4Jqs6LJ3on",
      "diff_hunk": "@@ -7,9 +7,13 @@\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n+#include <time.h>\n \n+#include \"secp256k1.c\"",
      "path": "src/bench.c",
      "position": 1,
      "original_position": 6,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "4900aee07d528522098e82f4d7e45692407839e4",
      "in_reply_to_id": 2334102368,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done, solved. Introduced a new file `tests_common.h`, to hold general-purpose utility functions shared across test programs that do not depend on the internal library. Which helps avoid code duplication.\r\n\r\nNote: we should probably consider renaming `testutil.h` to `testutil_internals.h` (or similar) to make it clear that it has access to library internals.",
      "created_at": "2025-09-09T19:51:55Z",
      "updated_at": "2025-09-09T19:52:06Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2334620199",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2334620199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2334678105",
      "pull_request_review_id": 3203150504,
      "id": 2334678105,
      "node_id": "PRRC_kwDOAP4Jqs6LKFxZ",
      "diff_hunk": "",
      "path": "src/util.h",
      "position": 1,
      "original_position": 1,
      "commit_id": "5fcb69c5f126d321b3202ccea5a5a1056e00d690",
      "original_commit_id": "8a3b9d3141ba66bf5a759854abbaa2257cf56c30",
      "in_reply_to_id": 2324239128,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "just in case; connecting this comment to https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2334181263 for the rationale behind the latest change.",
      "created_at": "2025-09-09T20:19:36Z",
      "updated_at": "2025-09-09T20:19:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2334678105",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2334678105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2337043438",
      "pull_request_review_id": 3206568066,
      "id": 2337043438,
      "node_id": "PRRC_kwDOAP4Jqs6LTHPu",
      "diff_hunk": "@@ -0,0 +1,408 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_UNIT_TEST_C\n+#define LIBSECP256K1_UNIT_TEST_C\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+/* Check for POSIX process headers */\n+#if defined(__has_include)\n+#  if __has_include(<sys/wait.h>) && __has_include(<unistd.h>)\n+#    include <sys/wait.h>\n+#    include <unistd.h>\n+/* Ensure pid_t is defined. Include <sys/types.h> only if necessary (strict C89 mode) */\n+#if !defined(_PID_T) && !defined(pid_t)\n+#   include <sys/types.h>\n+#endif\n+#    define SUPPORTS_CONCURRENCY 1\n+#  endif\n+#endif\n+#ifndef SUPPORTS_CONCURRENCY\n+#  define SUPPORTS_CONCURRENCY 0\n+#endif\n+\n+#include \"unit_test.h\"\n+#include \"testrand.h\"\n+#include \"tests_common.h\"\n+\n+/* Number of times certain tests will run */\n+int COUNT = 16;\n+\n+static int parse_jobs_count(const char* key, const char* value, struct Args* out);\n+static int parse_iterations(const char* arg);\n+static int parse_target(const char* value, struct TestFramework* tf);\n+\n+/*\n+ *   Main entry point for handling command-line arguments.\n+ *\n+ *   This function is responsible for parsing a single key/value pair\n+ *   (e.g., -jobs=4) and updating the provided Args struct accordingly.\n+ *\n+ *   Developers should extend this function whenever new command-line\n+ *   options are introduced. Each new argument should be validated,\n+ *   converted to the appropriate type, and stored in the 'Args' struct.\n+ */\n+static int parse_arg(const char* key, const char* value, struct TestFramework* tf) {\n+    /* Number of concurrent tasks */\n+    if (strcmp(key, \"j\") == 0 || strcmp(key, \"jobs\") == 0) {\n+        return parse_jobs_count(key, value, &tf->args);\n+    }\n+    /* Number of iterations */\n+    if (strcmp(key, \"iter\") == 0 || strcmp(key, \"iterations\") == 0) {\n+        return parse_iterations(value);\n+    }\n+    /* Custom seed */\n+    if (strcmp(key, \"seed\") == 0) {\n+        tf->args.custom_seed = (!value || strcmp(value, \"NULL\") == 0) ? NULL : value;\n+        return 0;\n+    }\n+    /* Test target */\n+    if (strcmp(key, \"t\") == 0 || strcmp(key, \"target\") == 0) {\n+        return parse_target(value, tf);\n+    }\n+    /* Logging */\n+    if (strcmp(key, \"log\") == 0) {\n+        tf->args.logging = value && strcmp(value, \"1\") == 0;\n+        return 0;\n+    }\n+\n+    /* Unknown key: report just so typos don’t silently pass. */\n+    printf(\"Unknown argument '-%s=%s'\\n\", key, value);\n+    return 0;\n+}\n+\n+static void help(void) {\n+    printf(\"Usage: ./tests [options]\\n\\n\");\n+    printf(\"Run the test suite for the project with optional configuration.\\n\\n\");\n+    printf(\"Options:\\n\");\n+    printf(\"    -help, -h                           Show this help message\\n\");\n+    printf(\"    -print_tests                        Display list of all available tests and modules\\n\");\n+    printf(\"    -j=<num>, -jobs=<num>               Number of parallel worker processes (default: 0 = sequential)\\n\");\n+    printf(\"    -iter=<num>, -iterations=<num>      Number of iterations for each test (default: 16)\\n\");\n+    printf(\"    -seed=<hex>                         Set a specific RNG seed (default: random)\\n\");\n+    printf(\"    -target=<test name>, -t=<name>      Run a specific test (can be provided multiple times)\\n\");\n+    printf(\"    -target=<module name>, -t=<module>  Run all tests within a specific module (can be provided multiple times)\\n\");",
      "path": "src/unit_test.c",
      "position": 77,
      "original_position": 90,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "aa5f041f2fe77624bb77fdb64ca6974b5cc23542",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there a specific reason to overload the `-target` option?  If not, could a different one be used instead?",
      "created_at": "2025-09-10T14:54:31Z",
      "updated_at": "2025-09-10T14:54:32Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2337043438",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2337043438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": 76,
      "original_start_line": 89,
      "start_side": "RIGHT",
      "line": 77,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2337097836",
      "pull_request_review_id": 3206646889,
      "id": 2337097836,
      "node_id": "PRRC_kwDOAP4Jqs6LTUhs",
      "diff_hunk": "@@ -0,0 +1,408 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_UNIT_TEST_C\n+#define LIBSECP256K1_UNIT_TEST_C\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+/* Check for POSIX process headers */\n+#if defined(__has_include)\n+#  if __has_include(<sys/wait.h>) && __has_include(<unistd.h>)\n+#    include <sys/wait.h>\n+#    include <unistd.h>\n+/* Ensure pid_t is defined. Include <sys/types.h> only if necessary (strict C89 mode) */\n+#if !defined(_PID_T) && !defined(pid_t)\n+#   include <sys/types.h>\n+#endif\n+#    define SUPPORTS_CONCURRENCY 1\n+#  endif\n+#endif\n+#ifndef SUPPORTS_CONCURRENCY\n+#  define SUPPORTS_CONCURRENCY 0\n+#endif\n+\n+#include \"unit_test.h\"\n+#include \"testrand.h\"\n+#include \"tests_common.h\"\n+\n+/* Number of times certain tests will run */\n+int COUNT = 16;\n+\n+static int parse_jobs_count(const char* key, const char* value, struct Args* out);\n+static int parse_iterations(const char* arg);\n+static int parse_target(const char* value, struct TestFramework* tf);\n+\n+/*\n+ *   Main entry point for handling command-line arguments.\n+ *\n+ *   This function is responsible for parsing a single key/value pair\n+ *   (e.g., -jobs=4) and updating the provided Args struct accordingly.\n+ *\n+ *   Developers should extend this function whenever new command-line\n+ *   options are introduced. Each new argument should be validated,\n+ *   converted to the appropriate type, and stored in the 'Args' struct.\n+ */\n+static int parse_arg(const char* key, const char* value, struct TestFramework* tf) {\n+    /* Number of concurrent tasks */\n+    if (strcmp(key, \"j\") == 0 || strcmp(key, \"jobs\") == 0) {\n+        return parse_jobs_count(key, value, &tf->args);\n+    }\n+    /* Number of iterations */\n+    if (strcmp(key, \"iter\") == 0 || strcmp(key, \"iterations\") == 0) {\n+        return parse_iterations(value);\n+    }\n+    /* Custom seed */\n+    if (strcmp(key, \"seed\") == 0) {\n+        tf->args.custom_seed = (!value || strcmp(value, \"NULL\") == 0) ? NULL : value;\n+        return 0;\n+    }\n+    /* Test target */\n+    if (strcmp(key, \"t\") == 0 || strcmp(key, \"target\") == 0) {\n+        return parse_target(value, tf);\n+    }\n+    /* Logging */\n+    if (strcmp(key, \"log\") == 0) {\n+        tf->args.logging = value && strcmp(value, \"1\") == 0;\n+        return 0;\n+    }\n+\n+    /* Unknown key: report just so typos don’t silently pass. */\n+    printf(\"Unknown argument '-%s=%s'\\n\", key, value);\n+    return 0;\n+}\n+\n+static void help(void) {\n+    printf(\"Usage: ./tests [options]\\n\\n\");\n+    printf(\"Run the test suite for the project with optional configuration.\\n\\n\");\n+    printf(\"Options:\\n\");\n+    printf(\"    -help, -h                           Show this help message\\n\");\n+    printf(\"    -print_tests                        Display list of all available tests and modules\\n\");\n+    printf(\"    -j=<num>, -jobs=<num>               Number of parallel worker processes (default: 0 = sequential)\\n\");\n+    printf(\"    -iter=<num>, -iterations=<num>      Number of iterations for each test (default: 16)\\n\");\n+    printf(\"    -seed=<hex>                         Set a specific RNG seed (default: random)\\n\");\n+    printf(\"    -target=<test name>, -t=<name>      Run a specific test (can be provided multiple times)\\n\");\n+    printf(\"    -target=<module name>, -t=<module>  Run all tests within a specific module (can be provided multiple times)\\n\");",
      "path": "src/unit_test.c",
      "position": 77,
      "original_position": 90,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "aa5f041f2fe77624bb77fdb64ca6974b5cc23542",
      "in_reply_to_id": 2337043438,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Is there a specific reason to overload the `-target` option? If not, could a different one be used instead?\r\n\r\nMainly because both are targets; the only diff is that one target runs more test cases than the other one.\r\nIn general, it’s similar to how most unit test frameworks work. For example, on `boost` and `gtest` you can run groups of tests and single tests with the same command (`--run_test` and `--gtest_filter` respectively); the only diff with them is that they add the module name as a prefix when specifying single test case (which we could also do here).",
      "created_at": "2025-09-10T15:13:49Z",
      "updated_at": "2025-09-10T15:13:49Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2337097836",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2337097836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": 76,
      "original_start_line": 89,
      "start_side": "RIGHT",
      "line": 77,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2337453799",
      "pull_request_review_id": 3207167380,
      "id": 2337453799,
      "node_id": "PRRC_kwDOAP4Jqs6LUrbn",
      "diff_hunk": "@@ -0,0 +1,408 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_UNIT_TEST_C\n+#define LIBSECP256K1_UNIT_TEST_C\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+/* Check for POSIX process headers */\n+#if defined(__has_include)\n+#  if __has_include(<sys/wait.h>) && __has_include(<unistd.h>)\n+#    include <sys/wait.h>\n+#    include <unistd.h>\n+/* Ensure pid_t is defined. Include <sys/types.h> only if necessary (strict C89 mode) */\n+#if !defined(_PID_T) && !defined(pid_t)\n+#   include <sys/types.h>\n+#endif\n+#    define SUPPORTS_CONCURRENCY 1\n+#  endif\n+#endif\n+#ifndef SUPPORTS_CONCURRENCY\n+#  define SUPPORTS_CONCURRENCY 0\n+#endif\n+\n+#include \"unit_test.h\"\n+#include \"testrand.h\"\n+#include \"tests_common.h\"\n+\n+/* Number of times certain tests will run */\n+int COUNT = 16;\n+\n+static int parse_jobs_count(const char* key, const char* value, struct Args* out);\n+static int parse_iterations(const char* arg);\n+static int parse_target(const char* value, struct TestFramework* tf);\n+\n+/*\n+ *   Main entry point for handling command-line arguments.\n+ *\n+ *   This function is responsible for parsing a single key/value pair\n+ *   (e.g., -jobs=4) and updating the provided Args struct accordingly.\n+ *\n+ *   Developers should extend this function whenever new command-line\n+ *   options are introduced. Each new argument should be validated,\n+ *   converted to the appropriate type, and stored in the 'Args' struct.\n+ */\n+static int parse_arg(const char* key, const char* value, struct TestFramework* tf) {\n+    /* Number of concurrent tasks */\n+    if (strcmp(key, \"j\") == 0 || strcmp(key, \"jobs\") == 0) {\n+        return parse_jobs_count(key, value, &tf->args);\n+    }\n+    /* Number of iterations */\n+    if (strcmp(key, \"iter\") == 0 || strcmp(key, \"iterations\") == 0) {\n+        return parse_iterations(value);\n+    }\n+    /* Custom seed */\n+    if (strcmp(key, \"seed\") == 0) {\n+        tf->args.custom_seed = (!value || strcmp(value, \"NULL\") == 0) ? NULL : value;\n+        return 0;\n+    }\n+    /* Test target */\n+    if (strcmp(key, \"t\") == 0 || strcmp(key, \"target\") == 0) {\n+        return parse_target(value, tf);\n+    }\n+    /* Logging */\n+    if (strcmp(key, \"log\") == 0) {\n+        tf->args.logging = value && strcmp(value, \"1\") == 0;\n+        return 0;\n+    }\n+\n+    /* Unknown key: report just so typos don’t silently pass. */\n+    printf(\"Unknown argument '-%s=%s'\\n\", key, value);\n+    return 0;\n+}\n+\n+static void help(void) {\n+    printf(\"Usage: ./tests [options]\\n\\n\");\n+    printf(\"Run the test suite for the project with optional configuration.\\n\\n\");\n+    printf(\"Options:\\n\");\n+    printf(\"    -help, -h                           Show this help message\\n\");\n+    printf(\"    -print_tests                        Display list of all available tests and modules\\n\");\n+    printf(\"    -j=<num>, -jobs=<num>               Number of parallel worker processes (default: 0 = sequential)\\n\");\n+    printf(\"    -iter=<num>, -iterations=<num>      Number of iterations for each test (default: 16)\\n\");\n+    printf(\"    -seed=<hex>                         Set a specific RNG seed (default: random)\\n\");\n+    printf(\"    -target=<test name>, -t=<name>      Run a specific test (can be provided multiple times)\\n\");\n+    printf(\"    -target=<module name>, -t=<module>  Run all tests within a specific module (can be provided multiple times)\\n\");",
      "path": "src/unit_test.c",
      "position": 77,
      "original_position": 90,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "aa5f041f2fe77624bb77fdb64ca6974b5cc23542",
      "in_reply_to_id": 2337043438,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right. Let's keep it this way. It works nicely with CMake code. See https://github.com/hebasto/secp256k1/commit/3ff3105edc5e78aaceae0dddba5f788ec83a163d.",
      "created_at": "2025-09-10T17:31:09Z",
      "updated_at": "2025-09-10T17:31:27Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2337453799",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2337453799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": 76,
      "original_start_line": 89,
      "start_side": "RIGHT",
      "line": 77,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2340169815",
      "pull_request_review_id": 3210722154,
      "id": 2340169815,
      "node_id": "PRRC_kwDOAP4Jqs6LfChX",
      "diff_hunk": "@@ -0,0 +1,40 @@\n+/***********************************************************************\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_TEST_COMMON_H\n+#define LIBSECP256K1_TEST_COMMON_H\n+\n+/***********************************************************************\n+ * Test Support Utilities\n+ *\n+ * This file provides general-purpose functions for tests and benchmark\n+ * programs. Unlike testutil.h, this file is not linked to the library,\n+ * allowing each program to choose whether to run against the production\n+ * API or access library internals directly.\n+ ***********************************************************************/\n+\n+#if (defined(_MSC_VER) && _MSC_VER >= 1900)\n+#  include <time.h>\n+#else\n+#  include <sys/time.h>\n+#endif",
      "path": "src/tests_common.h",
      "position": 24,
      "original_position": 22,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a759cf5b9408ca630654e04faea56ff4f6944d45:\r\n\r\nInclude `<stdint.h>` for `int64_t`?",
      "created_at": "2025-09-11T10:58:28Z",
      "updated_at": "2025-09-11T11:47:16Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2340169815",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2340169815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": 20,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2340384653",
      "pull_request_review_id": 3210722154,
      "id": 2340384653,
      "node_id": "PRRC_kwDOAP4Jqs6Lf2-N",
      "diff_hunk": "@@ -25,6 +25,8 @@\n #include \"checkmem.h\"\n #include \"testutil.h\"\n #include \"util.h\"\n+#include \"unit_test.h\"\n+#include \"unit_test.c\"",
      "path": "src/tests.c",
      "position": 5,
      "original_position": 5,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "e262ba546a9d7b1e7a5977613efe36ff2c67b313:\r\n\r\nI believe there's no reason to keep everything in a single translation unit. Tests are not such a performance-critical task. And this pattern really confuses static analysis tools.\r\n\r\nLet's keep it as a separate module, for example, as done in [this](https://github.com/hebasto/secp256k1/commits/pr1734/0911.2c.alt/) branch.",
      "created_at": "2025-09-11T11:43:15Z",
      "updated_at": "2025-09-11T11:47:16Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2340384653",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2340384653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341117736",
      "pull_request_review_id": 3211924681,
      "id": 2341117736,
      "node_id": "PRRC_kwDOAP4Jqs6Lip8o",
      "diff_hunk": "@@ -25,6 +25,8 @@\n #include \"checkmem.h\"\n #include \"testutil.h\"\n #include \"util.h\"\n+#include \"unit_test.h\"\n+#include \"unit_test.c\"",
      "path": "src/tests.c",
      "position": 5,
      "original_position": 5,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "in_reply_to_id": 2340384653,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just left you a comment there: https://github.com/hebasto/secp256k1/commit/082b928b7d16f83d8749a695f2a4b4e293e322a4#r165610965",
      "created_at": "2025-09-11T14:20:51Z",
      "updated_at": "2025-09-11T14:20:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2341117736",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341117736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341119665",
      "pull_request_review_id": 3211927153,
      "id": 2341119665,
      "node_id": "PRRC_kwDOAP4Jqs6Liqax",
      "diff_hunk": "@@ -0,0 +1,408 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_UNIT_TEST_C\n+#define LIBSECP256K1_UNIT_TEST_C\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+/* Check for POSIX process headers */\n+#if defined(__has_include)\n+#  if __has_include(<sys/wait.h>) && __has_include(<unistd.h>)\n+#    include <sys/wait.h>\n+#    include <unistd.h>\n+/* Ensure pid_t is defined. Include <sys/types.h> only if necessary (strict C89 mode) */\n+#if !defined(_PID_T) && !defined(pid_t)\n+#   include <sys/types.h>\n+#endif\n+#    define SUPPORTS_CONCURRENCY 1\n+#  endif\n+#endif\n+#ifndef SUPPORTS_CONCURRENCY\n+#  define SUPPORTS_CONCURRENCY 0\n+#endif\n+\n+#include \"unit_test.h\"\n+#include \"testrand.h\"\n+#include \"tests_common.h\"\n+\n+/* Number of times certain tests will run */\n+int COUNT = 16;\n+\n+static int parse_jobs_count(const char* key, const char* value, struct Args* out);\n+static int parse_iterations(const char* arg);\n+static int parse_target(const char* value, struct TestFramework* tf);\n+\n+/*\n+ *   Main entry point for handling command-line arguments.\n+ *\n+ *   This function is responsible for parsing a single key/value pair\n+ *   (e.g., -jobs=4) and updating the provided Args struct accordingly.\n+ *\n+ *   Developers should extend this function whenever new command-line\n+ *   options are introduced. Each new argument should be validated,\n+ *   converted to the appropriate type, and stored in the 'Args' struct.\n+ */\n+static int parse_arg(const char* key, const char* value, struct TestFramework* tf) {\n+    /* Number of concurrent tasks */\n+    if (strcmp(key, \"j\") == 0 || strcmp(key, \"jobs\") == 0) {\n+        return parse_jobs_count(key, value, &tf->args);\n+    }\n+    /* Number of iterations */\n+    if (strcmp(key, \"iter\") == 0 || strcmp(key, \"iterations\") == 0) {\n+        return parse_iterations(value);\n+    }\n+    /* Custom seed */\n+    if (strcmp(key, \"seed\") == 0) {\n+        tf->args.custom_seed = (!value || strcmp(value, \"NULL\") == 0) ? NULL : value;\n+        return 0;\n+    }\n+    /* Test target */\n+    if (strcmp(key, \"t\") == 0 || strcmp(key, \"target\") == 0) {\n+        return parse_target(value, tf);\n+    }\n+    /* Logging */\n+    if (strcmp(key, \"log\") == 0) {\n+        tf->args.logging = value && strcmp(value, \"1\") == 0;\n+        return 0;\n+    }\n+\n+    /* Unknown key: report just so typos don’t silently pass. */\n+    printf(\"Unknown argument '-%s=%s'\\n\", key, value);\n+    return 0;\n+}\n+\n+static void help(void) {\n+    printf(\"Usage: ./tests [options]\\n\\n\");\n+    printf(\"Run the test suite for the project with optional configuration.\\n\\n\");\n+    printf(\"Options:\\n\");\n+    printf(\"    -help, -h                           Show this help message\\n\");\n+    printf(\"    -print_tests                        Display list of all available tests and modules\\n\");\n+    printf(\"    -j=<num>, -jobs=<num>               Number of parallel worker processes (default: 0 = sequential)\\n\");\n+    printf(\"    -iter=<num>, -iterations=<num>      Number of iterations for each test (default: 16)\\n\");\n+    printf(\"    -seed=<hex>                         Set a specific RNG seed (default: random)\\n\");\n+    printf(\"    -target=<test name>, -t=<name>      Run a specific test (can be provided multiple times)\\n\");\n+    printf(\"    -target=<module name>, -t=<module>  Run all tests within a specific module (can be provided multiple times)\\n\");",
      "path": "src/unit_test.c",
      "position": 77,
      "original_position": 90,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "aa5f041f2fe77624bb77fdb64ca6974b5cc23542",
      "in_reply_to_id": 2337043438,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nice!",
      "created_at": "2025-09-11T14:21:12Z",
      "updated_at": "2025-09-11T14:21:12Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2341119665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341119665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": 76,
      "original_start_line": 89,
      "start_side": "RIGHT",
      "line": 77,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341438215",
      "pull_request_review_id": 3212354514,
      "id": 2341438215,
      "node_id": "PRRC_kwDOAP4Jqs6Lj4MH",
      "diff_hunk": "@@ -25,6 +25,8 @@\n #include \"checkmem.h\"\n #include \"testutil.h\"\n #include \"util.h\"\n+#include \"unit_test.h\"\n+#include \"unit_test.c\"",
      "path": "src/tests.c",
      "position": 5,
      "original_position": 5,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "in_reply_to_id": 2340384653,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Cross-posting from https://github.com/hebasto/secp256k1/commit/082b928b7d16f83d8749a695f2a4b4e293e322a4#r165610965:\r\n\r\n@sipa [wrote](https://github.com/hebasto/secp256k1/commit/082b928b7d16f83d8749a695f2a4b4e293e322a4#r165614536):\r\n> The design is there because of performance, to allow inlining across the layers.\r\n>\r\n> That's indeed unnecessary in tests, but that's not a reason to deviate from the design; consistency is nice.\r\n\r\n@hebasto [wrote](https://github.com/hebasto/secp256k1/commit/082b928b7d16f83d8749a695f2a4b4e293e322a4#r165614984):\r\n> While consistency is indeed nice, I still see a reason for doing this, namely, more efficient use of static code analysis tools.",
      "created_at": "2025-09-11T15:26:55Z",
      "updated_at": "2025-09-11T15:26:55Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2341438215",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341438215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341503245",
      "pull_request_review_id": 3212434784,
      "id": 2341503245,
      "node_id": "PRRC_kwDOAP4Jqs6LkIEN",
      "diff_hunk": "@@ -7666,179 +7679,179 @@ static void run_cmov_tests(void) {\n     ge_storage_cmov_test();\n }\n \n-int main(int argc, char **argv) {\n-    /* Disable buffering for stdout to improve reliability of getting\n-     * diagnostic information. Happens right at the start of main because\n-     * setbuf must be used before any other operation on the stream. */\n-    setbuf(stdout, NULL);\n-    /* Also disable buffering for stderr because it's not guaranteed that it's\n-     * unbuffered on all systems. */\n-    setbuf(stderr, NULL);\n-\n-    /* find iteration count */\n-    if (argc > 1) {\n-        COUNT = strtol(argv[1], NULL, 0);\n-    } else {\n-        const char* env = getenv(\"SECP256K1_TEST_ITERS\");\n-        if (env && strlen(env) > 0) {\n-            COUNT = strtol(env, NULL, 0);\n-        }\n-    }\n-    if (COUNT <= 0) {\n-        fputs(\"An iteration count of 0 or less is not allowed.\\n\", stderr);\n-        return EXIT_FAILURE;\n-    }\n-    printf(\"test count = %i\\n\", COUNT);\n+/* --------------------------------------------------------- */\n+/* Test Registry                                             */\n+/* --------------------------------------------------------- */\n \n-    /* run test RNG tests (must run before we really initialize the test RNG) */\n-    run_xoshiro256pp_tests();\n+/* --- Context Independent --- */\n+static struct TestEntry tests_no_ctx[] = {\n+    CASE(xoshiro256pp_tests),\n+    {NULL, NULL}",
      "path": "src/tests.c",
      "position": 1,
      "original_position": 79,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "e262ba546a9d7b1e7a5977613efe36ff2c67b313:\r\n\r\nWhy is this necessary?",
      "created_at": "2025-09-11T15:41:18Z",
      "updated_at": "2025-09-11T15:41:18Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2341503245",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341503245"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7689,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341626289",
      "pull_request_review_id": 3212590094,
      "id": 2341626289,
      "node_id": "PRRC_kwDOAP4Jqs6LkmGx",
      "diff_hunk": "@@ -7666,179 +7679,179 @@ static void run_cmov_tests(void) {\n     ge_storage_cmov_test();\n }\n \n-int main(int argc, char **argv) {\n-    /* Disable buffering for stdout to improve reliability of getting\n-     * diagnostic information. Happens right at the start of main because\n-     * setbuf must be used before any other operation on the stream. */\n-    setbuf(stdout, NULL);\n-    /* Also disable buffering for stderr because it's not guaranteed that it's\n-     * unbuffered on all systems. */\n-    setbuf(stderr, NULL);\n-\n-    /* find iteration count */\n-    if (argc > 1) {\n-        COUNT = strtol(argv[1], NULL, 0);\n-    } else {\n-        const char* env = getenv(\"SECP256K1_TEST_ITERS\");\n-        if (env && strlen(env) > 0) {\n-            COUNT = strtol(env, NULL, 0);\n-        }\n-    }\n-    if (COUNT <= 0) {\n-        fputs(\"An iteration count of 0 or less is not allowed.\\n\", stderr);\n-        return EXIT_FAILURE;\n-    }\n-    printf(\"test count = %i\\n\", COUNT);\n+/* --------------------------------------------------------- */\n+/* Test Registry                                             */\n+/* --------------------------------------------------------- */\n \n-    /* run test RNG tests (must run before we really initialize the test RNG) */\n-    run_xoshiro256pp_tests();\n+/* --- Context Independent --- */\n+static struct TestEntry tests_no_ctx[] = {\n+    CASE(xoshiro256pp_tests),\n+    {NULL, NULL}",
      "path": "src/tests.c",
      "position": 1,
      "original_position": 79,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "in_reply_to_id": 2341503245,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The sentinel avoids specifying the array size for this special case, which is not included in the general modules list. I could include the size to match the structure of the others as well. This was just a small shortcut to avoid doing so.",
      "created_at": "2025-09-11T16:10:02Z",
      "updated_at": "2025-09-11T16:10:23Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2341626289",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341626289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7689,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341753619",
      "pull_request_review_id": 3212773917,
      "id": 2341753619,
      "node_id": "PRRC_kwDOAP4Jqs6LlFMT",
      "diff_hunk": "@@ -25,6 +25,8 @@\n #include \"checkmem.h\"\n #include \"testutil.h\"\n #include \"util.h\"\n+#include \"unit_test.h\"\n+#include \"unit_test.c\"",
      "path": "src/tests.c",
      "position": 5,
      "original_position": 5,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "in_reply_to_id": 2340384653,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> And this pattern really confuses static analysis tools.\r\n\r\n@furszy asked me offline to provide an example of such a tool in use.\r\n\r\nLet's take [IWYU](https://include-what-you-use.org/) as an example and run it as follows:\r\n```\r\ncmake -B build -DCMAKE_C_COMPILER=clang-19 -DCMAKE_C_INCLUDE_WHAT_YOU_USE=include-what-you-use\r\ncmake --build build -t tests\r\n```\r\n\r\nWhen run on the [branch](https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2340384653) with a separate TU, it correctly identifies a [missing](https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2340169815) header:\r\n```\r\n[ 60%] Building C object src/CMakeFiles/unit_test.dir/unit_test.c.o\r\nWarning: include-what-you-use reported diagnostics:\r\n\r\n(/home/hebasto/dev/secp256k1/secp256k1/src/unit_test.h has correct #includes/fwd-decls)\r\n\r\n/home/hebasto/dev/secp256k1/secp256k1/src/unit_test.c should add these lines:\r\n#include <stdint.h>         // for int64_t\r\n\r\n/home/hebasto/dev/secp256k1/secp256k1/src/unit_test.c should remove these lines:\r\n\r\nThe full include-list for /home/hebasto/dev/secp256k1/secp256k1/src/unit_test.c:\r\n#include \"unit_test.h\"\r\n#include <stdint.h>         // for int64_t\r\n#include <stdio.h>          // for fprintf, printf, NULL, stderr, perror\r\n#include <stdlib.h>         // for EXIT_FAILURE, strtol, EXIT_SUCCESS, getenv\r\n#include <string.h>         // for strcmp, strchr, strlen\r\n#include <sys/types.h>      // for pid_t\r\n#include <sys/wait.h>       // for waitpid\r\n#include <unistd.h>         // for close, _exit, fork, pipe, read, write\r\n#include \"testrand_impl.h\"  // for testrand_init\r\n#include \"tests_common.h\"   // for gettime_i64\r\n---\r\n```\r\n\r\nOn this branch, `unit_test.c` is skipped during analysis (and I assume the same would happen with other tools).",
      "created_at": "2025-09-11T16:50:05Z",
      "updated_at": "2025-09-11T16:52:08Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2341753619",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2341753619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2344392807",
      "pull_request_review_id": 3216917039,
      "id": 2344392807,
      "node_id": "PRRC_kwDOAP4Jqs6LvJhn",
      "diff_hunk": "@@ -0,0 +1,40 @@\n+/***********************************************************************\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_TEST_COMMON_H",
      "path": "src/tests_common.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "a759cf5b9408ca630654e04faea56ff4f6944d45",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit, for consistency with other headers:\r\n```suggestion\r\n#ifndef SECP256K1_TEST_COMMON_H\r\n```",
      "created_at": "2025-09-12T14:14:01Z",
      "updated_at": "2025-09-12T15:09:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2344392807",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2344392807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2344409459",
      "pull_request_review_id": 3216917039,
      "id": 2344409459,
      "node_id": "PRRC_kwDOAP4Jqs6LvNlz",
      "diff_hunk": "@@ -0,0 +1,293 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_UNIT_TEST_C\n+#define LIBSECP256K1_UNIT_TEST_C",
      "path": "src/unit_test.c",
      "position": 1,
      "original_position": 8,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "e262ba546a9d7b1e7a5977613efe36ff2c67b313",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "seems unusual to have include guards for .c files and we currently don't follow that practice (looking at e.g. `secp256k1.c`), I presume we prefer a compile error if someone ever tried to include a .c file (which itself is already very unusual as well :p) more than once per translation unit?",
      "created_at": "2025-09-12T14:20:38Z",
      "updated_at": "2025-09-12T15:09:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2344409459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2344409459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2344524292",
      "pull_request_review_id": 3216917039,
      "id": 2344524292,
      "node_id": "PRRC_kwDOAP4Jqs6LvpoE",
      "diff_hunk": "@@ -7666,179 +7679,179 @@ static void run_cmov_tests(void) {\n     ge_storage_cmov_test();\n }\n \n-int main(int argc, char **argv) {\n-    /* Disable buffering for stdout to improve reliability of getting\n-     * diagnostic information. Happens right at the start of main because\n-     * setbuf must be used before any other operation on the stream. */\n-    setbuf(stdout, NULL);\n-    /* Also disable buffering for stderr because it's not guaranteed that it's\n-     * unbuffered on all systems. */\n-    setbuf(stderr, NULL);\n-\n-    /* find iteration count */\n-    if (argc > 1) {\n-        COUNT = strtol(argv[1], NULL, 0);\n-    } else {\n-        const char* env = getenv(\"SECP256K1_TEST_ITERS\");\n-        if (env && strlen(env) > 0) {\n-            COUNT = strtol(env, NULL, 0);\n-        }\n-    }\n-    if (COUNT <= 0) {\n-        fputs(\"An iteration count of 0 or less is not allowed.\\n\", stderr);\n-        return EXIT_FAILURE;\n-    }\n-    printf(\"test count = %i\\n\", COUNT);\n+/* --------------------------------------------------------- */\n+/* Test Registry                                             */\n+/* --------------------------------------------------------- */\n \n-    /* run test RNG tests (must run before we really initialize the test RNG) */\n-    run_xoshiro256pp_tests();\n+/* --- Context Independent --- */\n+static struct TestEntry tests_no_ctx[] = {\n+    CASE(xoshiro256pp_tests),\n+    {NULL, NULL}",
      "path": "src/tests.c",
      "position": 1,
      "original_position": 79,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "in_reply_to_id": 2341503245,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Was a bit confused as well to see these values only in a single `TestEntry` array, would suggest to either use sentinels for all of the arrays or for none of them for consistency.",
      "created_at": "2025-09-12T15:01:33Z",
      "updated_at": "2025-09-12T15:09:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2344524292",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2344524292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7689,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2345133817",
      "pull_request_review_id": 3218331957,
      "id": 2345133817,
      "node_id": "PRRC_kwDOAP4Jqs6Lx-b5",
      "diff_hunk": "@@ -0,0 +1,40 @@\n+/***********************************************************************\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_TEST_COMMON_H",
      "path": "src/tests_common.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "a759cf5b9408ca630654e04faea56ff4f6944d45",
      "in_reply_to_id": 2344392807,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done, thanks.",
      "created_at": "2025-09-12T18:40:31Z",
      "updated_at": "2025-09-12T18:40:32Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2345133817",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2345133817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2345134183",
      "pull_request_review_id": 3218333507,
      "id": 2345134183,
      "node_id": "PRRC_kwDOAP4Jqs6Lx-hn",
      "diff_hunk": "@@ -0,0 +1,40 @@\n+/***********************************************************************\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_TEST_COMMON_H\n+#define LIBSECP256K1_TEST_COMMON_H\n+\n+/***********************************************************************\n+ * Test Support Utilities\n+ *\n+ * This file provides general-purpose functions for tests and benchmark\n+ * programs. Unlike testutil.h, this file is not linked to the library,\n+ * allowing each program to choose whether to run against the production\n+ * API or access library internals directly.\n+ ***********************************************************************/\n+\n+#if (defined(_MSC_VER) && _MSC_VER >= 1900)\n+#  include <time.h>\n+#else\n+#  include <sys/time.h>\n+#endif",
      "path": "src/tests_common.h",
      "position": 24,
      "original_position": 22,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "in_reply_to_id": 2340169815,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "updated, thanks",
      "created_at": "2025-09-12T18:40:43Z",
      "updated_at": "2025-09-12T18:40:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2345134183",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2345134183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": 20,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2345136818",
      "pull_request_review_id": 3218341450,
      "id": 2345136818,
      "node_id": "PRRC_kwDOAP4Jqs6Lx_Ky",
      "diff_hunk": "@@ -7666,179 +7679,179 @@ static void run_cmov_tests(void) {\n     ge_storage_cmov_test();\n }\n \n-int main(int argc, char **argv) {\n-    /* Disable buffering for stdout to improve reliability of getting\n-     * diagnostic information. Happens right at the start of main because\n-     * setbuf must be used before any other operation on the stream. */\n-    setbuf(stdout, NULL);\n-    /* Also disable buffering for stderr because it's not guaranteed that it's\n-     * unbuffered on all systems. */\n-    setbuf(stderr, NULL);\n-\n-    /* find iteration count */\n-    if (argc > 1) {\n-        COUNT = strtol(argv[1], NULL, 0);\n-    } else {\n-        const char* env = getenv(\"SECP256K1_TEST_ITERS\");\n-        if (env && strlen(env) > 0) {\n-            COUNT = strtol(env, NULL, 0);\n-        }\n-    }\n-    if (COUNT <= 0) {\n-        fputs(\"An iteration count of 0 or less is not allowed.\\n\", stderr);\n-        return EXIT_FAILURE;\n-    }\n-    printf(\"test count = %i\\n\", COUNT);\n+/* --------------------------------------------------------- */\n+/* Test Registry                                             */\n+/* --------------------------------------------------------- */\n \n-    /* run test RNG tests (must run before we really initialize the test RNG) */\n-    run_xoshiro256pp_tests();\n+/* --- Context Independent --- */\n+static struct TestEntry tests_no_ctx[] = {\n+    CASE(xoshiro256pp_tests),\n+    {NULL, NULL}",
      "path": "src/tests.c",
      "position": 1,
      "original_position": 79,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "785c34ea86ff502ddb774a4c1f3ec8d60879cef2",
      "in_reply_to_id": 2341503245,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done. Updated to use the size-based approach everywhere, mainly because the compiler may be able to optimize it.",
      "created_at": "2025-09-12T18:42:15Z",
      "updated_at": "2025-09-12T18:42:15Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2345136818",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2345136818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7689,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2345141847",
      "pull_request_review_id": 3218354813,
      "id": 2345141847,
      "node_id": "PRRC_kwDOAP4Jqs6LyAZX",
      "diff_hunk": "@@ -0,0 +1,293 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_UNIT_TEST_C\n+#define LIBSECP256K1_UNIT_TEST_C",
      "path": "src/unit_test.c",
      "position": 1,
      "original_position": 8,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "e262ba546a9d7b1e7a5977613efe36ff2c67b313",
      "in_reply_to_id": 2344409459,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah sure. Extra guards removed. Thanks",
      "created_at": "2025-09-12T18:44:45Z",
      "updated_at": "2025-09-12T18:44:45Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2345141847",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2345141847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346485425",
      "pull_request_review_id": 3220441643,
      "id": 2346485425,
      "node_id": "PRRC_kwDOAP4Jqs6L3Iax",
      "diff_hunk": "@@ -0,0 +1,42 @@\n+/***********************************************************************\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_TEST_COMMON_H",
      "path": "src/tests_common.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "91eac9c9411bf27607ffc1e114fec039a7fca00a: a typo:\r\n```suggestion\r\n#ifndef SECP256K1_TESTS_COMMON_H\r\n```",
      "created_at": "2025-09-13T11:57:35Z",
      "updated_at": "2025-09-13T11:57:59Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2346485425",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346485425"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346513889",
      "pull_request_review_id": 3220531146,
      "id": 2346513889,
      "node_id": "PRRC_kwDOAP4Jqs6L3PXh",
      "diff_hunk": "@@ -0,0 +1,407 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+/* Check for POSIX process headers */\n+#if defined(__has_include)\n+#  if __has_include(<sys/wait.h>) && __has_include(<unistd.h>)\n+#    include <sys/wait.h>\n+#    include <unistd.h>\n+/* Ensure pid_t is defined. Include <sys/types.h> only if necessary (strict C89 mode) */\n+#if !defined(_PID_T) && !defined(pid_t)\n+#   include <sys/types.h>\n+#endif\n+#    define SUPPORTS_CONCURRENCY 1\n+#  endif\n+#endif",
      "path": "src/unit_test.c",
      "position": 1,
      "original_position": 22,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure about this implementation:\r\n\r\n1. `__has_include` works fine with modern compilers. However, it is a [C23 feature](https://en.cppreference.com/w/c/preprocessor/include.html). Should we rely on it?\r\n\r\n2. The availability of headers and symbols is usually a task for the build system, which defines `SUPPORTS_CONCURRENCY` based on the header / symbol checks.",
      "created_at": "2025-09-13T12:16:29Z",
      "updated_at": "2025-09-13T12:17:01Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2346513889",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346513889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346562153",
      "pull_request_review_id": 3220629500,
      "id": 2346562153,
      "node_id": "PRRC_kwDOAP4Jqs6L3bJp",
      "diff_hunk": "@@ -0,0 +1,407 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+/* Check for POSIX process headers */\n+#if defined(__has_include)\n+#  if __has_include(<sys/wait.h>) && __has_include(<unistd.h>)\n+#    include <sys/wait.h>\n+#    include <unistd.h>\n+/* Ensure pid_t is defined. Include <sys/types.h> only if necessary (strict C89 mode) */\n+#if !defined(_PID_T) && !defined(pid_t)\n+#   include <sys/types.h>\n+#endif\n+#    define SUPPORTS_CONCURRENCY 1\n+#  endif\n+#endif\n+#ifndef SUPPORTS_CONCURRENCY\n+#  define SUPPORTS_CONCURRENCY 0\n+#endif\n+\n+#include \"unit_test.h\"\n+#include \"testrand.h\"\n+#include \"tests_common.h\"\n+\n+/* Number of times certain tests will run */\n+int COUNT = 16;\n+\n+static int parse_jobs_count(const char* key, const char* value, struct Args* out);\n+static int parse_iterations(const char* arg);\n+static int parse_target(const char* value, struct TestFramework* tf);\n+\n+/*\n+ *   Main entry point for handling command-line arguments.\n+ *\n+ *   This function is responsible for parsing a single key/value pair\n+ *   (e.g., -jobs=4) and updating the provided Args struct accordingly.\n+ *\n+ *   Developers should extend this function whenever new command-line\n+ *   options are introduced. Each new argument should be validated,\n+ *   converted to the appropriate type, and stored in the 'Args' struct.\n+ */\n+static int parse_arg(const char* key, const char* value, struct TestFramework* tf) {\n+    /* Number of concurrent tasks */\n+    if (strcmp(key, \"j\") == 0 || strcmp(key, \"jobs\") == 0) {\n+        return parse_jobs_count(key, value, &tf->args);\n+    }\n+    /* Number of iterations */\n+    if (strcmp(key, \"iter\") == 0 || strcmp(key, \"iterations\") == 0) {\n+        return parse_iterations(value);\n+    }\n+    /* Custom seed */\n+    if (strcmp(key, \"seed\") == 0) {\n+        tf->args.custom_seed = (!value || strcmp(value, \"NULL\") == 0) ? NULL : value;\n+        return 0;\n+    }\n+    /* Test target */\n+    if (strcmp(key, \"t\") == 0 || strcmp(key, \"target\") == 0) {\n+        return parse_target(value, tf);\n+    }\n+    /* Logging */\n+    if (strcmp(key, \"log\") == 0) {\n+        tf->args.logging = value && strcmp(value, \"1\") == 0;\n+        return 0;\n+    }\n+\n+    /* Unknown key: report just so typos don’t silently pass. */\n+    printf(\"Unknown argument '-%s=%s'\\n\", key, value);\n+    return 0;\n+}\n+\n+static void help(void) {\n+    printf(\"Usage: ./tests [options]\\n\\n\");\n+    printf(\"Run the test suite for the project with optional configuration.\\n\\n\");\n+    printf(\"Options:\\n\");\n+    printf(\"    -help, -h                           Show this help message\\n\");\n+    printf(\"    -print_tests                        Display list of all available tests and modules\\n\");\n+    printf(\"    -j=<num>, -jobs=<num>               Number of parallel worker processes (default: 0 = sequential)\\n\");\n+    printf(\"    -iter=<num>, -iterations=<num>      Number of iterations for each test (default: 16)\\n\");\n+    printf(\"    -seed=<hex>                         Set a specific RNG seed (default: random)\\n\");\n+    printf(\"    -target=<test name>, -t=<name>      Run a specific test (can be provided multiple times)\\n\");\n+    printf(\"    -target=<module name>, -t=<module>  Run all tests within a specific module (can be provided multiple times)\\n\");\n+    printf(\"    -log=<0|1>                          Enable or disable test execution logging (default: 0 = disabled)\\n\");\n+    printf(\"\\n\");\n+    printf(\"Notes:\\n\");\n+    printf(\"    - All arguments must be provided in the form '-key=value'.\\n\");\n+    printf(\"    - Unknown arguments are reported but ignored.\\n\");\n+    printf(\"    - Sequential execution occurs if -jobs=0 or unspecified.\\n\");\n+    printf(\"    - The first two positional arguments (iterations and seed) are also supported for backward compatibility.\\n\");\n+}\n+\n+/* Print all tests in registry */\n+static void print_test_list(struct TestFramework* tf) {\n+    int m, t, total = 0;\n+    printf(\"\\nAvailable tests (%d modules):\\n\", tf->num_modules);\n+    printf(\"========================================\\n\");\n+    for (m = 0; m < tf->num_modules; m++) {\n+        struct TestModule* mod = &tf->registry_modules[m];\n+        printf(\"Module: %s (%d tests)\\n\", mod->name, mod->size);\n+        for (t = 0; t < mod->size; t++) {\n+            printf(\"\\t[%3d] %s\\n\", total + 1, mod->data[t].name);\n+            total++;\n+        }\n+        printf(\"----------------------------------------\\n\");\n+    }\n+    printf(\"\\nRun specific module: ./tests -t=<module_name>\\n\");\n+    printf(\"Run specific test: ./tests -t=<test_name>\\n\\n\");\n+}\n+\n+static int parse_jobs_count(const char* key, const char* value, struct Args* out) {\n+    char* ptr_val;\n+    long val = strtol(value, &ptr_val, 10); /* base 10 */\n+    if (*ptr_val != '\\0') {\n+        fprintf(stderr, \"Invalid number for -%s=%s\\n\", key, value);\n+        return -1;\n+    }\n+    if (val < 0 || val > MAX_SUBPROCESSES) {\n+        fprintf(stderr, \"Arg '-%s' out of range: '%ld'. Range: 0..%d\\n\", key, val, MAX_SUBPROCESSES);\n+        return -1;\n+    }\n+    out->num_processes = (int) val;\n+    return 0;\n+}\n+\n+static int parse_iterations(const char* arg) {\n+    /* Find iteration count */\n+    if (arg) {\n+        COUNT = (int) strtol(arg, NULL, 0);\n+    } else {\n+        const char* env = getenv(\"SECP256K1_TEST_ITERS\");\n+        if (env && strlen(env) > 0) {\n+            COUNT = (int) strtol(env, NULL, 0);\n+        }\n+    }\n+    if (COUNT <= 0) {\n+        fputs(\"An iteration count of 0 or less is not allowed.\\n\", stderr);\n+        return -1;\n+    }\n+    printf(\"Iterations count = %i\\n\", COUNT);\n+    return 0;\n+}\n+\n+static int parse_target(const char* value, struct TestFramework* tf) {\n+    TestRef i = {/*idx_module=*/0, /*idx_test=*/0};\n+    if (tf->args.targets.size >= MAX_ARGS) {\n+        fprintf(stderr, \"Too many -target args (max: %d)\\n\", MAX_ARGS);\n+        return -1;\n+    }\n+    /* Find test index in the registry */\n+    for (i.group = 0; i.group < tf->num_modules; i.group++) {\n+        struct TestModule* module = &tf->registry_modules[i.group];\n+        int add_all = strcmp(value, module->name) == 0; /* select all from module */\n+        for (i.idx = 0; i.idx < module->size; i.idx++) {\n+            if (add_all || strcmp(value, module->data[i.idx].name) == 0) {\n+                tf->args.targets.slots[tf->args.targets.size] = i;\n+                tf->args.targets.size++;\n+                /* Matched a single test, we're done */\n+                if (!add_all) return 0;\n+            }\n+        }\n+        /* If add_all was true, we added all tests in the module, so return */\n+        if (add_all) return 0;\n+    }\n+    fprintf(stderr, \"Error: target '%s' not found (missing or module disabled).\\n\"\n+            \"Run program with -print_tests option to display available tests and modules.\\n\", value);\n+    return -1;\n+}\n+\n+/* Read args; all must be \"-key=value\" */\n+static int read_args(int argc, char** argv, int start, struct TestFramework* tf) {\n+    int i;\n+    char* eq;\n+    for (i = start; i < argc; i++) {\n+        const char* arg = argv[i];\n+        if (!arg || arg[0] != '-') {\n+            fprintf(stderr, \"Arg '%s' must start with '-'\\n\", arg ? arg : \"(null)\");\n+            return -1;\n+        }\n+\n+        eq = strchr(arg, '=');\n+        if (eq == NULL || eq == arg+1) {\n+            fprintf(stderr, \"Arg %s must be -key=value\\n\", arg);\n+            return -1;\n+        }\n+\n+        *eq = '\\0';\n+        if (parse_arg(arg + 1, eq + 1, tf) != 0) {\n+            return -1;\n+        }\n+    }\n+    return 0;\n+}\n+\n+static void run_test_log(const struct TestEntry* t) {\n+    int64_t start_time = gettime_i64();\n+    printf(\"Running %s..\\n\", t->name);\n+    t->func();\n+    printf(\"Test %s PASSED (%.3f sec)\\n\", t->name, (double)(gettime_i64() - start_time) / 1000000);\n+}\n+\n+static void run_test(const struct TestEntry* t) { t->func(); }\n+\n+/* Process tests in sequential order */\n+static int run_sequential(struct TestFramework* tf) {\n+    int it;\n+    for (it = 0; it < tf->args.targets.size; it++) {\n+        TestRef* index = &tf->args.targets.slots[it];\n+        tf->fn_run_test(&tf->registry_modules[index->group].data[index->idx]);\n+    }\n+    return EXIT_SUCCESS;\n+}\n+\n+#if SUPPORTS_CONCURRENCY\n+/* Process tests in parallel */\n+static int run_concurrent(struct TestFramework* tf) {\n+    /* Sub-processes info */\n+    pid_t workers[MAX_SUBPROCESSES];\n+    int pipes[MAX_SUBPROCESSES][2];\n+    /* Next worker to send work */\n+    int worker_idx;\n+    /* Parent process exit status */\n+    int status;\n+    /* Loop iterator */\n+    int it;\n+    /* Loop ref */\n+    TestRef* ref;\n+    /* Launch worker processes */\n+    for (it = 0; it < tf->args.num_processes; it++) {\n+        pid_t pid;\n+        if (pipe(pipes[it]) != 0) {\n+            perror(\"Error during pipe setup\");\n+            return EXIT_FAILURE;\n+        }\n+\n+        pid = fork();\n+        if (pid < 0) {",
      "path": "src/unit_test.c",
      "position": 231,
      "original_position": 241,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "318460c39aec04aa3580df5eadc7a935355968de\r\n\r\nnit: It would be good to check return values of the `pipe()` and `fork()` calls consistently, for example `...==-1`.",
      "created_at": "2025-09-13T12:48:39Z",
      "updated_at": "2025-09-13T12:48:39Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2346562153",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346562153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": 230,
      "original_start_line": 240,
      "start_side": "RIGHT",
      "line": 231,
      "original_line": 231,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346604192",
      "pull_request_review_id": 3220704460,
      "id": 2346604192,
      "node_id": "PRRC_kwDOAP4Jqs6L3lag",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_UNIT_TEST_H\n+#define LIBSECP256K1_UNIT_TEST_H\n+\n+/* --------------------------------------------------------- */\n+/* Configurable constants                                    */\n+/* --------------------------------------------------------- */\n+\n+/* Maximum number of command-line arguments.\n+ * Must be at least as large as the total number of tests\n+ * to allow specifying all tests individually. */\n+#define MAX_ARGS 150\n+/* Maximum number of parallel jobs */\n+#define MAX_SUBPROCESSES 16\n+\n+/* --------------------------------------------------------- */\n+/* Test Framework Registry Macros                            */\n+/* --------------------------------------------------------- */\n+\n+#define CASE(name) { #name, run_##name }\n+#define CASE1(name) { #name, name }",
      "path": "src/unit_test.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "6162b7617d3731e08d2b59baf79ba602182cf85e:\r\n\r\nIt's unfortunate to have such a pair of confusing macros. Perhaps their naming could be improved, although I don’t have a concrete suggestion.",
      "created_at": "2025-09-13T13:13:25Z",
      "updated_at": "2025-09-13T13:13:26Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2346604192",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346604192"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": 25,
      "original_start_line": 25,
      "start_side": "RIGHT",
      "line": 26,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346785428",
      "pull_request_review_id": 3220978501,
      "id": 2346785428,
      "node_id": "PRRC_kwDOAP4Jqs6L4RqU",
      "diff_hunk": "@@ -0,0 +1,407 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+/* Check for POSIX process headers */\n+#if defined(__has_include)\n+#  if __has_include(<sys/wait.h>) && __has_include(<unistd.h>)\n+#    include <sys/wait.h>\n+#    include <unistd.h>\n+/* Ensure pid_t is defined. Include <sys/types.h> only if necessary (strict C89 mode) */\n+#if !defined(_PID_T) && !defined(pid_t)\n+#   include <sys/types.h>\n+#endif\n+#    define SUPPORTS_CONCURRENCY 1\n+#  endif\n+#endif",
      "path": "src/unit_test.c",
      "position": 1,
      "original_position": 22,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "in_reply_to_id": 2346513889,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I'm not sure about this implementation:\r\n> \r\n> 1. `__has_include` works fine with modern compilers. However, it is a [C23 feature](https://en.cppreference.com/w/c/preprocessor/include.html). Should we rely on it?\r\n> 2. The availability of headers and symbols is usually a task for the build system, which defines `SUPPORTS_CONCURRENCY` based on the header / symbol checks.\r\n\r\nHmm, yeah. I was trying to avoid touching the build systems (since we have two now), but can move the code there too. The guards here are mainly to postpone Windows support for future work (if we ever want to add support for such platform).",
      "created_at": "2025-09-13T15:10:06Z",
      "updated_at": "2025-09-13T15:10:06Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2346785428",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346785428"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346798190",
      "pull_request_review_id": 3221021559,
      "id": 2346798190,
      "node_id": "PRRC_kwDOAP4Jqs6L4Uxu",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef LIBSECP256K1_UNIT_TEST_H\n+#define LIBSECP256K1_UNIT_TEST_H\n+\n+/* --------------------------------------------------------- */\n+/* Configurable constants                                    */\n+/* --------------------------------------------------------- */\n+\n+/* Maximum number of command-line arguments.\n+ * Must be at least as large as the total number of tests\n+ * to allow specifying all tests individually. */\n+#define MAX_ARGS 150\n+/* Maximum number of parallel jobs */\n+#define MAX_SUBPROCESSES 16\n+\n+/* --------------------------------------------------------- */\n+/* Test Framework Registry Macros                            */\n+/* --------------------------------------------------------- */\n+\n+#define CASE(name) { #name, run_##name }\n+#define CASE1(name) { #name, name }",
      "path": "src/unit_test.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "in_reply_to_id": 2346604192,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> [6162b76](https://github.com/bitcoin-core/secp256k1/commit/6162b7617d3731e08d2b59baf79ba602182cf85e):\r\n> \r\n> It's unfortunate to have such a pair of confusing macros. Perhaps their naming could be improved, although I don’t have a concrete suggestion.\r\n\r\nA small scripted-diff would improve the situation and let us use only one of them. We just need to rename the test functions that start with \"run_*\" so that is not included in the name. I just tried to avoid expanding the scope of the PR further.",
      "created_at": "2025-09-13T15:41:19Z",
      "updated_at": "2025-09-14T13:10:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2346798190",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2346798190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": 25,
      "original_start_line": 25,
      "start_side": "RIGHT",
      "line": 26,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2347333776",
      "pull_request_review_id": 3222087121,
      "id": 2347333776,
      "node_id": "PRRC_kwDOAP4Jqs6L6XiQ",
      "diff_hunk": "@@ -0,0 +1,407 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+/* Check for POSIX process headers */\n+#if defined(__has_include)\n+#  if __has_include(<sys/wait.h>) && __has_include(<unistd.h>)\n+#    include <sys/wait.h>\n+#    include <unistd.h>\n+/* Ensure pid_t is defined. Include <sys/types.h> only if necessary (strict C89 mode) */\n+#if !defined(_PID_T) && !defined(pid_t)\n+#   include <sys/types.h>\n+#endif\n+#    define SUPPORTS_CONCURRENCY 1\n+#  endif\n+#endif\n+#ifndef SUPPORTS_CONCURRENCY\n+#  define SUPPORTS_CONCURRENCY 0\n+#endif\n+\n+#include \"unit_test.h\"\n+#include \"testrand.h\"\n+#include \"tests_common.h\"\n+\n+/* Number of times certain tests will run */\n+int COUNT = 16;\n+\n+static int parse_jobs_count(const char* key, const char* value, struct Args* out);\n+static int parse_iterations(const char* arg);\n+static int parse_target(const char* value, struct TestFramework* tf);\n+\n+/*\n+ *   Main entry point for handling command-line arguments.\n+ *\n+ *   This function is responsible for parsing a single key/value pair\n+ *   (e.g., -jobs=4) and updating the provided Args struct accordingly.\n+ *\n+ *   Developers should extend this function whenever new command-line\n+ *   options are introduced. Each new argument should be validated,\n+ *   converted to the appropriate type, and stored in the 'Args' struct.\n+ */\n+static int parse_arg(const char* key, const char* value, struct TestFramework* tf) {\n+    /* Number of concurrent tasks */\n+    if (strcmp(key, \"j\") == 0 || strcmp(key, \"jobs\") == 0) {\n+        return parse_jobs_count(key, value, &tf->args);\n+    }\n+    /* Number of iterations */\n+    if (strcmp(key, \"iter\") == 0 || strcmp(key, \"iterations\") == 0) {\n+        return parse_iterations(value);\n+    }\n+    /* Custom seed */\n+    if (strcmp(key, \"seed\") == 0) {\n+        tf->args.custom_seed = (!value || strcmp(value, \"NULL\") == 0) ? NULL : value;\n+        return 0;\n+    }\n+    /* Test target */\n+    if (strcmp(key, \"t\") == 0 || strcmp(key, \"target\") == 0) {\n+        return parse_target(value, tf);\n+    }\n+    /* Logging */\n+    if (strcmp(key, \"log\") == 0) {\n+        tf->args.logging = value && strcmp(value, \"1\") == 0;\n+        return 0;\n+    }\n+\n+    /* Unknown key: report just so typos don’t silently pass. */\n+    printf(\"Unknown argument '-%s=%s'\\n\", key, value);\n+    return 0;\n+}\n+\n+static void help(void) {\n+    printf(\"Usage: ./tests [options]\\n\\n\");\n+    printf(\"Run the test suite for the project with optional configuration.\\n\\n\");\n+    printf(\"Options:\\n\");\n+    printf(\"    -help, -h                           Show this help message\\n\");\n+    printf(\"    -print_tests                        Display list of all available tests and modules\\n\");\n+    printf(\"    -j=<num>, -jobs=<num>               Number of parallel worker processes (default: 0 = sequential)\\n\");\n+    printf(\"    -iter=<num>, -iterations=<num>      Number of iterations for each test (default: 16)\\n\");\n+    printf(\"    -seed=<hex>                         Set a specific RNG seed (default: random)\\n\");\n+    printf(\"    -target=<test name>, -t=<name>      Run a specific test (can be provided multiple times)\\n\");\n+    printf(\"    -target=<module name>, -t=<module>  Run all tests within a specific module (can be provided multiple times)\\n\");\n+    printf(\"    -log=<0|1>                          Enable or disable test execution logging (default: 0 = disabled)\\n\");\n+    printf(\"\\n\");\n+    printf(\"Notes:\\n\");\n+    printf(\"    - All arguments must be provided in the form '-key=value'.\\n\");\n+    printf(\"    - Unknown arguments are reported but ignored.\\n\");\n+    printf(\"    - Sequential execution occurs if -jobs=0 or unspecified.\\n\");\n+    printf(\"    - The first two positional arguments (iterations and seed) are also supported for backward compatibility.\\n\");\n+}\n+\n+/* Print all tests in registry */\n+static void print_test_list(struct TestFramework* tf) {\n+    int m, t, total = 0;\n+    printf(\"\\nAvailable tests (%d modules):\\n\", tf->num_modules);\n+    printf(\"========================================\\n\");\n+    for (m = 0; m < tf->num_modules; m++) {\n+        struct TestModule* mod = &tf->registry_modules[m];\n+        printf(\"Module: %s (%d tests)\\n\", mod->name, mod->size);\n+        for (t = 0; t < mod->size; t++) {\n+            printf(\"\\t[%3d] %s\\n\", total + 1, mod->data[t].name);\n+            total++;\n+        }\n+        printf(\"----------------------------------------\\n\");\n+    }\n+    printf(\"\\nRun specific module: ./tests -t=<module_name>\\n\");\n+    printf(\"Run specific test: ./tests -t=<test_name>\\n\\n\");\n+}\n+\n+static int parse_jobs_count(const char* key, const char* value, struct Args* out) {\n+    char* ptr_val;\n+    long val = strtol(value, &ptr_val, 10); /* base 10 */\n+    if (*ptr_val != '\\0') {\n+        fprintf(stderr, \"Invalid number for -%s=%s\\n\", key, value);\n+        return -1;\n+    }\n+    if (val < 0 || val > MAX_SUBPROCESSES) {\n+        fprintf(stderr, \"Arg '-%s' out of range: '%ld'. Range: 0..%d\\n\", key, val, MAX_SUBPROCESSES);\n+        return -1;\n+    }\n+    out->num_processes = (int) val;\n+    return 0;\n+}\n+\n+static int parse_iterations(const char* arg) {\n+    /* Find iteration count */\n+    if (arg) {\n+        COUNT = (int) strtol(arg, NULL, 0);\n+    } else {\n+        const char* env = getenv(\"SECP256K1_TEST_ITERS\");\n+        if (env && strlen(env) > 0) {\n+            COUNT = (int) strtol(env, NULL, 0);\n+        }\n+    }\n+    if (COUNT <= 0) {\n+        fputs(\"An iteration count of 0 or less is not allowed.\\n\", stderr);\n+        return -1;\n+    }\n+    printf(\"Iterations count = %i\\n\", COUNT);\n+    return 0;\n+}\n+\n+static int parse_target(const char* value, struct TestFramework* tf) {\n+    TestRef i = {/*idx_module=*/0, /*idx_test=*/0};\n+    if (tf->args.targets.size >= MAX_ARGS) {\n+        fprintf(stderr, \"Too many -target args (max: %d)\\n\", MAX_ARGS);\n+        return -1;\n+    }\n+    /* Find test index in the registry */\n+    for (i.group = 0; i.group < tf->num_modules; i.group++) {\n+        struct TestModule* module = &tf->registry_modules[i.group];\n+        int add_all = strcmp(value, module->name) == 0; /* select all from module */\n+        for (i.idx = 0; i.idx < module->size; i.idx++) {\n+            if (add_all || strcmp(value, module->data[i.idx].name) == 0) {\n+                tf->args.targets.slots[tf->args.targets.size] = i;\n+                tf->args.targets.size++;\n+                /* Matched a single test, we're done */\n+                if (!add_all) return 0;\n+            }\n+        }\n+        /* If add_all was true, we added all tests in the module, so return */\n+        if (add_all) return 0;\n+    }\n+    fprintf(stderr, \"Error: target '%s' not found (missing or module disabled).\\n\"\n+            \"Run program with -print_tests option to display available tests and modules.\\n\", value);\n+    return -1;\n+}\n+\n+/* Read args; all must be \"-key=value\" */\n+static int read_args(int argc, char** argv, int start, struct TestFramework* tf) {\n+    int i;\n+    char* eq;\n+    for (i = start; i < argc; i++) {\n+        const char* arg = argv[i];\n+        if (!arg || arg[0] != '-') {\n+            fprintf(stderr, \"Arg '%s' must start with '-'\\n\", arg ? arg : \"(null)\");\n+            return -1;\n+        }\n+\n+        eq = strchr(arg, '=');\n+        if (eq == NULL || eq == arg+1) {\n+            fprintf(stderr, \"Arg %s must be -key=value\\n\", arg);\n+            return -1;\n+        }\n+\n+        *eq = '\\0';\n+        if (parse_arg(arg + 1, eq + 1, tf) != 0) {\n+            return -1;\n+        }\n+    }\n+    return 0;\n+}\n+\n+static void run_test_log(const struct TestEntry* t) {\n+    int64_t start_time = gettime_i64();\n+    printf(\"Running %s..\\n\", t->name);\n+    t->func();\n+    printf(\"Test %s PASSED (%.3f sec)\\n\", t->name, (double)(gettime_i64() - start_time) / 1000000);\n+}\n+\n+static void run_test(const struct TestEntry* t) { t->func(); }\n+\n+/* Process tests in sequential order */\n+static int run_sequential(struct TestFramework* tf) {\n+    int it;\n+    for (it = 0; it < tf->args.targets.size; it++) {\n+        TestRef* index = &tf->args.targets.slots[it];\n+        tf->fn_run_test(&tf->registry_modules[index->group].data[index->idx]);\n+    }\n+    return EXIT_SUCCESS;\n+}\n+\n+#if SUPPORTS_CONCURRENCY\n+/* Process tests in parallel */\n+static int run_concurrent(struct TestFramework* tf) {\n+    /* Sub-processes info */\n+    pid_t workers[MAX_SUBPROCESSES];\n+    int pipes[MAX_SUBPROCESSES][2];\n+    /* Next worker to send work */\n+    int worker_idx;\n+    /* Parent process exit status */\n+    int status;\n+    /* Loop iterator */\n+    int it;\n+    /* Loop ref */\n+    TestRef* ref;\n+    /* Launch worker processes */\n+    for (it = 0; it < tf->args.num_processes; it++) {\n+        pid_t pid;\n+        if (pipe(pipes[it]) != 0) {\n+            perror(\"Error during pipe setup\");\n+            return EXIT_FAILURE;\n+        }\n+\n+        pid = fork();\n+        if (pid < 0) {",
      "path": "src/unit_test.c",
      "position": 231,
      "original_position": 241,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "in_reply_to_id": 2346562153,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure these two functions are directly comparable. They have different return value ranges: `pipe()` just indicates success or failure (`0` or `-1`), while `fork()` has three cases: `-1` for an error, `0` in the child process, and any value greater than `0` is the child’s PID in the parent. So it seemed slightly more accurate to me to describe the entire range for `fork()`.",
      "created_at": "2025-09-14T13:32:20Z",
      "updated_at": "2025-09-14T13:32:20Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2347333776",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2347333776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": 230,
      "original_start_line": 240,
      "start_side": "RIGHT",
      "line": 231,
      "original_line": 231,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2347336565",
      "pull_request_review_id": 3222090456,
      "id": 2347336565,
      "node_id": "PRRC_kwDOAP4Jqs6L6YN1",
      "diff_hunk": "@@ -0,0 +1,407 @@\n+/***********************************************************************\n+ * Copyright (c) 2025  Matias Furszyfer (furszy)                       *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+/* Check for POSIX process headers */\n+#if defined(__has_include)\n+#  if __has_include(<sys/wait.h>) && __has_include(<unistd.h>)\n+#    include <sys/wait.h>\n+#    include <unistd.h>\n+/* Ensure pid_t is defined. Include <sys/types.h> only if necessary (strict C89 mode) */\n+#if !defined(_PID_T) && !defined(pid_t)\n+#   include <sys/types.h>\n+#endif\n+#    define SUPPORTS_CONCURRENCY 1\n+#  endif\n+#endif",
      "path": "src/unit_test.c",
      "position": 1,
      "original_position": 22,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "in_reply_to_id": 2346513889,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done. Let me know if the build system changes can be shrunk even more. I tried to keep them minimal.",
      "created_at": "2025-09-14T13:39:36Z",
      "updated_at": "2025-09-14T13:39:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2347336565",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2347336565"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2347336635",
      "pull_request_review_id": 3222090524,
      "id": 2347336635,
      "node_id": "PRRC_kwDOAP4Jqs6L6YO7",
      "diff_hunk": "@@ -0,0 +1,42 @@\n+/***********************************************************************\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or https://www.opensource.org/licenses/mit-license.php.*\n+ ***********************************************************************/\n+\n+#ifndef SECP256K1_TEST_COMMON_H",
      "path": "src/tests_common.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "726e70b899f370e26990d74dfbdde1d6df5ddd11",
      "original_commit_id": "5a501061ea082d66e193234023843738a328e4a4",
      "in_reply_to_id": 2346485425,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks.",
      "created_at": "2025-09-14T13:39:46Z",
      "updated_at": "2025-09-14T13:39:46Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1734#discussion_r2347336635",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2347336635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1734"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    }
  ]
}