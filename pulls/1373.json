{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373",
    "id": 1422488570,
    "node_id": "PR_kwDOAP4Jqs5UyXP6",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1373.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1373.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/d23da6d55714271c720fee58fbff5e5ef2fe193f",
    "number": 1373,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Add invariant checking for scalars",
    "user": {
      "login": "stratospher",
      "id": 44024636,
      "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stratospher",
      "html_url": "https://github.com/stratospher",
      "followers_url": "https://api.github.com/users/stratospher/followers",
      "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
      "organizations_url": "https://api.github.com/users/stratospher/orgs",
      "repos_url": "https://api.github.com/users/stratospher/repos",
      "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stratospher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "From #1360. This PR:\r\n1. adds `secp256k1_scalar_verify` to make sure scalars are reduced mod the group order in VERIFY mode\r\n2. uses `secp256k1_scalar_verify` in all the scalar functions except `secp256k1_scalar_clear`, `secp256k1_scalar_reduce_512`, `secp256k1_scalar_mul_512` and `secp256k1_scalar_*_var` functions in `scalar_low_impl.h`",
    "labels": [
      {
        "id": 165017692,
        "node_id": "MDU6TGFiZWwxNjUwMTc2OTI=",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/assurance",
        "name": "assurance",
        "description": "",
        "color": "A6DF3D",
        "default": false
      }
    ],
    "created_at": "2023-07-06T08:48:10Z",
    "updated_at": "2023-07-27T17:03:47Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "0a4d948fc9985f909a0f4820716f8474e326ad74",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "stratospher:invariant_for_scalar",
      "ref": "invariant_for_scalar",
      "sha": "d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 519443361,
        "node_id": "R_kgDOHvYToQ",
        "name": "secp256k1",
        "full_name": "stratospher/secp256k1",
        "owner": {
          "login": "stratospher",
          "id": 44024636,
          "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
          "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/stratospher",
          "html_url": "https://github.com/stratospher",
          "followers_url": "https://api.github.com/users/stratospher/followers",
          "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
          "organizations_url": "https://api.github.com/users/stratospher/orgs",
          "repos_url": "https://api.github.com/users/stratospher/repos",
          "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/stratospher/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/stratospher/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/stratospher/secp256k1",
        "archive_url": "https://api.github.com/repos/stratospher/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/stratospher/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/stratospher/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/stratospher/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/stratospher/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/stratospher/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/stratospher/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/stratospher/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/stratospher/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/stratospher/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/stratospher/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/stratospher/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/stratospher/secp256k1/events",
        "forks_url": "https://api.github.com/repos/stratospher/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/stratospher/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/stratospher/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/stratospher/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/stratospher/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/stratospher/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/stratospher/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/stratospher/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/stratospher/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/stratospher/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/stratospher/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/stratospher/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/stratospher/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/stratospher/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/stratospher/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/stratospher/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:stratospher/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/stratospher/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/stratospher/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/stratospher/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/stratospher/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/stratospher/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/stratospher/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/stratospher/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/stratospher/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/stratospher/secp256k1/hooks",
        "svn_url": "https://github.com/stratospher/secp256k1",
        "language": "C",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 10334,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-27T12:06:34Z",
        "created_at": "2022-07-30T06:55:56Z",
        "updated_at": "2023-05-04T13:42:46Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "c734c6427801f5dbe93047a3fe5c8ed2e2f16020",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 962,
        "stargazers_count": 1802,
        "watchers_count": 1802,
        "size": 10374,
        "default_branch": "master",
        "open_issues_count": 145,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T01:00:35Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-08-01T08:52:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 241,
    "deletions": 24,
    "changed_files": 7,
    "commits": 3,
    "review_comments": 9,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 1623246897,
      "node_id": "IC_kwDOAP4Jqs5gwMgx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1623246897",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T08:51:27Z",
      "updated_at": "2023-07-06T08:51:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "2 tests failed when performing `secp256k1_scalar_verify` checks in the scalar functions:\r\n1. in the exhaustive tests when the scalar is the EXHAUSTIVE_TEST_ORDER. unsure whether this is an actual behaviour we want to test. https://github.com/bitcoin-core/secp256k1/blob/afd7eb4a55606bff640e30bb64bc3c43d1bb5b1c/src/modules/schnorrsig/tests_exhaustive_impl.h#L118\r\n2. in the scalar_cmov_test where max scalar = ff...ff (>group order). i think we can update max scalar to be group order here.https://github.com/bitcoin-core/secp256k1/blob/afd7eb4a55606bff640e30bb64bc3c43d1bb5b1c/src/tests.c#L7654",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#issuecomment-1623246897",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T08:54:01Z",
      "updated_at": "2023-07-06T08:54:01Z",
      "source": {
        "issue": {
          "id": 1776308298,
          "node_id": "I_kwDOAP4Jqs5p4FBK",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1360",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1360/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1360/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1360/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1360",
          "number": 1360,
          "state": "open",
          "state_reason": null,
          "title": "scalar: Verify invariants on every entry",
          "body": "We have `secp256k1_ge_verify`, `secp256k1_gej_verify`, and `secp256k1_fe_verify` functions to the invariants of the respective type. We call them on every entry/exit of a function that operates on a respective element.  \r\n\r\nWe should add a similar function for scalars. I think the only invariant is that scalars `a` are reduced mod the group order, i.e., `secp256k1_scalar_check_overflow(a) == 0`.\r\n\r\n(see https://github.com/bitcoin-core/secp256k1/pull/1184#discussion_r1239566294)\r\n\r\n@stratospher Are you interested in working on this? ",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 165017692,
              "node_id": "MDU6TGFiZWwxNjUwMTc2OTI=",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/assurance",
              "name": "assurance",
              "description": "",
              "color": "A6DF3D",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "created_at": "2023-06-27T07:51:32Z",
          "updated_at": "2023-07-06T08:54:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1623587229,
      "node_id": "IC_kwDOAP4Jqs5gxfmd",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1623587229",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T12:22:21Z",
      "updated_at": "2023-07-06T12:22:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> in the scalar_cmov_test where max scalar = ff...ff (>group order). i think we can update max scalar to be group order here.\r\n\r\nRight, setting to ff...ff should just be invalid, even in the tests. So the max should be the group order - 1. Or make it some other other large argument like e3...e3. This is a test for cmov, and I don't think min and max are better test cases here than any other value. ;) \r\n\r\n> in the exhaustive tests when the scalar is the EXHAUSTIVE_TEST_ORDER. unsure whether this is an actual behaviour we want to test. \r\n\r\nEXHAUSTIVE_TEST_ORDER is the group order, so again this is an overflow. I think the simplest fix is that `set_int` in `scalar_low` take the input mod EXHAUSTIVE_TEST_ORDER. This masks the overflow, but I tend to think that this fine. I mean, `set_int` will never overflow in the real code because the real group size is much larger than unsigned int,.\r\n\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#issuecomment-1623587229",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373"
    },
    {
      "event": "labeled",
      "id": 9744138203,
      "node_id": "LE_lADOAP4Jqs5qwgs7zwAAAAJEy7_b",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9744138203",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T13:49:15Z",
      "label": {
        "name": "assurance",
        "color": "A6DF3D"
      }
    },
    {
      "event": "connected",
      "id": 9744143336,
      "node_id": "COE_lADOAP4Jqs5qwgs7zwAAAAJEy9Po",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9744143336",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T13:49:40Z"
    },
    {
      "event": "reviewed",
      "id": 1516625289,
      "node_id": "PRR_kwDOAP4Jqs5aZd2J",
      "url": null,
      "actor": null,
      "commit_id": "c53faecd0cacb4cf754cf3e47459bc8e88148a2a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#pullrequestreview-1516625289",
      "submitted_at": "2023-07-06T13:59:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
    },
    {
      "event": "commented",
      "id": 1630833001,
      "node_id": "IC_kwDOAP4Jqs5hNIlp",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1630833001",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T13:27:01Z",
      "updated_at": "2023-07-11T13:27:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "By the way, CI fails with:\r\n\r\n```\r\n==3276==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n    #0 0x55d56ff0370a in secp256k1_scalar_verify /tmp/cirrus-ci-build/src/scalar_impl.h:40:5\r\n    #1 0x55d56ff0370a in secp256k1_scalar_clear /tmp/cirrus-ci-build/src/scalar_impl.h:44:5\r\n    #2 0x55d56ff0370a in secp256k1_ecdsa_sign_inner /tmp/cirrus-ci-build/src/secp256k1.c:547:5\r\n    #3 0x55d57005097f in secp256k1_ecdsa_sign /tmp/cirrus-ci-build/src/secp256k1.c:567:11\r\n    #4 0x55d57005097f in test_ecdsa_edge_cases /tmp/cirrus-ci-build/src/tests.c:7378:9\r\n    #5 0x55d56ff8cea2 in run_ecdsa_edge_cases /tmp/cirrus-ci-build/src/tests.c:7462:5\r\n    #6 0x55d56ff8cea2 in main /tmp/cirrus-ci-build/src/tests.c:7854:5\r\n    #7 0x7f34b1aaa189 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n    #8 0x7f34b1aaa244 in __libc_start_main csu/../csu/libc-start.c:381:3\r\n    #9 0x55d56fe732b0 in _start (/tmp/cirrus-ci-build/tests+0x212b0) (BuildId: 8839613b681f146479fe0450db93bdb91ebc1e2b)\r\nSUMMARY: MemorySanitizer: use-of-uninitialized-value /tmp/cirrus-ci-build/src/scalar_impl.h:40:5 in secp256k1_scalar_verify\r\n```\r\n(https://cirrus-ci.com/task/4600089314852864?logs=cat_tests_log#L16)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#issuecomment-1630833001",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373"
    },
    {
      "event": "commented",
      "id": 1630843086,
      "node_id": "IC_kwDOAP4Jqs5hNLDO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1630843086",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T13:32:33Z",
      "updated_at": "2023-07-11T13:32:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "This is because `scalar_clear()` is simply supposed to overwrite the memory, it's not supposed to produce a valid scalar. So no need to verify the output scalar. (Terms are bit confusing, as `fe_clear()` actually sets to 0...)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#issuecomment-1630843086",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9799957064,
      "node_id": "HRFPE_lADOAP4Jqs5qwgs7zwAAAAJIH3pI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9799957064",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T14:04:32Z"
    },
    {
      "event": "commented",
      "id": 1632595000,
      "node_id": "IC_kwDOAP4Jqs5hT2w4",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1632595000",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T14:05:39Z",
      "updated_at": "2023-07-12T14:05:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've updated the PR to call `secp256k1_scalar_verify` check inside the scalar functions in the 3 implementations. The check isn't added to `secp256k1_scalar_clear`, `secp256k1_scalar_reduce_512`, `secp256k1_scalar_mul_512` and `secp256k1_scalar_*_var functions` in only `scalar_low_impl.h`\r\n\r\nAlso liked how we can add these checks to scalar functions not mentioned in the common scalar interface like `secp256k1_scalar_reduce` using this approach now.\r\n\r\n> EXHAUSTIVE_TEST_ORDER is the group order, so again this is an overflow. I think the simplest fix is that set_int in scalar_low take the input mod EXHAUSTIVE_TEST_ORDER. This masks the overflow, but I tend to think that this fine. I mean, set_int will never overflow in the real code because the real group size is much larger than unsigned int,.\r\n\r\ndoing mod EXHAUSTIVE_TEST_ORDER results in two s values having valid `secp256k1_schnorrsig_verify` and a failure later on in the tests  https://github.com/bitcoin-core/secp256k1/blob/afd7eb4a55606bff640e30bb64bc3c43d1bb5b1c/src/modules/schnorrsig/tests_exhaustive_impl.h#L127\r\nshould we just skip the check in `secp256k1_scalar_set_int`, `secp256k1_scalar_get_b32` instead in `scalar_low_impl.h`?",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#issuecomment-1632595000",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9800135125,
      "node_id": "HRFPE_lADOAP4Jqs5qwgs7zwAAAAJIIjHV",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9800135125",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T14:19:42Z"
    },
    {
      "event": "commented",
      "id": 1635443508,
      "node_id": "IC_kwDOAP4Jqs5heuM0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1635443508",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-14T07:44:49Z",
      "updated_at": "2023-07-14T07:44:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "> should we just skip the check in `secp256k1_scalar_set_int`, `secp256k1_scalar_get_b32` instead in `scalar_low_impl.h`?\r\n\r\nThis means whether we check or not depends on the specifics of the tests, which sounds wrong. (Or in other words: In principle, the code should work for all valid tests, independently of whether we happen to have them in our test suite.)\r\n\r\n\r\nAnd skipping the check it in some functions is somewhat inconsequential.  I think we should either decide that we want to enforce the invariant in `low` (and then do it everywhere because otherwise it's not an invariant) or we don't want to enforce it.  And I still think having the invariant is a good idea. \r\n\r\nNow that I think about this more, I tend to believe that the test is flawed. Or at least, I don't understand the test. Why would the test except two different representations of the *same* scalar yield different results? I think it should either not test `EXHAUSTIVE_TEST_ORDER` or if it does, it should expect that the result is the same as for `0` (but if we want to test the latter, then it should probably happen outside this loop, which is supposed to find exactly one valid sig).",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#issuecomment-1635443508",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9914515029,
      "node_id": "HRFPE_lADOAP4Jqs5qwgs7zwAAAAJO835V",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9914515029",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T17:20:27Z"
    },
    {
      "event": "commented",
      "id": 1650243006,
      "node_id": "IC_kwDOAP4Jqs5iXLW-",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1650243006",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T17:25:46Z",
      "updated_at": "2023-07-25T17:25:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "> This means whether we check or not depends on the specifics of the tests, which sounds wrong. \r\n\r\ntrue, better to have it in the tests\r\n\r\ni think the the intention of having `s = EXHAUSTIVE_TEST_ORDER` is to make sure `secp256k1_schnorrsig_verify` really computes as invalid. (this [codepath](https://github.com/bitcoin-core/secp256k1/blob/2bd5f3e6184f1a4cfaed910ab74269fb6ab635be/src/modules/schnorrsig/main_impl.h#L240))\r\n\r\ni've updated the test so that `sig64` stores `EXHAUSTIVE_TEST_ORDER` without reducing it mod the group order. would that work?",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#issuecomment-1650243006",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373"
    },
    {
      "event": "commented",
      "id": 1651793570,
      "node_id": "IC_kwDOAP4Jqs5idF6i",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1651793570",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-26T13:20:29Z",
      "updated_at": "2023-07-26T13:20:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "> i've updated the test so that `sig64` stores `EXHAUSTIVE_TEST_ORDER` without reducing it mod the group order. would that work?\r\n\r\nMakes sense to me.\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#issuecomment-1651793570",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373"
    },
    {
      "event": "reviewed",
      "id": 1547710523,
      "node_id": "PRR_kwDOAP4Jqs5cQDA7",
      "url": null,
      "actor": null,
      "commit_id": "6a8fb81667a138a18e1793f50031598fba498af7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#pullrequestreview-1547710523",
      "submitted_at": "2023-07-26T13:24:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
    },
    {
      "event": "reviewed",
      "id": 1547738323,
      "node_id": "PRR_kwDOAP4Jqs5cQJzT",
      "url": null,
      "actor": null,
      "commit_id": "6a8fb81667a138a18e1793f50031598fba498af7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#pullrequestreview-1547738323",
      "submitted_at": "2023-07-26T13:28:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
    },
    {
      "event": "commented",
      "id": 1651816043,
      "node_id": "IC_kwDOAP4Jqs5idLZr",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1651816043",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-26T13:32:23Z",
      "updated_at": "2023-07-26T13:32:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "> i've updated the test so that `sig64` stores `EXHAUSTIVE_TEST_ORDER` without reducing it mod the group order.\r\n\r\nOne more nit: It's a good idea to reorder the commits such that this commit comes first. Then the tests will pass even on intermediate commits. (We have no strict rule on this, but it's a good idea. For example, it helps with `git bisect`.)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#issuecomment-1651816043",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1373"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGFkMTUyMTUxYjA2YTQwYWFmNmNkOTA1NjEzNTZmZjQ1MTk5NjQ1NWQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/ad152151b06a40aaf6cd90561356ff451996455d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/ad152151b06a40aaf6cd90561356ff451996455d",
      "tree": {
        "sha": "313f561c872b8f8d0c3f119de1a0f167e6791371",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/313f561c872b8f8d0c3f119de1a0f167e6791371"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/0fa84f869d51e1b71113d81fcd518ebcee08709a",
          "sha": "0fa84f869d51e1b71113d81fcd518ebcee08709a",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/0fa84f869d51e1b71113d81fcd518ebcee08709a"
        }
      ],
      "message": "update max scalar in scalar_cmov_test and fix schnorrsig_verify exhaustive test\n\n- `secp256k1_scalar_set_int` in scalar_low uses input mod EXHAUSTIVE_TEST_ORDER\n- directly store s in sig64 without reducing it mod the group order for testing",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-07-27T06:29:33Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-07-11T13:47:28Z"
      },
      "sha": "ad152151b06a40aaf6cd90561356ff451996455d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGM3ZDA0NTQ5MzJiNDJhOTcyOGI1NTAzM2M5NGUwMDBiMWRiYmI2ZjI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/c7d0454932b42a9728b55033c94e000b1dbbb6f2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/c7d0454932b42a9728b55033c94e000b1dbbb6f2",
      "tree": {
        "sha": "4d150001b02320a90948bbf886262180b90c3dc2",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/4d150001b02320a90948bbf886262180b90c3dc2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/ad152151b06a40aaf6cd90561356ff451996455d",
          "sha": "ad152151b06a40aaf6cd90561356ff451996455d",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/ad152151b06a40aaf6cd90561356ff451996455d"
        }
      ],
      "message": "add verification for scalars\n\nsecp256k1_scalar_verify checks that scalars are reduced mod the\ngroup order",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-07-27T08:33:59Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-07-03T19:13:10Z"
      },
      "sha": "c7d0454932b42a9728b55033c94e000b1dbbb6f2"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9933174927,
      "node_id": "HRFPE_lADOAP4Jqs5qwgs7zwAAAAJQEDiP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9933174927",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T08:58:31Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGQyM2RhNmQ1NTcxNDI3MWM3MjBmZWU1OGZiZmY1ZTVlZjJmZTE5M2Y",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "tree": {
        "sha": "f1e03136a8eab26b29816056ec7fd928e9acab70",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/f1e03136a8eab26b29816056ec7fd928e9acab70"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/c7d0454932b42a9728b55033c94e000b1dbbb6f2",
          "sha": "c7d0454932b42a9728b55033c94e000b1dbbb6f2",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/c7d0454932b42a9728b55033c94e000b1dbbb6f2"
        }
      ],
      "message": "use secp256k1_scalar_verify checks",
      "committer": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-07-27T12:05:50Z"
      },
      "author": {
        "name": "stratospher",
        "email": "44024636+stratospher@users.noreply.github.com",
        "date": "2023-07-12T13:25:26Z"
      },
      "sha": "d23da6d55714271c720fee58fbff5e5ef2fe193f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9935013155,
      "node_id": "HRFPE_lADOAP4Jqs5qwgs7zwAAAAJQLEUj",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9935013155",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T12:06:38Z"
    },
    {
      "event": "reviewed",
      "id": 1550355921,
      "node_id": "PRR_kwDOAP4Jqs5caI3R",
      "url": null,
      "actor": null,
      "commit_id": "d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "utACK d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#pullrequestreview-1550355921",
      "submitted_at": "2023-07-27T17:03:47Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1254486820",
      "pull_request_review_id": 1516625289,
      "id": 1254486820,
      "node_id": "PRRC_kwDOAP4Jqs5KxfMk",
      "diff_hunk": "@@ -19,6 +19,34 @@\n #error \"Please select wide multiplication implementation\"\n #endif\n \n+#ifndef VERIFY\n+/* In non-VERIFY mode, we #define the scalar operations to be identical to their\n+ * internal scalar implementation, to avoid the potential overhead of a\n+ * function call (even though presumably inlinable). */\n+#  define secp256k1_scalar_clear secp256k1_scalar_impl_clear",
      "path": "src/scalar.h",
      "position": null,
      "original_position": 8,
      "commit_id": "d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "original_commit_id": "c53faecd0cacb4cf754cf3e47459bc8e88148a2a",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm, when I opened #1360 I didn't except that we want this indirection also here, but I think it makes sense.\r\n\r\nOn the one hand, the situation here is similar to the field code in the sense that we have multiple scalar implementations. On the other hand, the invariant here (no overflow) is inherently a property of the implementation, and does not leak into the scalar interface. So, you could argue that checking this is a concern of the implementation. But hm, what you do here is simply introduce a generic way for implementations to provide a verify function (which happens to be very similar here in all three implementations).  And this makes sense, I think.\r\n\r\nTo be clear: What you propose here makes sense and solves the problem, I'm just wrapping my around whether it's the cleanest/most elegant solution. cc @sipa who worked on this in the field code.",
      "created_at": "2023-07-06T13:59:57Z",
      "updated_at": "2023-07-06T14:00:15Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#discussion_r1254486820",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1254486820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
        }
      },
      "start_line": null,
      "original_start_line": 22,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1257389592",
      "pull_request_review_id": 1520826868,
      "id": 1257389592,
      "node_id": "PRRC_kwDOAP4Jqs5K8j4Y",
      "diff_hunk": "@@ -19,6 +19,34 @@\n #error \"Please select wide multiplication implementation\"\n #endif\n \n+#ifndef VERIFY\n+/* In non-VERIFY mode, we #define the scalar operations to be identical to their\n+ * internal scalar implementation, to avoid the potential overhead of a\n+ * function call (even though presumably inlinable). */\n+#  define secp256k1_scalar_clear secp256k1_scalar_impl_clear",
      "path": "src/scalar.h",
      "position": null,
      "original_position": 8,
      "commit_id": "d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "original_commit_id": "c53faecd0cacb4cf754cf3e47459bc8e88148a2a",
      "in_reply_to_id": 1254486820,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that right now, the split approach which we used for `secp256k1_fe`, is overkill for `secp256k1_scalar`. It was meaningful there, because `secp256k1_fe` have meaningful properties (normalization, magnitude) which are independent from the chosen implementation, and thus are meaningful to check independently of the chosen implementation. That's not the case for `secp26k1_scalar`, and I don't think it's likely to change:\r\n\r\n* Scalars are inherently less performance-critical than field elements, so the amount of complexity we'd be willing to tolerate for performance optimizations for them is lower for them.\r\n* The type of properties that are independent of the implementation are I believe necessarily ones that only depend on the operations performed on them, and not their values. Apart from e.g. a \"may be zero\" property, I don't see what properties there could be that even apply to scalars, unless denormalized representations are introduced for those too (and I don't think the performance benefit is worth the complexity for those).\r\n\r\nIt is true that the abstraction introduced here has an unrelated advantage, namely keeping the entry/exit `secp256k1_scalar_verify` calls out of the individual implementations, but I think the amount of code introduced here doesn't justify that. I guess another advantage is uniformity with the field logic.\r\n\r\nStill, I'm leaning towards not taking this approach, but I could be convinced otherwise.",
      "created_at": "2023-07-09T00:17:53Z",
      "updated_at": "2023-07-09T00:19:29Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#discussion_r1257389592",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1257389592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
        }
      },
      "start_line": null,
      "original_start_line": 22,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1258699992",
      "pull_request_review_id": 1522718144,
      "id": 1258699992,
      "node_id": "PRRC_kwDOAP4Jqs5LBjzY",
      "diff_hunk": "@@ -19,6 +19,34 @@\n #error \"Please select wide multiplication implementation\"\n #endif\n \n+#ifndef VERIFY\n+/* In non-VERIFY mode, we #define the scalar operations to be identical to their\n+ * internal scalar implementation, to avoid the potential overhead of a\n+ * function call (even though presumably inlinable). */\n+#  define secp256k1_scalar_clear secp256k1_scalar_impl_clear",
      "path": "src/scalar.h",
      "position": null,
      "original_position": 8,
      "commit_id": "d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "original_commit_id": "c53faecd0cacb4cf754cf3e47459bc8e88148a2a",
      "in_reply_to_id": 1254486820,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">  It was meaningful there, because secp256k1_fe have meaningful properties (normalization, magnitude) which are independent from the chosen implementation, and thus are meaningful to check independently of the chosen implementation.\r\n\r\ntrue, the reasons sounds convincing. will simply call `secp256k1_scalar_verify` inside the 3 implementations instead.",
      "created_at": "2023-07-10T18:44:28Z",
      "updated_at": "2023-07-10T18:44:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#discussion_r1258699992",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1258699992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
        }
      },
      "start_line": null,
      "original_start_line": 22,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1274942723",
      "pull_request_review_id": 1547710523,
      "id": 1274942723,
      "node_id": "PRRC_kwDOAP4Jqs5L_hUD",
      "diff_hunk": "@@ -116,7 +116,8 @@ static void test_exhaustive_schnorrsig_verify(const secp256k1_context *ctx, cons\n                         if (s <= EXHAUSTIVE_TEST_ORDER) {\n                             secp256k1_scalar s_s;\n                             secp256k1_scalar_set_int(&s_s, s);\n-                            secp256k1_scalar_get_b32(sig64 + 32, &s_s);\n+                            memset(sig64 + 32, 0, 32);\n+                            sig64[63] = s;",
      "path": "src/modules/schnorrsig/tests_exhaustive_impl.h",
      "position": null,
      "original_position": 6,
      "commit_id": "d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "original_commit_id": "6a8fb81667a138a18e1793f50031598fba498af7",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is equivalent and shorter:\r\n\r\n```suggestion\r\n                            secp256k1_write_be32(sig64 + 32, s);\r\n```\r\n\r\n(also need to change `s_s` to `s` below)",
      "created_at": "2023-07-26T13:15:57Z",
      "updated_at": "2023-07-26T13:24:17Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#discussion_r1274942723",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1274942723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
        }
      },
      "start_line": null,
      "original_start_line": 117,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1274951884",
      "pull_request_review_id": 1547710523,
      "id": 1274951884,
      "node_id": "PRRC_kwDOAP4Jqs5L_jjM",
      "diff_hunk": "",
      "path": "src/scalar_4x64_impl.h",
      "position": 1,
      "original_position": 1,
      "commit_id": "6a8fb81667a138a18e1793f50031598fba498af7",
      "original_commit_id": "6a8fb81667a138a18e1793f50031598fba498af7",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it will be a good idea to add empty lines between the \"verification\" blocks (e.g., containing `secp256k1_scalar_verify` and other `VERIFY_CHECK`s) and the actual function body. I suggested the same in #1348, see https://github.com/bitcoin-core/secp256k1/pull/1348/commits/690b0fc05abd76cb7f6bd87e88bf7b8b0fd1ab70.",
      "created_at": "2023-07-26T13:22:43Z",
      "updated_at": "2023-07-26T13:24:17Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#discussion_r1274951884",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1274951884"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1274960097",
      "pull_request_review_id": 1547738323,
      "id": 1274960097,
      "node_id": "PRRC_kwDOAP4Jqs5L_ljh",
      "diff_hunk": "@@ -60,79 +69,102 @@ static void secp256k1_scalar_set_b32(secp256k1_scalar *r, const unsigned char *b\n             *r %= EXHAUSTIVE_TEST_ORDER;\n         }\n     }\n+    secp256k1_scalar_verify(r);\n     if (overflow) *overflow = over;\n }\n \n static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar* a) {\n+    secp256k1_scalar_verify(a);\n     memset(bin, 0, 32);\n     bin[28] = *a >> 24; bin[29] = *a >> 16; bin[30] = *a >> 8; bin[31] = *a;\n }\n \n SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar *a) {\n+    secp256k1_scalar_verify(a);\n     return *a == 0;\n }\n \n static void secp256k1_scalar_negate(secp256k1_scalar *r, const secp256k1_scalar *a) {\n+    secp256k1_scalar_verify(a);\n     if (*a == 0) {\n         *r = 0;\n     } else {\n         *r = EXHAUSTIVE_TEST_ORDER - *a;\n     }\n+    secp256k1_scalar_verify(r);\n }\n \n SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar *a) {\n+    secp256k1_scalar_verify(a);\n     return *a == 1;\n }\n \n static int secp256k1_scalar_is_high(const secp256k1_scalar *a) {\n+    secp256k1_scalar_verify(a);\n     return *a > EXHAUSTIVE_TEST_ORDER / 2;\n }\n \n static int secp256k1_scalar_cond_negate(secp256k1_scalar *r, int flag) {\n+    secp256k1_scalar_verify(r);\n     if (flag) secp256k1_scalar_negate(r, r);\n+    secp256k1_scalar_verify(r);\n     return flag ? -1 : 1;\n }\n \n static void secp256k1_scalar_mul(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {\n+    secp256k1_scalar_verify(a);\n+    secp256k1_scalar_verify(b);\n     *r = (*a * *b) % EXHAUSTIVE_TEST_ORDER;\n+    secp256k1_scalar_verify(r);\n }\n \n static int secp256k1_scalar_shr_int(secp256k1_scalar *r, int n) {\n     int ret;\n     VERIFY_CHECK(n > 0);\n     VERIFY_CHECK(n < 16);\n+    secp256k1_scalar_verify(r);\n     ret = *r & ((1 << n) - 1);\n     *r >>= n;\n+    secp256k1_scalar_verify(r);\n     return ret;\n }\n \n static void secp256k1_scalar_split_128(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {\n+    secp256k1_scalar_verify(a);\n     *r1 = *a;\n     *r2 = 0;\n+    secp256k1_scalar_verify(r1);\n+    secp256k1_scalar_verify(r2);\n }\n \n SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const secp256k1_scalar *b) {\n+    secp256k1_scalar_verify(a);\n+    secp256k1_scalar_verify(b);\n     return *a == *b;\n }\n \n static SECP256K1_INLINE void secp256k1_scalar_cmov(secp256k1_scalar *r, const secp256k1_scalar *a, int flag) {\n     uint32_t mask0, mask1;\n     volatile int vflag = flag;\n     SECP256K1_CHECKMEM_CHECK_VERIFY(r, sizeof(*r));\n+    secp256k1_scalar_verify(a);\n     mask0 = vflag + ~((uint32_t)0);\n     mask1 = ~mask0;\n     *r = (*r & mask0) | (*a & mask1);\n+    secp256k1_scalar_verify(r);\n }\n \n static void secp256k1_scalar_inverse(secp256k1_scalar *r, const secp256k1_scalar *x) {\n     int i;\n     *r = 0;\n+    secp256k1_scalar_verify(x);\n     for (i = 0; i < EXHAUSTIVE_TEST_ORDER; i++)\n         if ((i * *x) % EXHAUSTIVE_TEST_ORDER == 1)\n             *r = i;\n     /* If this VERIFY_CHECK triggers we were given a noninvertible scalar (and thus\n      * have a composite group order; fix it in exhaustive_tests.c). */\n     VERIFY_CHECK(*r != 0);\n+    secp256k1_scalar_verify(r);\n }\n \n static void secp256k1_scalar_inverse_var(secp256k1_scalar *r, const secp256k1_scalar *x) {",
      "path": "src/scalar_low_impl.h",
      "position": 181,
      "original_position": 146,
      "commit_id": "d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "original_commit_id": "6a8fb81667a138a18e1793f50031598fba498af7",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Did you skip this intentionally because this function just delegates to `secp256k1_scalar_inverse`? I think it's preferable to have the checks in every function. This makes the code easier to change, in the sense that we don't need to bother with adding checks when change functions. (And even if we care about the runtime overhead of this in the tests, the compiler will most likely figure out that the duplicate call be dropped.) ",
      "created_at": "2023-07-26T13:28:39Z",
      "updated_at": "2023-07-26T13:28:39Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#discussion_r1274960097",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1274960097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 200,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1275967719",
      "pull_request_review_id": 1549358508,
      "id": 1275967719,
      "node_id": "PRRC_kwDOAP4Jqs5MDbjn",
      "diff_hunk": "@@ -116,7 +116,8 @@ static void test_exhaustive_schnorrsig_verify(const secp256k1_context *ctx, cons\n                         if (s <= EXHAUSTIVE_TEST_ORDER) {\n                             secp256k1_scalar s_s;\n                             secp256k1_scalar_set_int(&s_s, s);\n-                            secp256k1_scalar_get_b32(sig64 + 32, &s_s);\n+                            memset(sig64 + 32, 0, 32);\n+                            sig64[63] = s;",
      "path": "src/modules/schnorrsig/tests_exhaustive_impl.h",
      "position": null,
      "original_position": 6,
      "commit_id": "d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "original_commit_id": "6a8fb81667a138a18e1793f50031598fba498af7",
      "in_reply_to_id": 1274942723,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks! looks much better. also made these changes:\r\n- `s_s` needs to be written to `sig64[60..63]` and we'd memset the other locations to 0.\r\n- changed `s` to be an unsigned int since the comparison on [this line](https://github.com/bitcoin-core/secp256k1/blob/c734c6427801f5dbe93047a3fe5c8ed2e2f16020/src/modules/schnorrsig/tests_exhaustive_impl.h#L121) is with an unsigned int.",
      "created_at": "2023-07-27T09:02:17Z",
      "updated_at": "2023-07-27T09:02:17Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#discussion_r1275967719",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1275967719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
        }
      },
      "start_line": null,
      "original_start_line": 117,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1275967999",
      "pull_request_review_id": 1549358882,
      "id": 1275967999,
      "node_id": "PRRC_kwDOAP4Jqs5MDbn_",
      "diff_hunk": "",
      "path": "src/scalar_4x64_impl.h",
      "position": 1,
      "original_position": 1,
      "commit_id": "6a8fb81667a138a18e1793f50031598fba498af7",
      "original_commit_id": "6a8fb81667a138a18e1793f50031598fba498af7",
      "in_reply_to_id": 1274951884,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done. liked how it's more consistent to read.",
      "created_at": "2023-07-27T09:02:25Z",
      "updated_at": "2023-07-27T09:02:26Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#discussion_r1275967999",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1275967999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1275968146",
      "pull_request_review_id": 1549359058,
      "id": 1275968146,
      "node_id": "PRRC_kwDOAP4Jqs5MDbqS",
      "diff_hunk": "@@ -60,79 +69,102 @@ static void secp256k1_scalar_set_b32(secp256k1_scalar *r, const unsigned char *b\n             *r %= EXHAUSTIVE_TEST_ORDER;\n         }\n     }\n+    secp256k1_scalar_verify(r);\n     if (overflow) *overflow = over;\n }\n \n static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar* a) {\n+    secp256k1_scalar_verify(a);\n     memset(bin, 0, 32);\n     bin[28] = *a >> 24; bin[29] = *a >> 16; bin[30] = *a >> 8; bin[31] = *a;\n }\n \n SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar *a) {\n+    secp256k1_scalar_verify(a);\n     return *a == 0;\n }\n \n static void secp256k1_scalar_negate(secp256k1_scalar *r, const secp256k1_scalar *a) {\n+    secp256k1_scalar_verify(a);\n     if (*a == 0) {\n         *r = 0;\n     } else {\n         *r = EXHAUSTIVE_TEST_ORDER - *a;\n     }\n+    secp256k1_scalar_verify(r);\n }\n \n SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar *a) {\n+    secp256k1_scalar_verify(a);\n     return *a == 1;\n }\n \n static int secp256k1_scalar_is_high(const secp256k1_scalar *a) {\n+    secp256k1_scalar_verify(a);\n     return *a > EXHAUSTIVE_TEST_ORDER / 2;\n }\n \n static int secp256k1_scalar_cond_negate(secp256k1_scalar *r, int flag) {\n+    secp256k1_scalar_verify(r);\n     if (flag) secp256k1_scalar_negate(r, r);\n+    secp256k1_scalar_verify(r);\n     return flag ? -1 : 1;\n }\n \n static void secp256k1_scalar_mul(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {\n+    secp256k1_scalar_verify(a);\n+    secp256k1_scalar_verify(b);\n     *r = (*a * *b) % EXHAUSTIVE_TEST_ORDER;\n+    secp256k1_scalar_verify(r);\n }\n \n static int secp256k1_scalar_shr_int(secp256k1_scalar *r, int n) {\n     int ret;\n     VERIFY_CHECK(n > 0);\n     VERIFY_CHECK(n < 16);\n+    secp256k1_scalar_verify(r);\n     ret = *r & ((1 << n) - 1);\n     *r >>= n;\n+    secp256k1_scalar_verify(r);\n     return ret;\n }\n \n static void secp256k1_scalar_split_128(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {\n+    secp256k1_scalar_verify(a);\n     *r1 = *a;\n     *r2 = 0;\n+    secp256k1_scalar_verify(r1);\n+    secp256k1_scalar_verify(r2);\n }\n \n SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const secp256k1_scalar *b) {\n+    secp256k1_scalar_verify(a);\n+    secp256k1_scalar_verify(b);\n     return *a == *b;\n }\n \n static SECP256K1_INLINE void secp256k1_scalar_cmov(secp256k1_scalar *r, const secp256k1_scalar *a, int flag) {\n     uint32_t mask0, mask1;\n     volatile int vflag = flag;\n     SECP256K1_CHECKMEM_CHECK_VERIFY(r, sizeof(*r));\n+    secp256k1_scalar_verify(a);\n     mask0 = vflag + ~((uint32_t)0);\n     mask1 = ~mask0;\n     *r = (*r & mask0) | (*a & mask1);\n+    secp256k1_scalar_verify(r);\n }\n \n static void secp256k1_scalar_inverse(secp256k1_scalar *r, const secp256k1_scalar *x) {\n     int i;\n     *r = 0;\n+    secp256k1_scalar_verify(x);\n     for (i = 0; i < EXHAUSTIVE_TEST_ORDER; i++)\n         if ((i * *x) % EXHAUSTIVE_TEST_ORDER == 1)\n             *r = i;\n     /* If this VERIFY_CHECK triggers we were given a noninvertible scalar (and thus\n      * have a composite group order; fix it in exhaustive_tests.c). */\n     VERIFY_CHECK(*r != 0);\n+    secp256k1_scalar_verify(r);\n }\n \n static void secp256k1_scalar_inverse_var(secp256k1_scalar *r, const secp256k1_scalar *x) {",
      "path": "src/scalar_low_impl.h",
      "position": 181,
      "original_position": 146,
      "commit_id": "d23da6d55714271c720fee58fbff5e5ef2fe193f",
      "original_commit_id": "6a8fb81667a138a18e1793f50031598fba498af7",
      "in_reply_to_id": 1274960097,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "makes sense. done.",
      "created_at": "2023-07-27T09:02:31Z",
      "updated_at": "2023-07-27T09:02:31Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1373#discussion_r1275968146",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1275968146"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1373"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 200,
      "original_line": 200,
      "side": "RIGHT"
    }
  ]
}