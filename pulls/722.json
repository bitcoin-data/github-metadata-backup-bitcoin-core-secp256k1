{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722",
    "id": 383600647,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgzNjAwNjQ3",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/722.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/722.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/85b35afa765ba23ac3682cf15800769b0a3b834d",
    "number": 722,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Context isn't freed in the ECDH benchmark",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hi,\r\nCurrently the context is leaked in `bench_ecdh`.\r\nWanted to prevent this happening in the future by adding it to the valgrind run in travis.\r\nfor that I made `run_benchmark` pass the number of iterations as a variable into the benchmarks so that the iteration number it uses to print results actually matches the one used in the benchmark.\r\nand added a way to pass `-DITERS=N` to change the baseline number of iterations used in the benchmarks(so that we can run the benchmarks with `ITERS=1` under travis to make sure they compile, run, don't leak or have UB)\r\n",
    "labels": [],
    "created_at": "2020-03-04T14:40:13Z",
    "updated_at": "2020-03-24T16:08:17Z",
    "closed_at": "2020-03-24T15:52:55Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-03-24T15:52:54Z",
    "merge_commit_sha": "8f78e208ad28eb0d7e099ba58ed6476f87179a77",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "elichai:2020-03-bench_ecdh",
      "ref": "2020-03-bench_ecdh",
      "sha": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 191781642,
        "node_id": "MDEwOlJlcG9zaXRvcnkxOTE3ODE2NDI=",
        "name": "secp256k1",
        "full_name": "elichai/secp256k1",
        "owner": {
          "login": "elichai",
          "id": 2167860,
          "node_id": "MDQ6VXNlcjIxNjc4NjA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/elichai",
          "html_url": "https://github.com/elichai",
          "followers_url": "https://api.github.com/users/elichai/followers",
          "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
          "organizations_url": "https://api.github.com/users/elichai/orgs",
          "repos_url": "https://api.github.com/users/elichai/repos",
          "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/elichai/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/elichai/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/elichai/secp256k1",
        "archive_url": "https://api.github.com/repos/elichai/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/elichai/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/elichai/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/elichai/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/elichai/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/elichai/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/elichai/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/elichai/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/elichai/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/elichai/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/elichai/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/elichai/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/elichai/secp256k1/events",
        "forks_url": "https://api.github.com/repos/elichai/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/elichai/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/elichai/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/elichai/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/elichai/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/elichai/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/elichai/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/elichai/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/elichai/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/elichai/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/elichai/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/elichai/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/elichai/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/elichai/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/elichai/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/elichai/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:elichai/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/elichai/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/elichai/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/elichai/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/elichai/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/elichai/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/elichai/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/elichai/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/elichai/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/elichai/secp256k1/hooks",
        "svn_url": "https://github.com/elichai/secp256k1",
        "language": "C",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 9293,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-02-23T14:15:18Z",
        "created_at": "2019-06-13T14:46:01Z",
        "updated_at": "2020-06-18T19:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "e9fccd4de1f2b382545dfbadeae54868447e2cdf",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 962,
        "stargazers_count": 1802,
        "watchers_count": 1802,
        "size": 10374,
        "default_branch": "master",
        "open_issues_count": 145,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T01:00:35Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-08-01T08:52:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 164,
    "deletions": 127,
    "changed_files": 8,
    "commits": 3,
    "review_comments": 23,
    "comments": 9
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6MDJkZDVmMWJiYjNhZjM2NjBlY2ZmMjc2YzNhMTA4MzcxOTc5YjY3Yw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/02dd5f1bbb3af3660ecff276c3a108371979b67c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/02dd5f1bbb3af3660ecff276c3a108371979b67c",
      "tree": {
        "sha": "f0c1e2af61ea944637421a472ac4521275f734ca",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/f0c1e2af61ea944637421a472ac4521275f734ca"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f0c1e2af61ea944637421a472ac4521275f734ca\nparent e9fccd4de1f2b382545dfbadeae54868447e2cdf\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1583324091 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1583324091 +0200\n\nfree the ctx at the end of bench_ecdh\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl5fm7sZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf34gEADA9Xlsq48+LNRQPwLKGuFy\nYcxLQ6TjwOQXxp1v+CQJVxeRMqZIbOPRCMn92gMcScQ4u/No2ASyM8TtbaZXH8FC\njMfLIG4oNqVWwgIXtKiXvXoJC5Ph7iMPrOUXWO5hqH5pqYmMVFmwMPrCDFJ0bOUD\nC8pZn52hIWt0l+8pjLSD6lDTzuXQ0swTtlIf9YqJArI46MvC1nPpJNZrW0c3fEHB\n5ZpFOy1JlQ9ZjCOxCWpIXrm1l/J1A2BBisWAVX/EbRMnNYgvSaG3m2VH3c+qoeZr\nIlX1upI/9FB70cg2/GGcX4J2gO8rxM+j3nNAyKvYVi5Fq6xt1jZX2uxHPSu/Fhf1\n5qDMwOTctic130HO2TJsObyyuABuuKhlIcPJulhum8K2Yrc69bG2d5rUFpZQVAhC\nYI6v7ZxB30HEk45EHEHDolm3tpBlHb1luAVMGkFcMz5z1nLKYuWkjXSxLI0F+YL3\nDCDRmAJGcLM9MEM0XZlOhjkfnnsiJSq7vCb0qHv9tVNeqSBvbrM+43M3hBHAE4c0\nW+iNXlGq+z2vI5kV3jmtKKmyswmGo4EzDQ2PeYHe2cd8dfIJ8wj0yEt3xYkBFr3v\n82nC3wzDQ8TX69yLYsDGli1shQ3efLgmqUjR3puqqQrbSJNE1K3YoUCXhNuP9D/z\nCPdW3YUOSJohWiES/rvFRw==\n=jsZL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/e9fccd4de1f2b382545dfbadeae54868447e2cdf",
          "sha": "e9fccd4de1f2b382545dfbadeae54868447e2cdf",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/e9fccd4de1f2b382545dfbadeae54868447e2cdf"
        }
      ],
      "message": "free the ctx at the end of bench_ecdh",
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-03-04T12:14:51Z"
      },
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-03-04T12:14:51Z"
      },
      "sha": "02dd5f1bbb3af3660ecff276c3a108371979b67c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3096844580,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA5Njg0NDU4MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3096844580",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T14:47:51Z"
    },
    {
      "event": "commented",
      "id": 594595355,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDU5NTM1NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/594595355",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T15:21:24Z",
      "updated_at": "2020-03-04T15:21:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. \r\n\r\nThis is neat. Travis fails at the moment: https://travis-ci.org/bitcoin-core/secp256k1/jobs/658249366#L447\r\n\r\nA few observations:\r\n - If we already make `iter` configurable, wouldn't it be more convenient to obtain the parameter at runtime? \r\n - Should we make `count` configurable too?",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#issuecomment-594595355",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722"
    },
    {
      "event": "commented",
      "id": 594600399,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDYwMDM5OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/594600399",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T15:27:39Z",
      "updated_at": "2020-03-04T15:27:39Z",
      "author_association": "CONTRIBUTOR",
      "body": ">     * If we already make `iter` configurable, wouldn't it be more convenient to obtain the parameter at runtime?\r\n\r\nThat's what I did at first, but it somewhat collides with `have_flag` so I decided to start with a simpler version and if people think it's a useful feature I can implement have_flag in a way that will work both with the number of iterations and the flags without ambiguity(ie `--tests=N`)\r\n\r\n>     * Should we make `count` configurable too?\r\n\r\nCount doesn't seem to affect performance that match, so I didn't need to do that. but if we'll add runtime configurations we can definitely add that too.\r\n",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#issuecomment-594600399",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722"
    },
    {
      "event": "commented",
      "id": 594603297,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDYwMzI5Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/594603297",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T15:31:20Z",
      "updated_at": "2020-03-04T15:31:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Concept ACK.\r\n> \r\n> This is neat. Travis fails at the moment: https://travis-ci.org/bitcoin-core/secp256k1/jobs/658249366#L447\r\n\r\nRight, forgot I need to check if recovery and/or ecdh are compiled or not. that will be a big enough logic that I'm thinking of moving this to autotools maybe (although that will make it hard again to run under valgrind) Will fix this later/tomorrow and see how complex it will look",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#issuecomment-594603297",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3097574265,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA5NzU3NDI2NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3097574265",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T17:17:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3097870587,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA5Nzg3MDU4Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3097870587",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T18:25:43Z"
    },
    {
      "event": "commented",
      "id": 595006946,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTAwNjk0Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/595006946",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T03:16:30Z",
      "updated_at": "2020-03-05T03:16:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "configure: error: unrecognized option: `-DITERS=1'",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#issuecomment-595006946",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3100334834,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMDMzNDgzNA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3100334834",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T09:24:53Z"
    },
    {
      "event": "commented",
      "id": 596779431,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njc3OTQzMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/596779431",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T21:06:58Z",
      "updated_at": "2020-03-09T21:06:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "I agree that it would be better to make the benchmark iterations runtime configurable. Perhaps `getenv` would be an acceptable workaround?",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#issuecomment-596779431",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722"
    },
    {
      "event": "commented",
      "id": 596945470,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njk0NTQ3MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/596945470",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-10T07:37:13Z",
      "updated_at": "2020-03-10T07:37:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I agree that it would be better to make the benchmark iterations runtime configurable. Perhaps `getenv` would be an acceptable workaround?\r\n\r\nI think an environment variable is not bad because it can persist and it applies to all benchmarks. That fits our usage of the benchmarks.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#issuecomment-596945470",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3118268339,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzExODI2ODMzOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3118268339",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-11T10:50:52Z"
    },
    {
      "event": "reviewed",
      "id": 372657554,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNjU3NTU0",
      "url": null,
      "actor": null,
      "commit_id": "98812c5d2fc5b8ce0bc7b6ced6c452aa743eb7ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK except nit",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#pullrequestreview-372657554",
      "submitted_at": "2020-03-11T11:00:34Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3118343077,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzExODM0MzA3Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3118343077",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-11T11:13:02Z"
    },
    {
      "event": "reviewed",
      "id": 372688909,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNjg4OTA5",
      "url": null,
      "actor": null,
      "commit_id": "31c3d6ccda432b35d1d83b72bcb9ba6f3c0a3166",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin-core/secp256k1/pull/722/commits/31c3d6ccda432b35d1d83b72bcb9ba6f3c0a3166 I've looked at the diff but I haven't tested the changes",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#pullrequestreview-372688909",
      "submitted_at": "2020-03-11T11:50:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
    },
    {
      "event": "reviewed",
      "id": 373100895,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTAwODk1",
      "url": null,
      "actor": null,
      "commit_id": "31c3d6ccda432b35d1d83b72bcb9ba6f3c0a3166",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#pullrequestreview-373100895",
      "submitted_at": "2020-03-11T20:31:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
    },
    {
      "event": "commented",
      "id": 597915471,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzkxNTQ3MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/597915471",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-11T22:40:33Z",
      "updated_at": "2020-03-11T22:40:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "FWIW, when you setup 'fast' CI tests, please at least run them with 2 iterations, not 1.  1 iteration will fail to catch some kinds of bugs in the test harnesses, e.g. use after free if the deallocations are in the wrong place with the testing loops, etc.  If 2 is too much, maybe resize the underlying work units so that they're not.\r\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#issuecomment-597915471",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6Y2E0OTA2YjAyZTY5NjQ0ZDgzZTEzYjNjMDljYzkxNDdmYzEyMzJhNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/ca4906b02e69644d83e13b3c09cc9147fc1232a5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/ca4906b02e69644d83e13b3c09cc9147fc1232a5",
      "tree": {
        "sha": "96f127d0f8fe1a6dbd037b8f86869d6db332ea72",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/96f127d0f8fe1a6dbd037b8f86869d6db332ea72"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 96f127d0f8fe1a6dbd037b8f86869d6db332ea72\nparent 02dd5f1bbb3af3660ecff276c3a108371979b67c\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1583327615 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1584092881 +0200\n\nPass num of iters to benchmarks as variable, and define envvar\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl5rVtIZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqfwC8EADE6alMf3o+JdKxsFhDj6tI\ntMgG3+P0rqa2y1kCANzBs7DsTHaj/ffQYS6L9D3fjYV3yaDNfqDxbm1SYYGdaW+d\nzrXJZTH5kWVOqwkKqdddSRda2PTPrq8cl6BAJ7GRTxTekqg9u3zBX5xXImJGcwTG\nayi7feMITHTULzbr38O7QXG+kxwvwT6m7z0uetiEgjFEYMZ+N4LwKqddZc+5XPnw\npCeSXuMTNigs4PvH6gCTnwUGMgDb0bxtJ3opuKBZ+RZppJfwBkRg3SajaTp0QZOa\nD6vaHqEIeRBspgVbXYZh+uujcogaDhxegB+R/SI47cryROeDFAjhbKtH5zgb3COP\nH4BQGUUdYPdm4dj/9qAIPD/DSNnDh6/p23ZNFMkPt1luwUO9ahNzJnhjgoLXKSOX\nm1wnGX8sydykqK7Aao/ehNsXl70YIzr11MyE3TEnphmMbGti+dt5P/JEYwmScfYA\nZiC3ETG0RXyE+xHXuATjuP7iuVIxbWQnC3bs4vjZ6iqx1mstLFKgEN+FPtgkbhDY\n7YzknSkM0Kc5BlAUpaw4dkX6VBswDUhwjwwGGHbxDqZ9Nx5cIv4tidqo+jXYHCNP\ngiIqdzVCFQPqQ6zwWeMxF0vzoGE4H74RdaV5tlhnb9en7e70JiZBD3k44vH8RiIr\nPFFD+rE+dwhjTi/3yWAZJA==\n=BZgi\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/02dd5f1bbb3af3660ecff276c3a108371979b67c",
          "sha": "02dd5f1bbb3af3660ecff276c3a108371979b67c",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/02dd5f1bbb3af3660ecff276c3a108371979b67c"
        }
      ],
      "message": "Pass num of iters to benchmarks as variable, and define envvar",
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-03-13T09:48:01Z"
      },
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-03-04T13:13:35Z"
      },
      "sha": "ca4906b02e69644d83e13b3c09cc9147fc1232a5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3126059253,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEyNjA1OTI1Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3126059253",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-13T09:48:23Z"
    },
    {
      "event": "reviewed",
      "id": 375492672,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDkyNjcy",
      "url": null,
      "actor": null,
      "commit_id": "e795caa0a7721823f669a62ed6aaddce7de0e254",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK mod nit",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#pullrequestreview-375492672",
      "submitted_at": "2020-03-16T18:45:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6ODViMzVhZmE3NjViYTIzYWMzNjgyY2YxNTgwMDc2OWIwYTNiODM0ZA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/85b35afa765ba23ac3682cf15800769b0a3b834d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/85b35afa765ba23ac3682cf15800769b0a3b834d",
      "tree": {
        "sha": "01c397fe27866ca46bf6106ac97209ae160c1f96",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/01c397fe27866ca46bf6106ac97209ae160c1f96"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 01c397fe27866ca46bf6106ac97209ae160c1f96\nparent ca4906b02e69644d83e13b3c09cc9147fc1232a5\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1583332531 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1584541047 +0200\n\nAdd running benchmarks regularly and under valgrind in travis\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl5yLXcZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf3xAD/sGqhc8QlQssjBcIXR0gxXW\n8K/LYmizMTQr1IUgrxtWjOmDRaDr3V2e8bWbXEMZC5bjCDoS9i7whPQqjFMsZuvL\nrp2XsuTLnpscFxa0mnQosT6Zu1MWUNXT9j+yabMhmIjthrQDRGHlyx0HbRPy5QX0\n0mJyJbk1TMWlZSzDfp9eU6Z/gCGYdLXnynM+KS/uDLDu5JH+Q9U0A1Xxay6/lneX\nMVs0t/wf0OjePK2SfLUY/qJG719IrsiDoe15vAY2Yn7lU/LdLBzzxPrYCm5wztup\nzZkyqKSCyMkWcXs6qqUfEpnPnqZqgPhcK8WtuJjLzyfig7kHTokg9dvQ7S1QOVnZ\nT/MzwiQNMPBL+CxCCnkOE3XGiEfmbynCxZbdipowDwafUUf6oC/IaMnr2KPjUrLQ\nRj+IYer85gZS9wXIEaJgX4Wn/zKSq0w9PjspTZ3ZUCTlRuBmyWKG0PrkrRT51HYo\ncuTz3peLTnN/aC4wJCgIzQ1vQOBAc59hJqrz+YHQpQDjjY2QnyzquTNUTcn7L4Gc\nfKem2Rz9kgciHc4ZrlMPz3jk4neGQ2ltMQSf4njRKjt5YKFYKHRPMxRB946AoTx/\nNAkNWqgPqAvQRKkH9KreRVyUmFX7u0w8C5Uj295wApFYEn9sqfX2MZfCFS2VgJHM\nvh6b7R4GoM5DAWo0DioR3Q==\n=K2rO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/ca4906b02e69644d83e13b3c09cc9147fc1232a5",
          "sha": "ca4906b02e69644d83e13b3c09cc9147fc1232a5",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/ca4906b02e69644d83e13b3c09cc9147fc1232a5"
        }
      ],
      "message": "Add running benchmarks regularly and under valgrind in travis",
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-03-18T14:17:27Z"
      },
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-03-04T14:35:31Z"
      },
      "sha": "85b35afa765ba23ac3682cf15800769b0a3b834d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3141656585,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE0MTY1NjU4NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3141656585",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-18T14:17:43Z"
    },
    {
      "event": "reviewed",
      "id": 377275500,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3Mjc1NTAw",
      "url": null,
      "actor": null,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 85b35afa765ba23ac3682cf15800769b0a3b834d",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#pullrequestreview-377275500",
      "submitted_at": "2020-03-18T22:20:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T09:54:10Z",
      "updated_at": "2020-03-24T09:54:10Z",
      "source": {
        "issue": {
          "id": 586832810,
          "node_id": "MDU6SXNzdWU1ODY4MzI4MTA=",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/726",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/726/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/726/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/726/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/726",
          "number": 726,
          "state": "open",
          "state_reason": null,
          "title": "Consider removing x86_64 field assembly",
          "body": "I noticed that turning off x86_64 assembly on my laptop actually speeds up `ecdsa_verify`. The internal benchmarks show that `--without-asm` scalar operations are slower, but field operations are faster. In order to investigate this I created a branch that includes the configurable benchmark iterations from #722, a test_matrix.sh script and allows turning on field assembly individually (https://github.com/jonasnick/secp256k1/tree/eval-asm).\r\n\r\nHere are the results with gcc 9.3.0 (got similar results with clang 9.0.1):\r\n```\r\nSECP256K1_BENCH_ITERS=200000\r\n\r\nbench config CFLAGS=-DUSE_ASM_X86_64_FIELD ./configure --disable-openssl-tests --with-asm=x86_64\r\nscalar_sqr: min 0.0331us / avg 0.0332us / max 0.0337us\r\nscalar_mul: min 0.0342us / avg 0.0343us / max 0.0345us\r\nfield_sqr: min 0.0165us / avg 0.0165us / max 0.0167us\r\nfield_mul: min 0.0204us / avg 0.0205us / max 0.0209us\r\necdsa_sign: min 40.3us / avg 40.3us / max 40.4us\r\necdsa_verify: min 56.9us / avg 56.9us / max 56.9us\r\n\r\nbench config CFLAGS= ./configure --disable-openssl-tests --without-asm\r\nscalar_sqr: min 0.0375us / avg 0.0376us / max 0.0383us\r\nscalar_mul: min 0.0362us / avg 0.0366us / max 0.0396us\r\nfield_sqr: min 0.0152us / avg 0.0152us / max 0.0152us\r\nfield_mul: min 0.0177us / avg 0.0178us / max 0.0178us\r\necdsa_sign: min 41.8us / avg 41.8us / max 41.9us\r\necdsa_verify: min 54.6us / avg 54.7us / max 54.7us\r\n\r\nbench config CFLAGS= ./configure --disable-openssl-tests --with-asm=x86_64\r\nscalar_sqr: min 0.0331us / avg 0.0331us / max 0.0333us\r\nscalar_mul: min 0.0342us / avg 0.0343us / max 0.0347us\r\nfield_sqr: min 0.0152us / avg 0.0153us / max 0.0154us\r\nfield_mul: min 0.0178us / avg 0.0178us / max 0.0180us\r\necdsa_sign: min 40.3us / avg 40.3us / max 40.4us\r\necdsa_verify: min 53.2us / avg 53.2us / max 53.2us\r\n```\r\n\r\nNote the 6.5% ecdsa_verify speedup. However, I don't fully understand this:\r\n\r\n1. There's assembly for field_sqr and field_mul. If we remove it, both functions are faster. But, some other internal functions are slower. For example:\r\n    ```\r\n    SECP256K1_BENCH_ITERS=200000\r\n    group_add_affine: min 0.257us / avg 0.257us / max 0.259us\r\n    vs.\r\n    group_add_affine: min 0.263us / avg 0.263us / max 0.264us\r\n    ```\r\n    This could just be an artifact of micro-benching and I have not tested this with #667.\r\n2. Removing field arithmetic also makes ecdsa verification slower if endomorphism is enabled.\r\n    ```\r\n    SECP256K1_BENCH_ITERS=200000\r\n    ecdsa_verify: min 41.1us / avg 41.1us / max 41.1us\r\n    vs.\r\n    ecdsa_verify: min 41.5us / avg 41.6us / max 41.6us\r\n    ```\r\n\r\nIt should be noted that without field arithmetic assembly, in order to use 64 bit field arithmetic you need to have `__int128` support (or use field=32bit with a 40% verification slowdown). I did not check where this is supported (MSVC?). Also we should try this with older compilers.\r\n",
          "user": {
            "login": "jonasnick",
            "id": 2582071,
            "node_id": "MDQ6VXNlcjI1ODIwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasnick",
            "html_url": "https://github.com/jonasnick",
            "followers_url": "https://api.github.com/users/jonasnick/followers",
            "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasnick/orgs",
            "repos_url": "https://api.github.com/users/jonasnick/repos",
            "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasnick/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "created_at": "2020-03-24T09:54:10Z",
          "updated_at": "2020-06-04T12:55:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 603275491,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzI3NTQ5MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/603275491",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T14:35:47Z",
      "updated_at": "2020-03-24T14:35:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 85b35afa765ba23ac3682cf15800769b0a3b834d I looked at the diff and tested the ecdh benchmark using valgrind",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#issuecomment-603275491",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722"
    },
    {
      "event": "merged",
      "id": 3160323871,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzE2MDMyMzg3MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3160323871",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8f78e208ad28eb0d7e099ba58ed6476f87179a77",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/8f78e208ad28eb0d7e099ba58ed6476f87179a77",
      "created_at": "2020-03-24T15:52:54Z"
    },
    {
      "event": "closed",
      "id": 3160323889,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzE2MDMyMzg4OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3160323889",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T15:52:55Z"
    },
    {
      "event": "commented",
      "id": 603334447,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzMzNDQ0Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/603334447",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T16:08:17Z",
      "updated_at": "2020-03-24T16:08:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "This is minor inconvenience that I can fix on the way, e.g. in #723:\r\n```\r\n> SECP256K1_BENCH_ITERS= ./bench_ecdh \r\n[1]    96654 floating point exception (core dumped)  \r\n```",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#issuecomment-603334447",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/722"
    },
    {
      "event": "referenced",
      "id": 3407696513,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0MDc2OTY1MTM=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3407696513",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "270f3194d8a2489a51aa33ea5ca30f84350788a5",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/270f3194d8a2489a51aa33ea5ca30f84350788a5",
      "created_at": "2020-06-04T16:20:09Z"
    },
    {
      "event": "referenced",
      "id": 3409629308,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0MDk2MjkzMDg=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3409629308",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a29a90ca04553f34163e17ffeeb52d979fd78649",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/secp256k1/commits/a29a90ca04553f34163e17ffeeb52d979fd78649",
      "created_at": "2020-06-05T04:30:44Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-09T20:50:36Z",
      "updated_at": "2020-06-09T20:50:36Z",
      "source": {
        "issue": {
          "id": 635749474,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDMyMDU4MTAy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19228",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19228/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19228/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19228/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19228",
          "number": 19228,
          "state": "closed",
          "state_reason": null,
          "title": "Update libsecp256k1 subtree",
          "body": "It's been abound a year since the subtree was updated.\r\n\r\nHere is a list of the included PRs:\r\n\r\n* bitcoin-core/secp256k1#755: Recovery signing: add to constant time test, and eliminate non ct operators\r\n* bitcoin-core/secp256k1#754: Fix uninit values passed into cmov\r\n* bitcoin-core/secp256k1#752: autoconf: Use \":\" instead of \"dnl\" as a noop\r\n* bitcoin-core/secp256k1#750: Add macOS to the CI\r\n* bitcoin-core/secp256k1#701: Make ec_ arithmetic more consistent and add documentation\r\n* bitcoin-core/secp256k1#732: Retry if r is zero during signing\r\n* bitcoin-core/secp256k1#742: Fix typo in ecmult_const_impl.h\r\n* bitcoin-core/secp256k1#740: Make recovery/main_impl.h non-executable\r\n* bitcoin-core/secp256k1#735: build: fix OpenSSL EC detection on macOS\r\n* bitcoin-core/secp256k1#728: Suppress a harmless variable-time optimization by clang in memczero\r\n* bitcoin-core/secp256k1#722: Context isn't freed in the ECDH benchmark\r\n* bitcoin-core/secp256k1#700: Allow overriding default flags\r\n* bitcoin-core/secp256k1#708: Constant-time behaviour test using valgrind memtest.\r\n* bitcoin-core/secp256k1#710: Eliminate harmless non-constant time operations on secret data.\r\n* bitcoin-core/secp256k1#718: Clarify that a secp256k1_ecdh_hash_function must return 0 or 1\r\n* bitcoin-core/secp256k1#714: doc: document the length requirements of output parameter.\r\n* bitcoin-core/secp256k1#682: Remove Java Native Interface\r\n* bitcoin-core/secp256k1#713: Docstrings\r\n* bitcoin-core/secp256k1#704: README: add a section for test coverage\r\n* bitcoin-core/secp256k1#709: Remove secret-dependant non-constant time operation in ecmult_const.\r\n* bitcoin-core/secp256k1#703: Overhaul README.md\r\n* bitcoin-core/secp256k1#689: Remove \"except in benchmarks\" exception for fp math\r\n* bitcoin-core/secp256k1#679: Add SECURITY.md\r\n* bitcoin-core/secp256k1#685: Fix issue where travis does not show the ./tests seed…\r\n* bitcoin-core/secp256k1#690: Add valgrind check to travis\r\n* bitcoin-core/secp256k1#678: Preventing compiler optimizations in benchmarks without a memory fence\r\n* bitcoin-core/secp256k1#688: Fix ASM setting in travis\r\n* bitcoin-core/secp256k1#684: Make no-float policy explicit\r\n* bitcoin-core/secp256k1#677: Remove note about heap allocation in secp256k1_ecmult_odd_multiples_table_storage_var\r\n* bitcoin-core/secp256k1#647: Increase robustness against UB in secp256k1_scalar_cadd_bit\r\n* bitcoin-core/secp256k1#664: Remove mention of ec_privkey_export because it doesn't exist\r\n* bitcoin-core/secp256k1#337: variable sized precomputed table for signing\r\n* bitcoin-core/secp256k1#661: Make ./configure string consistent\r\n* bitcoin-core/secp256k1#657: Fix a nit in the recovery tests\r\n* bitcoin-core/secp256k1#650: secp256k1/src/tests.c:  Properly handle sscanf return value\r\n* bitcoin-core/secp256k1#654: Fix typo (∞)\r\n* bitcoin-core/secp256k1#583: JNI: fix use sig array\r\n* bitcoin-core/secp256k1#644: Avoid optimizing out a verify_check\r\n* bitcoin-core/secp256k1#652: README.md: update instruction to run tests\r\n* bitcoin-core/secp256k1#651: Fix typo in secp256k1_preallocated.h\r\n* bitcoin-core/secp256k1#640: scalar_impl.h: fix includes\r\n* bitcoin-core/secp256k1#655: jni: Use only Guava for hex encoding and decoding\r\n* bitcoin-core/secp256k1#634: Add a descriptive comment for secp256k1_ecmult_const.\r\n* bitcoin-core/secp256k1#631: typo in comment for secp256k1_ec_pubkey_tweak_mul ()\r\n* bitcoin-core/secp256k1#629: Avoid calling _is_zero when _set_b32 fails.\r\n* bitcoin-core/secp256k1#630: Note intention of timing sidechannel freeness.\r\n* bitcoin-core/secp256k1#628: Fix ability to compile tests without -DVERIFY.\r\n* bitcoin-core/secp256k1#627: Guard memcmp in tests against mixed size inputs.\r\n* bitcoin-core/secp256k1#578: Avoid implementation-defined and undefined behavior when dealing with sizes\r\n* bitcoin-core/secp256k1#595: Allow to use external default callbacks\r\n* bitcoin-core/secp256k1#600: scratch space: use single allocation\r\n* bitcoin-core/secp256k1#592: Use trivial algorithm in ecmult_multi if scratch space is small\r\n* bitcoin-core/secp256k1#566: Enable context creation in preallocated memory\r\n* bitcoin-core/secp256k1#596: Make WINDOW_G configurable\r\n* bitcoin-core/secp256k1#561: Respect LDFLAGS and #undef STATIC_PRECOMPUTATION if using basic config\r\n* bitcoin-core/secp256k1#533: Make sure we're not using an uninitialized variable in secp256k1_wnaf_const(...)\r\n* bitcoin-core/secp256k1#617: Pass scalar by reference in secp256k1_wnaf_const()\r\n* bitcoin-core/secp256k1#619: Clear a copied secret key after negation\r\n* bitcoin-core/secp256k1#612: Allow field_10x26_arm.s to compile for ARMv7 architecture",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19228",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19228",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19228.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19228.patch"
          },
          "closed_at": "2020-06-13T01:50:57Z",
          "created_at": "2020-06-09T20:50:36Z",
          "updated_at": "2022-02-15T10:32:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3440347766,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDAzNDc3NjY=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3440347766",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8c97780db8c9dd33efed134385573ba97e9cd165",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c97780db8c9dd33efed134385573ba97e9cd165",
      "created_at": "2020-06-13T01:50:52Z"
    },
    {
      "event": "referenced",
      "id": 3440492950,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDA0OTI5NTA=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3440492950",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8a3a072968d77b420b8856a8d98600f0d67dbf66",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/8a3a072968d77b420b8856a8d98600f0d67dbf66",
      "created_at": "2020-06-13T05:45:49Z"
    },
    {
      "event": "referenced",
      "id": 3447518323,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDc1MTgzMjM=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3447518323",
      "actor": {
        "login": "ComputerCraftr",
        "id": 27882076,
        "node_id": "MDQ6VXNlcjI3ODgyMDc2",
        "avatar_url": "https://avatars.githubusercontent.com/u/27882076?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ComputerCraftr",
        "html_url": "https://github.com/ComputerCraftr",
        "followers_url": "https://api.github.com/users/ComputerCraftr/followers",
        "following_url": "https://api.github.com/users/ComputerCraftr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ComputerCraftr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ComputerCraftr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ComputerCraftr/subscriptions",
        "organizations_url": "https://api.github.com/users/ComputerCraftr/orgs",
        "repos_url": "https://api.github.com/users/ComputerCraftr/repos",
        "events_url": "https://api.github.com/users/ComputerCraftr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ComputerCraftr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b98f1c6e6c3320ba34f8bb9f1fea4b4a99f94546",
      "commit_url": "https://api.github.com/repos/ComputerCraftr/bitcoin/commits/b98f1c6e6c3320ba34f8bb9f1fea4b4a99f94546",
      "created_at": "2020-06-16T07:03:04Z"
    },
    {
      "event": "referenced",
      "id": 5138104936,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMzgxMDQ5MzY=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5138104936",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9d36ba6570acfaa4935874dcd2ef750295ed0bbb",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/9d36ba6570acfaa4935874dcd2ef750295ed0bbb",
      "created_at": "2021-08-10T22:21:59Z"
    },
    {
      "event": "referenced",
      "id": 5149897607,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDk4OTc2MDc=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5149897607",
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8ded2caa74d5150cbce899749fbe02b49784d17a",
      "commit_url": "https://api.github.com/repos/5tefan/dash/commits/8ded2caa74d5150cbce899749fbe02b49784d17a",
      "created_at": "2021-08-12T14:39:46Z"
    },
    {
      "event": "referenced",
      "id": 6568857281,
      "node_id": "REFE_lADOAP4Jqs4iTML-zwAAAAGHiM7B",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6568857281",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d855cc511dd608b3e58e0387cd3826f2fba4fa0a",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/d855cc511dd608b3e58e0387cd3826f2fba4fa0a",
      "created_at": "2022-05-08T16:47:43Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/390892751",
      "pull_request_review_id": 372657554,
      "id": 390892751,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5Mjc1MQ==",
      "diff_hunk": "@@ -121,4 +121,13 @@ int have_flag(int argc, char** argv, char *flag) {\n     return 0;\n }\n \n+int get_iters(int default_iters) {\n+    char* env = getenv(\"ITERS\");",
      "path": "src/bench.h",
      "position": null,
      "original_position": 27,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "98812c5d2fc5b8ce0bc7b6ced6c452aa743eb7ce",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "maybe change it to something with more meaning and less likely to collide with other software, e.g., `SECP256K1_BENCH_ITERS`",
      "created_at": "2020-03-11T11:00:21Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r390892751",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/390892751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/390893636",
      "pull_request_review_id": 372658622,
      "id": 390893636,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5MzYzNg==",
      "diff_hunk": "@@ -121,4 +121,13 @@ int have_flag(int argc, char** argv, char *flag) {\n     return 0;\n }\n \n+int get_iters(int default_iters) {\n+    char* env = getenv(\"ITERS\");",
      "path": "src/bench.h",
      "position": null,
      "original_position": 27,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "98812c5d2fc5b8ce0bc7b6ced6c452aa743eb7ce",
      "in_reply_to_id": 390892751,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "even though it's just the for the benchmarks? we also have `int have_flag(..);` and `void print_number(..);` in that header.",
      "created_at": "2020-03-11T11:01:56Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r390893636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/390893636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/390895851",
      "pull_request_review_id": 372661416,
      "id": 390895851,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5NTg1MQ==",
      "diff_hunk": "@@ -121,4 +121,13 @@ int have_flag(int argc, char** argv, char *flag) {\n     return 0;\n }\n \n+int get_iters(int default_iters) {\n+    char* env = getenv(\"ITERS\");",
      "path": "src/bench.h",
      "position": null,
      "original_position": 27,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "98812c5d2fc5b8ce0bc7b6ced6c452aa743eb7ce",
      "in_reply_to_id": 390892751,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm talking about the environment variable, not the function. :)",
      "created_at": "2020-03-11T11:06:12Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r390895851",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/390895851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/390899422",
      "pull_request_review_id": 372665902,
      "id": 390899422,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5OTQyMg==",
      "diff_hunk": "@@ -121,4 +121,13 @@ int have_flag(int argc, char** argv, char *flag) {\n     return 0;\n }\n \n+int get_iters(int default_iters) {\n+    char* env = getenv(\"ITERS\");",
      "path": "src/bench.h",
      "position": null,
      "original_position": 27,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "98812c5d2fc5b8ce0bc7b6ced6c452aa743eb7ce",
      "in_reply_to_id": 390892751,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-11T11:13:11Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r390899422",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/390899422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391248666",
      "pull_request_review_id": 373100895,
      "id": 391248666,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0ODY2Ng==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "31c3d6ccda432b35d1d83b72bcb9ba6f3c0a3166",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`BENCH` is never set",
      "created_at": "2020-03-11T20:26:47Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r391248666",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391248666"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391249993",
      "pull_request_review_id": 373100895,
      "id": 391249993,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0OTk5Mw==",
      "diff_hunk": "@@ -329,51 +329,53 @@ void bench_num_jacobi(void* arg) {\n     secp256k1_scalar_order_get_num(&norder);\n     secp256k1_scalar_get_num(&norder, &data->scalar_y);\n \n-    for (i = 0; i < 200000; i++) {\n+    for (i = 0; i < iters; i++) {\n         j += secp256k1_num_jacobi(&nx, &norder);\n     }\n-    CHECK(j <= 200000);\n+    CHECK(j <= iters);\n }\n #endif\n \n int main(int argc, char **argv) {\n     bench_inv data;\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"add\")) run_benchmark(\"scalar_add\", bench_scalar_add, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"negate\")) run_benchmark(\"scalar_negate\", bench_scalar_negate, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"scalar_sqr\", bench_scalar_sqr, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"scalar_mul\", bench_scalar_mul, bench_setup, NULL, &data, 10, 200000);\n+    int iters = get_iters(20000);\n+\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"add\")) run_benchmark(\"scalar_add\", bench_scalar_add, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"negate\")) run_benchmark(\"scalar_negate\", bench_scalar_negate, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"scalar_sqr\", bench_scalar_sqr, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"scalar_mul\", bench_scalar_mul, bench_setup, NULL, &data, 10, iters*10);\n #ifdef USE_ENDOMORPHISM\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"split\")) run_benchmark(\"scalar_split\", bench_scalar_split, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"split\")) run_benchmark(\"scalar_split\", bench_scalar_split, bench_setup, NULL, &data, 10, iters);\n #endif\n     if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"scalar_inverse\", bench_scalar_inverse, bench_setup, NULL, &data, 10, 2000);\n     if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"scalar_inverse_var\", bench_scalar_inverse_var, bench_setup, NULL, &data, 10, 2000);\n \n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize\", bench_field_normalize, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize_weak\", bench_field_normalize_weak, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"field_sqr\", bench_field_sqr, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"field_mul\", bench_field_mul, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse\", bench_field_inverse, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse_var\", bench_field_inverse_var, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqrt\")) run_benchmark(\"field_sqrt\", bench_field_sqrt, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize\", bench_field_normalize, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize_weak\", bench_field_normalize_weak, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"field_sqr\", bench_field_sqr, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"field_mul\", bench_field_mul, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse\", bench_field_inverse, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse_var\", bench_field_inverse_var, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqrt\")) run_benchmark(\"field_sqrt\", bench_field_sqrt, bench_setup, NULL, &data, 10, iters);\n \n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"double\")) run_benchmark(\"group_double_var\", bench_group_double_var, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_var\", bench_group_add_var, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine\", bench_group_add_affine, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine_var\", bench_group_add_affine_var, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"jacobi\")) run_benchmark(\"group_jacobi_var\", bench_group_jacobi_var, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"double\")) run_benchmark(\"group_double_var\", bench_group_double_var, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_var\", bench_group_add_var, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine\", bench_group_add_affine, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine_var\", bench_group_add_affine_var, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"jacobi\")) run_benchmark(\"group_jacobi_var\", bench_group_jacobi_var, bench_setup, NULL, &data, 10, iters);\n \n-    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"wnaf_const\", bench_wnaf_const, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"ecmult_wnaf\", bench_ecmult_wnaf, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"wnaf_const\", bench_wnaf_const, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"ecmult_wnaf\", bench_ecmult_wnaf, bench_setup, NULL, &data, 10, iters);\n \n-    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"sha256\")) run_benchmark(\"hash_sha256\", bench_sha256, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"hmac\")) run_benchmark(\"hash_hmac_sha256\", bench_hmac_sha256, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"rng6979\")) run_benchmark(\"hash_rfc6979_hmac_sha256\", bench_rfc6979_hmac_sha256, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"sha256\")) run_benchmark(\"hash_sha256\", bench_sha256, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"hmac\")) run_benchmark(\"hash_hmac_sha256\", bench_hmac_sha256, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"rng6979\")) run_benchmark(\"hash_rfc6979_hmac_sha256\", bench_rfc6979_hmac_sha256, bench_setup, NULL, &data, 10, iters);\n \n     if (have_flag(argc, argv, \"context\") || have_flag(argc, argv, \"verify\")) run_benchmark(\"context_verify\", bench_context_verify, bench_setup, NULL, &data, 10, 20);\n     if (have_flag(argc, argv, \"context\") || have_flag(argc, argv, \"sign\")) run_benchmark(\"context_sign\", bench_context_sign, bench_setup, NULL, &data, 10, 200);",
      "path": "src/bench_internal.c",
      "position": null,
      "original_position": 404,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "3f5e420c2727b032f7cbcf3a9a14a6edde93932f",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this and context_verify intentionally left with 200 iters? Would be more consistent to use `1 + iters/100` or something.",
      "created_at": "2020-03-11T20:29:21Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r391249993",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391249993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391250463",
      "pull_request_review_id": 373100895,
      "id": 391250463,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1MDQ2Mw==",
      "diff_hunk": "@@ -185,14 +186,17 @@ int main(int argc, char **argv) {\n     free(pubkeys_gej);\n \n     for (i = 1; i <= 8; ++i) {\n-        run_test(&data, i, 1);\n+        run_test(&data, i, 1, iters);\n     }\n \n-    for (p = 0; p <= 11; ++p) {\n-        for (i = 9; i <= 16; ++i) {\n-            run_test(&data, i << p, 1);\n+    if (iters > 1) {",
      "path": "src/bench_ecmult.c",
      "position": null,
      "original_position": 93,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "3f5e420c2727b032f7cbcf3a9a14a6edde93932f",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be good to add comment why that's useful.",
      "created_at": "2020-03-11T20:30:21Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r391250463",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391250463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391250802",
      "pull_request_review_id": 373100895,
      "id": 391250802,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1MDgwMg==",
      "diff_hunk": "@@ -14,6 +14,7 @@ typedef struct {\n     unsigned char key[32];\n } bench_sign;\n \n+",
      "path": "src/bench_sign.c",
      "position": null,
      "original_position": 4,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "3f5e420c2727b032f7cbcf3a9a14a6edde93932f",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: There are 2 more unnecessary newlines I think.",
      "created_at": "2020-03-11T20:31:03Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r391250802",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391250802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391255869",
      "pull_request_review_id": 373110069,
      "id": 391255869,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1NTg2OQ==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "31c3d6ccda432b35d1d83b72bcb9ba6f3c0a3166",
      "in_reply_to_id": 391248666,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oh I broke it when I replaced the precompiled macro with the env.\r\nThanks!",
      "created_at": "2020-03-11T20:41:33Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r391255869",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391255869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391256193",
      "pull_request_review_id": 373110478,
      "id": 391256193,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1NjE5Mw==",
      "diff_hunk": "@@ -329,51 +329,53 @@ void bench_num_jacobi(void* arg) {\n     secp256k1_scalar_order_get_num(&norder);\n     secp256k1_scalar_get_num(&norder, &data->scalar_y);\n \n-    for (i = 0; i < 200000; i++) {\n+    for (i = 0; i < iters; i++) {\n         j += secp256k1_num_jacobi(&nx, &norder);\n     }\n-    CHECK(j <= 200000);\n+    CHECK(j <= iters);\n }\n #endif\n \n int main(int argc, char **argv) {\n     bench_inv data;\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"add\")) run_benchmark(\"scalar_add\", bench_scalar_add, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"negate\")) run_benchmark(\"scalar_negate\", bench_scalar_negate, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"scalar_sqr\", bench_scalar_sqr, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"scalar_mul\", bench_scalar_mul, bench_setup, NULL, &data, 10, 200000);\n+    int iters = get_iters(20000);\n+\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"add\")) run_benchmark(\"scalar_add\", bench_scalar_add, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"negate\")) run_benchmark(\"scalar_negate\", bench_scalar_negate, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"scalar_sqr\", bench_scalar_sqr, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"scalar_mul\", bench_scalar_mul, bench_setup, NULL, &data, 10, iters*10);\n #ifdef USE_ENDOMORPHISM\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"split\")) run_benchmark(\"scalar_split\", bench_scalar_split, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"split\")) run_benchmark(\"scalar_split\", bench_scalar_split, bench_setup, NULL, &data, 10, iters);\n #endif\n     if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"scalar_inverse\", bench_scalar_inverse, bench_setup, NULL, &data, 10, 2000);\n     if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"scalar_inverse_var\", bench_scalar_inverse_var, bench_setup, NULL, &data, 10, 2000);\n \n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize\", bench_field_normalize, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize_weak\", bench_field_normalize_weak, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"field_sqr\", bench_field_sqr, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"field_mul\", bench_field_mul, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse\", bench_field_inverse, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse_var\", bench_field_inverse_var, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqrt\")) run_benchmark(\"field_sqrt\", bench_field_sqrt, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize\", bench_field_normalize, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize_weak\", bench_field_normalize_weak, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"field_sqr\", bench_field_sqr, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"field_mul\", bench_field_mul, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse\", bench_field_inverse, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse_var\", bench_field_inverse_var, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqrt\")) run_benchmark(\"field_sqrt\", bench_field_sqrt, bench_setup, NULL, &data, 10, iters);\n \n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"double\")) run_benchmark(\"group_double_var\", bench_group_double_var, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_var\", bench_group_add_var, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine\", bench_group_add_affine, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine_var\", bench_group_add_affine_var, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"jacobi\")) run_benchmark(\"group_jacobi_var\", bench_group_jacobi_var, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"double\")) run_benchmark(\"group_double_var\", bench_group_double_var, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_var\", bench_group_add_var, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine\", bench_group_add_affine, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine_var\", bench_group_add_affine_var, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"jacobi\")) run_benchmark(\"group_jacobi_var\", bench_group_jacobi_var, bench_setup, NULL, &data, 10, iters);\n \n-    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"wnaf_const\", bench_wnaf_const, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"ecmult_wnaf\", bench_ecmult_wnaf, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"wnaf_const\", bench_wnaf_const, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"ecmult_wnaf\", bench_ecmult_wnaf, bench_setup, NULL, &data, 10, iters);\n \n-    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"sha256\")) run_benchmark(\"hash_sha256\", bench_sha256, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"hmac\")) run_benchmark(\"hash_hmac_sha256\", bench_hmac_sha256, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"rng6979\")) run_benchmark(\"hash_rfc6979_hmac_sha256\", bench_rfc6979_hmac_sha256, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"sha256\")) run_benchmark(\"hash_sha256\", bench_sha256, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"hmac\")) run_benchmark(\"hash_hmac_sha256\", bench_hmac_sha256, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"rng6979\")) run_benchmark(\"hash_rfc6979_hmac_sha256\", bench_rfc6979_hmac_sha256, bench_setup, NULL, &data, 10, iters);\n \n     if (have_flag(argc, argv, \"context\") || have_flag(argc, argv, \"verify\")) run_benchmark(\"context_verify\", bench_context_verify, bench_setup, NULL, &data, 10, 20);\n     if (have_flag(argc, argv, \"context\") || have_flag(argc, argv, \"sign\")) run_benchmark(\"context_sign\", bench_context_sign, bench_setup, NULL, &data, 10, 200);",
      "path": "src/bench_internal.c",
      "position": null,
      "original_position": 404,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "3f5e420c2727b032f7cbcf3a9a14a6edde93932f",
      "in_reply_to_id": 391249993,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nope. missed it",
      "created_at": "2020-03-11T20:42:12Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r391256193",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/391256193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/392125640",
      "pull_request_review_id": 374167573,
      "id": 392125640,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNTY0MA==",
      "diff_hunk": "@@ -14,6 +14,7 @@ typedef struct {\n     unsigned char key[32];\n } bench_sign;\n \n+",
      "path": "src/bench_sign.c",
      "position": null,
      "original_position": 4,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "3f5e420c2727b032f7cbcf3a9a14a6edde93932f",
      "in_reply_to_id": 391250802,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-13T09:49:27Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r392125640",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/392125640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/392125676",
      "pull_request_review_id": 374167625,
      "id": 392125676,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNTY3Ng==",
      "diff_hunk": "@@ -185,14 +186,17 @@ int main(int argc, char **argv) {\n     free(pubkeys_gej);\n \n     for (i = 1; i <= 8; ++i) {\n-        run_test(&data, i, 1);\n+        run_test(&data, i, 1, iters);\n     }\n \n-    for (p = 0; p <= 11; ++p) {\n-        for (i = 9; i <= 16; ++i) {\n-            run_test(&data, i << p, 1);\n+    if (iters > 1) {",
      "path": "src/bench_ecmult.c",
      "position": null,
      "original_position": 93,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "3f5e420c2727b032f7cbcf3a9a14a6edde93932f",
      "in_reply_to_id": 391250463,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-13T09:49:30Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r392125676",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/392125676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/392125703",
      "pull_request_review_id": 374167654,
      "id": 392125703,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNTcwMw==",
      "diff_hunk": "@@ -329,51 +329,53 @@ void bench_num_jacobi(void* arg) {\n     secp256k1_scalar_order_get_num(&norder);\n     secp256k1_scalar_get_num(&norder, &data->scalar_y);\n \n-    for (i = 0; i < 200000; i++) {\n+    for (i = 0; i < iters; i++) {\n         j += secp256k1_num_jacobi(&nx, &norder);\n     }\n-    CHECK(j <= 200000);\n+    CHECK(j <= iters);\n }\n #endif\n \n int main(int argc, char **argv) {\n     bench_inv data;\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"add\")) run_benchmark(\"scalar_add\", bench_scalar_add, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"negate\")) run_benchmark(\"scalar_negate\", bench_scalar_negate, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"scalar_sqr\", bench_scalar_sqr, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"scalar_mul\", bench_scalar_mul, bench_setup, NULL, &data, 10, 200000);\n+    int iters = get_iters(20000);\n+\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"add\")) run_benchmark(\"scalar_add\", bench_scalar_add, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"negate\")) run_benchmark(\"scalar_negate\", bench_scalar_negate, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"scalar_sqr\", bench_scalar_sqr, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"scalar_mul\", bench_scalar_mul, bench_setup, NULL, &data, 10, iters*10);\n #ifdef USE_ENDOMORPHISM\n-    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"split\")) run_benchmark(\"scalar_split\", bench_scalar_split, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"split\")) run_benchmark(\"scalar_split\", bench_scalar_split, bench_setup, NULL, &data, 10, iters);\n #endif\n     if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"scalar_inverse\", bench_scalar_inverse, bench_setup, NULL, &data, 10, 2000);\n     if (have_flag(argc, argv, \"scalar\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"scalar_inverse_var\", bench_scalar_inverse_var, bench_setup, NULL, &data, 10, 2000);\n \n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize\", bench_field_normalize, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize_weak\", bench_field_normalize_weak, bench_setup, NULL, &data, 10, 2000000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"field_sqr\", bench_field_sqr, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"field_mul\", bench_field_mul, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse\", bench_field_inverse, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse_var\", bench_field_inverse_var, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqrt\")) run_benchmark(\"field_sqrt\", bench_field_sqrt, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize\", bench_field_normalize, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"normalize\")) run_benchmark(\"field_normalize_weak\", bench_field_normalize_weak, bench_setup, NULL, &data, 10, iters*100);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqr\")) run_benchmark(\"field_sqr\", bench_field_sqr, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"mul\")) run_benchmark(\"field_mul\", bench_field_mul, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse\", bench_field_inverse, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"inverse\")) run_benchmark(\"field_inverse_var\", bench_field_inverse_var, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"field\") || have_flag(argc, argv, \"sqrt\")) run_benchmark(\"field_sqrt\", bench_field_sqrt, bench_setup, NULL, &data, 10, iters);\n \n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"double\")) run_benchmark(\"group_double_var\", bench_group_double_var, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_var\", bench_group_add_var, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine\", bench_group_add_affine, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine_var\", bench_group_add_affine_var, bench_setup, NULL, &data, 10, 200000);\n-    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"jacobi\")) run_benchmark(\"group_jacobi_var\", bench_group_jacobi_var, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"double\")) run_benchmark(\"group_double_var\", bench_group_double_var, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_var\", bench_group_add_var, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine\", bench_group_add_affine, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine_var\", bench_group_add_affine_var, bench_setup, NULL, &data, 10, iters*10);\n+    if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"jacobi\")) run_benchmark(\"group_jacobi_var\", bench_group_jacobi_var, bench_setup, NULL, &data, 10, iters);\n \n-    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"wnaf_const\", bench_wnaf_const, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"ecmult_wnaf\", bench_ecmult_wnaf, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"wnaf_const\", bench_wnaf_const, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"ecmult_wnaf\", bench_ecmult_wnaf, bench_setup, NULL, &data, 10, iters);\n \n-    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"sha256\")) run_benchmark(\"hash_sha256\", bench_sha256, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"hmac\")) run_benchmark(\"hash_hmac_sha256\", bench_hmac_sha256, bench_setup, NULL, &data, 10, 20000);\n-    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"rng6979\")) run_benchmark(\"hash_rfc6979_hmac_sha256\", bench_rfc6979_hmac_sha256, bench_setup, NULL, &data, 10, 20000);\n+    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"sha256\")) run_benchmark(\"hash_sha256\", bench_sha256, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"hmac\")) run_benchmark(\"hash_hmac_sha256\", bench_hmac_sha256, bench_setup, NULL, &data, 10, iters);\n+    if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"rng6979\")) run_benchmark(\"hash_rfc6979_hmac_sha256\", bench_rfc6979_hmac_sha256, bench_setup, NULL, &data, 10, iters);\n \n     if (have_flag(argc, argv, \"context\") || have_flag(argc, argv, \"verify\")) run_benchmark(\"context_verify\", bench_context_verify, bench_setup, NULL, &data, 10, 20);\n     if (have_flag(argc, argv, \"context\") || have_flag(argc, argv, \"sign\")) run_benchmark(\"context_sign\", bench_context_sign, bench_setup, NULL, &data, 10, 200);",
      "path": "src/bench_internal.c",
      "position": null,
      "original_position": 404,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "3f5e420c2727b032f7cbcf3a9a14a6edde93932f",
      "in_reply_to_id": 391249993,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-13T09:49:34Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r392125703",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/392125703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/392125753",
      "pull_request_review_id": 374167717,
      "id": 392125753,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNTc1Mw==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "31c3d6ccda432b35d1d83b72bcb9ba6f3c0a3166",
      "in_reply_to_id": 391248666,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-13T09:49:38Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r392125753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/392125753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/393239671",
      "pull_request_review_id": 375492672,
      "id": 393239671,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzOTY3MQ==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "e795caa0a7721823f669a62ed6aaddce7de0e254",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Better to unset `BENCH` int the `BUILD=distcheck` case similar to `CTIMETEST` because the bench binaries are not build in that case.",
      "created_at": "2020-03-16T18:45:42Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r393239671",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/393239671"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394369419",
      "pull_request_review_id": 376892952,
      "id": 394369419,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM2OTQxOQ==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "e795caa0a7721823f669a62ed6aaddce7de0e254",
      "in_reply_to_id": 393239671,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm so why didn't the tests fail",
      "created_at": "2020-03-18T14:03:48Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r394369419",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394369419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394370492",
      "pull_request_review_id": 376894417,
      "id": 394370492,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM3MDQ5Mg==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "e795caa0a7721823f669a62ed6aaddce7de0e254",
      "in_reply_to_id": 393239671,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe because there's `;` between the ifs? hmmm",
      "created_at": "2020-03-18T14:05:22Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r394370492",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394370492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394378874",
      "pull_request_review_id": 376905308,
      "id": 394378874,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM3ODg3NA==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "e795caa0a7721823f669a62ed6aaddce7de0e254",
      "in_reply_to_id": 393239671,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Got it to fail: https://travis-ci.org/github/elichai/secp256k1/jobs/663963345\r\nWill fix now.\r\nThanks.",
      "created_at": "2020-03-18T14:16:38Z",
      "updated_at": "2020-03-18T14:17:43Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r394378874",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394378874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394380013",
      "pull_request_review_id": 376906720,
      "id": 394380013,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM4MDAxMw==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "e795caa0a7721823f669a62ed6aaddce7de0e254",
      "in_reply_to_id": 393239671,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ugh yep, I think we want `&&` to make sure that the final exit code of the statement.\r\n\r\nI think it's cleaner to have individual lines in yaml even. ",
      "created_at": "2020-03-18T14:18:03Z",
      "updated_at": "2020-03-18T14:18:06Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r394380013",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394380013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394381596",
      "pull_request_review_id": 376908815,
      "id": 394381596,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM4MTU5Ng==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "e795caa0a7721823f669a62ed6aaddce7de0e254",
      "in_reply_to_id": 393239671,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think it's cleaner to have individual lines in yaml even.\r\n\r\nThen the execution continues. With `&&` we stop after the first failing command, which is okay but not optimal.\r\n",
      "created_at": "2020-03-18T14:20:14Z",
      "updated_at": "2020-03-18T14:52:39Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r394381596",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394381596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394935197",
      "pull_request_review_id": 377603759,
      "id": 394935197,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkzNTE5Nw==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "e795caa0a7721823f669a62ed6aaddce7de0e254",
      "in_reply_to_id": 393239671,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you split an `if` across different yaml lines?",
      "created_at": "2020-03-19T10:43:55Z",
      "updated_at": "2020-03-19T10:43:55Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r394935197",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394935197"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394991418",
      "pull_request_review_id": 377674909,
      "id": 394991418,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk5MTQxOA==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "e795caa0a7721823f669a62ed6aaddce7de0e254",
      "in_reply_to_id": 393239671,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now, but you could different `if`s with combined conditions on  different lines. If you want to try, feel free to add a commit on top. Otherwise tell us and let's get his merged, it's certainly good as it is.",
      "created_at": "2020-03-19T12:33:00Z",
      "updated_at": "2020-03-19T12:33:00Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r394991418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394991418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394999581",
      "pull_request_review_id": 377685283,
      "id": 394999581,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk5OTU4MQ==",
      "diff_hunk": "@@ -94,6 +94,12 @@ script:\n    travis_wait 30 valgrind --error-exitcode=42 ./tests 16 &&\n    travis_wait 30 valgrind --error-exitcode=42 ./exhaustive_tests;\n    fi\n+ - if [ -n \"$BENCH\" ]; then",
      "path": ".travis.yml",
      "position": 22,
      "original_position": 13,
      "commit_id": "85b35afa765ba23ac3682cf15800769b0a3b834d",
      "original_commit_id": "e795caa0a7721823f669a62ed6aaddce7de0e254",
      "in_reply_to_id": 393239671,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm kinda tired of fighting with travis, so unless there's any objections I prefer to get it in as is",
      "created_at": "2020-03-19T12:47:41Z",
      "updated_at": "2020-03-19T12:47:42Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/722#discussion_r394999581",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/394999581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/722"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    }
  ]
}