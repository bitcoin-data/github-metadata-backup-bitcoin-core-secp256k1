{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638",
    "id": 287684743,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg3Njg0NzQz",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/638.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/638.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/638",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/638/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/0d574b436687898c85b434132aca117374dd64d7",
    "number": 638,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Function to compute optimal ecmult_multi scratch  size for a number of points",
    "user": {
      "login": "jonasnick",
      "id": 2582071,
      "node_id": "MDQ6VXNlcjI1ODIwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasnick",
      "html_url": "https://github.com/jonasnick",
      "followers_url": "https://api.github.com/users/jonasnick/followers",
      "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasnick/orgs",
      "repos_url": "https://api.github.com/users/jonasnick/repos",
      "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasnick/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@DavidBurkett requested to allow computing the optimal scratch size for Schnorr batch verification (https://github.com/ElementsProject/secp256k1-zkp/issues/69). This PR is a prerequisite but also contains a bunch of other fixups.\r\n\r\nOther than adding the new function this PR refactors scratch space handling in ecmult_impl to improve code quality, tests and documentation. \r\n\r\nThe biggest part of this PR is to make computing the scratch size and its inverse more precise by not assuming maximum padding when aligning, but rather using the actual padding. This is not strictly necessary but removes a leaky abstraction and makes testing easier.\r\n",
    "labels": [],
    "created_at": "2019-06-12T21:34:48Z",
    "updated_at": "2022-01-30T17:11:42Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "3a66152456a9a5e1e472db370ddb21941a91517e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "jonasnick:ecmult-scratch",
      "ref": "ecmult-scratch",
      "sha": "0d574b436687898c85b434132aca117374dd64d7",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 57937974,
        "node_id": "MDEwOlJlcG9zaXRvcnk1NzkzNzk3NA==",
        "name": "secp256k1",
        "full_name": "jonasnick/secp256k1",
        "owner": {
          "login": "jonasnick",
          "id": 2582071,
          "node_id": "MDQ6VXNlcjI1ODIwNzE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasnick",
          "html_url": "https://github.com/jonasnick",
          "followers_url": "https://api.github.com/users/jonasnick/followers",
          "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasnick/orgs",
          "repos_url": "https://api.github.com/users/jonasnick/repos",
          "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasnick/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasnick/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/jonasnick/secp256k1",
        "archive_url": "https://api.github.com/repos/jonasnick/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasnick/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasnick/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasnick/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasnick/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasnick/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasnick/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasnick/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasnick/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/jonasnick/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/jonasnick/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/jonasnick/secp256k1/events",
        "forks_url": "https://api.github.com/repos/jonasnick/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/jonasnick/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasnick/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasnick/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasnick/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasnick/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasnick/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasnick/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/jonasnick/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/jonasnick/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasnick/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasnick/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasnick/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasnick/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/jonasnick/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasnick/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasnick/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasnick/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/jonasnick/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/jonasnick/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/jonasnick/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasnick/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/jonasnick/secp256k1/hooks",
        "svn_url": "https://github.com/jonasnick/secp256k1",
        "language": "C",
        "forks_count": 4,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 11947,
        "default_branch": "master",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-31T19:10:25Z",
        "created_at": "2016-05-03T03:14:21Z",
        "updated_at": "2023-03-16T11:44:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "d8a246324650c3df8d54d133a8ac3c1b857a7a4e",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 962,
        "stargazers_count": 1802,
        "watchers_count": 1802,
        "size": 10374,
        "default_branch": "master",
        "open_issues_count": 145,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T01:00:35Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-08-01T08:52:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 333,
    "deletions": 77,
    "changed_files": 5,
    "commits": 6,
    "review_comments": 31,
    "comments": 5
  },
  "events": [
    {
      "event": "mentioned",
      "id": 2408783409,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjQwODc4MzQwOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2408783409",
      "actor": {
        "login": "DavidBurkett",
        "id": 24623306,
        "node_id": "MDQ6VXNlcjI0NjIzMzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/24623306?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DavidBurkett",
        "html_url": "https://github.com/DavidBurkett",
        "followers_url": "https://api.github.com/users/DavidBurkett/followers",
        "following_url": "https://api.github.com/users/DavidBurkett/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DavidBurkett/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DavidBurkett/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DavidBurkett/subscriptions",
        "organizations_url": "https://api.github.com/users/DavidBurkett/orgs",
        "repos_url": "https://api.github.com/users/DavidBurkett/repos",
        "events_url": "https://api.github.com/users/DavidBurkett/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DavidBurkett/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-12T21:34:48Z"
    },
    {
      "event": "subscribed",
      "id": 2408783411,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI0MDg3ODM0MTE=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2408783411",
      "actor": {
        "login": "DavidBurkett",
        "id": 24623306,
        "node_id": "MDQ6VXNlcjI0NjIzMzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/24623306?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DavidBurkett",
        "html_url": "https://github.com/DavidBurkett",
        "followers_url": "https://api.github.com/users/DavidBurkett/followers",
        "following_url": "https://api.github.com/users/DavidBurkett/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DavidBurkett/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DavidBurkett/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DavidBurkett/subscriptions",
        "organizations_url": "https://api.github.com/users/DavidBurkett/orgs",
        "repos_url": "https://api.github.com/users/DavidBurkett/repos",
        "events_url": "https://api.github.com/users/DavidBurkett/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DavidBurkett/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-12T21:34:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2409578468,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjQwOTU3ODQ2OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2409578468",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-13T07:10:06Z"
    },
    {
      "event": "reviewed",
      "id": 249320012,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5MzIwMDEy",
      "url": null,
      "actor": null,
      "commit_id": "dd63ca35cc563f953bdcf3a1f31f48fad8d05d29",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "(My review is best viewed commit by commit.)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#pullrequestreview-249320012",
      "submitted_at": "2019-06-13T13:10:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
    },
    {
      "event": "mentioned",
      "id": 2411197182,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjQxMTE5NzE4Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2411197182",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-13T16:25:31Z"
    },
    {
      "event": "subscribed",
      "id": 2411197185,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI0MTExOTcxODU=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2411197185",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-13T16:25:31Z"
    },
    {
      "event": "reviewed",
      "id": 249464025,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5NDY0MDI1",
      "url": null,
      "actor": null,
      "commit_id": "e774a6eea8f19fe56aeacdaadc4e1d270ff11cad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#pullrequestreview-249464025",
      "submitted_at": "2019-06-13T16:25:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2416053113,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjQxNjA1MzExMw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2416053113",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-16T19:43:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2416053790,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjQxNjA1Mzc5MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2416053790",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-16T19:45:20Z"
    },
    {
      "event": "commented",
      "id": 502480515,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ4MDUxNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/502480515",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-16T19:49:22Z",
      "updated_at": "2019-06-16T19:49:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "I made a couple of changes and in order to avoid adding code that is deleted in later commits I force pushed, sorry. Summary of the changes:\r\n* added function `alloc_size` to scratch space to compute actual size allocated for a given number of objects\r\n* fixed bug in strauss_max_points (thanks @real-or-random) that vastly underestimated the number of points actually fitting into the scratch space. Also added test which would have caught this issue.\r\n* added a verify check to ensure that the space required for a single point/entry is smaller than the worst case padding",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#issuecomment-502480515",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/638"
    },
    {
      "event": "mentioned",
      "id": 2416055532,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjQxNjA1NTUzMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2416055532",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-16T19:49:23Z"
    },
    {
      "event": "subscribed",
      "id": 2416055533,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI0MTYwNTU1MzM=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2416055533",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-16T19:49:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2416057860,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjQxNjA1Nzg2MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2416057860",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-16T19:55:16Z"
    },
    {
      "event": "reviewed",
      "id": 265637374,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjY1NjM3Mzc0",
      "url": null,
      "actor": null,
      "commit_id": "c7d8c9ce786f665a10c9dadbfd3bfa56ae032b3c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#pullrequestreview-265637374",
      "submitted_at": "2019-07-23T19:48:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
    },
    {
      "event": "commented",
      "id": 514359695,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDM1OTY5NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/514359695",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-23T19:55:25Z",
      "updated_at": "2019-07-23T19:55:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, I still need to go over the logic changes.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#issuecomment-514359695",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/638"
    },
    {
      "event": "commented",
      "id": 814868134,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDg2ODEzNA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/814868134",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-07T12:18:55Z",
      "updated_at": "2021-04-07T12:18:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "needs rebase ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#issuecomment-814868134",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/638"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-25T11:10:15Z",
      "updated_at": "2021-10-25T11:10:15Z",
      "source": {
        "issue": {
          "id": 891273233,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ0MTY1OTkx",
          "url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/131",
          "repository_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp",
          "labels_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/131/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/131/comments",
          "events_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/131/events",
          "html_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/131",
          "number": 131,
          "state": "closed",
          "state_reason": null,
          "title": "Replace MuSig(1) module with MuSig2",
          "body": "The main commit comprises `905 insertions(+), 1253 deletions(-)`. The diff isn't as small as I had hoped, but that's mostly because it was possible to simplify the API quite substantially which required rewriting large parts. Sorry, almost all of the changes are in one big commit which makes the diff very hard to read. Perhaps best to re-review most parts from scratch.\r\n\r\nA few key changes:\r\n\r\n- Obviously no commitment round. No big session struct and no `verifier` sessions. No `signer` struct.\r\n- There's a new `secnonce` struct that is the output of musig_nonce_gen and derived from a uniformly random session_id32. The derivation can be strengthened by adding whatever session parameters (combined_pk, msg) are available. The nonce function is my ad-hoc construction that allows for these optional inputs. Please have a look at that.\r\n- The secnonce is made invalid after being used in partial_sign.\r\n- Adaptor signatures basically work as before, according to https://github.com/ElementsProject/scriptless-scripts/pull/24 (with the exception that they operate on aggregate instead of partial sigs)\r\n- To avoid making this PR overly complex I did not consider how this implementation interacts with nested-MuSig, sign-to-contract, and antiklepto.\r\n- Testing should be close to complete. There's no reachable line or branch that isn't exercised by the tests.\r\n- [x] ~In the current implementation when a signer sends an invalid nonce (i.e. some garbage that can't be mapped to a group element), it is ignored when combining nonces. Only after receiving the signers partial signature and running `partial_sig_verify` will we notice that the signer misbehaved. The reason for this is that 1) this makes the API simpler and 2) malicious peers don't gain any additional powers because they can always interrupt the protocol by refusing to sign. However, this is up for discussion.~ EDIT: this is not the case anymore since invalid nonces are rejected when they're parsed.\r\n- [x] ~For every partial signature we verify we have to parse the pubnonce (two compressed points), despite having parsed it in `process_nonces` already. This is not great. `process_nonces` could optionally output the array of parsed pubnonces.~ EDIT: fixed by having a dedicated type for nonces.\r\n- [x] ~I left `src/modules/musig/musig.md` unchanged for now. Perhaps we should merge it with the `musig-spec`~ EDIT: musig.md is updated\r\n- [x] partial verification should use multiexp to compute `R1 + b*R2 + c*P`, but this can be done in a separate PR\r\n- [x] renaming wishlist\r\n    - pre_session -> keyagg_cache (because there is no session anymore)\r\n    - pubkey_combine, nonce_combine, partial_sig_combine -> pubkey_agg, nonce_agg, partial_sig_agg (shorter, matches terminology in musig2)\r\n    - musig_session_init -> musig_start (shorter, simpler) or [musig_generate_nonce](https://github.com/ElementsProject/secp256k1-zkp/pull/131#discussion_r654190890) or musig_prepare\r\n    - musig_partial_signature to musig_partial_sig (shorter)\r\n- [x] perhaps remove pubnonces and n_pubnonces argument from process_nonces (and then also add a opaque type for the combined nonce?)\r\n- [x] write the `combined_pubkey` into the `pre_session` struct (as suggested [below](https://github.com/ElementsProject/secp256k1-zkp/pull/131#issuecomment-866904975): then 1) session_init and process_nonces don't need a combined_pk argument (and there can't be mix up between tweaked and untweaked keys) and 2) pubkey_tweak doesn't need an input_pubkey and the output_pubkey can be written directly into the pre_session (reducing frustration such as Replace MuSig(1) module with MuSig2 #131 (comment))\r\n- [x] perhaps allow adapting both partial sigs (`partial_sig` struct) and aggregate partial sigs (64 raw bytes) as suggested [below](https://github.com/ElementsProject/secp256k1-zkp/pull/131#issuecomment-867281531).\r\n\r\n\r\nBased on #120.\r\n\r\n",
          "user": {
            "login": "jonasnick",
            "id": 2582071,
            "node_id": "MDQ6VXNlcjI1ODIwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasnick",
            "html_url": "https://github.com/jonasnick",
            "followers_url": "https://api.github.com/users/jonasnick/followers",
            "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasnick/orgs",
            "repos_url": "https://api.github.com/users/jonasnick/repos",
            "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasnick/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 62,
          "pull_request": {
            "url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/pulls/131",
            "html_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/131",
            "diff_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/131.diff",
            "patch_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/131.patch"
          },
          "closed_at": "2021-12-20T14:14:58Z",
          "created_at": "2021-05-13T18:34:52Z",
          "updated_at": "2022-02-18T08:18:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5578395108,
      "node_id": "HRFPE_lADOAP4Jqs4bJWLDzwAAAAFMf43k",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5578395108",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-06T20:41:10Z"
    },
    {
      "event": "commented",
      "id": 962507948,
      "node_id": "IC_kwDOAP4Jqs45XrSs",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/962507948",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-06T20:48:29Z",
      "updated_at": "2021-11-06T20:48:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and polished quite a bit. Also added fix for bug in master that we noticed before iirc. So to make sure it gets in I opened #1004.\r\n\r\nStill, I didn't fully try to understand how this PR works. Also, it seems like `ecmult_multi_scratch_size` doesn't give the exact optimal result. That's because a scratch space of size `pippenger_scratch_size(n_points, bucket_window)` it may happen that `strauss_max_points(error_callback, scratch), n)` (the actual batch size) is smaller than `n_points`.\r\n",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#issuecomment-962507948",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/638"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5578407463,
      "node_id": "HRFPE_lADOAP4Jqs4bJWLDzwAAAAFMf74n",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5578407463",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-06T20:58:08Z"
    },
    {
      "event": "reviewed",
      "id": 817296698,
      "node_id": "PRR_kwDOAP4Jqs4wtvU6",
      "url": null,
      "actor": null,
      "commit_id": "f1629125023d092a6c9a5d032608d17e23b0004e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#pullrequestreview-817296698",
      "submitted_at": "2021-11-29T02:53:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
    },
    {
      "event": "reviewed",
      "id": 818115494,
      "node_id": "PRR_kwDOAP4Jqs4ww3Om",
      "url": null,
      "actor": null,
      "commit_id": "63811c4680f9bb93894608648332edf79886e28f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Looks good overall.\r\n\r\nIt's unfortunate that:\r\n- Padding / alignment adds so much complexity to these calculations\r\n- Pippenger sizes have this weird non-monotonic behavior\r\n\r\nBut I still think your change makes sense.\r\n\r\nMy only general feedback is that updating the scratch space usage would involve keeping a lot of different things in sync, similar to what @real-or-random mentioned at https://github.com/bitcoin-core/secp256k1/pull/1004#issuecomment-963010259. Is there a way to refactor or add comments to make the task easier in the future (e.g. by sharing code between `scratch_size_raw` and `batch_allocate`)?",
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#pullrequestreview-818115494",
      "submitted_at": "2021-11-30T01:24:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDgwNDBjMWYwMzM5MzlmNWNlZWQxMzk5MDA0NDYyZWJlMzE0MjJhODA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/8040c1f033939f5ceed1399004462ebe31422a80",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/8040c1f033939f5ceed1399004462ebe31422a80",
      "tree": {
        "sha": "6364daa1811a309ed6929792208eefdc79a1f8e6",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/6364daa1811a309ed6929792208eefdc79a1f8e6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d8a246324650c3df8d54d133a8ac3c1b857a7a4e",
          "sha": "d8a246324650c3df8d54d133a8ac3c1b857a7a4e",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d8a246324650c3df8d54d133a8ac3c1b857a7a4e"
        }
      ],
      "message": "ecmult: fix off-by-one in ecmult_multi test",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2022-01-28T23:04:54Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-06-12T08:19:30Z"
      },
      "sha": "8040c1f033939f5ceed1399004462ebe31422a80"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDRjNWFjNDllNWU0YTcxMWYxNGFjMTMyOGUzMWJhZTA1ZTk0MDJjMmQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/4c5ac49e5e4a711f14ac1328e31bae05e9402c2d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/4c5ac49e5e4a711f14ac1328e31bae05e9402c2d",
      "tree": {
        "sha": "3d58a4e17ea23f631f4e6ada3ea41dab4f587769",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/3d58a4e17ea23f631f4e6ada3ea41dab4f587769"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/8040c1f033939f5ceed1399004462ebe31422a80",
          "sha": "8040c1f033939f5ceed1399004462ebe31422a80",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/8040c1f033939f5ceed1399004462ebe31422a80"
        }
      ],
      "message": "ecmult: compute allocated size for pippenger buckets consistently",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2022-01-28T23:04:54Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-06-12T12:38:15Z"
      },
      "sha": "4c5ac49e5e4a711f14ac1328e31bae05e9402c2d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDhhMjkyNzJhMThhOTU0ZWIzODBjZDA5Y2FkY2ZiOTdkNDI4ODFhY2I",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/8a29272a18a954eb380cd09cadcfb97d42881acb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/8a29272a18a954eb380cd09cadcfb97d42881acb",
      "tree": {
        "sha": "5a5e27eb7e71796ab190a42a74d6e0e5e903ba08",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/5a5e27eb7e71796ab190a42a74d6e0e5e903ba08"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/4c5ac49e5e4a711f14ac1328e31bae05e9402c2d",
          "sha": "4c5ac49e5e4a711f14ac1328e31bae05e9402c2d",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/4c5ac49e5e4a711f14ac1328e31bae05e9402c2d"
        }
      ],
      "message": "scratch: add alloc_size function to scratch_space",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2022-01-28T23:04:54Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-06-14T22:19:25Z"
      },
      "sha": "8a29272a18a954eb380cd09cadcfb97d42881acb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDRkNzhlOWJmN2NkNDU3MzkyM2NjZGIyMWM1MDllODFmMzQ5N2M2ZGI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/4d78e9bf7cd4573923ccdb21c509e81f3497c6db",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/4d78e9bf7cd4573923ccdb21c509e81f3497c6db",
      "tree": {
        "sha": "5bc9ad69a5f4891da4f13b15c053efcc28197fb5",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/5bc9ad69a5f4891da4f13b15c053efcc28197fb5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/8a29272a18a954eb380cd09cadcfb97d42881acb",
          "sha": "8a29272a18a954eb380cd09cadcfb97d42881acb",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/8a29272a18a954eb380cd09cadcfb97d42881acb"
        }
      ],
      "message": "ecmult: make strauss_ and pippenger_scratch_size more precise\n\nTake actual alignment into account instead of assuming worst case.\nThis improves test because it can be checked that *_scratch_size matches\nwhat is actually allocated.",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2022-01-29T22:32:19Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-06-16T13:12:38Z"
      },
      "sha": "4d78e9bf7cd4573923ccdb21c509e81f3497c6db"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDJkN2E5MDNkNzljNTJkY2IwMDU5OGM4NjcxZmVhODYzY2UzNTJiMDQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/2d7a903d79c52dcb00598c8671fea863ce352b04",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/2d7a903d79c52dcb00598c8671fea863ce352b04",
      "tree": {
        "sha": "9ad4ff6d78ca100fb4fe4b32cd1902e5bec9d843",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/9ad4ff6d78ca100fb4fe4b32cd1902e5bec9d843"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/4d78e9bf7cd4573923ccdb21c509e81f3497c6db",
          "sha": "4d78e9bf7cd4573923ccdb21c509e81f3497c6db",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/4d78e9bf7cd4573923ccdb21c509e81f3497c6db"
        }
      ],
      "message": "ecmult: make strauss_ and pippenger_max_points more precise\n\nTake actual alignment into account instead of assuming the worst case. This\nallows more precise tests for strauss, because if a scratch space has exactly\nstrauss_scratch_size(n_points) left, then secp256k1_strauss_max_points(cb,\nscratch) = n_points.",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2022-01-29T22:32:19Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-06-16T13:27:29Z"
      },
      "sha": "2d7a903d79c52dcb00598c8671fea863ce352b04"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDBkNTc0YjQzNjY4Nzg5OGM4NWI0MzQxMzJhY2ExMTczNzRkZDY0ZDc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/0d574b436687898c85b434132aca117374dd64d7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/0d574b436687898c85b434132aca117374dd64d7",
      "tree": {
        "sha": "fb122cb744f9eec0e1591efe0419a5deafd63095",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/fb122cb744f9eec0e1591efe0419a5deafd63095"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/2d7a903d79c52dcb00598c8671fea863ce352b04",
          "sha": "2d7a903d79c52dcb00598c8671fea863ce352b04",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/2d7a903d79c52dcb00598c8671fea863ce352b04"
        }
      ],
      "message": "ecmult: add function to compute optimal scratch space size",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2022-01-29T22:32:19Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2019-06-12T20:50:43Z"
      },
      "sha": "0d574b436687898c85b434132aca117374dd64d7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5976635469,
      "node_id": "HRFPE_lADOAP4Jqs4bJWLDzwAAAAFkPDhN",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5976635469",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-30T17:10:57Z"
    },
    {
      "event": "commented",
      "id": 1025187331,
      "node_id": "IC_kwDOAP4Jqs49Gx4D",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1025187331",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-30T17:11:06Z",
      "updated_at": "2022-01-30T17:11:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "I rebased this to see how master affects this PR. Will still need to address review comments and add better explanations to the commits.\r\n",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#issuecomment-1025187331",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/638"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293357348",
      "pull_request_review_id": 249320012,
      "id": 293357348,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM1NzM0OA==",
      "diff_hunk": "@@ -3094,7 +3094,7 @@ void test_ecmult_multi_batching(void) {\n     secp256k1_scratch_destroy(&ctx->error_callback, scratch);\n \n     for(i = 1; i <= n_points; i++) {\n-        if (i > ECMULT_PIPPENGER_THRESHOLD) {\n+        if (i >= ECMULT_PIPPENGER_THRESHOLD) {",
      "path": "src/tests.c",
      "position": null,
      "original_position": 5,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "dd63ca35cc563f953bdcf3a1f31f48fad8d05d29",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ACK",
      "created_at": "2019-06-13T12:44:24Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293357348",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293357348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293357422",
      "pull_request_review_id": 249320012,
      "id": 293357422,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM1NzQyMg==",
      "diff_hunk": "@@ -1023,8 +1023,8 @@ static int secp256k1_ecmult_pippenger_batch(const secp256k1_callback* error_call\n     }\n \n     state_space->ps = (struct secp256k1_pippenger_point_state *) secp256k1_scratch_alloc(error_callback, scratch, entries * sizeof(*state_space->ps));\n-    state_space->wnaf_na = (int *) secp256k1_scratch_alloc(error_callback, scratch, entries*(WNAF_SIZE(bucket_window+1)) * sizeof(int));\n-    buckets = (secp256k1_gej *) secp256k1_scratch_alloc(error_callback, scratch, (1<<bucket_window) * sizeof(*buckets));\n+    state_space->wnaf_na = (int *) secp256k1_scratch_alloc(error_callback, scratch, entries * WNAF_SIZE(bucket_window+1) * sizeof(int));\n+    buckets = (secp256k1_gej *) secp256k1_scratch_alloc(error_callback, scratch, sizeof(*buckets) << bucket_window);",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 7,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "6596bf5ce9374b7d94fda65ee4d1acd2b1b22d63",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ACK",
      "created_at": "2019-06-13T12:44:35Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293357422",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293357422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1027,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293357492",
      "pull_request_review_id": 249320012,
      "id": 293357492,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM1NzQ5Mg==",
      "diff_hunk": "@@ -93,7 +93,7 @@ static SECP256K1_INLINE void *checked_realloc(const secp256k1_callback* cb, void\n #define ALIGNMENT 16\n #endif\n \n-#define ROUND_TO_ALIGN(size) (((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT)\n+#define ROUND_TO_ALIGN(size) ((((size) + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT)",
      "path": "src/util.h",
      "position": null,
      "original_position": 5,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "ba5fd7a9db3768cd354a913daaa246093b8adce3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ACK",
      "created_at": "2019-06-13T12:44:46Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293357492",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293357492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293359356",
      "pull_request_review_id": 249320012,
      "id": 293359356,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM1OTM1Ng==",
      "diff_hunk": "@@ -1267,4 +1267,20 @@ static int secp256k1_ecmult_multi_var(const secp256k1_callback* error_callback,\n     return 1;\n }\n \n+/**\n+ * Returns the optimal scratch space size for a given number of points\n+ * excluding base point G.\n+ */\n+static size_t secp256k1_ecmult_multi_scratch_size(size_t n_points) {\n+    if (n_points > ECMULT_MAX_POINTS_PER_BATCH) {\n+        n_points = ECMULT_MAX_POINTS_PER_BATCH;\n+    }\n+    if (n_points >= ECMULT_PIPPENGER_THRESHOLD) {\n+        int bucket_window = secp256k1_pippenger_bucket_window(n_points);\n+        return secp256k1_pippenger_scratch_size(n_points, bucket_window);\n+    } else {\n+        return secp256k1_strauss_scratch_size(n_points);\n+    }",
      "path": "src/ecmult_impl.h",
      "position": 309,
      "original_position": 17,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "e774a6eea8f19fe56aeacdaadc4e1d270ff11cad",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Approach ACK",
      "created_at": "2019-06-13T12:49:23Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293359356",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293359356"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1002,
      "original_line": 1002,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293361739",
      "pull_request_review_id": 249320012,
      "id": 293361739,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM2MTczOQ==",
      "diff_hunk": "@@ -996,6 +996,24 @@ static size_t secp256k1_pippenger_scratch_size(size_t n_points, int bucket_windo\n     return (sizeof(secp256k1_gej) << bucket_window) + sizeof(struct secp256k1_pippenger_state) + entries * entry_size;\n }\n \n+static int secp256k1_ecmult_pippenger_batch_allocate(const secp256k1_callback* error_callback, secp256k1_scratch *scratch, size_t scratch_checkpoint, size_t entries, int bucket_window, secp256k1_ge **points, secp256k1_scalar **scalars, secp256k1_gej **buckets, struct secp256k1_pippenger_state **state_space) {\n+    *points = (secp256k1_ge *) secp256k1_scratch_alloc(error_callback, scratch, entries * sizeof(secp256k1_ge));\n+    *scalars = (secp256k1_scalar *) secp256k1_scratch_alloc(error_callback, scratch, entries * sizeof(secp256k1_scalar));\n+    *state_space = (struct secp256k1_pippenger_state *) secp256k1_scratch_alloc(error_callback, scratch, sizeof(struct secp256k1_pippenger_state));\n+    if (*points == NULL || *scalars == NULL || *state_space == NULL) {\n+        secp256k1_scratch_apply_checkpoint(error_callback, scratch, scratch_checkpoint);\n+        return 0;\n+    }\n+    (*state_space)->ps = (struct secp256k1_pippenger_point_state *) secp256k1_scratch_alloc(error_callback, scratch, entries * sizeof(struct secp256k1_pippenger_point_state));\n+    (*state_space)->wnaf_na = (int *) secp256k1_scratch_alloc(error_callback, scratch, entries * WNAF_SIZE(bucket_window+1) * sizeof(int));\n+    *buckets = (secp256k1_gej *) secp256k1_scratch_alloc(error_callback, scratch, sizeof(secp256k1_gej) << bucket_window);\n+    if ((*state_space)->ps == NULL || (*state_space)->wnaf_na == NULL || *buckets == NULL) {\n+        secp256k1_scratch_apply_checkpoint(error_callback, scratch, scratch_checkpoint);",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 16,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "83f5f3d15d0ee1e4f14edd5f9179b90424c06872",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Approach ACK\r\nI think it's cleaner to apply the checkpoint outside this function.",
      "created_at": "2019-06-13T12:55:11Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293361739",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293361739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1097,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293365658",
      "pull_request_review_id": 249320012,
      "id": 293365658,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM2NTY1OA==",
      "diff_hunk": "@@ -640,12 +640,18 @@ static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej\n }\n \n static size_t secp256k1_strauss_scratch_size(size_t n_points) {\n+    size_t size = 0;\n+    size += ROUND_TO_ALIGN(n_points * sizeof(secp256k1_gej));\n+    size += ROUND_TO_ALIGN(n_points * sizeof(secp256k1_scalar));\n+    size += ROUND_TO_ALIGN(n_points * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_gej));\n+    size += ROUND_TO_ALIGN(n_points * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_fe));\n #ifdef USE_ENDOMORPHISM\n-    static const size_t point_size = (2 * sizeof(secp256k1_ge) + sizeof(secp256k1_gej) + sizeof(secp256k1_fe)) * ECMULT_TABLE_SIZE(WINDOW_A) + sizeof(struct secp256k1_strauss_point_state) + sizeof(secp256k1_gej) + sizeof(secp256k1_scalar);\n+    size += ROUND_TO_ALIGN(n_points * 2 * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_ge));\n #else\n-    static const size_t point_size = (sizeof(secp256k1_ge) + sizeof(secp256k1_gej) + sizeof(secp256k1_fe)) * ECMULT_TABLE_SIZE(WINDOW_A) + sizeof(struct secp256k1_strauss_point_state) + sizeof(secp256k1_gej) + sizeof(secp256k1_scalar);\n+    size += ROUND_TO_ALIGN(n_points * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_ge));\n #endif\n-    return n_points*point_size;\n+    size += ROUND_TO_ALIGN(n_points * sizeof(struct secp256k1_strauss_point_state));\n+    return size;",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "f05bce8e6e5c7adcceb71e6919522a31e6cb6d27",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm, I'm somewhat unsure about this. It seems like a layer violation to care about the alignment here.\r\n\r\n",
      "created_at": "2019-06-13T13:03:43Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293365658",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293365658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 654,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293368567",
      "pull_request_review_id": 249320012,
      "id": 293368567,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM2ODU2Nw==",
      "diff_hunk": "@@ -696,7 +702,9 @@ static int secp256k1_ecmult_strauss_batch_single(const secp256k1_callback* error\n }\n \n static size_t secp256k1_strauss_max_points(const secp256k1_callback* error_callback, secp256k1_scratch *scratch) {\n-    return secp256k1_scratch_max_allocation(error_callback, scratch, STRAUSS_SCRATCH_OBJECTS) / secp256k1_strauss_scratch_size(1);\n+    /* Call max_allocation with 0 objects because we've already accounted for\n+     * alignment in strauss_scratch_size. */\n+    return secp256k1_scratch_max_allocation(error_callback, scratch, 0) / secp256k1_strauss_scratch_size(1);",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 29,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "f05bce8e6e5c7adcceb71e6919522a31e6cb6d27",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "... and wasn't the previous version (without changes in `strauss_scratch_size`) more precise?\r\nWe need to round up to the alignment only once per array (e.g., once for the scalars array). \r\n\r\nIn the proposed revision, I think we overestimate the required padding a lot because we still call `strauss_scratch_size(1)` here but this has padding now. ",
      "created_at": "2019-06-13T13:09:07Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293368567",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293368567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 707,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293373155",
      "pull_request_review_id": 249340523,
      "id": 293373155,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM3MzE1NQ==",
      "diff_hunk": "@@ -1267,4 +1267,20 @@ static int secp256k1_ecmult_multi_var(const secp256k1_callback* error_callback,\n     return 1;\n }\n \n+/**\n+ * Returns the optimal scratch space size for a given number of points\n+ * excluding base point G.\n+ */\n+static size_t secp256k1_ecmult_multi_scratch_size(size_t n_points) {\n+    if (n_points > ECMULT_MAX_POINTS_PER_BATCH) {\n+        n_points = ECMULT_MAX_POINTS_PER_BATCH;\n+    }\n+    if (n_points >= ECMULT_PIPPENGER_THRESHOLD) {\n+        int bucket_window = secp256k1_pippenger_bucket_window(n_points);\n+        return secp256k1_pippenger_scratch_size(n_points, bucket_window);\n+    } else {\n+        return secp256k1_strauss_scratch_size(n_points);\n+    }",
      "path": "src/ecmult_impl.h",
      "position": 309,
      "original_position": 17,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "e774a6eea8f19fe56aeacdaadc4e1d270ff11cad",
      "in_reply_to_id": 293359356,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's an approach ACK?",
      "created_at": "2019-06-13T13:17:53Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293373155",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293373155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1002,
      "original_line": 1002,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293376169",
      "pull_request_review_id": 249344522,
      "id": 293376169,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM3NjE2OQ==",
      "diff_hunk": "@@ -1267,4 +1267,20 @@ static int secp256k1_ecmult_multi_var(const secp256k1_callback* error_callback,\n     return 1;\n }\n \n+/**\n+ * Returns the optimal scratch space size for a given number of points\n+ * excluding base point G.\n+ */\n+static size_t secp256k1_ecmult_multi_scratch_size(size_t n_points) {\n+    if (n_points > ECMULT_MAX_POINTS_PER_BATCH) {\n+        n_points = ECMULT_MAX_POINTS_PER_BATCH;\n+    }\n+    if (n_points >= ECMULT_PIPPENGER_THRESHOLD) {\n+        int bucket_window = secp256k1_pippenger_bucket_window(n_points);\n+        return secp256k1_pippenger_scratch_size(n_points, bucket_window);\n+    } else {\n+        return secp256k1_strauss_scratch_size(n_points);\n+    }",
      "path": "src/ecmult_impl.h",
      "position": 309,
      "original_position": 17,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "e774a6eea8f19fe56aeacdaadc4e1d270ff11cad",
      "in_reply_to_id": 293359356,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, I guess it's a concept ack. I was confused by other meanings of approach :D",
      "created_at": "2019-06-13T13:24:21Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293376169",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293376169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1002,
      "original_line": 1002,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293381432",
      "pull_request_review_id": 249351726,
      "id": 293381432,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM4MTQzMg==",
      "diff_hunk": "@@ -696,7 +702,9 @@ static int secp256k1_ecmult_strauss_batch_single(const secp256k1_callback* error\n }\n \n static size_t secp256k1_strauss_max_points(const secp256k1_callback* error_callback, secp256k1_scratch *scratch) {\n-    return secp256k1_scratch_max_allocation(error_callback, scratch, STRAUSS_SCRATCH_OBJECTS) / secp256k1_strauss_scratch_size(1);\n+    /* Call max_allocation with 0 objects because we've already accounted for\n+     * alignment in strauss_scratch_size. */\n+    return secp256k1_scratch_max_allocation(error_callback, scratch, 0) / secp256k1_strauss_scratch_size(1);",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 29,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "f05bce8e6e5c7adcceb71e6919522a31e6cb6d27",
      "in_reply_to_id": 293368567,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is correct - sorry I overlooked this. Will add fix and test.",
      "created_at": "2019-06-13T13:35:40Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293381432",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293381432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 707,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293383179",
      "pull_request_review_id": 249354110,
      "id": 293383179,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM4MzE3OQ==",
      "diff_hunk": "@@ -1267,4 +1267,20 @@ static int secp256k1_ecmult_multi_var(const secp256k1_callback* error_callback,\n     return 1;\n }\n \n+/**\n+ * Returns the optimal scratch space size for a given number of points\n+ * excluding base point G.\n+ */\n+static size_t secp256k1_ecmult_multi_scratch_size(size_t n_points) {\n+    if (n_points > ECMULT_MAX_POINTS_PER_BATCH) {\n+        n_points = ECMULT_MAX_POINTS_PER_BATCH;\n+    }\n+    if (n_points >= ECMULT_PIPPENGER_THRESHOLD) {\n+        int bucket_window = secp256k1_pippenger_bucket_window(n_points);\n+        return secp256k1_pippenger_scratch_size(n_points, bucket_window);\n+    } else {\n+        return secp256k1_strauss_scratch_size(n_points);\n+    }",
      "path": "src/ecmult_impl.h",
      "position": 309,
      "original_position": 17,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "e774a6eea8f19fe56aeacdaadc4e1d270ff11cad",
      "in_reply_to_id": 293359356,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm actively testing https://github.com/bitcoin/bitcoin/pull/16149 here\r\n\r\nedit: except that I just write \"ACK\". All my \"ACK\"s in this review mean \"ACK thorough code inspection\"",
      "created_at": "2019-06-13T13:39:28Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293383179",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293383179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1002,
      "original_line": 1002,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293384315",
      "pull_request_review_id": 249355679,
      "id": 293384315,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzM4NDMxNQ==",
      "diff_hunk": "@@ -640,12 +640,18 @@ static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej\n }\n \n static size_t secp256k1_strauss_scratch_size(size_t n_points) {\n+    size_t size = 0;\n+    size += ROUND_TO_ALIGN(n_points * sizeof(secp256k1_gej));\n+    size += ROUND_TO_ALIGN(n_points * sizeof(secp256k1_scalar));\n+    size += ROUND_TO_ALIGN(n_points * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_gej));\n+    size += ROUND_TO_ALIGN(n_points * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_fe));\n #ifdef USE_ENDOMORPHISM\n-    static const size_t point_size = (2 * sizeof(secp256k1_ge) + sizeof(secp256k1_gej) + sizeof(secp256k1_fe)) * ECMULT_TABLE_SIZE(WINDOW_A) + sizeof(struct secp256k1_strauss_point_state) + sizeof(secp256k1_gej) + sizeof(secp256k1_scalar);\n+    size += ROUND_TO_ALIGN(n_points * 2 * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_ge));\n #else\n-    static const size_t point_size = (sizeof(secp256k1_ge) + sizeof(secp256k1_gej) + sizeof(secp256k1_fe)) * ECMULT_TABLE_SIZE(WINDOW_A) + sizeof(struct secp256k1_strauss_point_state) + sizeof(secp256k1_gej) + sizeof(secp256k1_scalar);\n+    size += ROUND_TO_ALIGN(n_points * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_ge));\n #endif\n-    return n_points*point_size;\n+    size += ROUND_TO_ALIGN(n_points * sizeof(struct secp256k1_strauss_point_state));\n+    return size;",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "f05bce8e6e5c7adcceb71e6919522a31e6cb6d27",
      "in_reply_to_id": 293365658,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If we want to have a function that returns the required scratch space given a number of points (and we should) then we need to add the padding somewhere. While we can assume the worst case padding somewhere else I would prefer to have the `*_scratch_space` function return exact results. This makes it much easier to think about and also helps testing because now we can just check that what is allocated actually matches what we computed with `*_scratch_space` (see https://github.com/bitcoin-core/secp256k1/pull/638/commits/24553bfa1c34bcbe4820a783d66649b0a18affb7#diff-4655d106bf03045a3a50beefc800db21R2996). Or do you have an alternative in mind?",
      "created_at": "2019-06-13T13:41:50Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293384315",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293384315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 654,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293467812",
      "pull_request_review_id": 249464025,
      "id": 293467812,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzQ2NzgxMg==",
      "diff_hunk": "@@ -1081,27 +1124,39 @@ static int secp256k1_ecmult_pippenger_batch_single(const secp256k1_callback* err\n  * used.\n  */\n static size_t secp256k1_pippenger_max_points(const secp256k1_callback* error_callback, secp256k1_scratch *scratch) {\n-    size_t max_alloc = secp256k1_scratch_max_allocation(error_callback, scratch, PIPPENGER_SCRATCH_OBJECTS);\n+    /* Call max_allocation with 0 objects because it would assume worst case\n+     * padding but in this function we want to get an exact number (and\n+     * pippenger_scratch_size_points will already account for alignment). */\n+    size_t max_alloc = secp256k1_scratch_max_allocation(error_callback, scratch, 0);\n     int bucket_window;\n     size_t res = 0;\n \n     for (bucket_window = 1; bucket_window <= PIPPENGER_MAX_BUCKET_WINDOW; bucket_window++) {\n         size_t n_points;\n         size_t max_points = secp256k1_pippenger_bucket_window_inv(bucket_window);\n         size_t space_for_points;\n-        size_t space_overhead;\n-        size_t entry_size = sizeof(secp256k1_ge) + sizeof(secp256k1_scalar) + sizeof(struct secp256k1_pippenger_point_state) + (WNAF_SIZE(bucket_window+1)+1)*sizeof(int);\n+        size_t space_constant;\n+        size_t entry_size = secp256k1_pippenger_scratch_size_points(0, bucket_window, 0);\n \n-#ifdef USE_ENDOMORPHISM\n-        entry_size = 2*entry_size;\n-#endif\n-        space_overhead = (sizeof(secp256k1_gej) << bucket_window) + entry_size + sizeof(struct secp256k1_pippenger_state);\n-        if (space_overhead > max_alloc) {\n+        space_constant = secp256k1_pippenger_scratch_size_constant(bucket_window);\n+        if (space_constant + entry_size > max_alloc) {\n             break;\n         }\n-        space_for_points = max_alloc - space_overhead;\n+        space_for_points = max_alloc - space_constant;\n+\n+        /* Compute an upper bound for the number of points after subtracting\n+         * space for the base point G. It's an upper bound because alignment is\n+         * not taken into account. */\n+        n_points = (space_for_points - entry_size)/entry_size;\n+        if (n_points > 0\n+              && space_for_points < secp256k1_pippenger_scratch_size_points(n_points, bucket_window, 1)) {\n+            /* If there's not enough space after alignment is taken into\n+             * account it suffices to decrease n_points by one. This is because\n+             * the maximum padding required is less than an entry. */\n+            n_points -= 1;\n+            VERIFY_CHECK(space_for_points >= secp256k1_pippenger_scratch_size_points(n_points, bucket_window, 1));",
      "path": "src/ecmult_impl.h",
      "position": 285,
      "original_position": 187,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "e774a6eea8f19fe56aeacdaadc4e1d270ff11cad",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "After some discussion with @jonasnick, one of the things I'm not sure about is the added complexity in this function.\r\nOn the one hand, this function is accurate now and users of the function can rely on that. \r\nOn the other hand, if we just call `secp256k1_scratch_max_allocation` with `PIPPENGER_SCRATCH_OBJECTS` instead of 0, we may return a value that is one too small. That's not terrible for performance but it potentially makes the function a little bit harder to use and test because you may need to remember that it is not accurate.",
      "created_at": "2019-06-13T16:25:31Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r293467812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/293467812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 876,
      "original_line": 876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/294060006",
      "pull_request_review_id": 250207418,
      "id": 294060006,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA2MDAwNg==",
      "diff_hunk": "@@ -1081,27 +1124,39 @@ static int secp256k1_ecmult_pippenger_batch_single(const secp256k1_callback* err\n  * used.\n  */\n static size_t secp256k1_pippenger_max_points(const secp256k1_callback* error_callback, secp256k1_scratch *scratch) {\n-    size_t max_alloc = secp256k1_scratch_max_allocation(error_callback, scratch, PIPPENGER_SCRATCH_OBJECTS);\n+    /* Call max_allocation with 0 objects because it would assume worst case\n+     * padding but in this function we want to get an exact number (and\n+     * pippenger_scratch_size_points will already account for alignment). */\n+    size_t max_alloc = secp256k1_scratch_max_allocation(error_callback, scratch, 0);\n     int bucket_window;\n     size_t res = 0;\n \n     for (bucket_window = 1; bucket_window <= PIPPENGER_MAX_BUCKET_WINDOW; bucket_window++) {\n         size_t n_points;\n         size_t max_points = secp256k1_pippenger_bucket_window_inv(bucket_window);\n         size_t space_for_points;\n-        size_t space_overhead;\n-        size_t entry_size = sizeof(secp256k1_ge) + sizeof(secp256k1_scalar) + sizeof(struct secp256k1_pippenger_point_state) + (WNAF_SIZE(bucket_window+1)+1)*sizeof(int);\n+        size_t space_constant;\n+        size_t entry_size = secp256k1_pippenger_scratch_size_points(0, bucket_window, 0);\n \n-#ifdef USE_ENDOMORPHISM\n-        entry_size = 2*entry_size;\n-#endif\n-        space_overhead = (sizeof(secp256k1_gej) << bucket_window) + entry_size + sizeof(struct secp256k1_pippenger_state);\n-        if (space_overhead > max_alloc) {\n+        space_constant = secp256k1_pippenger_scratch_size_constant(bucket_window);\n+        if (space_constant + entry_size > max_alloc) {\n             break;\n         }\n-        space_for_points = max_alloc - space_overhead;\n+        space_for_points = max_alloc - space_constant;\n+\n+        /* Compute an upper bound for the number of points after subtracting\n+         * space for the base point G. It's an upper bound because alignment is\n+         * not taken into account. */\n+        n_points = (space_for_points - entry_size)/entry_size;\n+        if (n_points > 0\n+              && space_for_points < secp256k1_pippenger_scratch_size_points(n_points, bucket_window, 1)) {\n+            /* If there's not enough space after alignment is taken into\n+             * account it suffices to decrease n_points by one. This is because\n+             * the maximum padding required is less than an entry. */\n+            n_points -= 1;\n+            VERIFY_CHECK(space_for_points >= secp256k1_pippenger_scratch_size_points(n_points, bucket_window, 1));",
      "path": "src/ecmult_impl.h",
      "position": 285,
      "original_position": 187,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "e774a6eea8f19fe56aeacdaadc4e1d270ff11cad",
      "in_reply_to_id": 293467812,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems like both hands are arguments in favor of the change  (i.e. calling `secp256k1_scratch_max_allocation` with `0`).\r\n\r\nWe need to do that for strauss anyway because otherwise \r\n```\r\nn_points == strauss_max_points(..., scratch_create(strauss_scratch_size(n_points)))\r\n```\r\nwouldn't hold.",
      "created_at": "2019-06-15T21:29:00Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r294060006",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/294060006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 876,
      "original_line": 876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/294097925",
      "pull_request_review_id": 250246246,
      "id": 294097925,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA5NzkyNQ==",
      "diff_hunk": "@@ -696,7 +702,9 @@ static int secp256k1_ecmult_strauss_batch_single(const secp256k1_callback* error\n }\n \n static size_t secp256k1_strauss_max_points(const secp256k1_callback* error_callback, secp256k1_scratch *scratch) {\n-    return secp256k1_scratch_max_allocation(error_callback, scratch, STRAUSS_SCRATCH_OBJECTS) / secp256k1_strauss_scratch_size(1);\n+    /* Call max_allocation with 0 objects because we've already accounted for\n+     * alignment in strauss_scratch_size. */\n+    return secp256k1_scratch_max_allocation(error_callback, scratch, 0) / secp256k1_strauss_scratch_size(1);",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 29,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "f05bce8e6e5c7adcceb71e6919522a31e6cb6d27",
      "in_reply_to_id": 293368567,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-06-16T19:49:33Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r294097925",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/294097925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 707,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/294097947",
      "pull_request_review_id": 250246275,
      "id": 294097947,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA5Nzk0Nw==",
      "diff_hunk": "@@ -640,12 +640,18 @@ static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej\n }\n \n static size_t secp256k1_strauss_scratch_size(size_t n_points) {\n+    size_t size = 0;\n+    size += ROUND_TO_ALIGN(n_points * sizeof(secp256k1_gej));\n+    size += ROUND_TO_ALIGN(n_points * sizeof(secp256k1_scalar));\n+    size += ROUND_TO_ALIGN(n_points * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_gej));\n+    size += ROUND_TO_ALIGN(n_points * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_fe));\n #ifdef USE_ENDOMORPHISM\n-    static const size_t point_size = (2 * sizeof(secp256k1_ge) + sizeof(secp256k1_gej) + sizeof(secp256k1_fe)) * ECMULT_TABLE_SIZE(WINDOW_A) + sizeof(struct secp256k1_strauss_point_state) + sizeof(secp256k1_gej) + sizeof(secp256k1_scalar);\n+    size += ROUND_TO_ALIGN(n_points * 2 * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_ge));\n #else\n-    static const size_t point_size = (sizeof(secp256k1_ge) + sizeof(secp256k1_gej) + sizeof(secp256k1_fe)) * ECMULT_TABLE_SIZE(WINDOW_A) + sizeof(struct secp256k1_strauss_point_state) + sizeof(secp256k1_gej) + sizeof(secp256k1_scalar);\n+    size += ROUND_TO_ALIGN(n_points * ECMULT_TABLE_SIZE(WINDOW_A) * sizeof(secp256k1_ge));\n #endif\n-    return n_points*point_size;\n+    size += ROUND_TO_ALIGN(n_points * sizeof(struct secp256k1_strauss_point_state));\n+    return size;",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "f05bce8e6e5c7adcceb71e6919522a31e6cb6d27",
      "in_reply_to_id": 293365658,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added function `alloc_size` to scratch space",
      "created_at": "2019-06-16T19:50:20Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r294097947",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/294097947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 654,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/294098121",
      "pull_request_review_id": 250246462,
      "id": 294098121,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA5ODEyMQ==",
      "diff_hunk": "@@ -996,6 +996,24 @@ static size_t secp256k1_pippenger_scratch_size(size_t n_points, int bucket_windo\n     return (sizeof(secp256k1_gej) << bucket_window) + sizeof(struct secp256k1_pippenger_state) + entries * entry_size;\n }\n \n+static int secp256k1_ecmult_pippenger_batch_allocate(const secp256k1_callback* error_callback, secp256k1_scratch *scratch, size_t scratch_checkpoint, size_t entries, int bucket_window, secp256k1_ge **points, secp256k1_scalar **scalars, secp256k1_gej **buckets, struct secp256k1_pippenger_state **state_space) {\n+    *points = (secp256k1_ge *) secp256k1_scratch_alloc(error_callback, scratch, entries * sizeof(secp256k1_ge));\n+    *scalars = (secp256k1_scalar *) secp256k1_scratch_alloc(error_callback, scratch, entries * sizeof(secp256k1_scalar));\n+    *state_space = (struct secp256k1_pippenger_state *) secp256k1_scratch_alloc(error_callback, scratch, sizeof(struct secp256k1_pippenger_state));\n+    if (*points == NULL || *scalars == NULL || *state_space == NULL) {\n+        secp256k1_scratch_apply_checkpoint(error_callback, scratch, scratch_checkpoint);\n+        return 0;\n+    }\n+    (*state_space)->ps = (struct secp256k1_pippenger_point_state *) secp256k1_scratch_alloc(error_callback, scratch, entries * sizeof(struct secp256k1_pippenger_point_state));\n+    (*state_space)->wnaf_na = (int *) secp256k1_scratch_alloc(error_callback, scratch, entries * WNAF_SIZE(bucket_window+1) * sizeof(int));\n+    *buckets = (secp256k1_gej *) secp256k1_scratch_alloc(error_callback, scratch, sizeof(secp256k1_gej) << bucket_window);\n+    if ((*state_space)->ps == NULL || (*state_space)->wnaf_na == NULL || *buckets == NULL) {\n+        secp256k1_scratch_apply_checkpoint(error_callback, scratch, scratch_checkpoint);",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 16,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "83f5f3d15d0ee1e4f14edd5f9179b90424c06872",
      "in_reply_to_id": 293361739,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2019-06-16T19:55:34Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r294098121",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/294098121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1097,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/306501403",
      "pull_request_review_id": 265637374,
      "id": 306501403,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjUwMTQwMw==",
      "diff_hunk": "@@ -1089,19 +1164,17 @@ static size_t secp256k1_pippenger_max_points(const secp256k1_callback* error_cal\n         size_t n_points;\n         size_t max_points = secp256k1_pippenger_bucket_window_inv(bucket_window);\n         size_t space_for_points;\n-        size_t space_overhead;\n-        size_t entry_size = sizeof(secp256k1_ge) + sizeof(secp256k1_scalar) + sizeof(struct secp256k1_pippenger_point_state) + (WNAF_SIZE(bucket_window+1)+1)*sizeof(int);\n+        size_t space_constant;\n+        /* Compute entry size without taking alignment into account */\n+        size_t entry_size = secp256k1_pippenger_scratch_size_points(0, bucket_window, 0);\n \n-#ifdef USE_ENDOMORPHISM\n-        entry_size = 2*entry_size;\n-#endif\n-        space_overhead = (sizeof(secp256k1_gej) << bucket_window) + entry_size + sizeof(struct secp256k1_pippenger_state);\n-        if (space_overhead > max_alloc) {\n+        space_constant = secp256k1_pippenger_scratch_size_constant(bucket_window);\n+        if (space_constant + entry_size > max_alloc) {\n             break;\n         }\n-        space_for_points = max_alloc - space_overhead;\n+        space_for_points = max_alloc - space_constant;\n \n-        n_points = space_for_points/entry_size;\n+        n_points = (space_for_points - entry_size)/entry_size;",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 223,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "c7d8c9ce786f665a10c9dadbfd3bfa56ae032b3c",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this right? It's equivalent to `space_for_points / entry_size - 1`.",
      "created_at": "2019-07-23T19:48:55Z",
      "updated_at": "2019-07-25T09:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r306501403",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/306501403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/307196941",
      "pull_request_review_id": 266500769,
      "id": 307196941,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzE5Njk0MQ==",
      "diff_hunk": "@@ -1089,19 +1164,17 @@ static size_t secp256k1_pippenger_max_points(const secp256k1_callback* error_cal\n         size_t n_points;\n         size_t max_points = secp256k1_pippenger_bucket_window_inv(bucket_window);\n         size_t space_for_points;\n-        size_t space_overhead;\n-        size_t entry_size = sizeof(secp256k1_ge) + sizeof(secp256k1_scalar) + sizeof(struct secp256k1_pippenger_point_state) + (WNAF_SIZE(bucket_window+1)+1)*sizeof(int);\n+        size_t space_constant;\n+        /* Compute entry size without taking alignment into account */\n+        size_t entry_size = secp256k1_pippenger_scratch_size_points(0, bucket_window, 0);\n \n-#ifdef USE_ENDOMORPHISM\n-        entry_size = 2*entry_size;\n-#endif\n-        space_overhead = (sizeof(secp256k1_gej) << bucket_window) + entry_size + sizeof(struct secp256k1_pippenger_state);\n-        if (space_overhead > max_alloc) {\n+        space_constant = secp256k1_pippenger_scratch_size_constant(bucket_window);\n+        if (space_constant + entry_size > max_alloc) {\n             break;\n         }\n-        space_for_points = max_alloc - space_overhead;\n+        space_for_points = max_alloc - space_constant;\n \n-        n_points = space_for_points/entry_size;\n+        n_points = (space_for_points - entry_size)/entry_size;",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 223,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "c7d8c9ce786f665a10c9dadbfd3bfa56ae032b3c",
      "in_reply_to_id": 306501403,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is right. Simplified the line according to your suggestion.",
      "created_at": "2019-07-25T09:19:38Z",
      "updated_at": "2019-07-25T09:19:39Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r307196941",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/307196941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/757989368",
      "pull_request_review_id": 817296698,
      "id": 757989368,
      "node_id": "PRRC_kwDOAP4Jqs4tLf_4",
      "diff_hunk": "@@ -96,4 +96,14 @@ static void *secp256k1_scratch_alloc(const secp256k1_callback* error_callback, s\n     return ret;\n }\n \n+static size_t secp256k1_scratch_alloc_size(size_t *sizes, size_t n_sizes) {\n+    size_t i;\n+    size_t sum = 0;\n+\n+    for (i = 0; i < n_sizes; i++) {\n+        sum += ROUND_TO_ALIGN(sizes[i]);",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 9,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "f1629125023d092a6c9a5d032608d17e23b0004e",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: The existing `secp256k1_scratch_max_allocation` seems very careful about checking for overflow. For consistency, is it necessary to do the same here? For example:\r\n\r\n```\r\n// Check for overflow\r\nif (sum + ROUND_TO_ALIGN(sizes[i]) < sum) {\r\n    return 0;\r\n}\r\n```",
      "created_at": "2021-11-29T01:40:42Z",
      "updated_at": "2021-11-29T02:53:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r757989368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/757989368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/757993860",
      "pull_request_review_id": 817296698,
      "id": 757993860,
      "node_id": "PRRC_kwDOAP4Jqs4tLhGE",
      "diff_hunk": "@@ -630,22 +671,75 @@ SECP256K1_INLINE static void secp256k1_ecmult_endo_split(secp256k1_scalar *s1, s\n     }\n }\n \n+static size_t secp256k1_pippenger_scratch_size_constant(int bucket_window) {\n+    /* 4 objects are accounted for in pippenger_scratch_size_points */\n+    enum { N_SIZES = PIPPENGER_SCRATCH_OBJECTS - 4 };\n+    size_t sizes[N_SIZES];\n+    sizes[0] = sizeof(struct secp256k1_pippenger_state);\n+    sizes[1] = sizeof(secp256k1_gej) << bucket_window;\n+\n+    return secp256k1_scratch_alloc_size(sizes, N_SIZES);\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_pippenger_entries(size_t n_points) {\n+    return 2*n_points + 2;\n+}\n+\n+/**\n+ * Returns the scratch size required for a given number of points excluding\n+ * base point G and excluding the parts not dependent on the number of points.\n+ * If called with 0 n_points it'll return the size required for the base point\n+ * G. If the as_allocated argument is 0, this function will return the sum of\n+ * the sizes of the individual parts. Otherwise it will return the size that is\n+ * actually allocated with secp256k1_scratch_alloc which is greater or equal.\n+ */\n+static size_t secp256k1_pippenger_scratch_size_points(size_t n_points, int bucket_window, int as_allocated) {\n+    size_t entries = secp256k1_pippenger_entries(n_points);\n+    /* 4 objects are accounted for in pippenger_scratch_size_constant */",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 106,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "63811c4680f9bb93894608648332edf79886e28f",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: 2 objects?",
      "created_at": "2021-11-29T02:00:24Z",
      "updated_at": "2021-11-29T02:53:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r757993860",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/757993860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 698,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758003679",
      "pull_request_review_id": 817296698,
      "id": 758003679,
      "node_id": "PRRC_kwDOAP4Jqs4tLjff",
      "diff_hunk": "@@ -1089,19 +1164,17 @@ static size_t secp256k1_pippenger_max_points(const secp256k1_callback* error_cal\n         size_t n_points;\n         size_t max_points = secp256k1_pippenger_bucket_window_inv(bucket_window);\n         size_t space_for_points;\n-        size_t space_overhead;\n-        size_t entry_size = sizeof(secp256k1_ge) + sizeof(secp256k1_scalar) + sizeof(struct secp256k1_pippenger_point_state) + (WNAF_SIZE(bucket_window+1)+1)*sizeof(int);\n+        size_t space_constant;\n+        /* Compute entry size without taking alignment into account */\n+        size_t entry_size = secp256k1_pippenger_scratch_size_points(0, bucket_window, 0);\n \n-#ifdef USE_ENDOMORPHISM\n-        entry_size = 2*entry_size;\n-#endif\n-        space_overhead = (sizeof(secp256k1_gej) << bucket_window) + entry_size + sizeof(struct secp256k1_pippenger_state);\n-        if (space_overhead > max_alloc) {\n+        space_constant = secp256k1_pippenger_scratch_size_constant(bucket_window);\n+        if (space_constant + entry_size > max_alloc) {\n             break;\n         }\n-        space_for_points = max_alloc - space_overhead;\n+        space_for_points = max_alloc - space_constant;\n \n-        n_points = space_for_points/entry_size;\n+        n_points = (space_for_points - entry_size)/entry_size;",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 223,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "c7d8c9ce786f665a10c9dadbfd3bfa56ae032b3c",
      "in_reply_to_id": 306501403,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this assignment to `n_points` (along with the comment) redundant with above?",
      "created_at": "2021-11-29T02:39:33Z",
      "updated_at": "2021-11-29T02:53:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r758003679",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758003679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758004716",
      "pull_request_review_id": 817296698,
      "id": 758004716,
      "node_id": "PRRC_kwDOAP4Jqs4tLjvs",
      "diff_hunk": "@@ -801,13 +820,17 @@ static int secp256k1_ecmult_pippenger_batch_single(const secp256k1_callback* err\n     return secp256k1_ecmult_pippenger_batch(error_callback, scratch, r, inp_g_sc, cb, cbdata, n, 0);\n }\n \n-/**\n- * Returns the maximum number of points in addition to G that can be used with\n- * a given scratch space. The function ensures that fewer points may also be\n- * used.\n+/* Returns the (near) maximum number of points in addition to G that can be",
      "path": "src/ecmult_impl.h",
      "position": 240,
      "original_position": 37,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "1e8189575362c7e0a972cafa953bea3d4dcaaf12",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~Do you already know how it might fail to be a maximum? (No worries if not, I still want to revisit these details carefully.)~\r\n\r\nEdit: Could this fail to be a maximum because the constant space used by the buckets *decreases* when you jump to the next bucket window size?",
      "created_at": "2021-11-29T02:43:25Z",
      "updated_at": "2021-11-30T00:52:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r758004716",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758004716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 838,
      "original_line": 838,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758807228",
      "pull_request_review_id": 818115494,
      "id": 758807228,
      "node_id": "PRRC_kwDOAP4Jqs4tOnq8",
      "diff_hunk": "@@ -630,22 +671,75 @@ SECP256K1_INLINE static void secp256k1_ecmult_endo_split(secp256k1_scalar *s1, s\n     }\n }\n \n+static size_t secp256k1_pippenger_scratch_size_constant(int bucket_window) {\n+    /* 4 objects are accounted for in pippenger_scratch_size_points */\n+    enum { N_SIZES = PIPPENGER_SCRATCH_OBJECTS - 4 };\n+    size_t sizes[N_SIZES];\n+    sizes[0] = sizeof(struct secp256k1_pippenger_state);\n+    sizes[1] = sizeof(secp256k1_gej) << bucket_window;\n+\n+    return secp256k1_scratch_alloc_size(sizes, N_SIZES);\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_pippenger_entries(size_t n_points) {\n+    return 2*n_points + 2;\n+}\n+\n+/**\n+ * Returns the scratch size required for a given number of points excluding\n+ * base point G and excluding the parts not dependent on the number of points.\n+ * If called with 0 n_points it'll return the size required for the base point\n+ * G. If the as_allocated argument is 0, this function will return the sum of\n+ * the sizes of the individual parts. Otherwise it will return the size that is\n+ * actually allocated with secp256k1_scratch_alloc which is greater or equal.\n+ */\n+static size_t secp256k1_pippenger_scratch_size_points(size_t n_points, int bucket_window, int as_allocated) {\n+    size_t entries = secp256k1_pippenger_entries(n_points);\n+    /* 4 objects are accounted for in pippenger_scratch_size_constant */\n+    enum { N_SIZES = PIPPENGER_SCRATCH_OBJECTS - 2 };\n+    size_t sizes[N_SIZES];\n+    sizes[0] = entries * sizeof(secp256k1_ge);\n+    sizes[1] = entries * sizeof(secp256k1_scalar);\n+    sizes[2] = entries * sizeof(struct secp256k1_pippenger_point_state);\n+    sizes[3] = entries * WNAF_SIZE(bucket_window+1) * sizeof(int);\n+    if (as_allocated) {\n+        return secp256k1_scratch_alloc_size(sizes, N_SIZES);\n+    } else {\n+        return secp256k1_ecmult_sum_array(sizes, N_SIZES);\n+    }\n+}\n+\n /**\n  * Returns the scratch size required for a given number of points (excluding\n- * base point G) without considering alignment.\n+ * base point G) as it would be allocated on a scratch space.\n  */\n static size_t secp256k1_pippenger_scratch_size(size_t n_points, int bucket_window) {\n-    size_t entries = 2*n_points + 2;\n-    size_t entry_size = sizeof(secp256k1_ge) + sizeof(secp256k1_scalar) + sizeof(struct secp256k1_pippenger_point_state) + (WNAF_SIZE(bucket_window+1)+1)*sizeof(int);\n-    return (sizeof(secp256k1_gej) << bucket_window) + sizeof(struct secp256k1_pippenger_state) + entries * entry_size;\n+    return secp256k1_pippenger_scratch_size_constant(bucket_window)\n+            + secp256k1_pippenger_scratch_size_points(n_points, bucket_window, 1);\n+}\n+\n+static int secp256k1_ecmult_pippenger_batch_allocate(const secp256k1_callback* error_callback, secp256k1_scratch *scratch, size_t entries, int bucket_window, secp256k1_ge **points, secp256k1_scalar **scalars, secp256k1_gej **buckets, struct secp256k1_pippenger_state **state_space) {\n+    *points = (secp256k1_ge *) secp256k1_scratch_alloc(error_callback, scratch, entries * sizeof(secp256k1_ge));\n+    *scalars = (secp256k1_scalar *) secp256k1_scratch_alloc(error_callback, scratch, entries * sizeof(secp256k1_scalar));\n+    *state_space = (struct secp256k1_pippenger_state *) secp256k1_scratch_alloc(error_callback, scratch, sizeof(struct secp256k1_pippenger_state));\n+    if (*points == NULL || *scalars == NULL || *state_space == NULL) {\n+        return 0;\n+    }\n+    (*state_space)->ps = (struct secp256k1_pippenger_point_state *) secp256k1_scratch_alloc(error_callback, scratch, entries * sizeof(struct secp256k1_pippenger_point_state));\n+    (*state_space)->wnaf_na = (int *) secp256k1_scratch_alloc(error_callback, scratch, entries * WNAF_SIZE(bucket_window+1) * sizeof(int));\n+    *buckets = (secp256k1_gej *) secp256k1_scratch_alloc(error_callback, scratch, sizeof(secp256k1_gej) << bucket_window);\n+    if ((*state_space)->ps == NULL || (*state_space)->wnaf_na == NULL || *buckets == NULL) {\n+        return 0;\n+    }\n+    return 1;\n }\n \n static int secp256k1_ecmult_pippenger_batch(const secp256k1_callback* error_callback, secp256k1_scratch *scratch, secp256k1_gej *r, const secp256k1_scalar *inp_g_sc, secp256k1_ecmult_multi_callback cb, void *cbdata, size_t n_points, size_t cb_offset) {\n     const size_t scratch_checkpoint = secp256k1_scratch_checkpoint(error_callback, scratch);\n     /* Use 2(n+1) with the endomorphism, when calculating batch\n      * sizes. The reason for +1 is that we add the G scalar to the list of\n      * other scalars. */\n-    size_t entries = 2*n_points + 2;\n+    size_t entries = secp256k1_pippenger_entries(n_points);",
      "path": "src/ecmult_impl.h",
      "position": 204,
      "original_position": 155,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "63811c4680f9bb93894608648332edf79886e28f",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Should the comment go above the definition of the function `secp256k1_pippenger_entries` instead?",
      "created_at": "2021-11-29T23:12:25Z",
      "updated_at": "2021-11-30T01:24:19Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r758807228",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758807228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 777,
      "original_line": 777,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758810789",
      "pull_request_review_id": 818115494,
      "id": 758810789,
      "node_id": "PRRC_kwDOAP4Jqs4tOoil",
      "diff_hunk": "@@ -732,17 +815,19 @@ static size_t secp256k1_pippenger_max_points(const secp256k1_callback* error_cal\n         size_t n_points;\n         size_t max_points = secp256k1_pippenger_bucket_window_inv(bucket_window);\n         size_t space_for_points;\n-        size_t space_overhead;\n-        size_t entry_size = sizeof(secp256k1_ge) + sizeof(secp256k1_scalar) + sizeof(struct secp256k1_pippenger_point_state) + (WNAF_SIZE(bucket_window+1)+1)*sizeof(int);\n+        size_t space_constant;\n+        /* Compute entry size without taking alignment into account */\n+        size_t entry_size = secp256k1_pippenger_scratch_size_points(0, bucket_window, 0);\n \n-        entry_size = 2*entry_size;\n-        space_overhead = (sizeof(secp256k1_gej) << bucket_window) + entry_size + sizeof(struct secp256k1_pippenger_state);\n-        if (space_overhead > max_alloc) {\n+        space_constant = secp256k1_pippenger_scratch_size_constant(bucket_window);\n+        if (space_constant + entry_size > max_alloc) {",
      "path": "src/ecmult_impl.h",
      "position": 269,
      "original_position": 193,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "63811c4680f9bb93894608648332edf79886e28f",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Style nit (feel free to ignore): Was this check previously here for avoiding underflow (rather than short-circuiting)? If so would it make sense to keep the check as `space_constant > max_alloc` to make the intent clear?",
      "created_at": "2021-11-29T23:20:20Z",
      "updated_at": "2021-11-30T01:24:19Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r758810789",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758810789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 861,
      "original_line": 861,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758829474",
      "pull_request_review_id": 818115494,
      "id": 758829474,
      "node_id": "PRRC_kwDOAP4Jqs4tOtGi",
      "diff_hunk": "@@ -4098,6 +4099,20 @@ void test_ecmult_multi_strauss_scratch_size(void) {\n     }\n }\n \n+/* Spot check that any scratch space is large enough to fit\n+ * `strauss_max_points(scratch)` many points. */\n+void test_ecmult_multi_strauss_max_points(void) {\n+    size_t scratch_size = secp256k1_strauss_scratch_size_raw(1, 0);\n+    size_t max_scratch_size = secp256k1_strauss_scratch_size_raw(1, 1) + 1;\n+    for (; scratch_size < max_scratch_size; scratch_size++) {",
      "path": "src/tests.c",
      "position": 78,
      "original_position": 17,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "1e8189575362c7e0a972cafa953bea3d4dcaaf12",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it make sense to check bigger `scratch_size` (so that `n_points` is bigger too), but increase the amount `scratch_size` is incremented on each iteration?",
      "created_at": "2021-11-30T00:05:14Z",
      "updated_at": "2021-11-30T01:24:19Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r758829474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758829474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4345,
      "original_line": 4345,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758830090",
      "pull_request_review_id": 818115494,
      "id": 758830090,
      "node_id": "PRRC_kwDOAP4Jqs4tOtQK",
      "diff_hunk": "@@ -4098,6 +4099,20 @@ void test_ecmult_multi_strauss_scratch_size(void) {\n     }\n }\n \n+/* Spot check that any scratch space is large enough to fit\n+ * `strauss_max_points(scratch)` many points. */\n+void test_ecmult_multi_strauss_max_points(void) {\n+    size_t scratch_size = secp256k1_strauss_scratch_size_raw(1, 0);\n+    size_t max_scratch_size = secp256k1_strauss_scratch_size_raw(1, 1) + 1;\n+    for (; scratch_size < max_scratch_size; scratch_size++) {\n+        secp256k1_scratch *scratch = secp256k1_scratch_create(&ctx->error_callback, scratch_size);\n+        size_t n_points = secp256k1_strauss_max_points(&ctx->error_callback, scratch);\n+        CHECK(secp256k1_scratch_max_allocation(&ctx->error_callback, scratch, 0) == scratch_size);\n+        CHECK(scratch_size >= secp256k1_strauss_scratch_size(n_points));",
      "path": "src/tests.c",
      "position": 82,
      "original_position": 21,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "1e8189575362c7e0a972cafa953bea3d4dcaaf12",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it make sense to also check that the result is exact, e.g. by adding a check like this:\r\n\r\n```c\r\nCHECK(scratch_size < secp256k1_strauss_scratch_size(n_points + 1));\r\n```",
      "created_at": "2021-11-30T00:06:52Z",
      "updated_at": "2021-11-30T01:24:19Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r758830090",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758830090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4349,
      "original_line": 4349,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758832367",
      "pull_request_review_id": 818115494,
      "id": 758832367,
      "node_id": "PRRC_kwDOAP4Jqs4tOtzv",
      "diff_hunk": "@@ -1267,4 +1267,20 @@ static int secp256k1_ecmult_multi_var(const secp256k1_callback* error_callback,\n     return 1;\n }\n \n+/**\n+ * Returns the optimal scratch space size for a given number of points\n+ * excluding base point G.\n+ */\n+static size_t secp256k1_ecmult_multi_scratch_size(size_t n_points) {\n+    if (n_points > ECMULT_MAX_POINTS_PER_BATCH) {\n+        n_points = ECMULT_MAX_POINTS_PER_BATCH;\n+    }\n+    if (n_points >= ECMULT_PIPPENGER_THRESHOLD) {\n+        int bucket_window = secp256k1_pippenger_bucket_window(n_points);\n+        return secp256k1_pippenger_scratch_size(n_points, bucket_window);\n+    } else {\n+        return secp256k1_strauss_scratch_size(n_points);\n+    }",
      "path": "src/ecmult_impl.h",
      "position": 309,
      "original_position": 17,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "e774a6eea8f19fe56aeacdaadc4e1d270ff11cad",
      "in_reply_to_id": 293359356,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(No action needed) Responding to this 2 year old comment 😅 \r\n\r\nIn Core, it looks like \"Approach ACK\" means \"Concept ACK, and I agree with the approach of this change (but I haven't reviewed the code in detail)\":\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#conceptual-review",
      "created_at": "2021-11-30T00:12:30Z",
      "updated_at": "2021-11-30T01:24:19Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r758832367",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758832367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1002,
      "original_line": 1002,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758857449",
      "pull_request_review_id": 818115494,
      "id": 758857449,
      "node_id": "PRRC_kwDOAP4Jqs4tOz7p",
      "diff_hunk": "@@ -718,31 +820,51 @@ static int secp256k1_ecmult_pippenger_batch_single(const secp256k1_callback* err\n     return secp256k1_ecmult_pippenger_batch(error_callback, scratch, r, inp_g_sc, cb, cbdata, n, 0);\n }\n \n-/**\n- * Returns the maximum number of points in addition to G that can be used with\n- * a given scratch space. The function ensures that fewer points may also be\n- * used.\n+/* Returns the (near) maximum number of points in addition to G that can be\n+ * used with a given scratch space. It may not return the actual maximum number\n+ * of points possible. Otherwise, fewer points would not fit into the scratch\n+ * space in general. If a scratch space has exactly\n+ * `pippenger_scratch_size(n_points)` left, then\n+ * `pippenger_max_points(cb, scratch) <= n_points`.\n  */\n static size_t secp256k1_pippenger_max_points(const secp256k1_callback* error_callback, secp256k1_scratch *scratch) {\n-    size_t max_alloc = secp256k1_scratch_max_allocation(error_callback, scratch, PIPPENGER_SCRATCH_OBJECTS);\n+    /* Call max_allocation with 0 objects because otherwise it would assume\n+     * worst case padding but in this function we want to be exact. */\n+    size_t max_alloc = secp256k1_scratch_max_allocation(error_callback, scratch, 0);\n     int bucket_window;\n     size_t res = 0;\n \n     for (bucket_window = 1; bucket_window <= PIPPENGER_MAX_BUCKET_WINDOW; bucket_window++) {\n         size_t n_points;\n         size_t max_points = secp256k1_pippenger_bucket_window_inv(bucket_window);\n         size_t space_for_points;\n-        size_t space_overhead;\n-        size_t entry_size = sizeof(secp256k1_ge) + sizeof(secp256k1_scalar) + sizeof(struct secp256k1_pippenger_point_state) + (WNAF_SIZE(bucket_window+1)+1)*sizeof(int);\n+        size_t space_constant;\n+        /* Compute entry size without taking alignment into account */\n+        size_t entry_size = secp256k1_pippenger_scratch_size_points(0, bucket_window, 0);",
      "path": "src/ecmult_impl.h",
      "position": 263,
      "original_position": 248,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "e54c1aff71c7480095624aaa3f6cd53cf893eae0",
      "in_reply_to_id": null,
      "user": {
        "login": "robot-dreams",
        "id": 4276679,
        "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robot-dreams",
        "html_url": "https://github.com/robot-dreams",
        "followers_url": "https://api.github.com/users/robot-dreams/followers",
        "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
        "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
        "repos_url": "https://api.github.com/users/robot-dreams/repos",
        "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Style nit (feel free to ignore): Should this be called `point_size` instead to avoid confusion, since in other places you get 2(n+1) `entries` from the endomorphism?",
      "created_at": "2021-11-30T01:18:45Z",
      "updated_at": "2021-11-30T01:24:19Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r758857449",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/758857449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 858,
      "original_line": 858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795216022",
      "pull_request_review_id": 867146859,
      "id": 795216022,
      "node_id": "PRRC_kwDOAP4Jqs4vZgiW",
      "diff_hunk": "@@ -96,4 +96,14 @@ static void *secp256k1_scratch_alloc(const secp256k1_callback* error_callback, s\n     return ret;\n }\n \n+static size_t secp256k1_scratch_alloc_size(size_t *sizes, size_t n_sizes) {\n+    size_t i;\n+    size_t sum = 0;\n+\n+    for (i = 0; i < n_sizes; i++) {\n+        sum += ROUND_TO_ALIGN(sizes[i]);",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 9,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "f1629125023d092a6c9a5d032608d17e23b0004e",
      "in_reply_to_id": 757989368,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I fixed this. Also added test. ",
      "created_at": "2022-01-30T17:11:36Z",
      "updated_at": "2022-01-30T17:11:36Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r795216022",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795216022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795216038",
      "pull_request_review_id": 867146873,
      "id": 795216038,
      "node_id": "PRRC_kwDOAP4Jqs4vZgim",
      "diff_hunk": "@@ -630,22 +671,75 @@ SECP256K1_INLINE static void secp256k1_ecmult_endo_split(secp256k1_scalar *s1, s\n     }\n }\n \n+static size_t secp256k1_pippenger_scratch_size_constant(int bucket_window) {\n+    /* 4 objects are accounted for in pippenger_scratch_size_points */\n+    enum { N_SIZES = PIPPENGER_SCRATCH_OBJECTS - 4 };\n+    size_t sizes[N_SIZES];\n+    sizes[0] = sizeof(struct secp256k1_pippenger_state);\n+    sizes[1] = sizeof(secp256k1_gej) << bucket_window;\n+\n+    return secp256k1_scratch_alloc_size(sizes, N_SIZES);\n+}\n+\n+static SECP256K1_INLINE size_t secp256k1_pippenger_entries(size_t n_points) {\n+    return 2*n_points + 2;\n+}\n+\n+/**\n+ * Returns the scratch size required for a given number of points excluding\n+ * base point G and excluding the parts not dependent on the number of points.\n+ * If called with 0 n_points it'll return the size required for the base point\n+ * G. If the as_allocated argument is 0, this function will return the sum of\n+ * the sizes of the individual parts. Otherwise it will return the size that is\n+ * actually allocated with secp256k1_scratch_alloc which is greater or equal.\n+ */\n+static size_t secp256k1_pippenger_scratch_size_points(size_t n_points, int bucket_window, int as_allocated) {\n+    size_t entries = secp256k1_pippenger_entries(n_points);\n+    /* 4 objects are accounted for in pippenger_scratch_size_constant */",
      "path": "src/ecmult_impl.h",
      "position": null,
      "original_position": 106,
      "commit_id": "0d574b436687898c85b434132aca117374dd64d7",
      "original_commit_id": "63811c4680f9bb93894608648332edf79886e28f",
      "in_reply_to_id": 757993860,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2022-01-30T17:11:42Z",
      "updated_at": "2022-01-30T17:11:42Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/638#discussion_r795216038",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795216038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/638"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 698,
      "side": "RIGHT"
    }
  ]
}