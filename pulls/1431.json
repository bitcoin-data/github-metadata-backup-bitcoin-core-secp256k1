{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431",
    "id": 1562576676,
    "node_id": "PR_kwDOAP4Jqs5dIwck",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1431.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1431.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1431",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1431/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/56d103c334a14e3545c27dcd4808f369874d44a0",
    "number": 1431,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Add CONTRIBUTING.md",
    "user": {
      "login": "jonasnick",
      "id": 2582071,
      "node_id": "MDQ6VXNlcjI1ODIwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasnick",
      "html_url": "https://github.com/jonasnick",
      "followers_url": "https://api.github.com/users/jonasnick/followers",
      "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasnick/orgs",
      "repos_url": "https://api.github.com/users/jonasnick/repos",
      "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasnick/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Following offline discussions, this PR documents the scope of the library and the requirements for adding new modules. I think this fixes most of #997. It also updates the README very slightly.\r\n\r\nIn addition, I added some coding conventions that I remembered explaining to new contributors in the past year. Even though it's far from exhaustive, I think this is an easy improvement to the CONTRIBUTING.md. Feel free to suggest more conventions.",
    "labels": [
      {
        "id": 5922723218,
        "node_id": "LA_kwDOAP4Jqs8AAAABYQWVkg",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/development",
        "name": "development",
        "description": "processes, conventions, developer documentation, etc.",
        "color": "E2E0F5",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/5",
      "html_url": "https://github.com/bitcoin-core/secp256k1/milestone/5",
      "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/5/labels",
      "id": 9880835,
      "node_id": "MI_kwDOAP4Jqs4AlsUD",
      "number": 5,
      "state": "open",
      "title": "0.4.1 or 0.5.0",
      "description": "",
      "creator": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 3,
      "closed_issues": 2,
      "created_at": "2023-09-04T14:30:28Z",
      "updated_at": "2023-12-04T16:03:58Z",
      "due_on": "2023-12-21T08:00:00Z"
    },
    "created_at": "2023-10-18T12:40:10Z",
    "updated_at": "2023-12-04T22:55:52Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "14e13410bbbff986805430c5fbe49e893de1b4d8",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "jonasnick:contributing",
      "ref": "contributing",
      "sha": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 57937974,
        "node_id": "MDEwOlJlcG9zaXRvcnk1NzkzNzk3NA==",
        "name": "secp256k1",
        "full_name": "jonasnick/secp256k1",
        "owner": {
          "login": "jonasnick",
          "id": 2582071,
          "node_id": "MDQ6VXNlcjI1ODIwNzE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasnick",
          "html_url": "https://github.com/jonasnick",
          "followers_url": "https://api.github.com/users/jonasnick/followers",
          "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasnick/orgs",
          "repos_url": "https://api.github.com/users/jonasnick/repos",
          "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasnick/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasnick/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/jonasnick/secp256k1",
        "archive_url": "https://api.github.com/repos/jonasnick/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasnick/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasnick/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasnick/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasnick/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasnick/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasnick/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasnick/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasnick/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/jonasnick/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/jonasnick/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/jonasnick/secp256k1/events",
        "forks_url": "https://api.github.com/repos/jonasnick/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/jonasnick/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasnick/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasnick/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasnick/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasnick/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasnick/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasnick/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasnick/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasnick/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/jonasnick/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/jonasnick/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasnick/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasnick/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasnick/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasnick/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/jonasnick/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasnick/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasnick/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasnick/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/jonasnick/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/jonasnick/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/jonasnick/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasnick/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/jonasnick/secp256k1/hooks",
        "svn_url": "https://github.com/jonasnick/secp256k1",
        "language": "C",
        "forks_count": 4,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 11996,
        "default_branch": "master",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-04T20:08:54Z",
        "created_at": "2016-05-03T03:14:21Z",
        "updated_at": "2023-03-16T11:44:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "d3e29db8bbf81600fe0a6bd70b12fe57a0121b83",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 1045,
        "stargazers_count": 1865,
        "watchers_count": 1865,
        "size": 10630,
        "default_branch": "master",
        "open_issues_count": 135,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-04T20:08:58Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-12-04T13:05:09Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 100,
    "deletions": 23,
    "changed_files": 2,
    "commits": 4,
    "review_comments": 28,
    "comments": 1
  },
  "events": [
    {
      "event": "comment_deleted",
      "id": 10776401319,
      "node_id": "CDE_lADOAP4Jqs50NWqlzwAAAAKCUtWn",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/10776401319",
      "actor": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T08:17:03Z"
    },
    {
      "event": "reviewed",
      "id": 1710566019,
      "node_id": "PRR_kwDOAP4Jqs5l9SqD",
      "url": null,
      "actor": null,
      "commit_id": "1e0a7c273d33a51a33e85f1846a103943948d00d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#pullrequestreview-1710566019",
      "submitted_at": "2023-11-06T15:10:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
    },
    {
      "event": "reviewed",
      "id": 1715995185,
      "node_id": "PRR_kwDOAP4Jqs5mSAIx",
      "url": null,
      "actor": null,
      "commit_id": "1e0a7c273d33a51a33e85f1846a103943948d00d",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "katesalazar",
        "id": 52637275,
        "node_id": "MDQ6VXNlcjUyNjM3Mjc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52637275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/katesalazar",
        "html_url": "https://github.com/katesalazar",
        "followers_url": "https://api.github.com/users/katesalazar/followers",
        "following_url": "https://api.github.com/users/katesalazar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/katesalazar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/katesalazar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/katesalazar/subscriptions",
        "organizations_url": "https://api.github.com/users/katesalazar/orgs",
        "repos_url": "https://api.github.com/users/katesalazar/repos",
        "events_url": "https://api.github.com/users/katesalazar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/katesalazar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#pullrequestreview-1715995185",
      "submitted_at": "2023-11-06T19:01:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
    },
    {
      "event": "labeled",
      "id": 10945324512,
      "node_id": "LE_lADOAP4Jqs50NWqlzwAAAAKMZGXg",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/10945324512",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-13T18:16:29Z",
      "label": {
        "name": "development",
        "color": "E2E0F5"
      }
    },
    {
      "event": "milestoned",
      "id": 11013171502,
      "node_id": "MIE_lADOAP4Jqs50NWqlzwAAAAKQb6ku",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/11013171502",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T15:11:33Z",
      "milestone": {
        "title": "0.4.1 or 0.5.0"
      }
    },
    {
      "event": "reviewed",
      "id": 1745997529,
      "node_id": "PRR_kwDOAP4Jqs5oEc7Z",
      "url": null,
      "actor": null,
      "commit_id": "1e0a7c273d33a51a33e85f1846a103943948d00d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "You can mention these points as well if they are relevant:\r\n- API documentation is in their header files (see [include](include))\r\n- API input parameters must have a specific order (see [include/secp256k1.h](include/secp256k1.h))\r\n- To ensure algorithm correctness, exhaustive testing is performed on a smaller subgroup of secp256k1-like curves using all possible scalars and group elements (see [src/tests_exhaustive.c](src/tests_exhaustive.c))\r\n- There is a custom `run_benchmark` function available to evaluate the runtime performance of APIs, measuring min, avg, and max execution times (see [src/bench.h](src/bench.h))",
      "user": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#pullrequestreview-1745997529",
      "submitted_at": "2023-11-23T09:11:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11125652360,
      "node_id": "HRFPE_lADOAP4Jqs50NWqlzwAAAAKXI_uI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/11125652360",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-01T19:17:05Z"
    },
    {
      "event": "commented",
      "id": 1836644842,
      "node_id": "IC_kwDOAP4Jqs5tePnq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1836644842",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-01T19:18:07Z",
      "updated_at": "2023-12-01T19:18:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "@siv2r Thanks. I incorporated your suggestions, except:\r\n\r\n> API documentation is in their header files (see include)\r\n\r\nI don't think the CONTRIBUTING.md is the right place for that because this information is relevant to all users, not just developers of the library.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#issuecomment-1836644842",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1431"
    },
    {
      "event": "mentioned",
      "id": 11125660781,
      "node_id": "MEE_lADOAP4Jqs50NWqlzwAAAAKXJBxt",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/11125660781",
      "actor": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-01T19:18:07Z"
    },
    {
      "event": "subscribed",
      "id": 11125660790,
      "node_id": "SE_lADOAP4Jqs50NWqlzwAAAAKXJBx2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/11125660790",
      "actor": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-01T19:18:07Z"
    },
    {
      "event": "unsubscribed",
      "id": 11129633769,
      "node_id": "UE_lADOAP4Jqs50NWqlzwAAAAKXYLvp",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/11129633769",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-02T19:30:54Z"
    },
    {
      "event": "reviewed",
      "id": 1762282123,
      "node_id": "PRR_kwDOAP4Jqs5pCkqL",
      "url": null,
      "actor": null,
      "commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#pullrequestreview-1762282123",
      "submitted_at": "2023-12-04T13:23:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
    },
    {
      "event": "reviewed",
      "id": 1762714855,
      "node_id": "PRR_kwDOAP4Jqs5pEOTn",
      "url": null,
      "actor": null,
      "commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#pullrequestreview-1762714855",
      "submitted_at": "2023-12-04T15:24:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDc2ODgwZTQwMTUxZGRiMThkMGNkMDU0OTUwMmQ1YWRlOTVmNTAxZDY",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/76880e40151ddb18d0cd0549502d5ade95f501d6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/76880e40151ddb18d0cd0549502d5ade95f501d6",
      "tree": {
        "sha": "412f3878822d3fd88c4e5aa4ef400745bb8313f1",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/412f3878822d3fd88c4e5aa4ef400745bb8313f1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 412f3878822d3fd88c4e5aa4ef400745bb8313f1\nparent b10ddd2bd2bdce9ca8f2d4733636a9d9e7ac3da1\nauthor Jonas Nick <jonasd.nick@gmail.com> 1697548176 +0000\ncommitter Jonas Nick <jonasd.nick@gmail.com> 1701720505 +0000\n\nAdd CONTRIBUTING.md including scope and guidelines for new code\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEES7uEWm9aZaad+uwjSGHb8mISNgUFAmVuMbkACgkQSGHb8mIS\nNgVnlw/9GmdMvcJhcZb2DwLVdKsbC+TfZxRhMli/WTPILYVKZL81L5wDq0cKxqfu\nHGQX+r1gvRxMouOTuKAole4AD7nfV+/A/O9pCGc6oj485ld6GbCnOk3bwt2/aNCI\nrPBzi0ODIPercT1D+kUt41VJ8HR0dJ4VQYAvif9w6WEqJR16tAjG3G7YgM1pr4Zk\ncx/XFEEGqEXmUD5T0r7oLBqAJzOvTWMFOvCIWgGgSqeWtdKUY6dnAEY1wN18mICh\niQmbg/c2lkuLRr8oodNRZ9uPIPlZmx9EhXK6h7c1Wr7zX4Ayo9j7d8j04ltxqCIn\n3SC/gqjEe37pBB2Z0e1QNJVX4stOYRX4aLAHpwQ+qiOEFvE720Q21R/AM8FTP8bY\n+XbAglo79QzPoo/i5oJOWESUFkO6Lu4J4hYP6sqDyrIGEKjmDV4+u6//ZOgww+Qf\nlDWEHU/jkiT0dkCKJFEg/oVbpqIKiKVi0WtkIEIrJz+cB8DpKHvaJePiqExiMjSP\nlnPdOLbSilKTqvBRGKUAg5wDPATCHg51U6BOExSIQ7SYb2Kdw/zNwziuMCgvR1/O\n4Hi2GxX+WaJdfV7JSu5F26q83+6HeSwySpfGX7Qr422xtHN6JAL4ShfsHtjnsssk\n3ouchd851ddnHGKiyiehd1qbjAi2pR5ay0T51u0i/w/weODpak4=\n=9AS1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/b10ddd2bd2bdce9ca8f2d4733636a9d9e7ac3da1",
          "sha": "b10ddd2bd2bdce9ca8f2d4733636a9d9e7ac3da1",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/b10ddd2bd2bdce9ca8f2d4733636a9d9e7ac3da1"
        }
      ],
      "message": "Add CONTRIBUTING.md including scope and guidelines for new code",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2023-12-04T20:08:25Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2023-10-17T13:09:36Z"
      },
      "sha": "76880e40151ddb18d0cd0549502d5ade95f501d6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDA5MjJhMDQ3ZmIyYTIyNWZkODk4MDJiYmQ2ZjJkMDkxOWNkNTBiY2E",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/0922a047fb2a225fd89802bbd6f2d0919cd50bca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/0922a047fb2a225fd89802bbd6f2d0919cd50bca",
      "tree": {
        "sha": "95d992de841574d4ca25ea3153e9bdab1d54d197",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/95d992de841574d4ca25ea3153e9bdab1d54d197"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 95d992de841574d4ca25ea3153e9bdab1d54d197\nparent 76880e40151ddb18d0cd0549502d5ade95f501d6\nauthor Jonas Nick <jonasd.nick@gmail.com> 1697617014 +0000\ncommitter Jonas Nick <jonasd.nick@gmail.com> 1701720513 +0000\n\ndocs: move coverage report instructions to CONTRIBUTING\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEES7uEWm9aZaad+uwjSGHb8mISNgUFAmVuMcEACgkQSGHb8mIS\nNgWLIxAAo251yB/VI4fHxAkMpGlKCPnIezX5cR37uCeQHc9GKFaWW6YG4Gl/meCG\nTSZ8Id82JhmchGys66szpPz7Vw1kWJecn+wP+3ByLr3/VwJXq9Q2A1proePH49UC\nCanaa5KrKzDMKLkvgxtkW/yWM8nOapMBjLqa0bLQEuqPp1GaSAMPb1t/LVsyRMwk\nOtiVQju4dGsq0M9Ym3SGC+O9uh7gmYGHgkk6CT0Aez9/hdfZ+KYAa+ZInAh0D9L1\nQcknbQ6SlvkdWHXdeXciWF7pRgENDv1XFxx60m+KjBjP8Ecx9IR1TAWdvEvHTVSH\n1m5bSsHd/ci9Fa7nn8woDsCzBFfO1Hq+KNxafcZT2JSOQcx0o3DZuZoJTO6Xnj/P\n3DkR3y5B/fBTTDcS+m964odiGv9E+LFOQTjmSMUXhyOeMoSWmsn5b1k9JQcGp3uF\nni1AdUIH05asVoXvJ9I/qKufcVnK3zP21xz+tnlNt9HSKYZOu7v0uVnD9WGxswuB\nvQkrw6WQkPokeJpwnmUS38zjKWRjkInMM7ofv2GuZU6L0uymAydwMmS4DcACiQDU\nwEl4HtZqGMf4+Ltu3g7y+8OZ3o3QF71Zk+d2FUePspLiTu3wrOMJ2aHOCw6NyKXd\n8RIJD6AIiElR2uKRnRkisDs52fp/E6oG1iR/tGdeTOuczyc6d3U=\n=bqb1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/76880e40151ddb18d0cd0549502d5ade95f501d6",
          "sha": "76880e40151ddb18d0cd0549502d5ade95f501d6",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/76880e40151ddb18d0cd0549502d5ade95f501d6"
        }
      ],
      "message": "docs: move coverage report instructions to CONTRIBUTING",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2023-12-04T20:08:33Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2023-10-18T08:16:54Z"
      },
      "sha": "0922a047fb2a225fd89802bbd6f2d0919cd50bca"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGI5MmEyODgxMTVkZjVkYzcwYzgzOWM1YjI1ZmJjOWY5ODljNmU0ZDQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/b92a288115df5dc70c839c5b25fbc9f989c6e4d4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/b92a288115df5dc70c839c5b25fbc9f989c6e4d4",
      "tree": {
        "sha": "26ac636cd79381dcfa6f5df4996a7d4efdce8a78",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/26ac636cd79381dcfa6f5df4996a7d4efdce8a78"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 26ac636cd79381dcfa6f5df4996a7d4efdce8a78\nparent 0922a047fb2a225fd89802bbd6f2d0919cd50bca\nauthor Jonas Nick <jonasd.nick@gmail.com> 1697618260 +0000\ncommitter Jonas Nick <jonasd.nick@gmail.com> 1701720513 +0000\n\nREADME: update first sentence\n\nlibsecp256k1 has become more than a library for just ECDSA and key tweaking.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEES7uEWm9aZaad+uwjSGHb8mISNgUFAmVuMcEACgkQSGHb8mIS\nNgVxew//YOEMs4BF9pOguLY6jm2bCUxK2QI0juyHYlCWC/vmGBxRLuXkEWySBZaR\ndualMhPScXaAydvTFt3YBQZmJbn1ddS8NhIkt0oVqE2sgr26G982SjPb2sVjJY9E\nxlTUUgNzGXtReNTRf/eKraBelcbVFxkc6nr6DN4gYy71NripIaEQYRSHPXwt3fAH\nSUfdLKjn9oOUrXayJpeMHo9A+apuNcFM2gLZCnEeZAx4gF7FOxbzzH6qu9pN9Omc\ndLuoBPFa9Paywl6f5iFB6HD1DBPxR4rLmPg49Y5Hf2b7MJ7uSQa2Ogi5t/j/Wjre\nsXrktvvvUtoFenBXiah7THTylul+kiqanG+2Mt/dwwL5cDXKULHql8go246p9D/1\nxLx3zdP53Vh1pcCQ6AUJdxdZ/a9taG+XFBg2JH+BpA0eAo0l+lsPjDAw3zspL+6v\nyq4VQIsT8ytl9OpgqLMXlKIaBNB8n0NgJPbQNTdroz6klKN/7QMR5wO3pZEMggqj\nIfgWhmGLBqeLxlWCOrf7HL7hJDWkQ66wPkLisKELFKz/xsI9a89vNIu485iTQoKo\ncfvwq+E8u76ZhRDkS4L8UEcZJrBKDPkcUSpSGy7MFakg4UaKUL1wTxMbEFY5cVlE\nKwLWeRvD33mIiLL1jP2SizIaiCJyhYgNXuBbVhJ1v9sXeK6mcfQ=\n=xvH9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/0922a047fb2a225fd89802bbd6f2d0919cd50bca",
          "sha": "0922a047fb2a225fd89802bbd6f2d0919cd50bca",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/0922a047fb2a225fd89802bbd6f2d0919cd50bca"
        }
      ],
      "message": "README: update first sentence\n\nlibsecp256k1 has become more than a library for just ECDSA and key tweaking.",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2023-12-04T20:08:33Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2023-10-18T08:37:40Z"
      },
      "sha": "b92a288115df5dc70c839c5b25fbc9f989c6e4d4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDU2ZDEwM2MzMzRhMTRlMzU0NWMyN2RjZDQ4MDhmMzY5ODc0ZDQ0YTA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/56d103c334a14e3545c27dcd4808f369874d44a0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/56d103c334a14e3545c27dcd4808f369874d44a0",
      "tree": {
        "sha": "2ea9925c8a55ca9d348e32393e2f8c80efbe75cb",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/2ea9925c8a55ca9d348e32393e2f8c80efbe75cb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2ea9925c8a55ca9d348e32393e2f8c80efbe75cb\nparent b92a288115df5dc70c839c5b25fbc9f989c6e4d4\nauthor Jonas Nick <jonasd.nick@gmail.com> 1697630448 +0000\ncommitter Jonas Nick <jonasd.nick@gmail.com> 1701720513 +0000\n\nCONTRIBUTING: add some coding and style conventions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEES7uEWm9aZaad+uwjSGHb8mISNgUFAmVuMcEACgkQSGHb8mIS\nNgVSKQ//SJMCSJWhpKB11r0AzrbFBa4VzM8BzLHmu/2Z66N5imU+rIYzinIbG9Q7\nRfjFzgnCfbV8iTpUOX8oHYVahtTMndgDdwJyAbBdHY+9r8Z2Dnshy2OaHDSDz8YU\nnfJbyhHsWZQfwCd8tiRv+UGQ+s/VvQCL/kAuBr+eK3O2SdXLz+Wevc3jA7ABPyId\nCJxvOQqR4aph1N5MIGJmxptERjmokj9dpwEtlPxZwMlKRjoRKVbG1G76yekjBHg3\ngcbqMsNYYSXsdbcWbVJWInfp45O0XS4uHN7pUSIfpteyLC3K5rLIYmiVu+QXlgvI\n6EWVM6vB/gmSmm30zlwxMcKwip8RUCsOpEGmwWLo1VunAyPlAPpWXEi4L3o2FsM9\ntOtXAQSg5vzDorXm6qLV42ux5hT/+qzBoc/lNM1VN+o/+X3aJc/EKTur/AO1Pg/8\nUMqfmVFUO1iPyEU+2tTXeP6ZGa3FQfrizuK6DEUaLYkkIFBbHjs+g0Q4dPHWjg6D\nQCvklYlAYzF3aOhFYHd+eA1ektApqelt8IaG2CO7Mi7+aPu+KpN+/XgmlpsVxYUS\nSIExH74cpuwxGKwvSEs6RJesWA0g/NFISnrzwcPUp4y1x7exnCucRAtoOlEiEr+r\nUS3dhvCbWS7nXfaU1yz3RNroTYisXaUE7nH7ObKsPz7af9W89I8=\n=yLTV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/b92a288115df5dc70c839c5b25fbc9f989c6e4d4",
          "sha": "b92a288115df5dc70c839c5b25fbc9f989c6e4d4",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/b92a288115df5dc70c839c5b25fbc9f989c6e4d4"
        }
      ],
      "message": "CONTRIBUTING: add some coding and style conventions",
      "committer": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2023-12-04T20:08:33Z"
      },
      "author": {
        "name": "Jonas Nick",
        "email": "jonasd.nick@gmail.com",
        "date": "2023-10-18T12:00:48Z"
      },
      "sha": "56d103c334a14e3545c27dcd4808f369874d44a0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11143866274,
      "node_id": "HRFPE_lADOAP4Jqs50NWqlzwAAAAKYOeei",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/11143866274",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-04T20:08:58Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1380314418",
      "pull_request_review_id": 1710566019,
      "id": 1380314418,
      "node_id": "PRRC_kwDOAP4Jqs5SRe0y",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in Core's [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 40,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "1e0a7c273d33a51a33e85f1846a103943948d00d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: I don't like the use of \"Core\" to refer to \"Bitcoin Core\". Maybe just say \"its CONTRIBUTING.md\"?",
      "created_at": "2023-11-02T15:16:41Z",
      "updated_at": "2023-11-06T15:10:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1380314418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1380314418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1383825055",
      "pull_request_review_id": 1715995185,
      "id": 1383825055,
      "node_id": "PRRC_kwDOAP4Jqs5Se36f",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+## Communication Channels",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 29,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "1e0a7c273d33a51a33e85f1846a103943948d00d",
      "in_reply_to_id": null,
      "user": {
        "login": "katesalazar",
        "id": 52637275,
        "node_id": "MDQ6VXNlcjUyNjM3Mjc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52637275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/katesalazar",
        "html_url": "https://github.com/katesalazar",
        "followers_url": "https://api.github.com/users/katesalazar/followers",
        "following_url": "https://api.github.com/users/katesalazar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/katesalazar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/katesalazar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/katesalazar/subscriptions",
        "organizations_url": "https://api.github.com/users/katesalazar/orgs",
        "repos_url": "https://api.github.com/users/katesalazar/repos",
        "events_url": "https://api.github.com/users/katesalazar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/katesalazar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: empty line missing?",
      "created_at": "2023-11-06T19:01:28Z",
      "updated_at": "2023-11-06T19:01:28Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1383825055",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1383825055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1412485651",
      "pull_request_review_id": 1760426598,
      "id": 1412485651,
      "node_id": "PRRC_kwDOAP4Jqs5UMNIT",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in Core's [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 40,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "1e0a7c273d33a51a33e85f1846a103943948d00d",
      "in_reply_to_id": 1380314418,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2023-12-01T19:17:14Z",
      "updated_at": "2023-12-01T19:17:15Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1412485651",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1412485651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1412485734",
      "pull_request_review_id": 1760426736,
      "id": 1412485734,
      "node_id": "PRRC_kwDOAP4Jqs5UMNJm",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+## Communication Channels",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 29,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "1e0a7c273d33a51a33e85f1846a103943948d00d",
      "in_reply_to_id": 1383825055,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2023-12-01T19:17:21Z",
      "updated_at": "2023-12-01T19:17:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1412485734",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1412485734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413799792",
      "pull_request_review_id": 1762282123,
      "id": 1413799792,
      "node_id": "PRRC_kwDOAP4Jqs5URN9w",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).\n+\n+#### Style Conventions\n+\n+- Commits should be atomic and diffs should be easy to read. For this reason, do not mix any formatting fixes or code moves with actual code changes. Make sure each individual commit is hygienic: that it builds successfully on its own without warnings, errors, regressions, or test failures.\n+- Use `void *ptr` instead of `void* ptr`.\n+- Avoid trailing whitespaces.",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 58,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n- Avoid trailing whitespace.\r\n```",
      "created_at": "2023-12-04T12:24:41Z",
      "updated_at": "2023-12-04T13:23:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413799792",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413799792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413800289",
      "pull_request_review_id": 1762282123,
      "id": 1413800289,
      "node_id": "PRRC_kwDOAP4Jqs5UROFh",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).\n+\n+#### Style Conventions\n+\n+- Commits should be atomic and diffs should be easy to read. For this reason, do not mix any formatting fixes or code moves with actual code changes. Make sure each individual commit is hygienic: that it builds successfully on its own without warnings, errors, regressions, or test failures.\n+- Use `void *ptr` instead of `void* ptr`.\n+- Avoid trailing whitespaces.\n+\n+### Tests\n+\n+#### Coverage\n+\n+This library aims to have full coverage of the reachable lines and branches.",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 64,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThis library aims to have full coverage of reachable lines and branches.\r\n```",
      "created_at": "2023-12-04T12:25:10Z",
      "updated_at": "2023-12-04T13:23:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413800289",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413800289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413802276",
      "pull_request_review_id": 1762282123,
      "id": 1413802276,
      "node_id": "PRRC_kwDOAP4Jqs5UROkk",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).\n+\n+#### Style Conventions\n+\n+- Commits should be atomic and diffs should be easy to read. For this reason, do not mix any formatting fixes or code moves with actual code changes. Make sure each individual commit is hygienic: that it builds successfully on its own without warnings, errors, regressions, or test failures.\n+- Use `void *ptr` instead of `void* ptr`.\n+- Avoid trailing whitespaces.\n+\n+### Tests\n+\n+#### Coverage\n+\n+This library aims to have full coverage of the reachable lines and branches.\n+\n+To create a test coverage report, configure with `--enable-coverage` (use of GCC is necessary):\n+\n+    $ ./configure --enable-coverage\n+\n+Run the tests:\n+\n+    $ make check\n+\n+To create a report, `gcovr` is recommended, as it includes branch coverage reporting:\n+\n+    $ gcovr --exclude 'src/bench*' --print-summary\n+\n+To create a HTML report with coloured and annotated source code:\n+\n+    $ mkdir -p coverage\n+    $ gcovr --exclude 'src/bench*' --html --html-details -o coverage/coverage.html\n+\n+#### Exhaustive Tests\n+\n+There are tests of several functions in which a small group replaces secp256k1.\n+These tests are *exhaustive* since they provide all elements and scalars of the small group as input arguments (see [src/tests_exhaustive.c]).\n+\n+",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 88,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: one empty line is enough",
      "created_at": "2023-12-04T12:26:51Z",
      "updated_at": "2023-12-04T13:23:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413802276",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413802276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": 87,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413834812",
      "pull_request_review_id": 1762282123,
      "id": 1413834812,
      "node_id": "PRRC_kwDOAP4Jqs5URWg8",
      "diff_hunk": "@@ -5,7 +5,7 @@ libsecp256k1\n ![Dependencies: None](https://img.shields.io/badge/dependencies-none-success)\n [![irc.libera.chat #secp256k1](https://img.shields.io/badge/irc.libera.chat-%23secp256k1-success)](https://web.libera.chat/#secp256k1)\n \n-Optimized C library for ECDSA signatures and secret/public key operations on curve secp256k1.\n+Optimized C library for digital signatures and other cryptographic schemes on curve secp256k1.",
      "path": "README.md",
      "position": null,
      "original_position": 5,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(I may be quite nitpicky here, but I think this line is rather important because it should become our new  \"short description\"  as often included by package managers and also presented at the right-hand side of the GitHub page.)\r\n\r\nI think \"other schemes\" is a bit strange because \"digital signatures\" is not a scheme. It's a \"cryptographic primitive\". That word is a bit uncommon outside academia, but I think it's okay.\r\n\r\nI very much like the wording in the new file: \"libsecp256k1 is a library for elliptic curve cryptography\". But yeah, it may still make sense to mention signatures. Here are a few suggestions:\r\n\r\n - Optimized C library for digital signatures and other cryptographic primitives on elliptic curve secp256k1\r\n - Optimized C library for digital signatures and other cryptography on elliptic curve secp256k1\r\n - Optimized C library for elliptic curve cryptography (incl. digital signatures) on curve secp256k1\r\n - Optimized C library for elliptic curve cryptography on curve secp256k1, with a focus on the Bitcoin ecosystem\r\n\r\nIndependently, I suggest dropping \"Optimized\"... It's not wrong, but I think it made sense when the library was created because performance was by far the main feature. Today, it's rather a combination of performance and assurance. We could call it \"high-performance high-assurance\" but I want others to judge this. (Also, it sounds like [stolen from djb](https://ed25519.cr.yp.to/ed25519-20110705.pdf), and it just makes the description longer.)\r\n",
      "created_at": "2023-12-04T12:56:31Z",
      "updated_at": "2023-12-04T13:23:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413834812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413834812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413838384",
      "pull_request_review_id": 1762282123,
      "id": 1413838384,
      "node_id": "PRRC_kwDOAP4Jqs5URXYw",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 47,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There are a few exceptions to this rule, e.g., context creation and scratch space. Maybe the rule is rather something like \"Runtime heap allocation is always optional\" with an additional explanation.",
      "created_at": "2023-12-04T12:59:24Z",
      "updated_at": "2023-12-04T13:23:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413838384",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413838384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413839957",
      "pull_request_review_id": 1762282123,
      "id": 1413839957,
      "node_id": "PRRC_kwDOAP4Jqs5URXxV",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 30,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(global, nit:) We only capitalize the first word in README currently",
      "created_at": "2023-12-04T13:00:43Z",
      "updated_at": "2023-12-04T13:23:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413839957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413839957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413841091",
      "pull_request_review_id": 1762282123,
      "id": 1413841091,
      "node_id": "PRRC_kwDOAP4Jqs5URYDD",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 12,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style nit:\r\n```suggestion\r\nIt is the responsibility of the contributors to convince the maintainers that the proposed functionality suits the goals and the scope of the library. \r\n```",
      "created_at": "2023-12-04T13:01:31Z",
      "updated_at": "2023-12-04T13:23:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413841091",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413841091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413841441",
      "pull_request_review_id": 1762282123,
      "id": 1413841441,
      "node_id": "PRRC_kwDOAP4Jqs5URYIh",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 18,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style nit:\r\n```suggestion\r\n    If the specification contains pseudocode, a reference implementation or test vectors, these can be used to compare with the proposed libsecp256k1 code.\r\n```",
      "created_at": "2023-12-04T13:01:54Z",
      "updated_at": "2023-12-04T13:23:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413841441",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413841441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413842751",
      "pull_request_review_id": 1762282123,
      "id": 1413842751,
      "node_id": "PRRC_kwDOAP4Jqs5URYc_",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 21,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being \"obviously secure\" to rigorous proofs of security.\r\n```",
      "created_at": "2023-12-04T13:02:54Z",
      "updated_at": "2023-12-04T13:23:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413842751",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413842751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413843593",
      "pull_request_review_id": 1762282123,
      "id": 1413843593,
      "node_id": "PRRC_kwDOAP4Jqs5URYqJ",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 23,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style nit:\r\n```suggestion\r\n    The relevance of the new functionality for the Bitcoin ecosystem should be argued by outlining clear use cases.\r\n```",
      "created_at": "2023-12-04T13:03:21Z",
      "updated_at": "2023-12-04T13:23:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413843593",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413843593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413850611",
      "pull_request_review_id": 1762282123,
      "id": 1413850611,
      "node_id": "PRRC_kwDOAP4Jqs5URaXz",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).\n+\n+#### Style Conventions\n+\n+- Commits should be atomic and diffs should be easy to read. For this reason, do not mix any formatting fixes or code moves with actual code changes. Make sure each individual commit is hygienic: that it builds successfully on its own without warnings, errors, regressions, or test failures.\n+- Use `void *ptr` instead of `void* ptr`.",
      "path": "CONTRIBUTING.md",
      "position": 58,
      "original_position": 57,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "except for context pointers?",
      "created_at": "2023-12-04T13:09:20Z",
      "updated_at": "2023-12-04T13:23:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413850611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413850611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 58,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413857034",
      "pull_request_review_id": 1762282123,
      "id": 1413857034,
      "node_id": "PRRC_kwDOAP4Jqs5URb8K",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).\n+\n+#### Style Conventions\n+",
      "path": "CONTRIBUTING.md",
      "position": 55,
      "original_position": 55,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": " - New code should adhere to the style of existing, in particular surrounding, code. Other than that, we do not enforce strict rules for code formatting. \r\n - User-facing comment lines in headers should be limited to 80 chars if possible.\r\n - All identifiers in file scope should start with `_secp256k1`.",
      "created_at": "2023-12-04T13:14:57Z",
      "updated_at": "2023-12-04T13:23:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413857034",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413857034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413862410",
      "pull_request_review_id": 1762282123,
      "id": 1413862410,
      "node_id": "PRRC_kwDOAP4Jqs5URdQK",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 43,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A larger addition that comes to my mind is some explanation for `ARG_CHECK`, `VERIFY`, `VERIFY_CHECK`.\r\n\r\n(Could also be done later in another PR. I think the most important thing here to get started with a document...)",
      "created_at": "2023-12-04T13:19:24Z",
      "updated_at": "2023-12-04T13:23:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413862410",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413862410"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413862714",
      "pull_request_review_id": 1762282123,
      "id": 1413862714,
      "node_id": "PRRC_kwDOAP4Jqs5URdU6",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 52,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: should this point go to style conventions?\r\n\r\nAlternatively, and depending on your definition, some of the points I suggested for style conventions should go here... I don't care too much.",
      "created_at": "2023-12-04T13:19:40Z",
      "updated_at": "2023-12-04T13:23:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1413862714",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1413862714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414065137",
      "pull_request_review_id": 1762714855,
      "id": 1414065137,
      "node_id": "PRRC_kwDOAP4Jqs5USOvx",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).\n+\n+#### Style Conventions\n+\n+- Commits should be atomic and diffs should be easy to read. For this reason, do not mix any formatting fixes or code moves with actual code changes. Make sure each individual commit is hygienic: that it builds successfully on its own without warnings, errors, regressions, or test failures.\n+- Use `void *ptr` instead of `void* ptr`.\n+- Avoid trailing whitespaces.\n+\n+### Tests\n+\n+#### Coverage\n+\n+This library aims to have full coverage of the reachable lines and branches.\n+\n+To create a test coverage report, configure with `--enable-coverage` (use of GCC is necessary):\n+\n+    $ ./configure --enable-coverage\n+\n+Run the tests:\n+\n+    $ make check\n+\n+To create a report, `gcovr` is recommended, as it includes branch coverage reporting:\n+\n+    $ gcovr --exclude 'src/bench*' --print-summary\n+\n+To create a HTML report with coloured and annotated source code:\n+\n+    $ mkdir -p coverage\n+    $ gcovr --exclude 'src/bench*' --html --html-details -o coverage/coverage.html\n+\n+#### Exhaustive Tests\n+\n+There are tests of several functions in which a small group replaces secp256k1.\n+These tests are *exhaustive* since they provide all elements and scalars of the small group as input arguments (see [src/tests_exhaustive.c]).",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 86,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": null,
      "user": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThese tests are *exhaustive* since they provide all elements and scalars of the small group as input arguments (see [src/tests_exhaustive.c](src/tests_exhaustive.c)).\r\n```",
      "created_at": "2023-12-04T15:22:48Z",
      "updated_at": "2023-12-04T15:24:55Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1414065137",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414065137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414206927",
      "pull_request_review_id": 1762945993,
      "id": 1414206927,
      "node_id": "PRRC_kwDOAP4Jqs5USxXP",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).\n+\n+#### Style Conventions\n+\n+- Commits should be atomic and diffs should be easy to read. For this reason, do not mix any formatting fixes or code moves with actual code changes. Make sure each individual commit is hygienic: that it builds successfully on its own without warnings, errors, regressions, or test failures.\n+- Use `void *ptr` instead of `void* ptr`.",
      "path": "CONTRIBUTING.md",
      "position": 58,
      "original_position": 57,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": 1413850611,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why? We don't make an exception for context pointers right now.",
      "created_at": "2023-12-04T16:57:58Z",
      "updated_at": "2023-12-04T16:57:58Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1414206927",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414206927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 58,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414431538",
      "pull_request_review_id": 1763306281,
      "id": 1414431538,
      "node_id": "PRRC_kwDOAP4Jqs5UToMy",
      "diff_hunk": "@@ -5,7 +5,7 @@ libsecp256k1\n ![Dependencies: None](https://img.shields.io/badge/dependencies-none-success)\n [![irc.libera.chat #secp256k1](https://img.shields.io/badge/irc.libera.chat-%23secp256k1-success)](https://web.libera.chat/#secp256k1)\n \n-Optimized C library for ECDSA signatures and secret/public key operations on curve secp256k1.\n+Optimized C library for digital signatures and other cryptographic schemes on curve secp256k1.",
      "path": "README.md",
      "position": null,
      "original_position": 5,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": 1413834812,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree that it's valuable to have a single sentence that describes the lib well. Thanks for the suggestions. I like the first one. Also, I agree with replacing \"optimized\" with something more descriptive. \"High-performance high-assurance\" sounds pretty good in my opinion.",
      "created_at": "2023-12-04T20:07:58Z",
      "updated_at": "2023-12-04T20:07:58Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1414431538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414431538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414432733",
      "pull_request_review_id": 1763308287,
      "id": 1414432733,
      "node_id": "PRRC_kwDOAP4Jqs5UTofd",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 47,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": 1413838384,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was mindlessly copied from the README. Added a better explanation.",
      "created_at": "2023-12-04T20:09:26Z",
      "updated_at": "2023-12-04T20:09:26Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1414432733",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414432733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414433419",
      "pull_request_review_id": 1763309361,
      "id": 1414433419,
      "node_id": "PRRC_kwDOAP4Jqs5UToqL",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 12,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": 1413841091,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to a slightly different wording.",
      "created_at": "2023-12-04T20:10:09Z",
      "updated_at": "2023-12-04T20:10:10Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1414433419",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414433419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414433934",
      "pull_request_review_id": 1763310151,
      "id": 1414433934,
      "node_id": "PRRC_kwDOAP4Jqs5UToyO",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).\n+\n+#### Style Conventions\n+",
      "path": "CONTRIBUTING.md",
      "position": 55,
      "original_position": 55,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": 1413857034,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added the suggested conventions.",
      "created_at": "2023-12-04T20:10:41Z",
      "updated_at": "2023-12-04T20:10:42Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1414433934",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414433934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414434434",
      "pull_request_review_id": 1763310918,
      "id": 1414434434,
      "node_id": "PRRC_kwDOAP4Jqs5UTo6C",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 43,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": 1413862410,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That would definitely be useful. I vote for doing it in another PR.",
      "created_at": "2023-12-04T20:11:11Z",
      "updated_at": "2023-12-04T20:11:11Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1414434434",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414434434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414435200",
      "pull_request_review_id": 1763312198,
      "id": 1414435200,
      "node_id": "PRRC_kwDOAP4Jqs5UTpGA",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 52,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": 1413862714,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should have been in style conventions. Moved it.",
      "created_at": "2023-12-04T20:12:05Z",
      "updated_at": "2023-12-04T20:12:05Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1414435200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414435200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414435306",
      "pull_request_review_id": 1763312382,
      "id": 1414435306,
      "node_id": "PRRC_kwDOAP4Jqs5UTpHq",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).\n+\n+#### Style Conventions\n+\n+- Commits should be atomic and diffs should be easy to read. For this reason, do not mix any formatting fixes or code moves with actual code changes. Make sure each individual commit is hygienic: that it builds successfully on its own without warnings, errors, regressions, or test failures.\n+- Use `void *ptr` instead of `void* ptr`.\n+- Avoid trailing whitespaces.\n+\n+### Tests\n+\n+#### Coverage\n+\n+This library aims to have full coverage of the reachable lines and branches.\n+\n+To create a test coverage report, configure with `--enable-coverage` (use of GCC is necessary):\n+\n+    $ ./configure --enable-coverage\n+\n+Run the tests:\n+\n+    $ make check\n+\n+To create a report, `gcovr` is recommended, as it includes branch coverage reporting:\n+\n+    $ gcovr --exclude 'src/bench*' --print-summary\n+\n+To create a HTML report with coloured and annotated source code:\n+\n+    $ mkdir -p coverage\n+    $ gcovr --exclude 'src/bench*' --html --html-details -o coverage/coverage.html\n+\n+#### Exhaustive Tests\n+\n+There are tests of several functions in which a small group replaces secp256k1.\n+These tests are *exhaustive* since they provide all elements and scalars of the small group as input arguments (see [src/tests_exhaustive.c]).",
      "path": "CONTRIBUTING.md",
      "position": null,
      "original_position": 86,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": 1414065137,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed.",
      "created_at": "2023-12-04T20:12:13Z",
      "updated_at": "2023-12-04T20:12:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1414435306",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414435306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414602747",
      "pull_request_review_id": 1763592934,
      "id": 1414602747,
      "node_id": "PRRC_kwDOAP4Jqs5UUR_7",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+# Contributing to libsecp256k1\n+\n+## Scope\n+\n+libsecp256k1 is a library for elliptic curve cryptography on the curve secp256k1, not a general-purpose cryptography library.\n+The library primarily serves the needs of the Bitcoin Core project but provides additional functionality for the benefit of the wider Bitcoin ecosystem.\n+\n+## Adding new functionality or modules\n+\n+The libsecp256k1 project welcomes contributions in the form of new functionality or modules, provided they are within the project's scope.\n+\n+It is the responsibility of the contributors to convince the maintainers that the proposed functionality should be merged.\n+Contributors are recommended to provide the following in addition to the new code:\n+\n+* **Specification:**\n+    A specification can help significantly in reviewing the new code as it provides documentation and context.\n+    It may justify various design decisions, give a motivation and outline security goals.\n+    If the specification contains pseudocode, a reference implementation or test vectors, these could be used to compare with the proposed libsecp256k1 code.\n+* **Security Arguments:**\n+    In addition to a defining the security goals, it should be argued that the new functionality meets these goals.\n+    Depending on the nature of the new functionality, a wide range of security arguments are acceptable, ranging from being 'obviously secure' to rigorous proofs of security.\n+* **Relevance Arguments:**\n+    The relevance of the new functionality for the Bitcoin space should be argued by outlining clear use cases.\n+\n+These are not the only factors taken into account when considering to add new functionality.\n+The proposed new libsecp256k1 code must be of high quality, including API documentation and tests, as well as featuring a misuse-resistant API design.\n+\n+We recommend reaching out to other contributors (see [Communication Channels](#communication-channels)) and get feedback before implementing new functionality.\n+\n+## Communication Channels\n+\n+Most communication about libsecp256k1 occurs on the GitHub repository: in issues, pull request or on the discussion board.\n+\n+Additionally, there is an IRC channel dedicated to libsecp256k1, with biweekly meetings (see channel topic).\n+The channel is `#secp256k1` on Libera Chat.\n+The easiest way to participate on IRC is with the web client, [web.libera.chat](https://web.libera.chat/#secp256k1).\n+Chat history logs can be found at https://gnusha.org/secp256k1/.\n+\n+## Contributor Workflow & Peer Review\n+\n+The Contributor Workflow & Peer Review in libsecp256k1 are similar to Bitcoin Core's workflow and review processes described in its [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md).\n+\n+### Coding Conventions\n+\n+In addition, libsecp256k1 tries to maintain the following coding conventions:\n+\n+- No runtime heap allocation (e.g., no `malloc`).\n+- The tests should cover all lines and branches of the library (see [Test coverage](#coverage)).\n+- Operations involving secret data should be tested for being constant time with respect to the secrets (see [src/ctime_tests.c](src/ctime_tests.c)).\n+- Local variables containing secret data should be cleared explicitly to try to delete secrets from memory.\n+- Use `secp256k1_memcmp_var` instead of `memcmp` (see [#823](https://github.com/bitcoin-core/secp256k1/issues/823)).\n+- Arguments of the publicly-facing API must have a specific order defined in [include/secp256k1.h](include/secp256k1.h).\n+\n+#### Style Conventions\n+\n+- Commits should be atomic and diffs should be easy to read. For this reason, do not mix any formatting fixes or code moves with actual code changes. Make sure each individual commit is hygienic: that it builds successfully on its own without warnings, errors, regressions, or test failures.\n+- Use `void *ptr` instead of `void* ptr`.",
      "path": "CONTRIBUTING.md",
      "position": 58,
      "original_position": 57,
      "commit_id": "56d103c334a14e3545c27dcd4808f369874d44a0",
      "original_commit_id": "02a091b16c5d0e217ffbb19cb9b95a16ee0d56c3",
      "in_reply_to_id": 1413850611,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry, I was misremembering this",
      "created_at": "2023-12-04T22:55:52Z",
      "updated_at": "2023-12-04T22:55:52Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1431#discussion_r1414602747",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/1414602747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1431"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 58,
      "original_line": 58,
      "side": "RIGHT"
    }
  ]
}