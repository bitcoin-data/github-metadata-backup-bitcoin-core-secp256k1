{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068",
    "id": 836022118,
    "node_id": "PR_kwDOAP4Jqs4x1K9m",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1068.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1068.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1068",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1068/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/ebb1beea7832207e5c8c5112d250fd216259ef41",
    "number": 1068,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "sage: Fix incompatibility with sage 9.4",
    "user": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`allexprs` is already the product all numerators. Don't take it's\r\nnumerator again.\r\n\r\nFixes #1067.\r\n\r\nTo be honest, I have no idea what I'm doing here.",
    "labels": [],
    "created_at": "2022-01-31T11:16:27Z",
    "updated_at": "2022-02-05T22:11:15Z",
    "closed_at": "2022-02-05T22:11:15Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-02-05T22:11:15Z",
    "merge_commit_sha": "85b00a1c65c28fb6bc4381e7bf24cc349569b814",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "real-or-random:202201-sage-numerator",
      "ref": "202201-sage-numerator",
      "sha": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 93596674,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MzU5NjY3NA==",
        "name": "secp256k1",
        "full_name": "real-or-random/secp256k1",
        "owner": {
          "login": "real-or-random",
          "id": 1071625,
          "node_id": "MDQ6VXNlcjEwNzE2MjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/real-or-random",
          "html_url": "https://github.com/real-or-random",
          "followers_url": "https://api.github.com/users/real-or-random/followers",
          "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
          "organizations_url": "https://api.github.com/users/real-or-random/orgs",
          "repos_url": "https://api.github.com/users/real-or-random/repos",
          "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/real-or-random/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/real-or-random/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/real-or-random/secp256k1",
        "archive_url": "https://api.github.com/repos/real-or-random/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/real-or-random/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/real-or-random/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/real-or-random/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/real-or-random/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/real-or-random/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/real-or-random/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/real-or-random/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/real-or-random/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/real-or-random/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/real-or-random/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/real-or-random/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/real-or-random/secp256k1/events",
        "forks_url": "https://api.github.com/repos/real-or-random/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/real-or-random/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/real-or-random/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/real-or-random/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/real-or-random/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/real-or-random/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/real-or-random/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/real-or-random/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/real-or-random/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/real-or-random/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/real-or-random/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/real-or-random/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/real-or-random/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/real-or-random/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/real-or-random/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/real-or-random/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:real-or-random/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/real-or-random/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/real-or-random/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/real-or-random/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/real-or-random/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/real-or-random/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/real-or-random/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/real-or-random/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/real-or-random/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/real-or-random/secp256k1/hooks",
        "svn_url": "https://github.com/real-or-random/secp256k1",
        "language": "C",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 13626,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-01T20:02:33Z",
        "created_at": "2017-06-07T05:39:43Z",
        "updated_at": "2023-03-08T17:07:47Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "d8a246324650c3df8d54d133a8ac3c1b857a7a4e",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 948,
        "stargazers_count": 1768,
        "watchers_count": 1768,
        "size": 10062,
        "default_branch": "master",
        "open_issues_count": 142,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-12T16:38:48Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-06-12T17:38:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 79,
    "deletions": 31,
    "changed_files": 5,
    "commits": 6,
    "review_comments": 22,
    "comments": 4
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGUxMDhkMDAzOWMzNjQ4M2RmZmU0YmUwMDgxNWMxYjZkNjVlZjU3NTE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/e108d0039c36483dffe4be00815c1b6d65ef5751",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/e108d0039c36483dffe4be00815c1b6d65ef5751",
      "tree": {
        "sha": "a7f553bd89dbb2f85032b36f9c71d66e69a60684",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/a7f553bd89dbb2f85032b36f9c71d66e69a60684"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d8a246324650c3df8d54d133a8ac3c1b857a7a4e",
          "sha": "d8a246324650c3df8d54d133a8ac3c1b857a7a4e",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d8a246324650c3df8d54d133a8ac3c1b857a7a4e"
        }
      ],
      "message": "sage: Fix incompatibility with sage 9.4\n\n`allexprs` is already the product all numerators. Don't take it's\nnumerator again.\n\nFixes #1067.",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-01-31T11:15:16Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-01-31T11:13:37Z"
      },
      "sha": "e108d0039c36483dffe4be00815c1b6d65ef5751"
    },
    {
      "event": "reviewed",
      "id": 867860777,
      "node_id": "PRR_kwDOAP4Jqs4zuoEp",
      "url": null,
      "actor": null,
      "commit_id": "e108d0039c36483dffe4be00815c1b6d65ef5751",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I get the same errors here as with the `change_ring` \"workaround\":\r\n\r\n```\r\nFormula secp256k1_gej_add_var:\r\n  add:\r\n    branch 4: FAIL, <map object at 0x7f417d48b820> fails (assuming )\r\n\r\nFormula secp256k1_gej_add_zinv_var:\r\n  add:\r\n    branch 4: FAIL, <map object at 0x7f417d67d420> fails (assuming )\r\n```",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#pullrequestreview-867860777",
      "submitted_at": "2022-01-31T13:43:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGI1NGQ4NDNlYWM5MDU5OTNlYmEyMzE0YTg5YTJkN2YxNTU0NDVlYWE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/b54d843eac905993eba2314a89a2d7f155445eaa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/b54d843eac905993eba2314a89a2d7f155445eaa",
      "tree": {
        "sha": "5a3b7580b7e0b8c6d4780bc4a3fb76751211c994",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/5a3b7580b7e0b8c6d4780bc4a3fb76751211c994"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/e108d0039c36483dffe4be00815c1b6d65ef5751",
          "sha": "e108d0039c36483dffe4be00815c1b6d65ef5751",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/e108d0039c36483dffe4be00815c1b6d65ef5751"
        }
      ],
      "message": "sage: Fix printing of errors\n\nPython 3 often returns iterable map objects where Python 2 returned\nlist. We can just them down to lists explicitly.\n\nOverlooked in 13c88efed0005eb6745a222963ee74564054eafb.",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-01-31T14:17:46Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-01-31T14:17:46Z"
      },
      "sha": "b54d843eac905993eba2314a89a2d7f155445eaa"
    },
    {
      "event": "commented",
      "id": 1025998239,
      "node_id": "IC_kwDOAP4Jqs49J32f",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1025998239",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-31T17:00:44Z",
      "updated_at": "2022-01-31T17:00:44Z",
      "author_association": "MEMBER",
      "body": "@jonasnick Oh I missed this... I believe this a real of case of incompleteness (something in sage changed?) and now our prover isn't complete enough to prove the formula. But the fix is easy. If you prints() to the relevant part of `prove_nonzero` like this...\r\n\r\n```\r\n  print(\"nonzero\", nonzero)\r\n  for (f, n) in allexprs.factor():\r\n    print(\"factor\", f)\r\n ```\r\n\r\n... you get\r\n\r\n```\r\nnonzero {by, ax, bx, Az, bx - ax, ay, Bz}\r\nfactor -bx + ax\r\n```\r\n\r\nSo it put `bx - ax` in the set of nonzero expressions but then fails to see that then `-bx + ax` is nonzero as well. I added a commit to address this.\r\n\r\nDisclaimer: I don't really know what this code is doing in the end, so please take this with a grain of salt. @sipa should check if I'm right.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#issuecomment-1025998239",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1068"
    },
    {
      "event": "mentioned",
      "id": 5982372161,
      "node_id": "MEE_lADOAP4Jqs5CtxaMzwAAAAFkk8FB",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5982372161",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-31T17:00:44Z"
    },
    {
      "event": "subscribed",
      "id": 5982372174,
      "node_id": "SE_lADOAP4Jqs5CtxaMzwAAAAFkk8FO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5982372174",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-31T17:00:44Z"
    },
    {
      "event": "mentioned",
      "id": 5982372189,
      "node_id": "MEE_lADOAP4Jqs5CtxaMzwAAAAFkk8Fd",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5982372189",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-31T17:00:44Z"
    },
    {
      "event": "subscribed",
      "id": 5982372201,
      "node_id": "SE_lADOAP4Jqs5CtxaMzwAAAAFkk8Fp",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5982372201",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-31T17:00:44Z"
    },
    {
      "event": "reviewed",
      "id": 868177147,
      "node_id": "PRR_kwDOAP4Jqs4zv1T7",
      "url": null,
      "actor": null,
      "commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#pullrequestreview-868177147",
      "submitted_at": "2022-01-31T17:21:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6002244957,
      "node_id": "HRFPE_lADOAP4Jqs5CtxaMzwAAAAFlwv1d",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6002244957",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-03T11:59:53Z"
    },
    {
      "event": "commented",
      "id": 1028921377,
      "node_id": "IC_kwDOAP4Jqs49VBgh",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1028921377",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-03T12:02:56Z",
      "updated_at": "2022-02-03T12:02:56Z",
      "author_association": "MEMBER",
      "body": "I added sage to CI. Ready from my side (if CI passes...)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#issuecomment-1028921377",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1068"
    },
    {
      "event": "commented",
      "id": 1029007115,
      "node_id": "IC_kwDOAP4Jqs49VWcL",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1029007115",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-03T13:46:35Z",
      "updated_at": "2022-02-03T13:46:35Z",
      "author_association": "MEMBER",
      "body": "Upstream report: https://trac.sagemath.org/ticket/33283",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#issuecomment-1029007115",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1068"
    },
    {
      "event": "reviewed",
      "id": 872333119,
      "node_id": "PRR_kwDOAP4Jqs4z_r8_",
      "url": null,
      "actor": null,
      "commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#pullrequestreview-872333119",
      "submitted_at": "2022-02-03T19:45:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
    },
    {
      "event": "reviewed",
      "id": 872795859,
      "node_id": "PRR_kwDOAP4Jqs40Bc7T",
      "url": null,
      "actor": null,
      "commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK bed969b04fa292346edf5766e681a25d68b7a9d7",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#pullrequestreview-872795859",
      "submitted_at": "2022-02-04T08:34:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
    },
    {
      "event": "reviewed",
      "id": 873154631,
      "node_id": "PRR_kwDOAP4Jqs40C0hH",
      "url": null,
      "actor": null,
      "commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#pullrequestreview-873154631",
      "submitted_at": "2022-02-04T14:27:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGVhZTc1ODY5Y2ZiYmJjYjY5ZDg4MWJjNWQzMTNiZDk0YzYxNTU2NTU",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/eae75869cfbbbcb69d881bc5d313bd94c6155655",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/eae75869cfbbbcb69d881bc5d313bd94c6155655",
      "tree": {
        "sha": "1892a835634f1cc779b35c6394f43a114914281b",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/1892a835634f1cc779b35c6394f43a114914281b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/b54d843eac905993eba2314a89a2d7f155445eaa",
          "sha": "b54d843eac905993eba2314a89a2d7f155445eaa",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/b54d843eac905993eba2314a89a2d7f155445eaa"
        }
      ],
      "message": "sage: Exit with non-zero status in case of failures",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-02-04T14:37:32Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-01-31T16:53:04Z"
      },
      "sha": "eae75869cfbbbcb69d881bc5d313bd94c6155655"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDc3Y2ZhOThkYmM0MGY5NDk0MDQ4NDQ3YjhhMzAyODY3MjM1MzAwZGE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/77cfa98dbc40f9494048447b8a302867235300da",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/77cfa98dbc40f9494048447b8a302867235300da",
      "tree": {
        "sha": "907a5e002c8ed8e9b7dab101c126fbdfa48e0e32",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/907a5e002c8ed8e9b7dab101c126fbdfa48e0e32"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/eae75869cfbbbcb69d881bc5d313bd94c6155655",
          "sha": "eae75869cfbbbcb69d881bc5d313bd94c6155655",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/eae75869cfbbbcb69d881bc5d313bd94c6155655"
        }
      ],
      "message": "sage: Normalize sign of polynomial factors in prover\n\nThe prover, when run on recent sage versions,  failed to prove some of its\ngoals due to a change in sage. This commit adapts our code accordingly.\nThe prover passes again after this commit.",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-02-04T14:37:32Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-02-03T11:46:42Z"
      },
      "sha": "77cfa98dbc40f9494048447b8a302867235300da"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGQ4ZDU0ODU5ZWQxMzhhOGVkOWE4NDg2ZDg0NzE1NTIxMWM5ZjRhN2Q",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d8d54859ed138a8ed9a8486d847155211c9f4a7d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d8d54859ed138a8ed9a8486d847155211c9f4a7d",
      "tree": {
        "sha": "e552a2dafc64ba627599756a8968409dee4ea18c",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/e552a2dafc64ba627599756a8968409dee4ea18c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/77cfa98dbc40f9494048447b8a302867235300da",
          "sha": "77cfa98dbc40f9494048447b8a302867235300da",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/77cfa98dbc40f9494048447b8a302867235300da"
        }
      ],
      "message": "ci: Run sage prover on CI",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-02-04T14:37:32Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-02-03T11:58:55Z"
      },
      "sha": "d8d54859ed138a8ed9a8486d847155211c9f4a7d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6009929666,
      "node_id": "HRFPE_lADOAP4Jqs5CtxaMzwAAAAFmOD_C",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6009929666",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-04T14:37:49Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGViYjFiZWVhNzgzMjIwN2U1YzhjNTExMmQyNTBmZDIxNjI1OWVmNDE",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/ebb1beea7832207e5c8c5112d250fd216259ef41",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/ebb1beea7832207e5c8c5112d250fd216259ef41",
      "tree": {
        "sha": "30674590032a68389fecb577721368a90096833d",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/30674590032a68389fecb577721368a90096833d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d8d54859ed138a8ed9a8486d847155211c9f4a7d",
          "sha": "d8d54859ed138a8ed9a8486d847155211c9f4a7d",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d8d54859ed138a8ed9a8486d847155211c9f4a7d"
        }
      ],
      "message": "sage: Ensure that constraints are always fastfracs\n\nEven if they are constants created in the formula functions. We now\nlift integer constants to fastfracs.",
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-02-04T14:39:44Z"
      },
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2022-02-04T14:06:58Z"
      },
      "sha": "ebb1beea7832207e5c8c5112d250fd216259ef41"
    },
    {
      "event": "commented",
      "id": 1030140660,
      "node_id": "IC_kwDOAP4Jqs49ZrL0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1030140660",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-04T16:21:57Z",
      "updated_at": "2022-02-04T16:21:57Z",
      "author_association": "MEMBER",
      "body": "ACK ebb1beea7832207e5c8c5112d250fd216259ef41",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#issuecomment-1030140660",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1068"
    },
    {
      "event": "reviewed",
      "id": 873973361,
      "node_id": "PRR_kwDOAP4Jqs40F8Zx",
      "url": null,
      "actor": null,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK ebb1beea7832207e5c8c5112d250fd216259ef41",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#pullrequestreview-873973361",
      "submitted_at": "2022-02-05T21:59:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
    },
    {
      "event": "merged",
      "id": 6014329821,
      "node_id": "ME_lADOAP4Jqs5CtxaMzwAAAAFme2Pd",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6014329821",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "85b00a1c65c28fb6bc4381e7bf24cc349569b814",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/85b00a1c65c28fb6bc4381e7bf24cc349569b814",
      "created_at": "2022-02-05T22:11:15Z"
    },
    {
      "event": "closed",
      "id": 6014329824,
      "node_id": "CE_lADOAP4Jqs5CtxaMzwAAAAFme2Pg",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6014329824",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-05T22:11:15Z"
    },
    {
      "event": "referenced",
      "id": 6257645277,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAF0_Bbd",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6257645277",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8f8631d8269a962af38f9e553fccc2312ed6fbcc",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/8f8631d8269a962af38f9e553fccc2312ed6fbcc",
      "created_at": "2022-03-17T10:14:30Z"
    },
    {
      "event": "referenced",
      "id": 6259163423,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAF1E0Ef",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6259163423",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4bb1d7e62a6f88090a327b4301b89df67702f5cd",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/4bb1d7e62a6f88090a327b4301b89df67702f5cd",
      "created_at": "2022-03-17T12:59:08Z"
    },
    {
      "event": "referenced",
      "id": 6333589889,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAF5gumB",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6333589889",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "465d05253aaff1e06165a1777e70da16e14d2519",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/465d05253aaff1e06165a1777e70da16e14d2519",
      "created_at": "2022-03-30T09:43:02Z"
    },
    {
      "event": "referenced",
      "id": 6352394757,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAF6odoF",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6352394757",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6c0aecf72b1f4290f50302440065392715d6240a",
      "commit_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/commits/6c0aecf72b1f4290f50302440065392715d6240a",
      "created_at": "2022-04-01T13:21:05Z"
    },
    {
      "event": "referenced",
      "id": 6382809770,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAF8cfKq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6382809770",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "afb7a6fe06a33956ef43429d31f5934448f6e671",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/afb7a6fe06a33956ef43429d31f5934448f6e671",
      "created_at": "2022-04-06T19:25:28Z"
    },
    {
      "event": "referenced",
      "id": 6681498858,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAGOP5Tq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6681498858",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "35d6112a72ef419af9cb1ee3ffd9e28ad0df04a0",
      "commit_url": "https://api.github.com/repos/gwillen/elements/commits/35d6112a72ef419af9cb1ee3ffd9e28ad0df04a0",
      "created_at": "2022-05-25T22:22:21Z"
    },
    {
      "event": "referenced",
      "id": 7059808292,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAGkzCAk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7059808292",
      "actor": {
        "login": "patricklodder",
        "id": 1410115,
        "node_id": "MDQ6VXNlcjE0MTAxMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1410115?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/patricklodder",
        "html_url": "https://github.com/patricklodder",
        "followers_url": "https://api.github.com/users/patricklodder/followers",
        "following_url": "https://api.github.com/users/patricklodder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/patricklodder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/patricklodder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/patricklodder/subscriptions",
        "organizations_url": "https://api.github.com/users/patricklodder/orgs",
        "repos_url": "https://api.github.com/users/patricklodder/repos",
        "events_url": "https://api.github.com/users/patricklodder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/patricklodder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "21badcf9d23f51d831a2069a3d61ad320de417ea",
      "commit_url": "https://api.github.com/repos/patricklodder/dogecoin/commits/21badcf9d23f51d831a2069a3d61ad320de417ea",
      "created_at": "2022-07-25T21:21:04Z"
    },
    {
      "event": "referenced",
      "id": 7083242574,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAGmMbRO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7083242574",
      "actor": {
        "login": "patricklodder",
        "id": 1410115,
        "node_id": "MDQ6VXNlcjE0MTAxMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1410115?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/patricklodder",
        "html_url": "https://github.com/patricklodder",
        "followers_url": "https://api.github.com/users/patricklodder/followers",
        "following_url": "https://api.github.com/users/patricklodder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/patricklodder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/patricklodder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/patricklodder/subscriptions",
        "organizations_url": "https://api.github.com/users/patricklodder/orgs",
        "repos_url": "https://api.github.com/users/patricklodder/repos",
        "events_url": "https://api.github.com/users/patricklodder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/patricklodder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "03002a9013ffb5efdccfbae3f3510f4a44c0da20",
      "commit_url": "https://api.github.com/repos/patricklodder/dogecoin/commits/03002a9013ffb5efdccfbae3f3510f4a44c0da20",
      "created_at": "2022-07-28T16:53:45Z"
    },
    {
      "event": "referenced",
      "id": 7125520642,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAGottEC",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7125520642",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3a0652a777202bd7b56ee68d1e56f240c42a459f",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/3a0652a777202bd7b56ee68d1e56f240c42a459f",
      "created_at": "2022-08-04T08:12:00Z"
    },
    {
      "event": "referenced",
      "id": 9068914669,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAIcjKft",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9068914669",
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "522190d5c3686cae522b507d5f2366f580bfc586",
      "commit_url": "https://api.github.com/repos/str4d/zcash/commits/522190d5c3686cae522b507d5f2366f580bfc586",
      "created_at": "2023-04-21T15:40:12Z"
    },
    {
      "event": "referenced",
      "id": 9425177894,
      "node_id": "REFE_lADOAP4Jqs5CtxaMzwAAAAIxyM0m",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9425177894",
      "actor": {
        "login": "vmta",
        "id": 23269741,
        "node_id": "MDQ6VXNlcjIzMjY5NzQx",
        "avatar_url": "https://avatars.githubusercontent.com/u/23269741?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vmta",
        "html_url": "https://github.com/vmta",
        "followers_url": "https://api.github.com/users/vmta/followers",
        "following_url": "https://api.github.com/users/vmta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vmta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vmta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vmta/subscriptions",
        "organizations_url": "https://api.github.com/users/vmta/orgs",
        "repos_url": "https://api.github.com/users/vmta/repos",
        "events_url": "https://api.github.com/users/vmta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vmta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e1120c94a1fe2208bfe6c939b4f67f6d37ce931c",
      "commit_url": "https://api.github.com/repos/umkoin/umkoin/commits/e1120c94a1fe2208bfe6c939b4f67f6d37ce931c",
      "created_at": "2023-06-04T15:42:10Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795894566",
      "pull_request_review_id": 868177147,
      "id": 795894566,
      "node_id": "PRRC_kwDOAP4Jqs4vcGMm",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if this is generic enough, and there couldn't be arbitrary constant factor differences. If the results aren't normalized in a way that result in unique signs, other factors might differ too. What about:\r\n\r\n```python\r\n  allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\r\n  for (f, n) in allexprs.factor():\r\n    if not any((f % nz) == 0 and (nz % f) == 0 for nz in nonzero):\r\n      ok = False\r\n```\r\n",
      "created_at": "2022-01-31T17:21:21Z",
      "updated_at": "2022-01-31T17:21:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r795894566",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795894566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795959275",
      "pull_request_review_id": 868270607,
      "id": 795959275,
      "node_id": "PRRC_kwDOAP4Jqs4vcV_r",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": 795894566,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Both  the elements of `nonzero` and of `allexprs.factor()` are prime factors obtained by factorization, so I think they can differ at most by their `unit()` (https://doc.sagemath.org/html/en/reference/structure/sage/structure/factorization.html#sage.structure.factorization.Factorization.unit), which is -1 or 1.\r\n\r\nSo an element of `nonzero` or `allexprs.factor()` cannot have an additional factor c with c != -1 and  c != 1 because then it wouldn't be a prime factor. But there could be a constant prime element c in `allexprs.factor()`, which is then trivially nonzero but the prover fails this.\r\n\r\nSo if we want to allow for this, I'd suggest (which does not on the `%` operator for which I can't find docs on):\r\n```\r\n  for (f, n) in allexprs.factor():\r\n    if f not in nonzero and -f not in nonzero and not f.is_constant():\r\n      ok = False\r\n```\r\n\r\nDocs are here:\r\nhttps://doc.sagemath.org/html/en/reference/polynomial_rings/sage/rings/polynomial/multi_polynomial_element.html#sage.rings.polynomial.multi_polynomial_element.MPolynomial_polydict.is_constant",
      "created_at": "2022-01-31T18:40:14Z",
      "updated_at": "2022-01-31T18:40:15Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r795959275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795959275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795961912",
      "pull_request_review_id": 868274524,
      "id": 795961912,
      "node_id": "PRRC_kwDOAP4Jqs4vcWo4",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": 795894566,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are you sure? These are (multivariate) polynomial rings, and all constant terms are units for that.\r\n\r\nSpecifically, I'm concerned about the case where you'd have factors `a + 2*b` or `b + 1/2*a`, depending on which variable is considered the one to make monic.",
      "created_at": "2022-01-31T18:43:56Z",
      "updated_at": "2022-01-31T18:52:00Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r795961912",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795961912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795991670",
      "pull_request_review_id": 868318924,
      "id": 795991670,
      "node_id": "PRRC_kwDOAP4Jqs4vcd52",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": 795894566,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Are you sure? These are (multivariate) polynomial rings, and all constant terms are units for that.\r\n\r\nI'm not sure at all.\r\n\r\n> Specifically, I'm concerned about the case where you'd have factors a + 2*b or b + 1/2*a, depending on which variable is considered the one to make monic.\r\n\r\nHm yeah, I'd imagine this is the same everytime in the same ring class in sage but I don't know.\r\n\r\nWould you then change every similar if within this function?\r\n",
      "created_at": "2022-01-31T19:23:04Z",
      "updated_at": "2022-01-31T19:23:04Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r795991670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795991670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795995635",
      "pull_request_review_id": 868322931,
      "id": 795995635,
      "node_id": "PRRC_kwDOAP4Jqs4vce3z",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": 795894566,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Hm yeah, I'd imagine this is the same everytime in the same ring class in sage but I don't know.\r\n\r\nIndeed, but the same reasoning should IMO apply to the just the factor 1 or -1. ~~If there is a canonical ordering of factors, and e.g. factor() always returns the lexicographically smallest list of factors, there should never be any ambiguity at all.~~ The fact that the sign differs makes me suspicious, so I'd rather be overly cautious (the code still works fine with that change).\r\n\r\nEDIT: I realize the above is incorrect. Just because individual inputs to factor() are canonical doesn't imply the same is true for all factors individually. Still, I'm unsure if 1 and -1 are the only possible differences.\r\n\r\n> Would you then change every similar if within this function?\r\n\r\nYeah. Perhaps introduce a `unit_ratio_between(a, b)` function or so to abstract it and make it a bit more readable?",
      "created_at": "2022-01-31T19:27:07Z",
      "updated_at": "2022-01-31T19:36:41Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r795995635",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/795995635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/796515727",
      "pull_request_review_id": 869014923,
      "id": 796515727,
      "node_id": "PRRC_kwDOAP4Jqs4ved2P",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": 795894566,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok I played around and I'm 99% convinced that 1 and -1 are complete. The reason is that the unit part is ignored when we convert the `Factorization` to a list in our code (one of the first examples in https://doc.sagemath.org/html/en/reference/structure/sage/structure/factorization.html), which then gives a canonical representation. \r\n\r\nDemonstration: \r\n(Sorry now even sage 9.5... Arch Linux is pretty quick with its updates...)\r\n\r\n\r\n```\r\n┌────────────────────────────────────────────────────────────────────┐\r\n│ SageMath version 9.5, Release Date: 2022-01-30                     │\r\n│ Using Python 3.10.2. Type \"help()\" for help.                       │\r\n└────────────────────────────────────────────────────────────────────┘\r\nsage: R.<ax,bx,ay,by,Az,Bz,Ai,Bi> = PolynomialRing(QQ,8,order='invlex')\r\nsage: R\r\nMultivariate Polynomial Ring in ax, bx, ay, by, Az, Bz, Ai, Bi over Rational Field\r\n\r\nsage: R(10 * ax + bx / 2).factor()\r\n(1/2) * (bx + 20*ax)\r\nsage: R(20 * ax + bx).factor()\r\nbx + 20*ax\r\n\r\nsage: R(20 * ax + bx).factor().unit()\r\n1\r\nsage: R(10 * ax + bx/2).factor().unit()\r\n1/2\r\n\r\nsage: list(R(20 * ax + bx).factor())\r\n[(bx + 20*ax, 1)]\r\nsage: list(R(10 * ax + bx / 2).factor())\r\n[(bx + 20*ax, 1)]\r\n```\r\n\r\nWhy do 1 and -1 matter then at all, you may ask?\r\n```\r\nsage: R((-2 * (bx - ax)) ^ 1).factor()\r\n(-2) * (bx - ax)\r\nsage: R((-2 * (bx - ax)) ^ 2).factor()\r\n(4) * (-bx + ax)^2\r\nsage: R((-2 * (bx - ax)) ^ 3).factor()\r\n(8) * (-bx + ax)^3\r\n```\r\nIt's not very consistent where they put the minus: it's not even consistent among odd exponents.\r\n\r\nAnd indeed, I debugged the code on master and we hit `(bx - ax)^34` in `allexprs`, where the factor then gets a sign change during factorization. \r\n\r\nFor curiosity, can you check what this code does on your Sage 9.2? \r\n\r\n\r\nThe canonical representation (modulo the sign) is such that all fractional parts are moved to the unit:\r\n```\r\nsage: R((1/10 * ax + 1/15*bx)*(ax/7+bx)).factor()\r\n(1/210) * (2*bx + 3*ax) * (7*bx + ax)\r\n```\r\nOf course, this might change in the future but all of sage may change in the future, so I think we should provide a fix only when it actually breaks.\r\n\r\nSo with all that said, I'm in favor of sticking to the current solution in this PR.",
      "created_at": "2022-02-01T11:46:39Z",
      "updated_at": "2022-02-01T11:59:03Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r796515727",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/796515727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798060540",
      "pull_request_review_id": 871172491,
      "id": 798060540,
      "node_id": "PRRC_kwDOAP4Jqs4vkW_8",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": 795894566,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "  I did some independent experiments and the only factorizations I was able to get Sage (9.4) to produce had the coefficients of the non-unit factors be integers with gcd 1. This would make them unique if it weren't for this +,- inconsistency.\r\n\r\n  I considered that this is a regression in Sage >9.2 with `order=\"invlex\"`, because replacing it with `order=\"lex\"` makes the script work without the `-f not in nonzero` fix. But no.\r\n  ```\r\n  sage: a, b, c = QQ[\"a,b,c\"].gens()\r\n  ....: f = 1 / 2 * a - b\r\n  ....: f.factor()\r\n  ....: \r\n  (1/2) * (a - 2*b)\r\n  sage: f2 = (1 / 2 * a - b) * (a - c)\r\n  ....: f2.factor()\r\n  (1/2) * (-a + c) * (-a + 2*b)\r\n  ```\r\n\r\n  I'd be fine with leaving the PR as is. Another solution would be to wrap the `factor()` method such that it behaves as we would expect, i.e. the smallest variable name in a factor gets a positive coefficient (and our other assumptions are asserted).\r\n",
      "created_at": "2022-02-02T22:19:21Z",
      "updated_at": "2022-02-02T22:19:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r798060540",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798060540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798062915",
      "pull_request_review_id": 871175732,
      "id": 798062915,
      "node_id": "PRRC_kwDOAP4Jqs4vkXlD",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": 795894566,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: perhaps note in the commit description that this commit is required to make the script pass with sage 9.4.",
      "created_at": "2022-02-02T22:23:23Z",
      "updated_at": "2022-02-02T22:23:23Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r798062915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798062915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798065706",
      "pull_request_review_id": 871179232,
      "id": 798065706,
      "node_id": "PRRC_kwDOAP4Jqs4vkYQq",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": 795894566,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n$ sage\r\n┌────────────────────────────────────────────────────────────────────┐\r\n│ SageMath version 9.2, Release Date: 2020-10-24                     │\r\n│ Using Python 3.9.7. Type \"help()\" for help.                        │\r\n└────────────────────────────────────────────────────────────────────┘\r\nsage: R.<ax,bx,ay,by,Az,Bz,Ai,Bi> = PolynomialRing(QQ,8,order='invlex')\r\nsage: R\r\nMultivariate Polynomial Ring in ax, bx, ay, by, Az, Bz, Ai, Bi over Rational Field\r\nsage: R(10 * ax + bx / 2).factor()\r\n(1/2) * (bx + 20*ax)\r\nsage: R(20 * ax + bx).factor()\r\nbx + 20*ax\r\nsage: R(20 * ax + bx).factor().unit()\r\n1\r\nsage: R(10 * ax + bx/2).factor().unit()\r\n1/2\r\nsage: list(R(20 * ax + bx).factor())\r\n[(bx + 20*ax, 1)]\r\nsage: list(R(10 * ax + bx / 2).factor())\r\n[(bx + 20*ax, 1)]\r\nsage: R((-2 * (bx - ax)) ^ 1).factor()\r\n(2) * (-bx + ax)\r\nsage: R((-2 * (bx - ax)) ^ 2).factor()\r\n(4) * (-bx + ax)^2\r\nsage: R((-2 * (bx - ax)) ^ 3).factor()\r\n(8) * (-bx + ax)^3\r\nsage: R((1/10 * ax + 1/15*bx)*(ax/7+bx)).factor()\r\n(1/210) * (2*bx + 3*ax) * (7*bx + ax)\r\n```\r\n",
      "created_at": "2022-02-02T22:27:32Z",
      "updated_at": "2022-02-02T22:27:33Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r798065706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798065706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798073673",
      "pull_request_review_id": 871189824,
      "id": 798073673,
      "node_id": "PRRC_kwDOAP4Jqs4vkaNJ",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": 795894566,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this `(f not in nonzero) and (-f not in nonzero)` needed in other places where this pattern occurs below?",
      "created_at": "2022-02-02T22:41:08Z",
      "updated_at": "2022-02-02T22:41:08Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r798073673",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798073673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798494230",
      "pull_request_review_id": 871744000,
      "id": 798494230,
      "node_id": "PRRC_kwDOAP4Jqs4vmA4W",
      "diff_hunk": "@@ -222,12 +222,12 @@ def prove_nonzero(R, exprs, assume):\n       return (False, [exprs[expr]])\n   allexprs = reduce(lambda a,b: numerator(a)*numerator(b), exprs, 1)\n   for (f, n) in allexprs.factor():\n-    if f not in nonzero:\n+    if f not in nonzero and -f not in nonzero:",
      "path": "sage/group_prover.sage",
      "position": null,
      "original_position": 5,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "eb86372d5d411ccf200a3add49111d9c197d7dce",
      "in_reply_to_id": 795894566,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Another solution would be to wrap the factor() method such that it behaves as we would expect, i.e. the smallest variable name in a factor gets a positive coefficient (and our other assumptions are asserted).\r\n\r\nThat's a clean idea. I did this.\r\n\r\n> Is this `(f not in nonzero) and (-f not in nonzero)` needed in other places where this pattern occurs below?\r\n\r\nNot for the current group laws but I added the wrapper to the other places where we call `factor()`.",
      "created_at": "2022-02-03T12:02:06Z",
      "updated_at": "2022-02-03T12:02:06Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r798494230",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798494230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798912552",
      "pull_request_review_id": 872333119,
      "id": 798912552,
      "node_id": "PRRC_kwDOAP4Jqs4vnnAo",
      "diff_hunk": "@@ -177,6 +177,30 @@ class constraints:\n   def __repr__(self):\n     return \"%s\" % self\n \n+def normalize_factor(p):\n+  \"\"\"Normalizes the sign of primitive polynomials (as returned by factor())\n+\n+  This function ensures that the polynomial has a positive leading coefficient.\n+\n+  This is necessary because recent sage versions (starting with v9.3 or v9.4,\n+  we don't know) are inconsistent about the placement of the minus sign in\n+  polynomial factorizations:\n+  ```\n+  sage: R.<ax,bx,ay,by,Az,Bz,Ai,Bi> = PolynomialRing(QQ,8,order='invlex')\n+  sage: R((-2 * (bx - ax)) ^ 1).factor()\n+  (-2) * (bx - ax)\n+  sage: R((-2 * (bx - ax)) ^ 2).factor()\n+  (4) * (-bx + ax)^2\n+  sage: R((-2 * (bx - ax)) ^ 3).factor()\n+  (8) * (-bx + ax)^3\n+  ```\n+  \"\"\"\n+  # Assert p is not 0 and that its non-zero coeffients are coprime.\n+  # (We could just work with the primitive part p/p.content() but we want to be\n+  # aware if factor() does not return a primitive part in future sage versions.)\n+  assert p.content() == 1\n+  # Ensure that the first non-zero coefficient is positive.\n+  return p if p.lc() > 0 else -p",
      "path": "sage/group_prover.sage",
      "position": 37,
      "original_position": 27,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What about using `p / p.lc()`? That will always guarantee a result with leading coefficient 1, even if there is more than 1/-1 variability.",
      "created_at": "2022-02-03T19:45:32Z",
      "updated_at": "2022-02-03T19:45:32Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r798912552",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798912552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 206,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798929289",
      "pull_request_review_id": 872356388,
      "id": 798929289,
      "node_id": "PRRC_kwDOAP4Jqs4vnrGJ",
      "diff_hunk": "@@ -177,6 +177,30 @@ class constraints:\n   def __repr__(self):\n     return \"%s\" % self\n \n+def normalize_factor(p):\n+  \"\"\"Normalizes the sign of primitive polynomials (as returned by factor())\n+\n+  This function ensures that the polynomial has a positive leading coefficient.\n+\n+  This is necessary because recent sage versions (starting with v9.3 or v9.4,\n+  we don't know) are inconsistent about the placement of the minus sign in\n+  polynomial factorizations:\n+  ```\n+  sage: R.<ax,bx,ay,by,Az,Bz,Ai,Bi> = PolynomialRing(QQ,8,order='invlex')\n+  sage: R((-2 * (bx - ax)) ^ 1).factor()\n+  (-2) * (bx - ax)\n+  sage: R((-2 * (bx - ax)) ^ 2).factor()\n+  (4) * (-bx + ax)^2\n+  sage: R((-2 * (bx - ax)) ^ 3).factor()\n+  (8) * (-bx + ax)^3\n+  ```\n+  \"\"\"\n+  # Assert p is not 0 and that its non-zero coeffients are coprime.\n+  # (We could just work with the primitive part p/p.content() but we want to be\n+  # aware if factor() does not return a primitive part in future sage versions.)\n+  assert p.content() == 1\n+  # Ensure that the first non-zero coefficient is positive.\n+  return p if p.lc() > 0 else -p",
      "path": "sage/group_prover.sage",
      "position": 37,
      "original_position": 27,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": 798912552,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That seems possible but by asserting that the [content](https://doc.sagemath.org/html/en/reference/polynomial_rings/sage/rings/polynomial/multi_polynomial.html#sage.rings.polynomial.multi_polynomial.MPolynomial.content) is 1 we shouldn't have more than 1/-1 variability. ",
      "created_at": "2022-02-03T20:09:14Z",
      "updated_at": "2022-02-03T20:11:06Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r798929289",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798929289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 206,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798978836",
      "pull_request_review_id": 872426277,
      "id": 798978836,
      "node_id": "PRRC_kwDOAP4Jqs4vn3MU",
      "diff_hunk": "@@ -177,6 +177,30 @@ class constraints:\n   def __repr__(self):\n     return \"%s\" % self\n \n+def normalize_factor(p):\n+  \"\"\"Normalizes the sign of primitive polynomials (as returned by factor())\n+\n+  This function ensures that the polynomial has a positive leading coefficient.\n+\n+  This is necessary because recent sage versions (starting with v9.3 or v9.4,\n+  we don't know) are inconsistent about the placement of the minus sign in\n+  polynomial factorizations:\n+  ```\n+  sage: R.<ax,bx,ay,by,Az,Bz,Ai,Bi> = PolynomialRing(QQ,8,order='invlex')\n+  sage: R((-2 * (bx - ax)) ^ 1).factor()\n+  (-2) * (bx - ax)\n+  sage: R((-2 * (bx - ax)) ^ 2).factor()\n+  (4) * (-bx + ax)^2\n+  sage: R((-2 * (bx - ax)) ^ 3).factor()\n+  (8) * (-bx + ax)^3\n+  ```\n+  \"\"\"\n+  # Assert p is not 0 and that its non-zero coeffients are coprime.\n+  # (We could just work with the primitive part p/p.content() but we want to be\n+  # aware if factor() does not return a primitive part in future sage versions.)\n+  assert p.content() == 1\n+  # Ensure that the first non-zero coefficient is positive.\n+  return p if p.lc() > 0 else -p",
      "path": "sage/group_prover.sage",
      "position": 37,
      "original_position": 27,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": 798912552,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, but if you use `p / p.lc()`, there is no need for such an assertion.",
      "created_at": "2022-02-03T21:21:48Z",
      "updated_at": "2022-02-03T21:21:50Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r798978836",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/798978836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 206,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799002937",
      "pull_request_review_id": 872460067,
      "id": 799002937,
      "node_id": "PRRC_kwDOAP4Jqs4vn9E5",
      "diff_hunk": "@@ -177,6 +177,30 @@ class constraints:\n   def __repr__(self):\n     return \"%s\" % self\n \n+def normalize_factor(p):\n+  \"\"\"Normalizes the sign of primitive polynomials (as returned by factor())\n+\n+  This function ensures that the polynomial has a positive leading coefficient.\n+\n+  This is necessary because recent sage versions (starting with v9.3 or v9.4,\n+  we don't know) are inconsistent about the placement of the minus sign in\n+  polynomial factorizations:\n+  ```\n+  sage: R.<ax,bx,ay,by,Az,Bz,Ai,Bi> = PolynomialRing(QQ,8,order='invlex')\n+  sage: R((-2 * (bx - ax)) ^ 1).factor()\n+  (-2) * (bx - ax)\n+  sage: R((-2 * (bx - ax)) ^ 2).factor()\n+  (4) * (-bx + ax)^2\n+  sage: R((-2 * (bx - ax)) ^ 3).factor()\n+  (8) * (-bx + ax)^3\n+  ```\n+  \"\"\"\n+  # Assert p is not 0 and that its non-zero coeffients are coprime.\n+  # (We could just work with the primitive part p/p.content() but we want to be\n+  # aware if factor() does not return a primitive part in future sage versions.)\n+  assert p.content() == 1\n+  # Ensure that the first non-zero coefficient is positive.\n+  return p if p.lc() > 0 else -p",
      "path": "sage/group_prover.sage",
      "position": 37,
      "original_position": 27,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": 798912552,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok. It seemed slightly more appealing to me to just patch the sage bug but \\*shrug\\*",
      "created_at": "2022-02-03T21:58:07Z",
      "updated_at": "2022-02-03T21:58:07Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r799002937",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799002937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 206,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799245068",
      "pull_request_review_id": 872778669,
      "id": 799245068,
      "node_id": "PRRC_kwDOAP4Jqs4vo4MM",
      "diff_hunk": "@@ -177,6 +177,30 @@ class constraints:\n   def __repr__(self):\n     return \"%s\" % self\n \n+def normalize_factor(p):\n+  \"\"\"Normalizes the sign of primitive polynomials (as returned by factor())\n+\n+  This function ensures that the polynomial has a positive leading coefficient.\n+\n+  This is necessary because recent sage versions (starting with v9.3 or v9.4,\n+  we don't know) are inconsistent about the placement of the minus sign in\n+  polynomial factorizations:\n+  ```\n+  sage: R.<ax,bx,ay,by,Az,Bz,Ai,Bi> = PolynomialRing(QQ,8,order='invlex')\n+  sage: R((-2 * (bx - ax)) ^ 1).factor()\n+  (-2) * (bx - ax)\n+  sage: R((-2 * (bx - ax)) ^ 2).factor()\n+  (4) * (-bx + ax)^2\n+  sage: R((-2 * (bx - ax)) ^ 3).factor()\n+  (8) * (-bx + ax)^3\n+  ```\n+  \"\"\"\n+  # Assert p is not 0 and that its non-zero coeffients are coprime.\n+  # (We could just work with the primitive part p/p.content() but we want to be\n+  # aware if factor() does not return a primitive part in future sage versions.)\n+  assert p.content() == 1\n+  # Ensure that the first non-zero coefficient is positive.\n+  return p if p.lc() > 0 else -p",
      "path": "sage/group_prover.sage",
      "position": 37,
      "original_position": 27,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": 798912552,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> What about using `p / p.lc()`? That will always guarantee a result with leading coefficient 1, even if there is more than 1/-1 variability.\r\n\r\nThat seems to work, though this changes the representation further. `p/p.content() if p.lc() > 0 else -p/p.content()` will be closer to what we have now (and return a primitive polynomial).\r\n\r\nBut yeah, see the comment. It was an intentional decision to add the assertion. I think if that assertion fails, it may be the case that sage did larger changes and we may want to investigate this then.\r\n\r\nBut I can change it if you prefer.",
      "created_at": "2022-02-04T08:15:09Z",
      "updated_at": "2022-02-04T08:15:10Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r799245068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799245068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 206,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799511266",
      "pull_request_review_id": 873154631,
      "id": 799511266,
      "node_id": "PRRC_kwDOAP4Jqs4vp5Li",
      "diff_hunk": "@@ -292,15 +292,18 @@ def formula_secp256k1_gej_add_ge_old(branch, a, b):\n   return (constraints(zero={b.Z - 1 : 'b.z=1', b.Infinity : 'b_finite'}), constraints(zero=zero, nonzero=nonzero), jacobianpoint(rx, ry, rz))\n \n if __name__ == \"__main__\":\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old)\n+  success = True\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge)\n+  success = success & (not check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old))\n \n   if len(sys.argv) >= 2 and sys.argv[1] == \"--exhaustive\":\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old, 43)\n+    success = success & check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var, 43)",
      "path": "sage/prove_group_implementations.sage",
      "position": 22,
      "original_position": 22,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is buggy for `--exhaustive`, let me fix this.",
      "created_at": "2022-02-04T14:27:08Z",
      "updated_at": "2022-02-04T14:27:09Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r799511266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799511266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 303,
      "original_line": 303,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799523473",
      "pull_request_review_id": 873172357,
      "id": 799523473,
      "node_id": "PRRC_kwDOAP4Jqs4vp8KR",
      "diff_hunk": "@@ -292,15 +292,18 @@ def formula_secp256k1_gej_add_ge_old(branch, a, b):\n   return (constraints(zero={b.Z - 1 : 'b.z=1', b.Infinity : 'b_finite'}), constraints(zero=zero, nonzero=nonzero), jacobianpoint(rx, ry, rz))\n \n if __name__ == \"__main__\":\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old)\n+  success = True\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge)\n+  success = success & (not check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old))\n \n   if len(sys.argv) >= 2 and sys.argv[1] == \"--exhaustive\":\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old, 43)\n+    success = success & check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var, 43)",
      "path": "sage/prove_group_implementations.sage",
      "position": 22,
      "original_position": 22,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": 799511266,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok done. Also cherry-picked a commit from https://github.com/real-or-random/secp256k1/commits/202202-gej_add_ge that I discovered when working on #1033. ",
      "created_at": "2022-02-04T14:41:06Z",
      "updated_at": "2022-02-04T14:41:07Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r799523473",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799523473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 303,
      "original_line": 303,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799556077",
      "pull_request_review_id": 873218582,
      "id": 799556077,
      "node_id": "PRRC_kwDOAP4Jqs4vqEHt",
      "diff_hunk": "@@ -177,6 +177,30 @@ class constraints:\n   def __repr__(self):\n     return \"%s\" % self\n \n+def normalize_factor(p):\n+  \"\"\"Normalizes the sign of primitive polynomials (as returned by factor())\n+\n+  This function ensures that the polynomial has a positive leading coefficient.\n+\n+  This is necessary because recent sage versions (starting with v9.3 or v9.4,\n+  we don't know) are inconsistent about the placement of the minus sign in\n+  polynomial factorizations:\n+  ```\n+  sage: R.<ax,bx,ay,by,Az,Bz,Ai,Bi> = PolynomialRing(QQ,8,order='invlex')\n+  sage: R((-2 * (bx - ax)) ^ 1).factor()\n+  (-2) * (bx - ax)\n+  sage: R((-2 * (bx - ax)) ^ 2).factor()\n+  (4) * (-bx + ax)^2\n+  sage: R((-2 * (bx - ax)) ^ 3).factor()\n+  (8) * (-bx + ax)^3\n+  ```\n+  \"\"\"\n+  # Assert p is not 0 and that its non-zero coeffients are coprime.\n+  # (We could just work with the primitive part p/p.content() but we want to be\n+  # aware if factor() does not return a primitive part in future sage versions.)\n+  assert p.content() == 1\n+  # Ensure that the first non-zero coefficient is positive.\n+  return p if p.lc() > 0 else -p",
      "path": "sage/group_prover.sage",
      "position": 37,
      "original_position": 27,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": 798912552,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No problem.",
      "created_at": "2022-02-04T15:17:07Z",
      "updated_at": "2022-02-04T15:17:07Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r799556077",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799556077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 206,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799831648",
      "pull_request_review_id": 873608500,
      "id": 799831648,
      "node_id": "PRRC_kwDOAP4Jqs4vrHZg",
      "diff_hunk": "@@ -292,15 +292,18 @@ def formula_secp256k1_gej_add_ge_old(branch, a, b):\n   return (constraints(zero={b.Z - 1 : 'b.z=1', b.Infinity : 'b_finite'}), constraints(zero=zero, nonzero=nonzero), jacobianpoint(rx, ry, rz))\n \n if __name__ == \"__main__\":\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old)\n+  success = True\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge)\n+  success = success & (not check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old))\n \n   if len(sys.argv) >= 2 and sys.argv[1] == \"--exhaustive\":\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old, 43)\n+    success = success & check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var, 43)",
      "path": "sage/prove_group_implementations.sage",
      "position": 22,
      "original_position": 22,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": 799511266,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The commit looks fine but is there a specific reason why it was added?",
      "created_at": "2022-02-04T21:47:27Z",
      "updated_at": "2022-02-04T21:47:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r799831648",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/799831648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 303,
      "original_line": 303,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/800031279",
      "pull_request_review_id": 873911365,
      "id": 800031279,
      "node_id": "PRRC_kwDOAP4Jqs4vr4Iv",
      "diff_hunk": "@@ -292,15 +292,18 @@ def formula_secp256k1_gej_add_ge_old(branch, a, b):\n   return (constraints(zero={b.Z - 1 : 'b.z=1', b.Infinity : 'b_finite'}), constraints(zero=zero, nonzero=nonzero), jacobianpoint(rx, ry, rz))\n \n if __name__ == \"__main__\":\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old)\n+  success = True\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge)\n+  success = success & (not check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old))\n \n   if len(sys.argv) >= 2 and sys.argv[1] == \"--exhaustive\":\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old, 43)\n+    success = success & check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var, 43)",
      "path": "sage/prove_group_implementations.sage",
      "position": 22,
      "original_position": 22,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": 799511266,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I added it because it fixes a bug in the group prover that prevents us to look into other group formulas. In particular, it stopped me from playing around with the formula here because it may return a literal 1: https://github.com/real-or-random/secp256k1/blob/dc53e24a1b63ec07a9ab086280cab1355cd3a881/sage/prove_group_implementations.sage#L209",
      "created_at": "2022-02-05T07:44:00Z",
      "updated_at": "2022-02-05T07:44:00Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r800031279",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/800031279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 303,
      "original_line": 303,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/800104104",
      "pull_request_review_id": 873973218,
      "id": 800104104,
      "node_id": "PRRC_kwDOAP4Jqs4vsJ6o",
      "diff_hunk": "@@ -292,15 +292,18 @@ def formula_secp256k1_gej_add_ge_old(branch, a, b):\n   return (constraints(zero={b.Z - 1 : 'b.z=1', b.Infinity : 'b_finite'}), constraints(zero=zero, nonzero=nonzero), jacobianpoint(rx, ry, rz))\n \n if __name__ == \"__main__\":\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge)\n-  check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old)\n+  success = True\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var)\n+  success = success & check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge)\n+  success = success & (not check_symbolic_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old))\n \n   if len(sys.argv) >= 2 and sys.argv[1] == \"--exhaustive\":\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge_var\", 0, 7, 5, formula_secp256k1_gej_add_ge_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_zinv_var\", 0, 7, 5, formula_secp256k1_gej_add_zinv_var, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge\", 0, 7, 16, formula_secp256k1_gej_add_ge, 43)\n-    check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_ge_old [should fail]\", 0, 7, 4, formula_secp256k1_gej_add_ge_old, 43)\n+    success = success & check_exhaustive_jacobian_weierstrass(\"secp256k1_gej_add_var\", 0, 7, 5, formula_secp256k1_gej_add_var, 43)",
      "path": "sage/prove_group_implementations.sage",
      "position": 22,
      "original_position": 22,
      "commit_id": "ebb1beea7832207e5c8c5112d250fd216259ef41",
      "original_commit_id": "bed969b04fa292346edf5766e681a25d68b7a9d7",
      "in_reply_to_id": 799511266,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, thanks that makes sense.",
      "created_at": "2022-02-05T21:57:02Z",
      "updated_at": "2022-02-05T21:57:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1068#discussion_r800104104",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/800104104"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1068"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 303,
      "original_line": 303,
      "side": "RIGHT"
    }
  ]
}