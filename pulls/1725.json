{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725",
    "id": 2748482841,
    "node_id": "PR_kwDOAP4Jqs6j0oUZ",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1725.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1725.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1725",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1725/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/17af09dcd42acff6b85e35f6d3307681e508e665",
    "number": 1725,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "tests: refactor tagged hash verification",
    "user": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Opened in response to https://github.com/bitcoin-core/secp256k1/pull/1698#discussion_r2269449070\r\n\r\n---\r\n\r\nWe use tagged hashes in `modules/musig`, `modules/schnorrsig`, `modules/ellswift`, and the proposed `modules/silentpayments`. In looking for inspiration on how to add tagged hash midstate verification for https://github.com/bitcoin-core/secp256k1/pull/1698, it seemed like a good opportunity to DRY up the code across all of the modules.\r\n\r\nI chose the convention used in the ellswift module as this seems the most idiomatic C. Since the tags are normally specified as strings in the BIPs, I also added a comment above each char array for convenience.\r\n\r\nIf its deemed too invasive to refactor the existing modules in this PR, I'm happy to drop the refactor commits for the ellswift and schnorrsig modules. All I need for https://github.com/bitcoin-core/secp256k1/pull/1698 is the first commit which moves the utility function out of the musig module to make it available to use in the silent payments module.",
    "labels": [
      {
        "id": 165017692,
        "node_id": "MDU6TGFiZWwxNjUwMTc2OTI=",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/assurance",
        "name": "assurance",
        "description": "",
        "color": "A6DF3D",
        "default": false
      },
      {
        "id": 5492448291,
        "node_id": "LA_kwDOAP4Jqs8AAAABR2AcIw",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/tweak/refactor",
        "name": "tweak/refactor",
        "description": "",
        "color": "FBCA04",
        "default": false
      }
    ],
    "created_at": "2025-08-15T10:05:36Z",
    "updated_at": "2025-08-20T08:52:55Z",
    "mergeable": true,
    "mergeable_state": "unstable",
    "merged": false,
    "merge_commit_sha": "56d7a373925d7292d9692c00926da27281e13f30",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "josibake:tagged-hash-test-util",
      "ref": "tagged-hash-test-util",
      "sha": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 751433786,
        "node_id": "R_kgDOLMn4Og",
        "name": "secp256k1",
        "full_name": "josibake/secp256k1",
        "owner": {
          "login": "josibake",
          "id": 7444140,
          "node_id": "MDQ6VXNlcjc0NDQxNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/josibake",
          "html_url": "https://github.com/josibake",
          "followers_url": "https://api.github.com/users/josibake/followers",
          "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
          "organizations_url": "https://api.github.com/users/josibake/orgs",
          "repos_url": "https://api.github.com/users/josibake/repos",
          "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/josibake/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/josibake/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/josibake/secp256k1",
        "archive_url": "https://api.github.com/repos/josibake/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/josibake/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/josibake/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/josibake/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/josibake/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/josibake/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/josibake/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/josibake/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/josibake/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/josibake/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/josibake/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/josibake/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/josibake/secp256k1/events",
        "forks_url": "https://api.github.com/repos/josibake/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/josibake/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/josibake/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/josibake/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/josibake/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/josibake/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/josibake/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/josibake/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/josibake/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/josibake/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/josibake/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/josibake/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/josibake/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/josibake/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/josibake/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/josibake/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:josibake/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/josibake/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/josibake/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/josibake/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/josibake/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/josibake/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/josibake/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/josibake/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/josibake/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/josibake/secp256k1/hooks",
        "svn_url": "https://github.com/josibake/secp256k1",
        "language": "C",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 13508,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-20T08:15:56Z",
        "created_at": "2024-02-01T15:52:50Z",
        "updated_at": "2025-08-15T08:25:19Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "d2dcf52091d529f46c4847c909268ee051f630bd",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 1075,
        "stargazers_count": 2291,
        "watchers_count": 2291,
        "size": 12615,
        "default_branch": "master",
        "open_issues_count": 154,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-18T13:28:34Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2025-08-18T16:20:24Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 36,
    "deletions": 30,
    "changed_files": 4,
    "commits": 3,
    "review_comments": 12,
    "comments": 4
  },
  "events": [
    {
      "event": "reviewed",
      "id": 3124543037,
      "node_id": "PRR_kwDOAP4Jqs66PL49",
      "url": null,
      "actor": null,
      "commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-15T16:53:10Z",
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#pullrequestreview-3124543037",
      "submitted_at": "2025-08-15T16:53:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
    },
    {
      "event": "reviewed",
      "id": 3127845283,
      "node_id": "PRR_kwDOAP4Jqs66byGj",
      "url": null,
      "actor": null,
      "commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-18T10:44:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK it's a good idea to make this consistent",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#pullrequestreview-3127845283",
      "submitted_at": "2025-08-18T10:44:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
    },
    {
      "event": "labeled",
      "id": 19200985882,
      "node_id": "LE_lADOAP4Jqs7GLfq_zwAAAAR4d8sa",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19200985882",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T10:44:39Z",
      "label": {
        "name": "assurance",
        "color": "A6DF3D"
      }
    },
    {
      "event": "labeled",
      "id": 19200985894,
      "node_id": "LE_lADOAP4Jqs7GLfq_zwAAAAR4d8sm",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19200985894",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T10:44:39Z",
      "label": {
        "name": "tweak/refactor",
        "color": "FBCA04"
      }
    },
    {
      "event": "commented",
      "id": 3198471816,
      "node_id": "IC_kwDOAP4Jqs6-pM6I",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3198471816",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T21:24:58Z",
      "updated_at": "2025-08-18T21:24:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nIn the risk of sounding heretic, wouldn't it also be an option to let `sha256_tag_test_internal` simply take a string and compute the tag length at run-time via `strlen` (it's test-only code anyways...), in order to avoid having to declare char arrays and deal with specifying the correct lengths repeatedly in the first place? I'd be very surprised at least if future BIP authors would break the tradition and ever use tags that include NUL-bytes. Happy to review either variant, of course (also, obviously feel free to just ignore, since there has been a good amount of discussion already).",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#issuecomment-3198471816",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1725"
    },
    {
      "event": "commented",
      "id": 3199437251,
      "node_id": "IC_kwDOAP4Jqs6-s4nD",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3199437251",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-19T06:42:33Z",
      "updated_at": "2025-08-19T06:42:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "> In the risk of sounding heretic, wouldn't it also be an option to let `sha256_tag_test_internal` simply take a string and compute the tag length at run-time via `strlen` (it's test-only code anyways...), \r\n\r\nHehe, I think that's also a good approach. It increases legibility at the cost of introducing the assumption that there are NUL bytes (which is most likely true even for future tags, yes). If I had to pick, I'd still pack the array initializer simply because the tag is conceptually an array. \r\n\r\nI think we have reached a point where @josibake should just pick one of the many good options, and we'll move on with that one. :smile: ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#issuecomment-3199437251",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1725"
    },
    {
      "event": "mentioned",
      "id": 19217612818,
      "node_id": "MEE_lADOAP4Jqs7GLfq_zwAAAAR5dYAS",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19217612818",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-19T06:42:35Z"
    },
    {
      "event": "subscribed",
      "id": 19217612832,
      "node_id": "SE_lADOAP4Jqs7GLfq_zwAAAAR5dYAg",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19217612832",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-19T06:42:35Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDU3ODJkOTI0YzIxZmE4ZTA1NTgxY2JhNmJkMjc0NzkwOTgyOTNjOWI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5782d924c21fa8e05581cba6bd27479098293c9b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5782d924c21fa8e05581cba6bd27479098293c9b",
      "tree": {
        "sha": "e9fa657e2b425ea672479a779afdee1a1feac5eb",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/e9fa657e2b425ea672479a779afdee1a1feac5eb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e9fa657e2b425ea672479a779afdee1a1feac5eb\nparent d599714147b20dda092ec4af44ef4174d584bb7d\nauthor josibake <josibake@protonmail.com> 1755247049 +0100\ncommitter josibake <josibake@protonmail.com> 1755677039 +0100\n\ntests: refactor musig module tagged hash tests\n\nMove the sha256_tag_test_internal function out of the musig module\ninto tests.c. This makes it available to other modules wishing to verify tagged\nhashes without needing to duplicate the function.\n\nChange the function signature to expect a const unsigned char and update\nthe musig tagged hash tests to use static const unsigned char character\narrays.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmilgeIACgkQity1WMTz\nPWWMIA//X9pZgAg4alEBORkFdlH7MzbY8tZYya1KjOpYMhl3reO3ZP6EN9a4koQQ\n+0/2HM+eW5ca0b1pZxu5Az1vvg3w2zILM4GcHPA10hE+t+5MAPBzzFVAjquoKhre\nIh+uZt9T6pSvLwVKhlnb83RYyqJ2Z+/r7Xc871iT6eQKPtRm9qkPG/foj2eqMZK+\nHnl8xw257xOc0+xaMBu4TLDWLwg5+QpfCYCQCudZzcin7vegnCHb85080rXuUx5U\nWPemayTDjzuSoKfK2JsOGHR/bCWa+t2kCfmc9v0DLl7h5alZEOl5E2pYlRwKfnws\nuinFXT6Z6fvehgNbP7/24liulOv3D68TaTbkKHuSG5CdxxLvm/FLJpSjL6ovzoFm\nQej1fQBSJL9U8hSMmUC6/4F7Vt3ZvZteju4MmQV2uO+ck2G/TjN+u2vDSMgwVCQ6\nYMYu+X0H6So6ZfaXgyokg0euJJFsMmXxsCHq+TOT2nycufvKLGyJq+I9u6lYt0E3\n91oC66lyhk6T+3fwmMQniIwg1QpbTSHTgRwjOehahw1YsQ/oS4uJbUBxXMG4k69D\ndw4UnR1Z5/MLHT30qqGwE1AaxsoiolDheasV6iIkx2OG+AsH5CezQTqcwurpHygB\n6bXPjuXiK6bJLNQCBOFVAdLhnXxpowzGf8jkWqi4jDopOv767Ik=\n=Vp7f\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/d599714147b20dda092ec4af44ef4174d584bb7d",
          "sha": "d599714147b20dda092ec4af44ef4174d584bb7d",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/d599714147b20dda092ec4af44ef4174d584bb7d"
        }
      ],
      "message": "tests: refactor musig module tagged hash tests\n\nMove the sha256_tag_test_internal function out of the musig module\ninto tests.c. This makes it available to other modules wishing to verify tagged\nhashes without needing to duplicate the function.\n\nChange the function signature to expect a const unsigned char and update\nthe musig tagged hash tests to use static const unsigned char character\narrays.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-08-20T08:03:59Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-08-15T08:37:29Z"
      },
      "sha": "5782d924c21fa8e05581cba6bd27479098293c9b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKGIyMGZlNjI1MjIwZjBjNTk4MTQ3NzczODE3NmNmZGNlNmMxYzYyMjQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/b20fe625220f0c5981477738176cfdce6c1c6224",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/b20fe625220f0c5981477738176cfdce6c1c6224",
      "tree": {
        "sha": "48002edcca0156d5e6cffb8ec58a1d8adffad38a",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/48002edcca0156d5e6cffb8ec58a1d8adffad38a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 48002edcca0156d5e6cffb8ec58a1d8adffad38a\nparent 5782d924c21fa8e05581cba6bd27479098293c9b\nauthor josibake <josibake@protonmail.com> 1755613706 +0100\ncommitter josibake <josibake@protonmail.com> 1755677238 +0100\n\ntests: refactor ellswift module tagged hash tests\n\nAdd a comment for each tag.\nUpdate tests to use the sha256_tag_test_internal helper function.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmilgkcACgkQity1WMTz\nPWXyRw//cEk8xGzFcHVxyLZ6TmyLwgh5P73iqTm9vTb74mhOJC95G7VHIEdzKRgn\nUL/OBwvlPzM9rXNwYMTdCBaeAuMBnc/DwhorcGbIUsXTkn+Yd6quFDaeOsSl/swh\n3cOCkWGxWPZLzgfKZFU7TX1bD/+E0rkYrylIaEaGfo2ZkqaOF5qmdusZTfe+wRha\nBb2PGerMFG3WgnGN90p/kOuL0CdQRWZcse0z+bzjOR0wvxXaxq0wWA1PBgo+Y9UI\nTz+NUuLVAbBYAYAU1n8SygFIwj6b7khtqItjcJmhAdHCgneLQOSGdTzPHmvJpkFo\nHv6gPh/GC3xxqiueUnQglGYKjWehZJE1yKYE83Tt4FU5MxtLgURA9nKLpI3xiVls\ntYxdpKy7bFNa0LFGju3lbpcDJEqLumX+QR57fjcivcLZGyaSQF1tldlx7akeN4NQ\nFDjnSZHaIPccSI5jHWtKtTrpIUPJbcpnWNBXWPdY0M2tD9mAHWi8dM4R5CNwg4yt\n1nx8Cb2zje65qrSISEAcyu274JqH9ALXutADeqATmY05MXu3g2LPJm/S5G8dllxy\n76aHgS39BS/gV69ZpDNYOunUor39S8ha/Sql262QD9nY1D7s2UAqYLxqCSHWWL9u\nzPLubdS91ACF5zCvIbnEkuUoT72tvctmOl1tqQ5Vb9H++o877ks=\n=lTsB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5782d924c21fa8e05581cba6bd27479098293c9b",
          "sha": "5782d924c21fa8e05581cba6bd27479098293c9b",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5782d924c21fa8e05581cba6bd27479098293c9b"
        }
      ],
      "message": "tests: refactor ellswift module tagged hash tests\n\nAdd a comment for each tag.\nUpdate tests to use the sha256_tag_test_internal helper function.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-08-20T08:07:18Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-08-19T14:28:26Z"
      },
      "sha": "b20fe625220f0c5981477738176cfdce6c1c6224"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAP4JqtoAKDE3YWYwOWRjZDQyYWNmZjZiODVlMzVmNmQzMzA3NjgxZTUwOGU2NjU",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/17af09dcd42acff6b85e35f6d3307681e508e665",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/17af09dcd42acff6b85e35f6d3307681e508e665",
      "tree": {
        "sha": "31aa208049f0e7a0004ee558a72fb445c282d780",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/31aa208049f0e7a0004ee558a72fb445c282d780"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 31aa208049f0e7a0004ee558a72fb445c282d780\nparent b20fe625220f0c5981477738176cfdce6c1c6224\nauthor josibake <josibake@protonmail.com> 1755676754 +0100\ncommitter josibake <josibake@protonmail.com> 1755677257 +0100\n\ntests: refactor schnorrsig module tagged hash tests\n\nAdd a comment for each tag.\nMake character arrays static const unsigned char.\nUpdate to use the sha256_tag_test_internal helper function.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmilgmIACgkQity1WMTz\nPWUgUg//WyYNLSYLe4Knxz5TUqClZEEbykyKz4EW9YvJOjG7RUGWFK/9g2qwq7mu\nA7X1mi549CH02kLdQ0RWKObwM0eX+HXj7Ze0yXLdtBLpXfi/NT4gwScnEof1yy0J\n1fuAB0mLn7unKeAyggROkugfItLSNIvpDH8NjXH+tUjlEwpRKq9KtbuHCCB7YVhl\ngQ8uTAbfJ2cYwS9WZcyCNh+6sJ/wJYzu7W8JaU4QFiWVxPN5MjxgPG1Fu8L6NzE/\nqVfhsLM7wbZWVH+srAf3myIlBhBw/BrIWPJXviVaT4UdWZSmT8uUnQjDdUVQ38+T\nzjvz3Llx1mdHmRH8R+j1C6u48nH9T6JqVohc7T4Ax9o2FOdcwVh/2Gs6rFZPgVJt\nlk3fEP5L25t0ouBiSt3wtVPM+d5BK3CrwJSlWKqUxDKtwtWaue1N+yBqgknMr9LC\nj5Jo5MoOpUvWVyHXr61WZZ1xHWBT58DhluEp8jWwhOL14oJIOVWj86RQIFtXppC0\nQII612wVJWdEipxD21HXDUlCUa7A5TI6rfoHDD8jY6KZLvs8ykcvq9CXCkr5djNV\nn5+/bp2USdpp2EuiwtV8YFbw5RkGMzrgyJx7Xxvuza6LHA3G+RUfBN5muXCFz8uT\nemZC18l0aieIq1c1FldD5d1cIDBBEN9nzrWjp7LMy1QRwkSMcNw=\n=zZdY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/b20fe625220f0c5981477738176cfdce6c1c6224",
          "sha": "b20fe625220f0c5981477738176cfdce6c1c6224",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/b20fe625220f0c5981477738176cfdce6c1c6224"
        }
      ],
      "message": "tests: refactor schnorrsig module tagged hash tests\n\nAdd a comment for each tag.\nMake character arrays static const unsigned char.\nUpdate to use the sha256_tag_test_internal helper function.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-08-20T08:07:37Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-08-20T07:59:14Z"
      },
      "sha": "17af09dcd42acff6b85e35f6d3307681e508e665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19240257417,
      "node_id": "HRFPE_lADOAP4Jqs7GLfq_zwAAAAR6zweJ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19240257417",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "commit_url": "https://api.github.com/repos/josibake/secp256k1/commits/17af09dcd42acff6b85e35f6d3307681e508e665",
      "created_at": "2025-08-20T08:15:58Z"
    },
    {
      "event": "commented",
      "id": 3204820853,
      "node_id": "IC_kwDOAP4Jqs6_Ba91",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3204820853",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-20T08:30:17Z",
      "updated_at": "2025-08-20T08:30:17Z",
      "author_association": "MEMBER",
      "body": "Thanks everyone for chiming in! I reworked this to update the musig tests to use `static const unsigned char` arrays and refactored the existing tests to use the `sha256_tag_test_internal` function. I think @real-or-random made some compelling arguments for this approach, namely:\r\n\r\n> {'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'} is immediately clear to a reviewer familiar with C. It's just a bit hard on the eyes, but there will be no need to look up macros or GNU extension attributes, etc.\r\n\r\nGiven that this library is written in C, it seems best to write code that is familiar to reviewers and is idiomatic C.\r\n\r\n> If I had to pick, I'd still pack the array initializer simply because the tag is conceptually an array.\r\n\r\nAgree. Though we can represent tags as strings, ultimately they are character arrays. Creating them as char arrays seems to have the least surprises, e.g., `sizeof` works as expected. I still think its nice to have a string representation of the tag in the code, so I added a comment above each char array. \r\n\r\nLastly, I decided against adding a blurb to `CONTRIBUTING.md`. I think \"New code should adhere to the style of existing, in particular surrounding, code..\" is sufficient, and I expect new tagged hashes to be infrequent. Happy to add a documentation commit, however, if others feel it warrants a blurb in `CONTRIBUTING.md`.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#issuecomment-3204820853",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1725"
    },
    {
      "event": "mentioned",
      "id": 19240511225,
      "node_id": "MEE_lADOAP4Jqs7GLfq_zwAAAAR60ub5",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19240511225",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-20T08:30:18Z"
    },
    {
      "event": "subscribed",
      "id": 19240511259,
      "node_id": "SE_lADOAP4Jqs7GLfq_zwAAAAR60ucb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19240511259",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-20T08:30:18Z"
    },
    {
      "event": "commented",
      "id": 3204868789,
      "node_id": "IC_kwDOAP4Jqs6_Bmq1",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3204868789",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-20T08:44:41Z",
      "updated_at": "2025-08-20T08:44:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Lastly, I decided against adding a blurb to `CONTRIBUTING.md`. I think \"New code should adhere to the style of existing, in particular surrounding, code..\" is sufficient, and I expect new tagged hashes to be infrequent. Happy to add a documentation commit, however, if others feel it warrants a blurb in `CONTRIBUTING.md`.\r\n\r\nAgreed, this is too much of a niche thing to bother with in this file. Of course, it won't hurt if it's documented there, but then we could  also document hundreds of other things in CONTRIBUTING.md. ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#issuecomment-3204868789",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1725"
    },
    {
      "event": "reviewed",
      "id": 3135472060,
      "node_id": "PRR_kwDOAP4Jqs6644G8",
      "url": null,
      "actor": null,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-20T08:52:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK mod nit, you could also squash these commits",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#pullrequestreview-3135472060",
      "submitted_at": "2025-08-20T08:52:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2279484546",
      "pull_request_review_id": 3124543037,
      "id": 2279484546,
      "node_id": "PRRC_kwDOAP4Jqs6H3iyC",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "8a17983bfbe8b62f3e6c8b081a54c419021bc4c7:\r\n\r\nfa67b6752d8ba3e4c41f6c36b1c6b94a21770419 can be relevant.",
      "created_at": "2025-08-15T16:53:10Z",
      "updated_at": "2025-08-15T16:53:10Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2279484546",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2279484546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2281848508",
      "pull_request_review_id": 3127580548,
      "id": 2281848508,
      "node_id": "PRRC_kwDOAP4Jqs6IAj68",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": 2279484546,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice find! The commit message states \"However, it requires exactly specifying the array size, which can be\r\ncumbersome,\" but I don't think this is true.\r\n\r\nUsing the test program:\r\n\r\n```c\r\n// repro.c\r\n#include <stdio.h>\r\n\r\nint main() {\r\n    char str[] = \"hello world\";  // This should trigger the warning\r\n    printf(\"%s\\n\", str);\r\n    return 0;\r\n}\r\n```\r\n\r\nI am able to compile with gcc14:\r\n\r\n```shell\r\nnix-shell --expr 'with import <nixpkgs> {}; mkShell.override { stdenv = overrideCC stdenv gcc14; }'\r\ngcc -v\r\ngcc -Wall -Wextra -Wpedantic -Werror repro.c -o out\r\n```\r\n\r\nand able to compile with gcc15:\r\n\r\n```shell\r\nnix-shell --expr 'with import <nixpkgs> {}; mkShell.override { stdenv = overrideCC stdenv gcc15; }'\r\ngcc -v\r\ngcc -Wall -Wextra -Wpedantic -Werror repro.c -o out\r\n```\r\n\r\nHowever, if I specify the array size, I can reproduce the error:\r\n\r\n```c\r\n// repro.c\r\n#include <stdio.h>\r\n\r\nint main() {\r\n    char str[11] = \"hello world\";  // This should trigger the warning\r\n    printf(\"%s\\n\", str);\r\n    return 0;\r\n}\r\n```\r\n\r\nNo error with:\r\n\r\n```shell\r\nnix-shell --expr 'with import <nixpkgs> {}; mkShell.override { stdenv = overrideCC stdenv gcc14; }'\r\ngcc -Wall -Wextra -Wpedantic -Werror repro.c -o out\r\n```\r\n\r\nAnd an error with:\r\n\r\n```shell\r\nnix-shell --expr 'with import <nixpkgs> {}; mkShell.override { stdenv = overrideCC stdenv gcc15; }'\r\ngcc -Wall -Wextra -Wpedantic -Werror repro.c -o out\r\n\r\nrepro.c: In function ‘main’:\r\nrepro.c:4:20: error: initializer-string for array of ‘char’ truncates NUL terminator but destination lacks ‘nonstring’ attribute (12 chars into 11 available) [-Werror=unterminated-string-initialization]\r\n    4 |     char str[11] = \"hello world\";  // This should trigger the warning\r\n      |                    ^~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n```\r\n\r\n---\r\n\r\nBased on the above, I'd recommend we prefer the approach in this PR of not specifying the array size and perhaps document it as the preferred convention going forward? I find being able to specify the tag as a string to be much more reviewable than specifying the tag as an array of characters.\r\n\r\nThat being said, also happy to go the other way and update the musig tests to match the other modules if thats the preferred convention, as I think the main benefit is to have all of the modules follow the same convention.\r\n\r\n",
      "created_at": "2025-08-18T09:32:45Z",
      "updated_at": "2025-08-18T09:32:46Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2281848508",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2281848508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2281907097",
      "pull_request_review_id": 3127669951,
      "id": 2281907097,
      "node_id": "PRRC_kwDOAP4Jqs6IAyOZ",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": 2279484546,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "To convince myself, I also verified with a few versions of clang, e.g.,:\r\n\r\n```shell\r\nnix-shell --expr 'with import <nixpkgs> {}; mkShell.override { stdenv = llvmPackages_16.stdenv; }'\r\nclang -Wall -Wextra -Wpedantic -Werror -Wmost repro.c\r\n```\r\n",
      "created_at": "2025-08-18T09:55:02Z",
      "updated_at": "2025-08-18T09:55:02Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2281907097",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2281907097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282016863",
      "pull_request_review_id": 3127827044,
      "id": 2282016863,
      "node_id": "PRRC_kwDOAP4Jqs6IBNBf",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": 2279484546,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@josibake The NUL byte resulting from `char str[] = \"hello world\"` does not hurt per se, but there are two minor issues with this: First, it's conceptually the wrong thing: If we want a char array, the simplest thing to do is to define a char array instead of a NUL-terminated string. Second and probably more relevant, it changes `sizeof(str)` to be 12 instead of 11. (See https://godbolt.org/z/da6PExKTh for demonstration. godbolt.org is the easiest way to test toy examples on many compilers.) We could, of course, accept this and always use `sizeof(str) - 1`, but it's easy to miss this. \r\n\r\nedit: Sorry, I now saw that you're aware of the `- 1` thing. And I agree, the ability to grep for the string is a good argument for the NUL-terminated string. If you ask me, I prefer to forego the grepability and define the right kind of object and have `sizeof` correct. But there's no definitive answer in the end. ",
      "created_at": "2025-08-18T10:38:19Z",
      "updated_at": "2025-08-18T10:43:21Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2282016863",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282016863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282068816",
      "pull_request_review_id": 3127902133,
      "id": 2282068816,
      "node_id": "PRRC_kwDOAP4Jqs6IBZtQ",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": 2279484546,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@real-or-random thanks for the context! That explains the `sizeof(str) - 1` for the musig examples. So it seems the choices are:\r\n\r\n1. Do something conceptually wrong for something that is slightly easier to review\r\n2. Do the conceptually correct thing for something that is slightly harder to review\r\n\r\n\"Slightly harder/easier\" is a bit hand-wavy, but the fact that we used to specify the tags as strings (and the recently added musig also adopted this convention vs staying consistent with the existing modules) indicates option 1 is the more natural option. However, it likely needs an explainer, especially for why we are using `sizeof(tag) - 1`. On the flipside, I'm guessing option 2 feels more natural for reviewers who review/write a majority of the time in C?\r\n\r\nRegardless of which convention is chosen, I do think its worth documenting in `CONTRIBUTING.md`. I'll add a commit for that once reviewers have weighed in on which convention they prefer.",
      "created_at": "2025-08-18T10:59:25Z",
      "updated_at": "2025-08-18T10:59:25Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2282068816",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282068816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282280955",
      "pull_request_review_id": 3128207553,
      "id": 2282280955,
      "node_id": "PRRC_kwDOAP4Jqs6ICNf7",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": 2279484546,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe https://godbolt.org/z/eKbT6sha4?",
      "created_at": "2025-08-18T12:38:18Z",
      "updated_at": "2025-08-18T12:38:19Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2282280955",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282280955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282304887",
      "pull_request_review_id": 3128240679,
      "id": 2282304887,
      "node_id": "PRRC_kwDOAP4Jqs6ICTV3",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": 2279484546,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Maybe [godbolt.org/z/eKbT6sha4](https://godbolt.org/z/eKbT6sha4)?\r\n\r\nThat still generates a warning if I add `-Wextra`.",
      "created_at": "2025-08-18T12:49:03Z",
      "updated_at": "2025-08-18T12:49:03Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2282304887",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282304887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282355084",
      "pull_request_review_id": 3128312319,
      "id": 2282355084,
      "node_id": "PRRC_kwDOAP4Jqs6ICfmM",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": 2279484546,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > Maybe [godbolt.org/z/eKbT6sha4](https://godbolt.org/z/eKbT6sha4)?\r\n> \r\n> That still generates a warning if I add `-Wextra`.\r\n\r\nRight.\r\n\r\nhttps://godbolt.org/z/n5rf5Y7cP",
      "created_at": "2025-08-18T13:10:54Z",
      "updated_at": "2025-08-18T13:10:54Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2282355084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282355084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282391484",
      "pull_request_review_id": 3128363760,
      "id": 2282391484,
      "node_id": "PRRC_kwDOAP4Jqs6ICoe8",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": 2279484546,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh, interesting, I wasn't aware of `nonstring`. That's another neat way.\r\n\r\nThough when I think about it, I still prefer `{'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'}`. Code is read much more often than it's written, so it makes sense to optimize reader (or reviewer) burden, and `{'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'}` is immediately clear to a reviewer familiar with C. It's just a bit hard on the eyes, but there will be no need to look up macros or GNU extension attributes, etc. ",
      "created_at": "2025-08-18T13:25:51Z",
      "updated_at": "2025-08-18T13:25:51Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2282391484",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282391484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282686872",
      "pull_request_review_id": 3128782341,
      "id": 2282686872,
      "node_id": "PRRC_kwDOAP4Jqs6IDwmY",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": 2279484546,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Though when I think about it, I still prefer `{'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'}`. Code is read much more often than it's written, so it makes sense to optimize reader (or reviewer) burden, and `{'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'}` is immediately clear to a reviewer familiar with C. It's just a bit hard on the eyes, but there will be no need to look up macros or GNU extension attributes, etc.\r\n\r\nAgreed. That's why I [raised](https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2279484546) this point in the first place.",
      "created_at": "2025-08-18T15:07:37Z",
      "updated_at": "2025-08-18T15:07:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2282686872",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282686872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282941555",
      "pull_request_review_id": 3129166109,
      "id": 2282941555,
      "node_id": "PRRC_kwDOAP4Jqs6IEuxz",
      "diff_hunk": "@@ -405,31 +405,22 @@ void run_ellswift_tests(void) {\n \n     /* Test hash initializers. */\n     {\n-        secp256k1_sha256 sha, sha_optimized;\n-        static const unsigned char encode_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'e', 'n', 'c', 'o', 'd', 'e'};\n-        static const unsigned char create_tag[] = {'s', 'e', 'c', 'p', '2', '5', '6', 'k', '1', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'c', 'r', 'e', 'a', 't', 'e'};\n-        static const unsigned char bip324_tag[] = {'b', 'i', 'p', '3', '2', '4', '_', 'e', 'l', 'l', 's', 'w', 'i', 'f', 't', '_', 'x', 'o', 'n', 'l', 'y', '_', 'e', 'c', 'd', 'h'};\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_encode has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, encode_tag, sizeof(encode_tag));\n-        secp256k1_ellswift_sha256_init_encode(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_create has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, create_tag, sizeof(create_tag));\n-        secp256k1_ellswift_sha256_init_create(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n-\n-        /* Check that hash initialized by\n-         * secp256k1_ellswift_sha256_init_bip324 has the expected\n-         * state. */\n-        secp256k1_sha256_initialize_tagged(&sha, bip324_tag, sizeof(bip324_tag));\n-        secp256k1_ellswift_sha256_init_bip324(&sha_optimized);\n-        test_sha256_eq(&sha, &sha_optimized);\n+        secp256k1_sha256 sha_optimized;\n+        {\n+            unsigned char tag[] = \"secp256k1_ellswift_encode\";",
      "path": "src/modules/ellswift/tests_impl.h",
      "position": null,
      "original_position": 31,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "6424805039c647c548c609d1c666a3173bddfcaa",
      "in_reply_to_id": 2279484546,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sounds like 2 votes for keeping it as is, vs one vote to change it 😅 I'll update this PR tomorrow to instead convert the musig module to the existing convention, and add a note documenting the convention. ",
      "created_at": "2025-08-18T16:51:30Z",
      "updated_at": "2025-08-18T16:51:30Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2282941555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2282941555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2287461999",
      "pull_request_review_id": 3135472060,
      "id": 2287461999,
      "node_id": "PRRC_kwDOAP4Jqs6IV-Zv",
      "diff_hunk": "@@ -609,6 +609,13 @@ static void test_sha256_eq(const secp256k1_sha256 *sha1, const secp256k1_sha256\n     CHECK(sha1->bytes == sha2->bytes);\n     CHECK(secp256k1_memcmp_var(sha1->s, sha2->s, sizeof(sha1->s)) == 0);\n }\n+/* Convenience function for using test_sha256_eq to verify the correctness of a\n+ * tagged hash midstate. This function is used by some module tests. */\n+static void sha256_tag_test_internal(secp256k1_sha256 *sha_tagged, const unsigned char *tag, size_t taglen) {\n+    secp256k1_sha256 sha;\n+    secp256k1_sha256_initialize_tagged(&sha, tag, taglen);\n+    test_sha256_eq(&sha, sha_tagged);\n+}",
      "path": "src/tests.c",
      "position": 10,
      "original_position": 10,
      "commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "original_commit_id": "17af09dcd42acff6b85e35f6d3307681e508e665",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The only comment I have is that this could get a better name, e.g., `test_sha256_tag_midstate`, to make it more descriptive and consistent with the rest. Not sure what the point of \"internal\" was, but now the function is not internal to the module anymore.",
      "created_at": "2025-08-20T08:52:17Z",
      "updated_at": "2025-08-20T08:52:55Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1725#discussion_r2287461999",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/2287461999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1725"
        }
      },
      "start_line": 612,
      "original_start_line": 612,
      "start_side": "RIGHT",
      "line": 618,
      "original_line": 618,
      "side": "RIGHT"
    }
  ]
}