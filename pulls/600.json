{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600",
    "id": 260959460,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjYwOTU5NDYw",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/600.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/600.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/98836b11f02d9cf003ccc122f15e37113fc66489",
    "number": 600,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "scratch space: use single allocation",
    "user": {
      "login": "apoelstra",
      "id": 1351933,
      "node_id": "MDQ6VXNlcjEzNTE5MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apoelstra",
      "html_url": "https://github.com/apoelstra",
      "followers_url": "https://api.github.com/users/apoelstra/followers",
      "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
      "organizations_url": "https://api.github.com/users/apoelstra/orgs",
      "repos_url": "https://api.github.com/users/apoelstra/repos",
      "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/apoelstra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "",
    "labels": [],
    "created_at": "2019-03-13T22:20:09Z",
    "updated_at": "2019-05-26T10:10:09Z",
    "closed_at": "2019-05-26T10:10:09Z",
    "mergeable_state": "unknown",
    "merged_at": "2019-05-26T10:10:09Z",
    "merge_commit_sha": "98836b11f02d9cf003ccc122f15e37113fc66489",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "apoelstra:2019-03-slab-single-alloc",
      "ref": "2019-03-slab-single-alloc",
      "sha": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 33787691,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMzc4NzY5MQ==",
        "name": "secp256k1",
        "full_name": "apoelstra/secp256k1",
        "owner": {
          "login": "apoelstra",
          "id": 1351933,
          "node_id": "MDQ6VXNlcjEzNTE5MzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/apoelstra",
          "html_url": "https://github.com/apoelstra",
          "followers_url": "https://api.github.com/users/apoelstra/followers",
          "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
          "organizations_url": "https://api.github.com/users/apoelstra/orgs",
          "repos_url": "https://api.github.com/users/apoelstra/repos",
          "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/apoelstra/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/apoelstra/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/apoelstra/secp256k1",
        "archive_url": "https://api.github.com/repos/apoelstra/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/apoelstra/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/apoelstra/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/apoelstra/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/apoelstra/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/apoelstra/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/apoelstra/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/apoelstra/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/apoelstra/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/apoelstra/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/apoelstra/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/apoelstra/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/apoelstra/secp256k1/events",
        "forks_url": "https://api.github.com/repos/apoelstra/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/apoelstra/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/apoelstra/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/apoelstra/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/apoelstra/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/apoelstra/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/apoelstra/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/apoelstra/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/apoelstra/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/apoelstra/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/apoelstra/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/apoelstra/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/apoelstra/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/apoelstra/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/apoelstra/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/apoelstra/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:apoelstra/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/apoelstra/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/apoelstra/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/apoelstra/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/apoelstra/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/apoelstra/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/apoelstra/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/apoelstra/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/apoelstra/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/apoelstra/secp256k1/hooks",
        "svn_url": "https://github.com/apoelstra/secp256k1",
        "language": "C",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 2888,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2021-05-06T18:52:16Z",
        "created_at": "2015-04-11T18:42:06Z",
        "updated_at": "2020-04-18T08:27:37Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "40839e21b9dd092d64dcb6a56813a1614e390568",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 962,
        "stargazers_count": 1802,
        "watchers_count": 1802,
        "size": 10374,
        "default_branch": "master",
        "open_issues_count": 145,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T01:00:35Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-08-01T08:52:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 220,
    "deletions": 153,
    "changed_files": 9,
    "commits": 7,
    "review_comments": 34,
    "comments": 14
  },
  "events": [
    {
      "event": "reviewed",
      "id": 214429219,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE0NDI5MjE5",
      "url": null,
      "actor": null,
      "commit_id": "d5df0210bf9c9f579e469000e0bef96c9138e8cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#pullrequestreview-214429219",
      "submitted_at": "2019-03-14T10:57:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
    },
    {
      "event": "reviewed",
      "id": 214497282,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE0NDk3Mjgy",
      "url": null,
      "actor": null,
      "commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Wouldn't all of that be easier if we just checked the canary only at top-level, i.e., in exposed API functions (like we use ARG_CHECK only in exposed functions?)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#pullrequestreview-214497282",
      "submitted_at": "2019-03-14T13:36:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
    },
    {
      "event": "reviewed",
      "id": 214519378,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE0NTE5Mzc4",
      "url": null,
      "actor": null,
      "commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#pullrequestreview-214519378",
      "submitted_at": "2019-03-14T13:50:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
    },
    {
      "event": "commented",
      "id": 472887215,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mjg4NzIxNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/472887215",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-14T14:33:00Z",
      "updated_at": "2019-03-14T14:33:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "Addressed jonas' nits.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-472887215",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "commented",
      "id": 472894151,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mjg5NDE1MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/472894151",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-14T14:43:07Z",
      "updated_at": "2019-03-14T14:43:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "Addressed Tim's nits",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-472894151",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "commented",
      "id": 473048502,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzA0ODUwMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/473048502",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-14T20:29:33Z",
      "updated_at": "2019-03-14T20:29:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Tim, regarding doing these checks only at the endpoints, the problem is that the user-level \"endpoints\" are everything that might use a scratch space, including everything that might use ecmult_multi.  So this set is unbounded and it's something we'd have to maintain going forward.\r\n\r\nThis isn't a big deal; we already have this situation for e.g. context objects where every new function needs to ARG_CHECK that the appropriate precomp tables are initialized. But it's annoying and I think this situation is simpler/more maintainable.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-473048502",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "commented",
      "id": 473057505,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzA1NzUwNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/473057505",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-14T20:52:59Z",
      "updated_at": "2019-03-14T20:52:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Uh, I haven't looked at it from that point of view. Agreed, checking it deep in the call tree needs less duplicated code. It's is less consistent with what we do now for ARG_CHECKs though. But as you say, that's maybe because it was not the best design choice.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-473057505",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "commented",
      "id": 473058469,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzA1ODQ2OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/473058469",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-14T20:55:38Z",
      "updated_at": "2019-03-14T20:55:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "My view is that for the context stuff it's necessary to have so much duplication because different functions have different precomp requirements. In this case this is sanity checking that really shouldn't concern any code outside of the scratch space module.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-473058469",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "commented",
      "id": 473113471,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzExMzQ3MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/473113471",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-15T00:19:01Z",
      "updated_at": "2019-03-15T00:19:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "It should be noted that this PR fixes the following bug (for which I had the description text in some open editor windows already but Andrew fixed it faster than I managed to report it. :+1:  )\r\n\r\n1. Create context `ctx` with `default_error_callback`\r\n2. Create scratch space `s` with `ctx`.\r\n3. Change error_callback of `ctx` to `cb`\r\n4. Trigger a call to `secp256k1_ecmult_multi_var(ctx,...`, which will call `scratch_space_allocate_frame`. Assume `checked_malloc` fails.\r\n\r\nExpected:\r\n`cb` is called as error callback\r\n\r\nActual:\r\n`default_error_callback` is called as error callback\r\n\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-473113471",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "mentioned",
      "id": 2210498942,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjIxMDQ5ODk0Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2210498942",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-18T14:10:44Z"
    },
    {
      "event": "subscribed",
      "id": 2210498944,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIyMTA0OTg5NDQ=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2210498944",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-18T14:10:44Z"
    },
    {
      "event": "commented",
      "id": 473929444,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzkyOTQ0NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/473929444",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-18T14:20:35Z",
      "updated_at": "2019-03-18T14:20:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "I discussed this with @jonasnick: We're not sure what the point of the frames still is when there is only a single malloc now. Maybe there is one but it seems that everything that can be done with frames  can be done with similar programming ergonomics without frames.\r\n\r\nIf we keep frames, then I think the internal API should be documented a little more because it's not immediately clear how to use it. In particular the wording is somewhat confusing: we \"allocate\" frames and \"alloc(cate)\" objects but then e.g., what does the \"allocation\" in \"max_allocation\" then give you? All of this is well-defined in the end but one needs to read the code to figure it out. ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-473929444",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "mentioned",
      "id": 2210532436,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjIxMDUzMjQzNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2210532436",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-18T14:20:35Z"
    },
    {
      "event": "subscribed",
      "id": 2210532437,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIyMTA1MzI0Mzc=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2210532437",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-18T14:20:35Z"
    },
    {
      "event": "reviewed",
      "id": 215630797,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE1NjMwNzk3",
      "url": null,
      "actor": null,
      "commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#pullrequestreview-215630797",
      "submitted_at": "2019-03-18T14:39:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
    },
    {
      "event": "reviewed",
      "id": 215618589,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE1NjE4NTg5",
      "url": null,
      "actor": null,
      "commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#pullrequestreview-215618589",
      "submitted_at": "2019-03-18T14:53:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
    },
    {
      "event": "commented",
      "id": 478609718,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODYwOTcxOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/478609718",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-01T14:46:30Z",
      "updated_at": "2019-04-01T14:46:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Needs rebase",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-478609718",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2258056934,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjI1ODA1NjkzNA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2258056934",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-07T17:12:32Z"
    },
    {
      "event": "commented",
      "id": 480611125,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDYxMTEyNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/480611125",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-07T17:12:40Z",
      "updated_at": "2019-04-07T17:12:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased; squashed fixups",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-480611125",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "commented",
      "id": 480611233,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDYxMTIzMw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/480611233",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-07T17:13:43Z",
      "updated_at": "2019-04-07T17:13:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Will revisit to remove the idea of \"frames\" entirely.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-480611233",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "commented",
      "id": 483376740,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzM3Njc0MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/483376740",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-15T19:01:39Z",
      "updated_at": "2019-04-15T19:01:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "> it seems that everything that can be done with frames can be done with similar programming ergonomics without frames.\r\n\r\nIt has the small advantage that you can deallocate the whole frame and not have to deallocate all objects one by one. However, that could be done without the api requiring to give the frame size in advance when allocating it. This seems to be unnecessary right now. But I don't recall the reason for \"frames\" either.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-483376740",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-10T01:03:19Z",
      "updated_at": "2019-05-10T01:03:19Z",
      "source": {
        "issue": {
          "id": 442494446,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc3NTk4MTg5",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/614",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/614/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/614/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/614/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/614",
          "number": 614,
          "state": "closed",
          "state_reason": null,
          "title": "Use a static constant table for small ecmult WINDOW_G sizes.",
          "body": "For discussion for now: this need to be reworked some to play nicely with #600.\r\n\r\nWhen WINDOW_G is small there is no reason to not pre-compute it: on almost all embedded devices flash is much 'cheaper' than ram, pre-computation can be burdensomely slow, and the code to do the precomputation might actually be larger than the table (I haven't checked).  We wouldn't want to put a 1.3 MB table in the source/library but a 1024 byte one hardly seems like a concern.\r\n\r\nThis is relevant to #603 @laanwj \r\n",
          "user": {
            "login": "gmaxwell",
            "id": 858454,
            "node_id": "MDQ6VXNlcjg1ODQ1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmaxwell",
            "html_url": "https://github.com/gmaxwell",
            "followers_url": "https://api.github.com/users/gmaxwell/followers",
            "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
            "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
            "repos_url": "https://api.github.com/users/gmaxwell/repos",
            "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/614",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/614",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/614.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/614.patch"
          },
          "closed_at": "2019-06-11T00:11:52Z",
          "created_at": "2019-05-10T01:03:19Z",
          "updated_at": "2019-06-11T00:11:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2367361139,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM2NzM2MTEzOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2367361139",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-25T14:16:05Z"
    },
    {
      "event": "commented",
      "id": 495921765,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTkyMTc2NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/495921765",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-25T14:17:14Z",
      "updated_at": "2019-05-25T14:17:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and replaced frames with \"checkpoints\" which don't require pre-registering an allocation size and don't have a limit to how many are usable.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-495921765",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2367362553,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM2NzM2MjU1Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2367362553",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-25T14:20:10Z"
    },
    {
      "event": "reviewed",
      "id": 242006976,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQyMDA2OTc2",
      "url": null,
      "actor": null,
      "commit_id": "71d5816c9149531956af52ab3f089d4d9c16639b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "LGTM",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#pullrequestreview-242006976",
      "submitted_at": "2019-05-25T15:58:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6OTJhNDhhNzY0ZDljMWI3NWIxNDkzYTdiZGUwYWJhNmUxMDgwMDc4YQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/92a48a764d9c1b75b1493a7bde0aba6e1080078a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/92a48a764d9c1b75b1493a7bde0aba6e1080078a",
      "tree": {
        "sha": "ee03fab3567439201949cc2ed5695c688eede70d",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/ee03fab3567439201949cc2ed5695c688eede70d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/40839e21b9dd092d64dcb6a56813a1614e390568",
          "sha": "40839e21b9dd092d64dcb6a56813a1614e390568",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/40839e21b9dd092d64dcb6a56813a1614e390568"
        }
      ],
      "message": "scratch space: use single allocation",
      "committer": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-05-25T22:53:50Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-03-13T22:19:41Z"
      },
      "sha": "92a48a764d9c1b75b1493a7bde0aba6e1080078a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6MGJlMWE0YWU2MjBmMzA5MjlhMDM3NjQxYTIxMTU3YzY2NTFkODgyMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/0be1a4ae620f30929a037641a21157c6651d8822",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/0be1a4ae620f30929a037641a21157c6651d8822",
      "tree": {
        "sha": "845a5b3f127a0030360827dcac4a66e38f24a865",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/845a5b3f127a0030360827dcac4a66e38f24a865"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/92a48a764d9c1b75b1493a7bde0aba6e1080078a",
          "sha": "92a48a764d9c1b75b1493a7bde0aba6e1080078a",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/92a48a764d9c1b75b1493a7bde0aba6e1080078a"
        }
      ],
      "message": "scratch: add magic bytes to beginning of structure",
      "committer": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-05-25T22:55:39Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-03-13T22:35:08Z"
      },
      "sha": "0be1a4ae620f30929a037641a21157c6651d8822"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6YzJiMDI4YTI4MTJjYjJkYjJhMzQzNTM1ZDU5ZTRlMGRlN2U2ZGI2Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/c2b028a2812cb2db2a343535d59e4e0de7e6db66",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/c2b028a2812cb2db2a343535d59e4e0de7e6db66",
      "tree": {
        "sha": "48731b4d32023a420eb1c756bd727b63964f5761",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/48731b4d32023a420eb1c756bd727b63964f5761"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/0be1a4ae620f30929a037641a21157c6651d8822",
          "sha": "0be1a4ae620f30929a037641a21157c6651d8822",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/0be1a4ae620f30929a037641a21157c6651d8822"
        }
      ],
      "message": "scratch space: thread `error_callback` into all scratch space functions\n\nUse it when checking magic bytes",
      "committer": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-05-25T22:59:50Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-03-13T23:30:51Z"
      },
      "sha": "c2b028a2812cb2db2a343535d59e4e0de7e6db66"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6NWE0YmMwYmI5NWQ4YmU0Nzc0ODczNjU1ZjU1NmU1N2ZhZGU1MDNlZA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5a4bc0bb95d8be4774873655f556e57fade503ed",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5a4bc0bb95d8be4774873655f556e57fade503ed",
      "tree": {
        "sha": "0787eeace111b3f23bcc805e0d0f8ff0655ce85a",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/0787eeace111b3f23bcc805e0d0f8ff0655ce85a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/c2b028a2812cb2db2a343535d59e4e0de7e6db66",
          "sha": "c2b028a2812cb2db2a343535d59e4e0de7e6db66",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/c2b028a2812cb2db2a343535d59e4e0de7e6db66"
        }
      ],
      "message": "scratch: unify allocations",
      "committer": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-05-25T22:59:51Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-03-14T14:37:53Z"
      },
      "sha": "5a4bc0bb95d8be4774873655f556e57fade503ed"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6YTdhMTY0ZjJjNjA0ODgzZGVhODk2OGJkNGM3MWI5ODgwY2MzNDU1Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/a7a164f2c604883dea8968bd4c71b9880cc34552",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/a7a164f2c604883dea8968bd4c71b9880cc34552",
      "tree": {
        "sha": "d94635577703f27ee22a2151dbf7c40ba331c9bd",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/d94635577703f27ee22a2151dbf7c40ba331c9bd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/5a4bc0bb95d8be4774873655f556e57fade503ed",
          "sha": "5a4bc0bb95d8be4774873655f556e57fade503ed",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/5a4bc0bb95d8be4774873655f556e57fade503ed"
        }
      ],
      "message": "scratch: rename `max_size` to `size`, document that extra will actually be allocated",
      "committer": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-05-25T23:01:07Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-03-14T14:41:03Z"
      },
      "sha": "a7a164f2c604883dea8968bd4c71b9880cc34552"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6NzYyM2NmMmI5N2FiMjc2YzUyNTBmNjQxYjM3MTU4ZTAyMjgwMTM3ZA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/7623cf2b97ab276c5250f641b37158e02280137d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/7623cf2b97ab276c5250f641b37158e02280137d",
      "tree": {
        "sha": "8f61bc99301414982b74fb1817e2b8293149f9b3",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/8f61bc99301414982b74fb1817e2b8293149f9b3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/a7a164f2c604883dea8968bd4c71b9880cc34552",
          "sha": "a7a164f2c604883dea8968bd4c71b9880cc34552",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/a7a164f2c604883dea8968bd4c71b9880cc34552"
        }
      ],
      "message": "scratch: save a couple bytes of unnecessarily-allocated memory",
      "committer": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-05-25T23:01:08Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-03-15T15:41:09Z"
      },
      "sha": "7623cf2b97ab276c5250f641b37158e02280137d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2367552086,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM2NzU1MjA4Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2367552086",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-25T23:04:16Z"
    },
    {
      "event": "commented",
      "id": 495954843,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTk1NDg0Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/495954843",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-25T23:05:50Z",
      "updated_at": "2019-05-25T23:05:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased, fixed date/data typo, used `ROUND_TO_ALIGN` in place of manual alignment calculations.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-495954843",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6OTg4MzZiMTFmMDJkOWNmMDAzY2NjMTIyZjE1ZTM3MTEzZmM2NjQ4OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/98836b11f02d9cf003ccc122f15e37113fc66489",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/98836b11f02d9cf003ccc122f15e37113fc66489",
      "tree": {
        "sha": "3c4ae0c4cc6116456bdf24f1e5e09656bb993056",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/3c4ae0c4cc6116456bdf24f1e5e09656bb993056"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/7623cf2b97ab276c5250f641b37158e02280137d",
          "sha": "7623cf2b97ab276c5250f641b37158e02280137d",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/7623cf2b97ab276c5250f641b37158e02280137d"
        }
      ],
      "message": "scratch: replace frames with \"checkpoint\" system",
      "committer": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-05-26T01:05:09Z"
      },
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2019-05-25T14:15:38Z"
      },
      "sha": "98836b11f02d9cf003ccc122f15e37113fc66489"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2367580264,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM2NzU4MDI2NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2367580264",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-26T01:05:22Z"
    },
    {
      "event": "commented",
      "id": 495985989,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTk4NTk4OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/495985989",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-26T10:09:24Z",
      "updated_at": "2019-05-26T10:09:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#issuecomment-495985989",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/600"
    },
    {
      "event": "merged",
      "id": 2367735263,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjM2NzczNTI2Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2367735263",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/98836b11f02d9cf003ccc122f15e37113fc66489",
      "created_at": "2019-05-26T10:10:09Z"
    },
    {
      "event": "closed",
      "id": 2367735264,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjM2NzczNTI2NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2367735264",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-05-26T10:10:09Z"
    },
    {
      "event": "referenced",
      "id": 2367735273,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIzNjc3MzUyNzM=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2367735273",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6c36de7a33b845c0251e006fd7f859e7d3e6228d",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/6c36de7a33b845c0251e006fd7f859e7d3e6228d",
      "created_at": "2019-05-26T10:10:10Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-09T20:50:37Z",
      "updated_at": "2020-06-09T20:50:37Z",
      "source": {
        "issue": {
          "id": 635749474,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDMyMDU4MTAy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19228",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19228/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19228/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19228/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19228",
          "number": 19228,
          "state": "closed",
          "state_reason": null,
          "title": "Update libsecp256k1 subtree",
          "body": "It's been abound a year since the subtree was updated.\r\n\r\nHere is a list of the included PRs:\r\n\r\n* bitcoin-core/secp256k1#755: Recovery signing: add to constant time test, and eliminate non ct operators\r\n* bitcoin-core/secp256k1#754: Fix uninit values passed into cmov\r\n* bitcoin-core/secp256k1#752: autoconf: Use \":\" instead of \"dnl\" as a noop\r\n* bitcoin-core/secp256k1#750: Add macOS to the CI\r\n* bitcoin-core/secp256k1#701: Make ec_ arithmetic more consistent and add documentation\r\n* bitcoin-core/secp256k1#732: Retry if r is zero during signing\r\n* bitcoin-core/secp256k1#742: Fix typo in ecmult_const_impl.h\r\n* bitcoin-core/secp256k1#740: Make recovery/main_impl.h non-executable\r\n* bitcoin-core/secp256k1#735: build: fix OpenSSL EC detection on macOS\r\n* bitcoin-core/secp256k1#728: Suppress a harmless variable-time optimization by clang in memczero\r\n* bitcoin-core/secp256k1#722: Context isn't freed in the ECDH benchmark\r\n* bitcoin-core/secp256k1#700: Allow overriding default flags\r\n* bitcoin-core/secp256k1#708: Constant-time behaviour test using valgrind memtest.\r\n* bitcoin-core/secp256k1#710: Eliminate harmless non-constant time operations on secret data.\r\n* bitcoin-core/secp256k1#718: Clarify that a secp256k1_ecdh_hash_function must return 0 or 1\r\n* bitcoin-core/secp256k1#714: doc: document the length requirements of output parameter.\r\n* bitcoin-core/secp256k1#682: Remove Java Native Interface\r\n* bitcoin-core/secp256k1#713: Docstrings\r\n* bitcoin-core/secp256k1#704: README: add a section for test coverage\r\n* bitcoin-core/secp256k1#709: Remove secret-dependant non-constant time operation in ecmult_const.\r\n* bitcoin-core/secp256k1#703: Overhaul README.md\r\n* bitcoin-core/secp256k1#689: Remove \"except in benchmarks\" exception for fp math\r\n* bitcoin-core/secp256k1#679: Add SECURITY.md\r\n* bitcoin-core/secp256k1#685: Fix issue where travis does not show the ./tests seed…\r\n* bitcoin-core/secp256k1#690: Add valgrind check to travis\r\n* bitcoin-core/secp256k1#678: Preventing compiler optimizations in benchmarks without a memory fence\r\n* bitcoin-core/secp256k1#688: Fix ASM setting in travis\r\n* bitcoin-core/secp256k1#684: Make no-float policy explicit\r\n* bitcoin-core/secp256k1#677: Remove note about heap allocation in secp256k1_ecmult_odd_multiples_table_storage_var\r\n* bitcoin-core/secp256k1#647: Increase robustness against UB in secp256k1_scalar_cadd_bit\r\n* bitcoin-core/secp256k1#664: Remove mention of ec_privkey_export because it doesn't exist\r\n* bitcoin-core/secp256k1#337: variable sized precomputed table for signing\r\n* bitcoin-core/secp256k1#661: Make ./configure string consistent\r\n* bitcoin-core/secp256k1#657: Fix a nit in the recovery tests\r\n* bitcoin-core/secp256k1#650: secp256k1/src/tests.c:  Properly handle sscanf return value\r\n* bitcoin-core/secp256k1#654: Fix typo (∞)\r\n* bitcoin-core/secp256k1#583: JNI: fix use sig array\r\n* bitcoin-core/secp256k1#644: Avoid optimizing out a verify_check\r\n* bitcoin-core/secp256k1#652: README.md: update instruction to run tests\r\n* bitcoin-core/secp256k1#651: Fix typo in secp256k1_preallocated.h\r\n* bitcoin-core/secp256k1#640: scalar_impl.h: fix includes\r\n* bitcoin-core/secp256k1#655: jni: Use only Guava for hex encoding and decoding\r\n* bitcoin-core/secp256k1#634: Add a descriptive comment for secp256k1_ecmult_const.\r\n* bitcoin-core/secp256k1#631: typo in comment for secp256k1_ec_pubkey_tweak_mul ()\r\n* bitcoin-core/secp256k1#629: Avoid calling _is_zero when _set_b32 fails.\r\n* bitcoin-core/secp256k1#630: Note intention of timing sidechannel freeness.\r\n* bitcoin-core/secp256k1#628: Fix ability to compile tests without -DVERIFY.\r\n* bitcoin-core/secp256k1#627: Guard memcmp in tests against mixed size inputs.\r\n* bitcoin-core/secp256k1#578: Avoid implementation-defined and undefined behavior when dealing with sizes\r\n* bitcoin-core/secp256k1#595: Allow to use external default callbacks\r\n* bitcoin-core/secp256k1#600: scratch space: use single allocation\r\n* bitcoin-core/secp256k1#592: Use trivial algorithm in ecmult_multi if scratch space is small\r\n* bitcoin-core/secp256k1#566: Enable context creation in preallocated memory\r\n* bitcoin-core/secp256k1#596: Make WINDOW_G configurable\r\n* bitcoin-core/secp256k1#561: Respect LDFLAGS and #undef STATIC_PRECOMPUTATION if using basic config\r\n* bitcoin-core/secp256k1#533: Make sure we're not using an uninitialized variable in secp256k1_wnaf_const(...)\r\n* bitcoin-core/secp256k1#617: Pass scalar by reference in secp256k1_wnaf_const()\r\n* bitcoin-core/secp256k1#619: Clear a copied secret key after negation\r\n* bitcoin-core/secp256k1#612: Allow field_10x26_arm.s to compile for ARMv7 architecture",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19228",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19228",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19228.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19228.patch"
          },
          "closed_at": "2020-06-13T01:50:57Z",
          "created_at": "2020-06-09T20:50:36Z",
          "updated_at": "2022-02-15T10:32:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3440347814,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDAzNDc4MTQ=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3440347814",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8c97780db8c9dd33efed134385573ba97e9cd165",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c97780db8c9dd33efed134385573ba97e9cd165",
      "created_at": "2020-06-13T01:50:54Z"
    },
    {
      "event": "referenced",
      "id": 3440492993,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDA0OTI5OTM=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3440492993",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8a3a072968d77b420b8856a8d98600f0d67dbf66",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/8a3a072968d77b420b8856a8d98600f0d67dbf66",
      "created_at": "2020-06-13T05:45:51Z"
    },
    {
      "event": "referenced",
      "id": 3447518451,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDc1MTg0NTE=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3447518451",
      "actor": {
        "login": "ComputerCraftr",
        "id": 27882076,
        "node_id": "MDQ6VXNlcjI3ODgyMDc2",
        "avatar_url": "https://avatars.githubusercontent.com/u/27882076?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ComputerCraftr",
        "html_url": "https://github.com/ComputerCraftr",
        "followers_url": "https://api.github.com/users/ComputerCraftr/followers",
        "following_url": "https://api.github.com/users/ComputerCraftr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ComputerCraftr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ComputerCraftr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ComputerCraftr/subscriptions",
        "organizations_url": "https://api.github.com/users/ComputerCraftr/orgs",
        "repos_url": "https://api.github.com/users/ComputerCraftr/repos",
        "events_url": "https://api.github.com/users/ComputerCraftr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ComputerCraftr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b98f1c6e6c3320ba34f8bb9f1fea4b4a99f94546",
      "commit_url": "https://api.github.com/repos/ComputerCraftr/bitcoin/commits/b98f1c6e6c3320ba34f8bb9f1fea4b4a99f94546",
      "created_at": "2020-06-16T07:03:06Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-26T12:37:26Z",
      "updated_at": "2020-10-26T12:37:26Z",
      "source": {
        "issue": {
          "id": 729489163,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA5OTY4NjUw",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/839",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/839/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/839/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/839/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/839",
          "number": 839,
          "state": "closed",
          "state_reason": null,
          "title": "Prevent arithmetic on NULL pointer if the scratch space is too small",
          "body": "If the scratch space is too small when calling\r\n`secp256k1_ecmult_strauss_batch()`, the `state.pre_a` allocation will\r\nfail and the pointer will be `NULL`. This causes `state.pre_a_lam` to be\r\ncomputed from the `NULL` pointer.\r\n\r\nIt is also possible that the first allocation to fail is for `state.ps`,\r\nwhich will cause the failure to occur when in\r\n`secp256k1_ecmult_strauss_wnaf()`.\r\n\r\nThe issue has been detected by UBSAN using Clang 10:\r\n```\r\nCC=clang \\\r\nCFLAGS=\"-fsanitize=undefined -fno-omit-frame-pointer\" \\\r\nLDFLAGS=\"-fsanitize=undefined -fno-omit-frame-pointer\" \\\r\n../configure\r\n\r\nUBSAN_OPTIONS=print_stacktrace=1:halt_on_error=1 make check\r\n```",
          "user": {
            "login": "Fabcien",
            "id": 44533924,
            "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Fabcien",
            "html_url": "https://github.com/Fabcien",
            "followers_url": "https://api.github.com/users/Fabcien/followers",
            "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
            "organizations_url": "https://api.github.com/users/Fabcien/orgs",
            "repos_url": "https://api.github.com/users/Fabcien/repos",
            "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Fabcien/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/839",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/839",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/839.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/839.patch"
          },
          "closed_at": "2020-11-04T14:50:21Z",
          "created_at": "2020-10-26T11:38:19Z",
          "updated_at": "2020-11-04T16:05:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 5138105043,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMzgxMDUwNDM=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5138105043",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9d36ba6570acfaa4935874dcd2ef750295ed0bbb",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/9d36ba6570acfaa4935874dcd2ef750295ed0bbb",
      "created_at": "2021-08-10T22:22:00Z"
    },
    {
      "event": "referenced",
      "id": 5149897779,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDk4OTc3Nzk=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5149897779",
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8ded2caa74d5150cbce899749fbe02b49784d17a",
      "commit_url": "https://api.github.com/repos/5tefan/dash/commits/8ded2caa74d5150cbce899749fbe02b49784d17a",
      "created_at": "2021-08-12T14:39:47Z"
    },
    {
      "event": "referenced",
      "id": 6568857338,
      "node_id": "REFE_lADOAP4Jqs4ZFBGZzwAAAAGHiM76",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6568857338",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d855cc511dd608b3e58e0387cd3826f2fba4fa0a",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/d855cc511dd608b3e58e0387cd3826f2fba4fa0a",
      "created_at": "2022-05-08T16:47:44Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265506915",
      "pull_request_review_id": 214429219,
      "id": 265506915,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTUwNjkxNQ==",
      "diff_hunk": "@@ -28,6 +29,9 @@ static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* err\n static void secp256k1_scratch_destroy(secp256k1_scratch* scratch) {\n     if (scratch != NULL) {\n         VERIFY_CHECK(scratch->frame == 0);\n+        if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+            return;\n+        }",
      "path": "src/scratch_impl.h",
      "position": 29,
      "original_position": 14,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "d5df0210bf9c9f579e469000e0bef96c9138e8cc",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "how about setting the magic here back to 0s?",
      "created_at": "2019-03-14T10:35:48Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265506915",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265506915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265508339",
      "pull_request_review_id": 214429219,
      "id": 265508339,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTUwODMzOQ==",
      "diff_hunk": "@@ -72,6 +88,10 @@ static void *secp256k1_scratch_alloc(secp256k1_scratch* scratch, size_t size) {\n     size_t frame = scratch->frame - 1;\n     size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n \n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {",
      "path": "src/scratch_impl.h",
      "position": 100,
      "original_position": 55,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "d5df0210bf9c9f579e469000e0bef96c9138e8cc",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps this should happen before accessing `scratch->frame`?",
      "created_at": "2019-03-14T10:39:37Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265508339",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265508339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265514531",
      "pull_request_review_id": 214429219,
      "id": 265514531,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTUxNDUzMQ==",
      "diff_hunk": "@@ -259,37 +259,46 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1 == 1));\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 500); /* 500 - ALIGNMENT */\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) != NULL);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n \n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1) == 0);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 0);\n \n     /* ...and this effect is undone by popping the frame */\n-    secp256k1_scratch_deallocate_frame(scratch);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    secp256k1_scratch_deallocate_frame(&none->error_callback, scratch);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n \n     /* cleanup */\n-    secp256k1_scratch_space_destroy(scratch);\n+    secp256k1_scratch_space_destroy(none, scratch);\n+    CHECK(ecount == 0);\n+\n+    /* try to use badly initialized scratch space */",
      "path": "src/tests.c",
      "position": 76,
      "original_position": 52,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "should be done for the other functions as well not just scratch_max_allocation or we reduce fraction of lines covered by tests.",
      "created_at": "2019-03-14T10:56:35Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265514531",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265514531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 390,
      "original_line": 390,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265560084",
      "pull_request_review_id": 214497282,
      "id": 265560084,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU2MDA4NA==",
      "diff_hunk": "@@ -12,28 +12,29 @@\n /* The typedef is used internally; the struct name is used in the public API\n  * (where it is exposed as a different typedef) */\n typedef struct secp256k1_scratch_space_struct {\n-    void *data[SECP256K1_SCRATCH_MAX_FRAMES];\n+    unsigned char magic[8];",
      "path": "src/scratch.h",
      "position": 14,
      "original_position": 5,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Probably not this PR but what do people think about randomizing this? Then it could protect not only against accidental misuse but also against stack smashing etc. This is just a random thought, I haven't really thought about whether it makes sense or not.",
      "created_at": "2019-03-14T13:11:38Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265560084",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265560084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265566705",
      "pull_request_review_id": 214497282,
      "id": 265566705,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU2NjcwNQ==",
      "diff_hunk": "@@ -19,22 +19,32 @@ static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* err\n     secp256k1_scratch* ret = (secp256k1_scratch*)checked_malloc(error_callback, sizeof(*ret));",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 1,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can we unify this malloc with the other one too? Also, `scratch_crate` kind of promises to allocate at most `max_size` bytes but we allocate more.",
      "created_at": "2019-03-14T13:27:13Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265566705",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265566705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265576839",
      "pull_request_review_id": 214519378,
      "id": 265576839,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU3NjgzOQ==",
      "diff_hunk": "@@ -44,15 +54,18 @@ static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch,\n     return scratch->max_size - allocated - objects * ALIGNMENT;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n+static int secp256k1_scratch_allocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t n, size_t objects) {\n     VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n \n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+\n+    if (n <= secp256k1_scratch_max_allocation(error_callback, scratch, objects)) {\n         n += objects * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't that too much? To store an array of `objects` things of type `t`, we need `objects * sizeof(t)` bytes of contiguous aligned memory. But there's no need to care about alignment here, because the stack frames are aligned already, no?",
      "created_at": "2019-03-14T13:50:34Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265576839",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265576839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265597360",
      "pull_request_review_id": 214546310,
      "id": 265597360,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU5NzM2MA==",
      "diff_hunk": "@@ -19,22 +19,32 @@ static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* err\n     secp256k1_scratch* ret = (secp256k1_scratch*)checked_malloc(error_callback, sizeof(*ret));",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 1,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": 265566705,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess we should rename `max_size` ... the question is whether it will be more annoying to the user if (a) the function allocates more than they tell it to; (b) the function allocates exactly what they say, but gives them less scratch space than they intended.\r\n\r\nMy guess is that (a) is the better way to go here, but we should document this.\r\n\r\nAs for unifying the `malloc` calls, yeah, sure, I can do that.",
      "created_at": "2019-03-14T14:32:03Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265597360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265597360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265603103",
      "pull_request_review_id": 214553831,
      "id": 265603103,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTYwMzEwMw==",
      "diff_hunk": "@@ -44,15 +54,18 @@ static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch,\n     return scratch->max_size - allocated - objects * ALIGNMENT;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n+static int secp256k1_scratch_allocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t n, size_t objects) {\n     VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n \n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+\n+    if (n <= secp256k1_scratch_max_allocation(error_callback, scratch, objects)) {\n         n += objects * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": 265576839,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We allocate multiple objects within one frame.",
      "created_at": "2019-03-14T14:42:58Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265603103",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265603103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265772148",
      "pull_request_review_id": 214771215,
      "id": 265772148,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTc3MjE0OA==",
      "diff_hunk": "@@ -44,15 +54,18 @@ static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch,\n     return scratch->max_size - allocated - objects * ALIGNMENT;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n+static int secp256k1_scratch_allocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t n, size_t objects) {\n     VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n \n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+\n+    if (n <= secp256k1_scratch_max_allocation(error_callback, scratch, objects)) {\n         n += objects * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": 265576839,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah nevermind, I just understood the API...\r\n\r\nI guess `objects * (ALIGNMENT - 1)` is still enough but that's not much of a difference.",
      "created_at": "2019-03-14T21:24:22Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265772148",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265772148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265804258",
      "pull_request_review_id": 214810869,
      "id": 265804258,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTgwNDI1OA==",
      "diff_hunk": "@@ -44,15 +54,18 @@ static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch,\n     return scratch->max_size - allocated - objects * ALIGNMENT;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n+static int secp256k1_scratch_allocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t n, size_t objects) {\n     VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n \n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+\n+    if (n <= secp256k1_scratch_max_allocation(error_callback, scratch, objects)) {\n         n += objects * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": 265576839,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`(objects - 1) * ALIGNMENT` you mean :). I'm going to leave this be, because otherwise we get into thorny issues thinking about what happens when `objects == 0` and also we'd have to change it in a bunch of places. And it's only 16 bytes.",
      "created_at": "2019-03-14T23:29:55Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265804258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265804258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265807040",
      "pull_request_review_id": 214814394,
      "id": 265807040,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTgwNzA0MA==",
      "diff_hunk": "@@ -44,15 +54,18 @@ static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch,\n     return scratch->max_size - allocated - objects * ALIGNMENT;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n+static int secp256k1_scratch_allocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t n, size_t objects) {\n     VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n \n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+\n+    if (n <= secp256k1_scratch_max_allocation(error_callback, scratch, objects)) {\n         n += objects * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": 265576839,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I really meant `objects * (ALIGNMENT - 1)`. We're rounding up to a multiple of ALIGNMENT, so at most by `ALIGNMENT - 1`... But yes, just leave it, it's not worth the hassle.",
      "created_at": "2019-03-14T23:44:29Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r265807040",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/265807040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266035181",
      "pull_request_review_id": 215103911,
      "id": 266035181,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjAzNTE4MQ==",
      "diff_hunk": "@@ -44,15 +54,18 @@ static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch,\n     return scratch->max_size - allocated - objects * ALIGNMENT;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n+static int secp256k1_scratch_allocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t n, size_t objects) {\n     VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n \n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+\n+    if (n <= secp256k1_scratch_max_allocation(error_callback, scratch, objects)) {\n         n += objects * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": 265576839,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh! Yeah, I see. But did you further mean `(objects - 1) * (ALIGNMENT - 1)` since the first object does not require alignment (as the frame will already be aligned)?\r\n\r\nI'll add a commit to do `ALIGNMENT-1` since that's quick and easy and doesn't create any new edge cases.",
      "created_at": "2019-03-15T15:36:14Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r266035181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266035181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266051954",
      "pull_request_review_id": 215126413,
      "id": 266051954,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjA1MTk1NA==",
      "diff_hunk": "@@ -44,15 +54,18 @@ static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch,\n     return scratch->max_size - allocated - objects * ALIGNMENT;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n+static int secp256k1_scratch_allocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t n, size_t objects) {\n     VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n \n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+\n+    if (n <= secp256k1_scratch_max_allocation(error_callback, scratch, objects)) {\n         n += objects * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": 265576839,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Oh! Yeah, I see. But did you further mean `(objects - 1) * (ALIGNMENT - 1)` since the first object does not require alignment (as the frame will already be aligned)?\r\n\r\nWell, if the frame will already be aligned, then `(objects - 1) * (ALIGNMENT - 1)`  is fine and I think `objects == 0` should just be rejected. The problem is that now that we just have one malloc call, it's not guaranteed that the frame is aligned. (edit: The first frame yes but not the second one, etc).\r\n\r\n",
      "created_at": "2019-03-15T16:18:10Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r266051954",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266051954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266070648",
      "pull_request_review_id": 215150268,
      "id": 266070648,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjA3MDY0OA==",
      "diff_hunk": "@@ -44,15 +54,18 @@ static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch,\n     return scratch->max_size - allocated - objects * ALIGNMENT;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n+static int secp256k1_scratch_allocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t n, size_t objects) {\n     VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n \n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+\n+    if (n <= secp256k1_scratch_max_allocation(error_callback, scratch, objects)) {\n         n += objects * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": 265576839,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, shit, yes, I think that's actually a bug in the current code. I need to add alignment when \"allocating\" frames as well.",
      "created_at": "2019-03-15T17:05:45Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r266070648",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266070648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266455603",
      "pull_request_review_id": 215618589,
      "id": 266455603,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjQ1NTYwMw==",
      "diff_hunk": "@@ -259,37 +259,55 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 1);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 500); /* 500 - ALIGNMENT */\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) != NULL);",
      "path": "src/tests.c",
      "position": 43,
      "original_position": 33,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How about checking here that the result % ALIGNMENT = 0?",
      "created_at": "2019-03-18T14:07:55Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r266455603",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266455603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 361,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266465708",
      "pull_request_review_id": 215630797,
      "id": 266465708,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjQ2NTcwOA==",
      "diff_hunk": "@@ -259,37 +259,55 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 1);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 500); /* 500 - ALIGNMENT */",
      "path": "src/tests.c",
      "position": null,
      "original_position": 32,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`500 - (ALIGNMENT - 1)`?",
      "created_at": "2019-03-18T14:27:06Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r266465708",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266465708"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 282,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266467261",
      "pull_request_review_id": 215630797,
      "id": 266467261,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjQ2NzI2MQ==",
      "diff_hunk": "@@ -259,37 +259,55 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 1);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 500); /* 500 - ALIGNMENT */\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) != NULL);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 34,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this supposed to fail because 500 is too large or because that's the second alloc? (Or both?)",
      "created_at": "2019-03-18T14:30:04Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r266467261",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266467261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266468084",
      "pull_request_review_id": 215618589,
      "id": 266468084,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjQ2ODA4NA==",
      "diff_hunk": "@@ -259,37 +259,55 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 1);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 500); /* 500 - ALIGNMENT */\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) != NULL);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n \n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1) == 0);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 0);\n \n     /* ...and this effect is undone by popping the frame */",
      "path": "src/tests.c",
      "position": null,
      "original_position": 39,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps check that effect is undone by comparing the resulting scratch space fields with original fields (`frame` and `data`)",
      "created_at": "2019-03-18T14:31:36Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r266468084",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266468084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266468545",
      "pull_request_review_id": 215618589,
      "id": 266468545,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjQ2ODU0NQ==",
      "diff_hunk": "@@ -259,37 +259,55 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 1);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 500); /* 500 - ALIGNMENT */\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) != NULL);",
      "path": "src/tests.c",
      "position": 43,
      "original_position": 33,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": 266455603,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could also be checked after `secp256k1_scratch_space_create`",
      "created_at": "2019-03-18T14:32:29Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r266468545",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266468545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 361,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266469076",
      "pull_request_review_id": 215630797,
      "id": 266469076,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjQ2OTA3Ng==",
      "diff_hunk": "@@ -259,37 +259,55 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 1);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 31,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fun that the old code was (basically) equivalent... :D",
      "created_at": "2019-03-18T14:33:37Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r266469076",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266469076"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266473803",
      "pull_request_review_id": 215618589,
      "id": 266473803,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjQ3MzgwMw==",
      "diff_hunk": "@@ -62,21 +77,34 @@ static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n\n     }\n }\n \n-static void secp256k1_scratch_deallocate_frame(secp256k1_scratch* scratch) {\n+static void secp256k1_scratch_deallocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return;\n+    }\n+\n     VERIFY_CHECK(scratch->frame > 0);\n-    scratch->frame -= 1;\n-    free(scratch->data[scratch->frame]);\n+\n+    scratch->frame--;\n+    scratch->data = (void *) ((char *) scratch->data - scratch->frame_size[scratch->frame]);\n }\n \n-static void *secp256k1_scratch_alloc(secp256k1_scratch* scratch, size_t size) {\n+static void *secp256k1_scratch_alloc(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t size) {\n     void *ret;\n-    size_t frame = scratch->frame - 1;\n+    size_t frame;\n+\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return NULL;\n+    }\n+\n+    frame = scratch->frame - 1;\n     size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n \n     if (scratch->frame == 0 || size + scratch->offset[frame] > scratch->frame_size[frame]) {",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 108,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fwiw, this size check can be circumvented by setting size such that `size + scratch->offset[frame]` overflows",
      "created_at": "2019-03-18T14:43:08Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r266473803",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/266473803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287562564",
      "pull_request_review_id": 242002661,
      "id": 287562564,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU2MjU2NA==",
      "diff_hunk": "@@ -12,28 +12,29 @@\n /* The typedef is used internally; the struct name is used in the public API\n  * (where it is exposed as a different typedef) */\n typedef struct secp256k1_scratch_space_struct {\n-    void *data[SECP256K1_SCRATCH_MAX_FRAMES];\n+    unsigned char magic[8];",
      "path": "src/scratch.h",
      "position": 14,
      "original_position": 5,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": 265560084,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not this PR :)",
      "created_at": "2019-05-25T13:16:56Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287562564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287562564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287562672",
      "pull_request_review_id": 242002774,
      "id": 287562672,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU2MjY3Mg==",
      "diff_hunk": "@@ -259,37 +259,55 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 1);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 500); /* 500 - ALIGNMENT */\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) != NULL);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);",
      "path": "src/tests.c",
      "position": null,
      "original_position": 34,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": 266467261,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because 500 is too large.",
      "created_at": "2019-05-25T13:21:12Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287562672",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287562672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287562687",
      "pull_request_review_id": 242002790,
      "id": 287562687,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU2MjY4Nw==",
      "diff_hunk": "@@ -259,37 +259,55 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 1);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 500); /* 500 - ALIGNMENT */\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) != NULL);",
      "path": "src/tests.c",
      "position": 43,
      "original_position": 33,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": 266455603,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Am I allowed to use % on a pointer? That seems unlikely to be meaningful.",
      "created_at": "2019-05-25T13:21:43Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287562687",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287562687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 361,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287564256",
      "pull_request_review_id": 242004376,
      "id": 287564256,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU2NDI1Ng==",
      "diff_hunk": "@@ -62,21 +77,34 @@ static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n\n     }\n }\n \n-static void secp256k1_scratch_deallocate_frame(secp256k1_scratch* scratch) {\n+static void secp256k1_scratch_deallocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return;\n+    }\n+\n     VERIFY_CHECK(scratch->frame > 0);\n-    scratch->frame -= 1;\n-    free(scratch->data[scratch->frame]);\n+\n+    scratch->frame--;\n+    scratch->data = (void *) ((char *) scratch->data - scratch->frame_size[scratch->frame]);\n }\n \n-static void *secp256k1_scratch_alloc(secp256k1_scratch* scratch, size_t size) {\n+static void *secp256k1_scratch_alloc(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t size) {\n     void *ret;\n-    size_t frame = scratch->frame - 1;\n+    size_t frame;\n+\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return NULL;\n+    }\n+\n+    frame = scratch->frame - 1;\n     size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n \n     if (scratch->frame == 0 || size + scratch->offset[frame] > scratch->frame_size[frame]) {",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 108,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": 266473803,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed with checkpointing",
      "created_at": "2019-05-25T14:16:10Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287564256",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287564256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287564268",
      "pull_request_review_id": 242004387,
      "id": 287564268,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU2NDI2OA==",
      "diff_hunk": "@@ -259,37 +259,55 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 1);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 500); /* 500 - ALIGNMENT */\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) != NULL);",
      "path": "src/tests.c",
      "position": 43,
      "original_position": 33,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": 266455603,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed - check `scratch->alloc_size`",
      "created_at": "2019-05-25T14:16:27Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287564268",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287564268"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 361,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287564273",
      "pull_request_review_id": 242004394,
      "id": 287564273,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU2NDI3Mw==",
      "diff_hunk": "@@ -44,15 +54,18 @@ static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch,\n     return scratch->max_size - allocated - objects * ALIGNMENT;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n+static int secp256k1_scratch_allocate_frame(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t n, size_t objects) {\n     VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n \n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+\n+    if (n <= secp256k1_scratch_max_allocation(error_callback, scratch, objects)) {\n         n += objects * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 51,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "548205ec54fe396aa5ec7962e8c59c26756ea5a6",
      "in_reply_to_id": 265576839,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed by eliminating frames.",
      "created_at": "2019-05-25T14:16:39Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287564273",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287564273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287564388",
      "pull_request_review_id": 242004496,
      "id": 287564388,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU2NDM4OA==",
      "diff_hunk": "@@ -259,37 +259,55 @@ void run_scratch_tests(void) {\n     int32_t ecount = 0;\n     secp256k1_context *none = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\n     secp256k1_scratch_space *scratch;\n+    secp256k1_scratch_space local_scratch;\n \n     /* Test public API */\n     secp256k1_context_set_illegal_callback(none, counting_illegal_callback_fn, &ecount);\n+    secp256k1_context_set_error_callback(none, counting_illegal_callback_fn, &ecount);\n \n     scratch = secp256k1_scratch_space_create(none, 1000);\n     CHECK(scratch != NULL);\n     CHECK(ecount == 0);\n \n     /* Test internal API */\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 1000);\n \n     /* Allocating 500 bytes with no frame fails */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 0) == 1000);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 0) == 1000);\n \n     /* ...but pushing a new stack frame does affect the max allocation */\n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1 == 1));\n-    CHECK(secp256k1_scratch_max_allocation(scratch, 1) < 500); /* 500 - ALIGNMENT */\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) != NULL);\n-    CHECK(secp256k1_scratch_alloc(scratch, 500) == NULL);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 1);\n+    CHECK(secp256k1_scratch_max_allocation(&none->error_callback, scratch, 1) < 500); /* 500 - ALIGNMENT */\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) != NULL);\n+    CHECK(secp256k1_scratch_alloc(&none->error_callback, scratch, 500) == NULL);\n \n-    CHECK(secp256k1_scratch_allocate_frame(scratch, 500, 1) == 0);\n+    CHECK(secp256k1_scratch_allocate_frame(&none->error_callback, scratch, 500, 1) == 0);\n \n     /* ...and this effect is undone by popping the frame */",
      "path": "src/tests.c",
      "position": null,
      "original_position": 39,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "c9f56cc9deeaa4b1fde588ea25d7e7d9bb9f43a6",
      "in_reply_to_id": 266468084,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Probably overkill now that only `alloc_size` ever actually changes. Added checks that `alloc_size` is 0 and nonzero when we expect it.",
      "created_at": "2019-05-25T14:20:07Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287564388",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287564388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287566833",
      "pull_request_review_id": 242006976,
      "id": 287566833,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU2NjgzMw==",
      "diff_hunk": "@@ -7,29 +7,31 @@\n #ifndef _SECP256K1_SCRATCH_\n #define _SECP256K1_SCRATCH_\n \n-#define SECP256K1_SCRATCH_MAX_FRAMES\t5\n-\n /* The typedef is used internally; the struct name is used in the public API\n  * (where it is exposed as a different typedef) */\n typedef struct secp256k1_scratch_space_struct {\n+    /** guard against interpreting this object as other types */\n     unsigned char magic[8];\n+    /** actual allocated data */\n     void *data;\n-    void *current_frame;\n-    size_t offset[SECP256K1_SCRATCH_MAX_FRAMES];\n-    size_t frame_size[SECP256K1_SCRATCH_MAX_FRAMES];\n-    size_t frame;\n+    /** amount that has been allocated (i.e. `date + offset` is the next",
      "path": "src/scratch.h",
      "position": null,
      "original_position": 17,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "71d5816c9149531956af52ab3f089d4d9c16639b",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/date/data",
      "created_at": "2019-05-25T15:41:31Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287566833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287566833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287567094",
      "pull_request_review_id": 242006976,
      "id": 287567094,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU2NzA5NA==",
      "diff_hunk": "@@ -15,70 +15,77 @@\n  * TODO: Determine this at configure time. */\n #define ALIGNMENT 16\n \n-static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* error_callback, size_t max_size) {\n-    secp256k1_scratch* ret = (secp256k1_scratch*)checked_malloc(error_callback, sizeof(*ret));\n+static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* error_callback, size_t size) {\n+    const size_t base_alloc = ((sizeof(secp256k1_scratch) + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n+    void *alloc = checked_malloc(error_callback, base_alloc + size);\n+    secp256k1_scratch* ret = (secp256k1_scratch *)alloc;\n     if (ret != NULL) {\n         memset(ret, 0, sizeof(*ret));\n-        ret->max_size = max_size;\n-        ret->error_callback = error_callback;\n+        memcpy(ret->magic, \"scratch\", 8);\n+        ret->data = (void *) ((char *) alloc + base_alloc);\n+        ret->max_size = size;\n     }\n     return ret;\n }\n \n-static void secp256k1_scratch_destroy(secp256k1_scratch* scratch) {\n+static void secp256k1_scratch_destroy(const secp256k1_callback* error_callback, secp256k1_scratch* scratch) {\n     if (scratch != NULL) {\n-        VERIFY_CHECK(scratch->frame == 0);\n+        VERIFY_CHECK(scratch->alloc_size == 0); /* all checkpoints should be applied */\n+        if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+            secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+            return;\n+        }\n+        memset(scratch->magic, 0, sizeof(scratch->magic));\n         free(scratch);\n     }\n }\n \n-static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch, size_t objects) {\n-    size_t i = 0;\n-    size_t allocated = 0;\n-    for (i = 0; i < scratch->frame; i++) {\n-        allocated += scratch->frame_size[i];\n-    }\n-    if (scratch->max_size - allocated <= objects * ALIGNMENT) {\n+static size_t secp256k1_scratch_checkpoint(const secp256k1_callback* error_callback, const secp256k1_scratch* scratch) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n         return 0;\n     }\n-    return scratch->max_size - allocated - objects * ALIGNMENT;\n+    return scratch->alloc_size;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n-    VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n-\n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n-        n += objects * ALIGNMENT;\n-        scratch->data[scratch->frame] = checked_malloc(scratch->error_callback, n);\n-        if (scratch->data[scratch->frame] == NULL) {\n-            return 0;\n-        }\n-        scratch->frame_size[scratch->frame] = n;\n-        scratch->offset[scratch->frame] = 0;\n-        scratch->frame++;\n-        return 1;\n-    } else {\n-        return 0;\n+static void secp256k1_scratch_apply_checkpoint(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t checkpoint) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return;\n+    }\n+    if (checkpoint > scratch->alloc_size) {\n+        secp256k1_callback_call(error_callback, \"invalid checkpoint\");\n+        return;\n     }\n+    scratch->alloc_size = checkpoint;\n }\n \n-static void secp256k1_scratch_deallocate_frame(secp256k1_scratch* scratch) {\n-    VERIFY_CHECK(scratch->frame > 0);\n-    scratch->frame -= 1;\n-    free(scratch->data[scratch->frame]);\n+static size_t secp256k1_scratch_max_allocation(const secp256k1_callback* error_callback, const secp256k1_scratch* scratch, size_t objects) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+    if (scratch->max_size - scratch->alloc_size <= objects * (ALIGNMENT - 1)) {\n+        return 0;\n+    }\n+    return scratch->max_size - scratch->alloc_size - objects * (ALIGNMENT - 1);\n }\n \n-static void *secp256k1_scratch_alloc(secp256k1_scratch* scratch, size_t size) {\n+static void *secp256k1_scratch_alloc(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t size) {\n     void *ret;\n-    size_t frame = scratch->frame - 1;\n-    size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n \n-    if (scratch->frame == 0 || size + scratch->offset[frame] > scratch->frame_size[frame]) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return NULL;\n+    }\n+\n+    size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 105,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "71d5816c9149531956af52ab3f089d4d9c16639b",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "once #566 is merged (probably today), this can be replaced by ROUND_TO_ALIGN, see https://github.com/bitcoin-core/secp256k1/blob/0522caac8f28e9eaa19bfebc88e463fc8d409b7c/src/util.h#L96",
      "created_at": "2019-05-25T15:51:16Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287567094",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287567094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287567222",
      "pull_request_review_id": 242006976,
      "id": 287567222,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU2NzIyMg==",
      "diff_hunk": "@@ -15,70 +15,77 @@\n  * TODO: Determine this at configure time. */\n #define ALIGNMENT 16\n \n-static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* error_callback, size_t max_size) {\n-    secp256k1_scratch* ret = (secp256k1_scratch*)checked_malloc(error_callback, sizeof(*ret));\n+static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* error_callback, size_t size) {\n+    const size_t base_alloc = ((sizeof(secp256k1_scratch) + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n+    void *alloc = checked_malloc(error_callback, base_alloc + size);\n+    secp256k1_scratch* ret = (secp256k1_scratch *)alloc;\n     if (ret != NULL) {\n         memset(ret, 0, sizeof(*ret));\n-        ret->max_size = max_size;\n-        ret->error_callback = error_callback;\n+        memcpy(ret->magic, \"scratch\", 8);\n+        ret->data = (void *) ((char *) alloc + base_alloc);\n+        ret->max_size = size;\n     }\n     return ret;\n }\n \n-static void secp256k1_scratch_destroy(secp256k1_scratch* scratch) {\n+static void secp256k1_scratch_destroy(const secp256k1_callback* error_callback, secp256k1_scratch* scratch) {\n     if (scratch != NULL) {\n-        VERIFY_CHECK(scratch->frame == 0);\n+        VERIFY_CHECK(scratch->alloc_size == 0); /* all checkpoints should be applied */\n+        if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+            secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+            return;\n+        }\n+        memset(scratch->magic, 0, sizeof(scratch->magic));\n         free(scratch);\n     }\n }\n \n-static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch, size_t objects) {\n-    size_t i = 0;\n-    size_t allocated = 0;\n-    for (i = 0; i < scratch->frame; i++) {\n-        allocated += scratch->frame_size[i];\n-    }\n-    if (scratch->max_size - allocated <= objects * ALIGNMENT) {\n+static size_t secp256k1_scratch_checkpoint(const secp256k1_callback* error_callback, const secp256k1_scratch* scratch) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n         return 0;\n     }\n-    return scratch->max_size - allocated - objects * ALIGNMENT;\n+    return scratch->alloc_size;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n-    VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n-\n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n-        n += objects * ALIGNMENT;\n-        scratch->data[scratch->frame] = checked_malloc(scratch->error_callback, n);\n-        if (scratch->data[scratch->frame] == NULL) {\n-            return 0;\n-        }\n-        scratch->frame_size[scratch->frame] = n;\n-        scratch->offset[scratch->frame] = 0;\n-        scratch->frame++;\n-        return 1;\n-    } else {\n-        return 0;\n+static void secp256k1_scratch_apply_checkpoint(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t checkpoint) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return;\n+    }\n+    if (checkpoint > scratch->alloc_size) {\n+        secp256k1_callback_call(error_callback, \"invalid checkpoint\");\n+        return;\n     }\n+    scratch->alloc_size = checkpoint;\n }\n \n-static void secp256k1_scratch_deallocate_frame(secp256k1_scratch* scratch) {\n-    VERIFY_CHECK(scratch->frame > 0);\n-    scratch->frame -= 1;\n-    free(scratch->data[scratch->frame]);\n+static size_t secp256k1_scratch_max_allocation(const secp256k1_callback* error_callback, const secp256k1_scratch* scratch, size_t objects) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+    if (scratch->max_size - scratch->alloc_size <= objects * (ALIGNMENT - 1)) {\n+        return 0;\n+    }\n+    return scratch->max_size - scratch->alloc_size - objects * (ALIGNMENT - 1);\n }\n \n-static void *secp256k1_scratch_alloc(secp256k1_scratch* scratch, size_t size) {\n+static void *secp256k1_scratch_alloc(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t size) {\n     void *ret;\n-    size_t frame = scratch->frame - 1;\n-    size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n \n-    if (scratch->frame == 0 || size + scratch->offset[frame] > scratch->frame_size[frame]) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return NULL;\n+    }\n+\n+    size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n+    if (size > scratch->max_size - scratch->alloc_size) {\n         return NULL;\n     }\n-    ret = (void *) ((unsigned char *) scratch->data[frame] + scratch->offset[frame]);\n+    ret = (void *) ((char *) scratch->data + scratch->alloc_size);\n     memset(ret, 0, size);",
      "path": "src/scratch_impl.h",
      "position": 110,
      "original_position": 111,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "71d5816c9149531956af52ab3f089d4d9c16639b",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe we want to memset the entire scratch space when creating it. Seems simpler and also sets the padding bytes (that are there due to rounding to alignment)",
      "created_at": "2019-05-25T15:54:53Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287567222",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287567222"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287577206",
      "pull_request_review_id": 242018002,
      "id": 287577206,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU3NzIwNg==",
      "diff_hunk": "@@ -15,70 +15,77 @@\n  * TODO: Determine this at configure time. */\n #define ALIGNMENT 16\n \n-static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* error_callback, size_t max_size) {\n-    secp256k1_scratch* ret = (secp256k1_scratch*)checked_malloc(error_callback, sizeof(*ret));\n+static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* error_callback, size_t size) {\n+    const size_t base_alloc = ((sizeof(secp256k1_scratch) + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n+    void *alloc = checked_malloc(error_callback, base_alloc + size);\n+    secp256k1_scratch* ret = (secp256k1_scratch *)alloc;\n     if (ret != NULL) {\n         memset(ret, 0, sizeof(*ret));\n-        ret->max_size = max_size;\n-        ret->error_callback = error_callback;\n+        memcpy(ret->magic, \"scratch\", 8);\n+        ret->data = (void *) ((char *) alloc + base_alloc);\n+        ret->max_size = size;\n     }\n     return ret;\n }\n \n-static void secp256k1_scratch_destroy(secp256k1_scratch* scratch) {\n+static void secp256k1_scratch_destroy(const secp256k1_callback* error_callback, secp256k1_scratch* scratch) {\n     if (scratch != NULL) {\n-        VERIFY_CHECK(scratch->frame == 0);\n+        VERIFY_CHECK(scratch->alloc_size == 0); /* all checkpoints should be applied */\n+        if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+            secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+            return;\n+        }\n+        memset(scratch->magic, 0, sizeof(scratch->magic));\n         free(scratch);\n     }\n }\n \n-static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch, size_t objects) {\n-    size_t i = 0;\n-    size_t allocated = 0;\n-    for (i = 0; i < scratch->frame; i++) {\n-        allocated += scratch->frame_size[i];\n-    }\n-    if (scratch->max_size - allocated <= objects * ALIGNMENT) {\n+static size_t secp256k1_scratch_checkpoint(const secp256k1_callback* error_callback, const secp256k1_scratch* scratch) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n         return 0;\n     }\n-    return scratch->max_size - allocated - objects * ALIGNMENT;\n+    return scratch->alloc_size;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n-    VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n-\n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n-        n += objects * ALIGNMENT;\n-        scratch->data[scratch->frame] = checked_malloc(scratch->error_callback, n);\n-        if (scratch->data[scratch->frame] == NULL) {\n-            return 0;\n-        }\n-        scratch->frame_size[scratch->frame] = n;\n-        scratch->offset[scratch->frame] = 0;\n-        scratch->frame++;\n-        return 1;\n-    } else {\n-        return 0;\n+static void secp256k1_scratch_apply_checkpoint(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t checkpoint) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return;\n+    }\n+    if (checkpoint > scratch->alloc_size) {\n+        secp256k1_callback_call(error_callback, \"invalid checkpoint\");\n+        return;\n     }\n+    scratch->alloc_size = checkpoint;\n }\n \n-static void secp256k1_scratch_deallocate_frame(secp256k1_scratch* scratch) {\n-    VERIFY_CHECK(scratch->frame > 0);\n-    scratch->frame -= 1;\n-    free(scratch->data[scratch->frame]);\n+static size_t secp256k1_scratch_max_allocation(const secp256k1_callback* error_callback, const secp256k1_scratch* scratch, size_t objects) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+    if (scratch->max_size - scratch->alloc_size <= objects * (ALIGNMENT - 1)) {\n+        return 0;\n+    }\n+    return scratch->max_size - scratch->alloc_size - objects * (ALIGNMENT - 1);\n }\n \n-static void *secp256k1_scratch_alloc(secp256k1_scratch* scratch, size_t size) {\n+static void *secp256k1_scratch_alloc(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t size) {\n     void *ret;\n-    size_t frame = scratch->frame - 1;\n-    size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n \n-    if (scratch->frame == 0 || size + scratch->offset[frame] > scratch->frame_size[frame]) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return NULL;\n+    }\n+\n+    size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n+    if (size > scratch->max_size - scratch->alloc_size) {\n         return NULL;\n     }\n-    ret = (void *) ((unsigned char *) scratch->data[frame] + scratch->offset[frame]);\n+    ret = (void *) ((char *) scratch->data + scratch->alloc_size);\n     memset(ret, 0, size);",
      "path": "src/scratch_impl.h",
      "position": 110,
      "original_position": 111,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "71d5816c9149531956af52ab3f089d4d9c16639b",
      "in_reply_to_id": 287567222,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure if it'd be simpler - we'd also have to memset on dealloc, so it'd probably be just as much code and accounting.",
      "created_at": "2019-05-25T23:02:56Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287577206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287577206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287577229",
      "pull_request_review_id": 242018030,
      "id": 287577229,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU3NzIyOQ==",
      "diff_hunk": "@@ -7,29 +7,31 @@\n #ifndef _SECP256K1_SCRATCH_\n #define _SECP256K1_SCRATCH_\n \n-#define SECP256K1_SCRATCH_MAX_FRAMES\t5\n-\n /* The typedef is used internally; the struct name is used in the public API\n  * (where it is exposed as a different typedef) */\n typedef struct secp256k1_scratch_space_struct {\n+    /** guard against interpreting this object as other types */\n     unsigned char magic[8];\n+    /** actual allocated data */\n     void *data;\n-    void *current_frame;\n-    size_t offset[SECP256K1_SCRATCH_MAX_FRAMES];\n-    size_t frame_size[SECP256K1_SCRATCH_MAX_FRAMES];\n-    size_t frame;\n+    /** amount that has been allocated (i.e. `date + offset` is the next",
      "path": "src/scratch.h",
      "position": null,
      "original_position": 17,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "71d5816c9149531956af52ab3f089d4d9c16639b",
      "in_reply_to_id": 287566833,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixe",
      "created_at": "2019-05-25T23:04:42Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287577229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287577229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287577232",
      "pull_request_review_id": 242018031,
      "id": 287577232,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU3NzIzMg==",
      "diff_hunk": "@@ -15,70 +15,77 @@\n  * TODO: Determine this at configure time. */\n #define ALIGNMENT 16\n \n-static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* error_callback, size_t max_size) {\n-    secp256k1_scratch* ret = (secp256k1_scratch*)checked_malloc(error_callback, sizeof(*ret));\n+static secp256k1_scratch* secp256k1_scratch_create(const secp256k1_callback* error_callback, size_t size) {\n+    const size_t base_alloc = ((sizeof(secp256k1_scratch) + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n+    void *alloc = checked_malloc(error_callback, base_alloc + size);\n+    secp256k1_scratch* ret = (secp256k1_scratch *)alloc;\n     if (ret != NULL) {\n         memset(ret, 0, sizeof(*ret));\n-        ret->max_size = max_size;\n-        ret->error_callback = error_callback;\n+        memcpy(ret->magic, \"scratch\", 8);\n+        ret->data = (void *) ((char *) alloc + base_alloc);\n+        ret->max_size = size;\n     }\n     return ret;\n }\n \n-static void secp256k1_scratch_destroy(secp256k1_scratch* scratch) {\n+static void secp256k1_scratch_destroy(const secp256k1_callback* error_callback, secp256k1_scratch* scratch) {\n     if (scratch != NULL) {\n-        VERIFY_CHECK(scratch->frame == 0);\n+        VERIFY_CHECK(scratch->alloc_size == 0); /* all checkpoints should be applied */\n+        if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+            secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+            return;\n+        }\n+        memset(scratch->magic, 0, sizeof(scratch->magic));\n         free(scratch);\n     }\n }\n \n-static size_t secp256k1_scratch_max_allocation(const secp256k1_scratch* scratch, size_t objects) {\n-    size_t i = 0;\n-    size_t allocated = 0;\n-    for (i = 0; i < scratch->frame; i++) {\n-        allocated += scratch->frame_size[i];\n-    }\n-    if (scratch->max_size - allocated <= objects * ALIGNMENT) {\n+static size_t secp256k1_scratch_checkpoint(const secp256k1_callback* error_callback, const secp256k1_scratch* scratch) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n         return 0;\n     }\n-    return scratch->max_size - allocated - objects * ALIGNMENT;\n+    return scratch->alloc_size;\n }\n \n-static int secp256k1_scratch_allocate_frame(secp256k1_scratch* scratch, size_t n, size_t objects) {\n-    VERIFY_CHECK(scratch->frame < SECP256K1_SCRATCH_MAX_FRAMES);\n-\n-    if (n <= secp256k1_scratch_max_allocation(scratch, objects)) {\n-        n += objects * ALIGNMENT;\n-        scratch->data[scratch->frame] = checked_malloc(scratch->error_callback, n);\n-        if (scratch->data[scratch->frame] == NULL) {\n-            return 0;\n-        }\n-        scratch->frame_size[scratch->frame] = n;\n-        scratch->offset[scratch->frame] = 0;\n-        scratch->frame++;\n-        return 1;\n-    } else {\n-        return 0;\n+static void secp256k1_scratch_apply_checkpoint(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t checkpoint) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return;\n+    }\n+    if (checkpoint > scratch->alloc_size) {\n+        secp256k1_callback_call(error_callback, \"invalid checkpoint\");\n+        return;\n     }\n+    scratch->alloc_size = checkpoint;\n }\n \n-static void secp256k1_scratch_deallocate_frame(secp256k1_scratch* scratch) {\n-    VERIFY_CHECK(scratch->frame > 0);\n-    scratch->frame -= 1;\n-    free(scratch->data[scratch->frame]);\n+static size_t secp256k1_scratch_max_allocation(const secp256k1_callback* error_callback, const secp256k1_scratch* scratch, size_t objects) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return 0;\n+    }\n+    if (scratch->max_size - scratch->alloc_size <= objects * (ALIGNMENT - 1)) {\n+        return 0;\n+    }\n+    return scratch->max_size - scratch->alloc_size - objects * (ALIGNMENT - 1);\n }\n \n-static void *secp256k1_scratch_alloc(secp256k1_scratch* scratch, size_t size) {\n+static void *secp256k1_scratch_alloc(const secp256k1_callback* error_callback, secp256k1_scratch* scratch, size_t size) {\n     void *ret;\n-    size_t frame = scratch->frame - 1;\n-    size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;\n \n-    if (scratch->frame == 0 || size + scratch->offset[frame] > scratch->frame_size[frame]) {\n+    if (memcmp(scratch->magic, \"scratch\", 8) != 0) {\n+        secp256k1_callback_call(error_callback, \"invalid scratch space\");\n+        return NULL;\n+    }\n+\n+    size = ((size + ALIGNMENT - 1) / ALIGNMENT) * ALIGNMENT;",
      "path": "src/scratch_impl.h",
      "position": null,
      "original_position": 105,
      "commit_id": "98836b11f02d9cf003ccc122f15e37113fc66489",
      "original_commit_id": "71d5816c9149531956af52ab3f089d4d9c16639b",
      "in_reply_to_id": 287567094,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2019-05-25T23:04:52Z",
      "updated_at": "2019-05-26T01:05:22Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/600#discussion_r287577232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/287577232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    }
  ]
}