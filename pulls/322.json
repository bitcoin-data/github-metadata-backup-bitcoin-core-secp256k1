{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322",
    "id": 46199040,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDYxOTkwNDA=",
    "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322",
    "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/322.diff",
    "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/322.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322",
    "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/968e2f415a5e764d159ee03e95815ea11460854e",
    "number": 322,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "[Schnorr API BREAK] Improve Schnorr multisigning API + fix vulnerability",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This reworks the Schnorr multisigning API to 4 self-contained functions:\n- secp256k1_multischnorr_stage1 computes public nonces\n- secp256k1_multischnorr_stage2 computes partial signatures using those public nonces\n- secp256k1_multischnorr_combine_sigs combines stage2 sigs into a full signature\n- secp256k1_multischnorr_combine_keys combines signers' public keys into a combined public key.\n\nThis changes the combined public key to be `A*H(A) + B*H(B) + C*H(C) + ...`, in an attempt to prevent a pubkey cancellation vulnerability.\n\nThe documentation is also moved out to a separate schnorr.md document.\n",
    "labels": [],
    "created_at": "2015-09-28T19:43:19Z",
    "updated_at": "2018-01-23T18:28:38Z",
    "closed_at": "2016-06-29T13:56:20Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "7ee66b2a859151a2b21d6e16d83e3572bc717f8f",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "sipa:schnorrstages2",
      "ref": "schnorrstages2",
      "sha": "968e2f415a5e764d159ee03e95815ea11460854e",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 16648672,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODY3Mg==",
        "name": "secp256k1",
        "full_name": "sipa/secp256k1",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/secp256k1",
        "archive_url": "https://api.github.com/repos/sipa/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/sipa/secp256k1/events",
        "forks_url": "https://api.github.com/repos/sipa/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/sipa/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/sipa/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/sipa/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/sipa/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/sipa/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/sipa/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/sipa/secp256k1/hooks",
        "svn_url": "https://github.com/sipa/secp256k1",
        "language": "C",
        "forks_count": 20,
        "stargazers_count": 43,
        "watchers_count": 43,
        "size": 11649,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-09T03:46:04Z",
        "created_at": "2014-02-08T17:33:30Z",
        "updated_at": "2023-05-11T11:08:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "c18b869e58aa4d3bff6958f370f6b643d1223c44",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 16648618,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjY0ODYxOA==",
        "name": "secp256k1",
        "full_name": "bitcoin-core/secp256k1",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/secp256k1",
        "description": "Optimized C library for EC operations on curve secp256k1",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1",
        "archive_url": "https://api.github.com/repos/bitcoin-core/secp256k1/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/secp256k1/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/secp256k1/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/secp256k1/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/secp256k1/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/secp256k1/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/secp256k1.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/secp256k1/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/secp256k1/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/secp256k1/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/secp256k1/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/secp256k1/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/secp256k1.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/secp256k1/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/secp256k1/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/secp256k1/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/secp256k1/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/secp256k1.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/secp256k1/hooks",
        "svn_url": "https://github.com/bitcoin-core/secp256k1",
        "language": "C",
        "forks_count": 962,
        "stargazers_count": 1802,
        "watchers_count": 1802,
        "size": 10374,
        "default_branch": "master",
        "open_issues_count": 145,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T01:00:35Z",
        "created_at": "2014-02-08T17:30:06Z",
        "updated_at": "2023-08-01T08:52:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 598,
    "deletions": 242,
    "changed_files": 6,
    "commits": 2,
    "review_comments": 8,
    "comments": 12
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-28T19:45:20Z",
      "updated_at": "2015-09-28T19:45:20Z",
      "source": {
        "issue": {
          "id": 108170899,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU5MjIwNDc=",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/318",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/318/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/318/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/318/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/318",
          "number": 318,
          "state": "closed",
          "state_reason": null,
          "title": "[Schnorr API BREAK] Improve Schnorr multisigning API + refactoring",
          "body": "Instead of asking users to manually generate nonces separately and combine them, there are now specific stage1, stage2 and combine functions which generate 1) signed nonces 2) partial signatures 3) full signatures. This is easier, faster, and more secure (by baking signing of nonces into the API).\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/318",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/318",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/318.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/318.patch"
          },
          "closed_at": "2015-09-28T19:45:20Z",
          "created_at": "2015-09-24T16:57:14Z",
          "updated_at": "2015-09-28T19:45:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 445025476,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ1MDI1NDc2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/445025476",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-25T23:51:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 445025574,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ1MDI1NTc0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/445025574",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-25T23:52:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 449937682,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ5OTM3Njgy",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/449937682",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-30T01:52:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 450972750,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDUwOTcyNzUw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/450972750",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-31T01:00:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 451463284,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDUxNDYzMjg0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/451463284",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-01T22:27:00Z"
    },
    {
      "event": "commented",
      "id": 152870295,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjg3MDI5NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/152870295",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-01T22:27:28Z",
      "updated_at": "2015-11-01T22:27:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased, and added several guarantee-zeroed-output cases. Ping @gmaxwell \n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-152870295",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "mentioned",
      "id": 451463400,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDUxNDYzNDAw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/451463400",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-01T22:27:28Z"
    },
    {
      "event": "subscribed",
      "id": 451463401,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1MTQ2MzQwMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/451463401",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-01T22:27:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 474721300,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc0NzIxMzAw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/474721300",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T16:45:11Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T18:00:30Z",
      "updated_at": "2015-11-25T18:00:30Z",
      "source": {
        "issue": {
          "id": 118891813,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTE4Mjc0NzQ=",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/359",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/359/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/359/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/359/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/359",
          "number": 359,
          "state": "closed",
          "state_reason": null,
          "title": "[SCHNORR BREAK] Use quadratic-residue-y as symmetry breaker",
          "body": "(Builds on top of #322)\n\nThis changes the implied y coordinate in Schnorr signatures to be the one which is a quadratic residue (the older logic required it to be even). This should be faster, as it doesn't need a modular inverse.\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/359",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/359",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/359.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/359.patch"
          },
          "closed_at": "2016-06-29T13:56:07Z",
          "created_at": "2015-11-25T18:00:30Z",
          "updated_at": "2016-06-29T13:56:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTczOTE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTczOTM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTczOTU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "head_ref_force_pushed",
      "id": 490192094,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDkwMTkyMDk0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/490192094",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T20:40:11Z"
    },
    {
      "event": "commented",
      "id": 164189278,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDE4OTI3OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/164189278",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T20:41:12Z",
      "updated_at": "2015-12-12T20:41:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Addressed nits.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-164189278",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 490473151,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDkwNDczMTUx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/490473151",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-13T21:56:40Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6MzNmMTkxM2FiMjYwMWRiZTY5M2ZmYzA3ZmM2Njk1ZGU3ODQwNzE3Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/33f1913ab2601dbe693ffc07fc6695de78407172",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/33f1913ab2601dbe693ffc07fc6695de78407172",
      "tree": {
        "sha": "b26a745bd4464549337f638e015b0de27c032dc2",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/b26a745bd4464549337f638e015b0de27c032dc2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/c18b869e58aa4d3bff6958f370f6b643d1223c44",
          "sha": "c18b869e58aa4d3bff6958f370f6b643d1223c44",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/c18b869e58aa4d3bff6958f370f6b643d1223c44"
        }
      ],
      "message": "[Schnorr API change] Schnorr multisigning API overhaul",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-12-15T22:47:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-09-23T19:28:13Z"
      },
      "sha": "33f1913ab2601dbe693ffc07fc6695de78407172"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTY2NDg2MTg6OTY4ZTJmNDE1YTVlNzY0ZDE1OWVlMDNlOTU4MTVlYTExNDYwODU0ZQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/968e2f415a5e764d159ee03e95815ea11460854e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/secp256k1/commit/968e2f415a5e764d159ee03e95815ea11460854e",
      "tree": {
        "sha": "35cb3030d4313433f92a2e9ea17d874b1dcae573",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/trees/35cb3030d4313433f92a2e9ea17d874b1dcae573"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/git/commits/33f1913ab2601dbe693ffc07fc6695de78407172",
          "sha": "33f1913ab2601dbe693ffc07fc6695de78407172",
          "html_url": "https://github.com/bitcoin-core/secp256k1/commit/33f1913ab2601dbe693ffc07fc6695de78407172"
        }
      ],
      "message": "Move schnorr documentation to markdown document",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-12-15T22:47:07Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-09-25T21:40:57Z"
      },
      "sha": "968e2f415a5e764d159ee03e95815ea11460854e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 492840339,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDkyODQwMzM5",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/492840339",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-15T22:47:13Z"
    },
    {
      "event": "commented",
      "id": 171751108,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTc1MTEwOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/171751108",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-14T19:24:34Z",
      "updated_at": "2016-01-14T19:24:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi, sorry for the delays, this fell off my radar. Will review today while in flight.\n",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-171751108",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-02T11:40:46Z",
      "updated_at": "2016-02-02T11:40:46Z",
      "source": {
        "issue": {
          "id": 102471000,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDMwODU3NTI=",
          "url": "https://api.github.com/repos/ElementsProject/elements/issues/48",
          "repository_url": "https://api.github.com/repos/ElementsProject/elements",
          "labels_url": "https://api.github.com/repos/ElementsProject/elements/issues/48/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/ElementsProject/elements/issues/48/comments",
          "events_url": "https://api.github.com/repos/ElementsProject/elements/issues/48/events",
          "html_url": "https://github.com/ElementsProject/elements/pull/48",
          "number": 48,
          "state": "closed",
          "state_reason": null,
          "title": "Key tree signatures",
          "body": "Adds:\n- Generic threshold tree code, and ability to iterate over their allowed combinations and count them.\n- Keytree layer that adds serializable key tree objects (which are threshold trees over public key leaves), and ability to compute their Merkle root and branches in logspace.\n- Human-readable format/parse code for key trees.\n- Signing/ismine code that can cope with key tree outputs.\n- Unit tests for all the above.\n- Wallet/walletdb code to store key trees.\n- RPCs addtreesigaddress and createtreesig.\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/ElementsProject/elements/pulls/48",
            "html_url": "https://github.com/ElementsProject/elements/pull/48",
            "diff_url": "https://github.com/ElementsProject/elements/pull/48.diff",
            "patch_url": "https://github.com/ElementsProject/elements/pull/48.patch"
          },
          "closed_at": "2016-02-02T11:40:46Z",
          "created_at": "2015-08-21T22:04:15Z",
          "updated_at": "2016-02-02T11:40:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 184854467,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDg1NDQ2Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/184854467",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-16T19:58:33Z",
      "updated_at": "2016-02-16T19:58:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "@apoelstra Subtle ping\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-184854467",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "mentioned",
      "id": 552568038,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTUyNTY4MDM4",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/552568038",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-16T19:58:33Z"
    },
    {
      "event": "subscribed",
      "id": 552568039,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDU1MjU2ODAzOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/552568039",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-02-16T19:58:33Z"
    },
    {
      "event": "commented",
      "id": 212456921,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjQ1NjkyMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/212456921",
      "actor": {
        "login": "fanatid",
        "id": 2633065,
        "node_id": "MDQ6VXNlcjI2MzMwNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2633065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanatid",
        "html_url": "https://github.com/fanatid",
        "followers_url": "https://api.github.com/users/fanatid/followers",
        "following_url": "https://api.github.com/users/fanatid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanatid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanatid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
        "organizations_url": "https://api.github.com/users/fanatid/orgs",
        "repos_url": "https://api.github.com/users/fanatid/repos",
        "events_url": "https://api.github.com/users/fanatid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanatid/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-20T14:50:12Z",
      "updated_at": "2016-04-20T14:50:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa can you explain `Verification (method 1)`?\n\n```\nx - private key, k - private nonce\nm - 32 byte message, Q - public key, signature pair - (R.x, s)\n\nsigning:\nR = G^k\ne = SHA256(R.x || m)\ns = k - e * x\nsignature is (R.x, s)\n\nverify:\ne = SHA256(R.x || m)\nR' = Q^e + G^s = G^(x * e) + G^(k - e * x) = ???\n```\n\nHow `G^(x * e) + G^(k - e * x)` can be equal to `R = G^k`?\nif instead `+` will be `*` all be ok:\n\n```\nR' = G^(x * e) * G^(k - e * x) = G^(x * e + k - e * x) = G^k\n```\n",
      "user": {
        "login": "fanatid",
        "id": 2633065,
        "node_id": "MDQ6VXNlcjI2MzMwNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2633065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanatid",
        "html_url": "https://github.com/fanatid",
        "followers_url": "https://api.github.com/users/fanatid/followers",
        "following_url": "https://api.github.com/users/fanatid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanatid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanatid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
        "organizations_url": "https://api.github.com/users/fanatid/orgs",
        "repos_url": "https://api.github.com/users/fanatid/repos",
        "events_url": "https://api.github.com/users/fanatid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanatid/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-212456921",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "mentioned",
      "id": 634660842,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NjM0NjYwODQy",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/634660842",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-20T14:50:12Z"
    },
    {
      "event": "subscribed",
      "id": 634660843,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDYzNDY2MDg0Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/634660843",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-20T14:50:12Z"
    },
    {
      "event": "commented",
      "id": 212473383,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjQ3MzM4Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/212473383",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-20T15:17:13Z",
      "updated_at": "2016-04-20T15:18:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "@fanatid I think you're confusing additive notation with multiplicative notation.\n\nWe call the EC group operation `+`, and its repeated application a number of times `*`, so when `a + b = c`, then `c*G = (a+b)*G = a*G + b*G`\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-212473383",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "mentioned",
      "id": 634708440,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NjM0NzA4NDQw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/634708440",
      "actor": {
        "login": "fanatid",
        "id": 2633065,
        "node_id": "MDQ6VXNlcjI2MzMwNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2633065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanatid",
        "html_url": "https://github.com/fanatid",
        "followers_url": "https://api.github.com/users/fanatid/followers",
        "following_url": "https://api.github.com/users/fanatid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanatid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanatid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
        "organizations_url": "https://api.github.com/users/fanatid/orgs",
        "repos_url": "https://api.github.com/users/fanatid/repos",
        "events_url": "https://api.github.com/users/fanatid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanatid/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-20T15:17:13Z"
    },
    {
      "event": "subscribed",
      "id": 634708441,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDYzNDcwODQ0MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/634708441",
      "actor": {
        "login": "fanatid",
        "id": 2633065,
        "node_id": "MDQ6VXNlcjI2MzMwNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2633065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanatid",
        "html_url": "https://github.com/fanatid",
        "followers_url": "https://api.github.com/users/fanatid/followers",
        "following_url": "https://api.github.com/users/fanatid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanatid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanatid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
        "organizations_url": "https://api.github.com/users/fanatid/orgs",
        "repos_url": "https://api.github.com/users/fanatid/repos",
        "events_url": "https://api.github.com/users/fanatid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanatid/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-20T15:17:13Z"
    },
    {
      "event": "commented",
      "id": 212478860,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjQ3ODg2MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/212478860",
      "actor": {
        "login": "fanatid",
        "id": 2633065,
        "node_id": "MDQ6VXNlcjI2MzMwNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2633065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanatid",
        "html_url": "https://github.com/fanatid",
        "followers_url": "https://api.github.com/users/fanatid/followers",
        "following_url": "https://api.github.com/users/fanatid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanatid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanatid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
        "organizations_url": "https://api.github.com/users/fanatid/orgs",
        "repos_url": "https://api.github.com/users/fanatid/repos",
        "events_url": "https://api.github.com/users/fanatid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanatid/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-20T15:30:51Z",
      "updated_at": "2016-04-20T15:30:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa thank you! I really forgot that EC multiplication is repeated addition.\n",
      "user": {
        "login": "fanatid",
        "id": 2633065,
        "node_id": "MDQ6VXNlcjI2MzMwNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2633065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanatid",
        "html_url": "https://github.com/fanatid",
        "followers_url": "https://api.github.com/users/fanatid/followers",
        "following_url": "https://api.github.com/users/fanatid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanatid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanatid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
        "organizations_url": "https://api.github.com/users/fanatid/orgs",
        "repos_url": "https://api.github.com/users/fanatid/repos",
        "events_url": "https://api.github.com/users/fanatid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanatid/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-212478860",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "mentioned",
      "id": 634730609,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NjM0NzMwNjA5",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/634730609",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-20T15:30:51Z"
    },
    {
      "event": "subscribed",
      "id": 634730610,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDYzNDczMDYxMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/634730610",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-20T15:30:51Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTczOTg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTc0MDE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 229363314,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTM2MzMxNA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/229363314",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-06-29T13:56:20Z",
      "updated_at": "2016-06-29T13:56:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Going to do this differently.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-229363314",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "closed",
      "id": 707789373,
      "node_id": "MDExOkNsb3NlZEV2ZW50NzA3Nzg5Mzcz",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/707789373",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-06-29T13:56:20Z"
    },
    {
      "event": "commented",
      "id": 288740314,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODc0MDMxNA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/288740314",
      "actor": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-23T14:40:30Z",
      "updated_at": "2017-03-23T14:41:06Z",
      "author_association": "NONE",
      "body": "> Going to do this differently.\r\n\r\nIs there a source where I can learn how this is being done today?\r\n\r\nAlso not sure if helpful, but I found a working two-stage cosigning implementation for ed25519 in Go:\r\n\r\n* https://godoc.org/github.com/bford/golang-x-crypto/ed25519/cosi\r\n* https://github.com/bford/golang-x-crypto/tree/master/ed25519/cosi",
      "user": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-288740314",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "commented",
      "id": 288863274,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2MzI3NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/288863274",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-23T21:18:41Z",
      "updated_at": "2017-03-23T21:18:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "@prusnak In review we discovered the A*H(A) + B*H(B) + ... scheme was vulnerable to a generalized birthday attack. We have a new scheme, but no strong proof for security yet. I didn't know about CoSi - I'll have a look at it.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-288863274",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "mentioned",
      "id": 1013261167,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAxMzI2MTE2Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/1013261167",
      "actor": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-23T21:18:41Z"
    },
    {
      "event": "subscribed",
      "id": 1013261168,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMTMyNjExNjg=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/1013261168",
      "actor": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-23T21:18:41Z"
    },
    {
      "event": "commented",
      "id": 355566838,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU2NjgzOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/355566838",
      "actor": {
        "login": "ysangkok",
        "id": 284023,
        "node_id": "MDQ6VXNlcjI4NDAyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/284023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ysangkok",
        "html_url": "https://github.com/ysangkok",
        "followers_url": "https://api.github.com/users/ysangkok/followers",
        "following_url": "https://api.github.com/users/ysangkok/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ysangkok/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ysangkok/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ysangkok/subscriptions",
        "organizations_url": "https://api.github.com/users/ysangkok/orgs",
        "repos_url": "https://api.github.com/users/ysangkok/repos",
        "events_url": "https://api.github.com/users/ysangkok/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ysangkok/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-05T14:26:48Z",
      "updated_at": "2018-01-05T14:26:48Z",
      "author_association": "NONE",
      "body": "@prusnak more details here: https://github.com/kanzure/diyhpluswiki/blob/master/transcripts/bitcoin-core-dev-tech/2017-09-06-signature-aggregation.mdwn",
      "user": {
        "login": "ysangkok",
        "id": 284023,
        "node_id": "MDQ6VXNlcjI4NDAyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/284023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ysangkok",
        "html_url": "https://github.com/ysangkok",
        "followers_url": "https://api.github.com/users/ysangkok/followers",
        "following_url": "https://api.github.com/users/ysangkok/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ysangkok/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ysangkok/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ysangkok/subscriptions",
        "organizations_url": "https://api.github.com/users/ysangkok/orgs",
        "repos_url": "https://api.github.com/users/ysangkok/repos",
        "events_url": "https://api.github.com/users/ysangkok/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ysangkok/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-355566838",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    },
    {
      "event": "mentioned",
      "id": 1411356396,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTQxMTM1NjM5Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/1411356396",
      "actor": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-05T14:26:48Z"
    },
    {
      "event": "subscribed",
      "id": 1411356397,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE0MTEzNTYzOTc=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/1411356397",
      "actor": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-05T14:26:48Z"
    },
    {
      "event": "commented",
      "id": 359884779,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTg4NDc3OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/359884779",
      "actor": {
        "login": "businessintegrator",
        "id": 4569377,
        "node_id": "MDQ6VXNlcjQ1NjkzNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4569377?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/businessintegrator",
        "html_url": "https://github.com/businessintegrator",
        "followers_url": "https://api.github.com/users/businessintegrator/followers",
        "following_url": "https://api.github.com/users/businessintegrator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/businessintegrator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/businessintegrator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/businessintegrator/subscriptions",
        "organizations_url": "https://api.github.com/users/businessintegrator/orgs",
        "repos_url": "https://api.github.com/users/businessintegrator/repos",
        "events_url": "https://api.github.com/users/businessintegrator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/businessintegrator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-23T18:28:38Z",
      "updated_at": "2018-01-23T18:28:38Z",
      "author_association": "NONE",
      "body": "What about collision period of the H function?",
      "user": {
        "login": "businessintegrator",
        "id": 4569377,
        "node_id": "MDQ6VXNlcjQ1NjkzNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4569377?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/businessintegrator",
        "html_url": "https://github.com/businessintegrator",
        "followers_url": "https://api.github.com/users/businessintegrator/followers",
        "following_url": "https://api.github.com/users/businessintegrator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/businessintegrator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/businessintegrator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/businessintegrator/subscriptions",
        "organizations_url": "https://api.github.com/users/businessintegrator/orgs",
        "repos_url": "https://api.github.com/users/businessintegrator/repos",
        "events_url": "https://api.github.com/users/businessintegrator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/businessintegrator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#issuecomment-359884779",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/322"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/46085672",
      "pull_request_review_id": null,
      "id": 46085672,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1Njcy",
      "diff_hunk": "@@ -68,104 +77,123 @@ SECP256K1_API int secp256k1_schnorr_recover(\n   const unsigned char *msg32\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n \n-/** Generate a nonce pair deterministically for use with\n- *  secp256k1_schnorr_partial_sign.\n- *  Returns: 1: valid nonce pair was generated.\n- *           0: otherwise (nonce generation function failed)\n- *  Args:    ctx:         pointer to a context object, initialized for signing\n- *                        (cannot be NULL)\n- *  Out:     pubnonce:    public side of the nonce (cannot be NULL)\n- *           privnonce32: private side of the nonce (32 byte) (cannot be NULL)\n- *  In:      msg32:       the 32-byte message hash assumed to be signed (cannot\n- *                        be NULL)\n- *           sec32:       the 32-byte private key (cannot be NULL)\n- *           noncefp:     pointer to a nonce generation function. If NULL,\n- *                        secp256k1_nonce_function_default is used\n- *           noncedata:   pointer to arbitrary data used by the nonce generation\n- *                        function (can be NULL)\n+/** Produce a 32-byte first stage partial multisignature.\n+ *  Returns: 1: a first stage partial signature was created\n+ *           0: otherwise (nonce generation failed, invalid private key, or\n+ *              a very unlikely unsignable combination)\n+ *  Args:    ctx:       pointer to a context object, initialized for signing\n+ *                      (cannot be NULL)\n+ *  Out:     stage1sig32: pointer to a 32-byte array to store the signature\n+ *  In:      msg32:  the 32-byte message hash being signed (cannot be NULL)\n+ *           seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *           noncefp:pointer to a nonce generation function. If NULL,\n+ *                   secp256k1_nonce_function_default is used\n+ *           ndata:  pointer to arbitrary data used by the nonce generation\n+ *                   function (can be NULL)\n+ *\n+ *  All cosigners must use the same msg32, but may use different nonce\n+ *  generation parameters.\n  *\n- *  Do not use the output as a private/public key pair for signing/validation.\n+ *  The purpose of the stage 1 round is establishing a shared public nonce that\n+ *  all cosigners agree on (without revealing their secret nonces), and proving\n+ *  access to their private keys.\n  */\n-SECP256K1_API int secp256k1_schnorr_generate_nonce_pair(\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_multischnorr_stage1(\n   const secp256k1_context* ctx,\n-  secp256k1_pubkey *pubnonce,\n-  unsigned char *privnonce32,\n+  unsigned char *stage1sig32,\n   const unsigned char *msg32,\n   const unsigned char *sec32,\n   secp256k1_nonce_function noncefp,\n   const void* noncedata\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n-/** Produce a partial Schnorr signature, which can be combined using\n- *  secp256k1_schnorr_partial_combine, to end up with a full signature that is\n- *  verifiable using secp256k1_schnorr_verify.\n- *  Returns: 1: signature created successfully.\n- *           0: no valid signature exists with this combination of keys, nonces\n- *              and message (chance around 1 in 2^128)\n- *          -1: invalid private key, nonce, or public nonces.\n- *  Args: ctx:             pointer to context object, initialized for signing (cannot\n- *                         be NULL)\n- *  Out:  sig64:           pointer to 64-byte array to put partial signature in\n- *  In:   msg32:           pointer to 32-byte message to sign\n- *        sec32:           pointer to 32-byte private key\n- *        pubnonce_others: pointer to pubkey containing the sum of the other's\n- *                         nonces (see secp256k1_ec_pubkey_combine)\n- *        secnonce32:      pointer to 32-byte array containing our nonce\n+/** Produce a 64-byte second stage partial multisignature.\n+ *  Returns: 1: a second stage partial signature was created.\n+ *           0: otherwise (nonce generation failed, invalid private key,\n+ *              invalid stage 1 signatures, or a very unlikely unsignable\n+ *              combination)\n+ *  Args: ctx:               pointer to a context object, initialized for\n+ *                           signing and verification (cannot be NULL)\n+ *  Out: stage2sig64:        pointer to a 64-byte array to store the signature\n+ *  In:  other_stage1sig32s: pointer to an array of num_others pointers to\n+ *                           32-byte stage 1 partial multisignatures from all\n+ *                           other cosigners (can only be NULL if num_others is\n+ *                           0)\n+ *       num_others:         the number of cosigners (excluding yourself)\n+ *       msg32:              the 32-byte message hash being signed (cannot be\n+ *                           NULL)\n+ *       sec32:              pointer to a 32-byte secret key (cannot be NULL)\n+ *       noncefp:            pointer to a nonce generation function. If NULL,\n+ *                           secp256k1_nonce_function_default is used\n+ *       ndata:              pointer to arbitrary data used by the nonce\n+ *                           generation function (can be NULL)\n  *\n- * The intended procedure for creating a multiparty signature is:\n- * - Each signer S[i] with private key x[i] and public key Q[i] runs\n- *   secp256k1_schnorr_generate_nonce_pair to produce a pair (k[i],R[i]) of\n- *   private/public nonces.\n- * - All signers communicate their public nonces to each other (revealing your\n- *   private nonce can lead to discovery of your private key, so it should be\n- *   considered secret).\n- * - All signers combine all the public nonces they received (excluding their\n- *   own) using secp256k1_ec_pubkey_combine to obtain an\n- *   Rall[i] = sum(R[0..i-1,i+1..n]).\n- * - All signers produce a partial signature using\n- *   secp256k1_schnorr_partial_sign, passing in their own private key x[i],\n- *   their own private nonce k[i], and the sum of the others' public nonces\n- *   Rall[i].\n- * - All signers communicate their partial signatures to each other.\n- * - Someone combines all partial signatures using\n- *   secp256k1_schnorr_partial_combine, to obtain a full signature.\n- * - The resulting signature is validatable using secp256k1_schnorr_verify, with\n- *   public key equal to the result of secp256k1_ec_pubkey_combine of the\n- *   signers' public keys (sum(Q[0..n])).\n+ *  The second stage uses the stage 1 partial signatures from all other\n+ *  cosigners and computes a stage 2 partial signature. If num_others is 0, the\n+ *  result is a full signature (though different than the one produced by\n+ *  secp256k1_schnorr_sign, given the same msg32, sec32, noncefp, ndata).\n  *\n- *  Note that secp256k1_schnorr_partial_combine and secp256k1_ec_pubkey_combine\n- *  function take their arguments in any order, and it is possible to\n- *  pre-combine several inputs already with one call, and add more inputs later\n- *  by calling the function again (they are commutative and associative).\n+ *  All cosigners must use the same msg32, and the same as in stage1. You must\n+ *  also use the same noncefp/ndata for your own stage1 and stage2. Other\n+ *  participants may use different nonce generation, though.",
      "path": "include/secp256k1_schnorr.h",
      "position": null,
      "original_position": 175,
      "commit_id": "968e2f415a5e764d159ee03e95815ea11460854e",
      "original_commit_id": "7fd00c237cb9a8d4c20d573a3ffbef8973e1bcf4",
      "in_reply_to_id": null,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you should be more explicit: \"Different participants may use different nonce generating functions and data, as long as they are each consistent between stage 1 and stage 2.\"\n\nUp to you.\n\n**Edit** Oh, you say this in the first sentence. So I think replace \"You\" with \"Each participant\" and \"Other\" with \"Different\" then.\n",
      "created_at": "2015-11-28T23:32:34Z",
      "updated_at": "2015-12-15T22:47:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#discussion_r46085672",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/46085672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/46085750",
      "pull_request_review_id": null,
      "id": 46085750,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1NzUw",
      "diff_hunk": "@@ -16,89 +16,84 @@\n #include \"ecmult.h\"\n #include \"ecmult_gen.h\"\n \n-/**\n- * Custom Schnorr-based signature scheme. They support multiparty signing, public key\n- * recovery and batch validation.\n- *\n- * Rationale for verifying R's y coordinate:\n- * In order to support batch validation and public key recovery, the full R point must\n- * be known to verifiers, rather than just its x coordinate. In order to not risk\n- * being more strict in batch validation than normal validation, validators must be\n- * required to reject signatures with incorrect y coordinate. This is only possible\n- * by including a (relatively slow) field inverse, or a field square root. However,\n- * batch validation offers potentially much higher benefits than this cost.\n- *\n- * Rationale for having an implicit y coordinate oddness:\n- * If we commit to having the full R point known to verifiers, there are two mechanism.\n- * Either include its oddness in the signature, or give it an implicit fixed value.\n- * As the R y coordinate can be flipped by a simple negation of the nonce, we choose the\n- * latter, as it comes with nearly zero impact on signing or validation performance, and\n- * saves a byte in the signature.\n- *\n- * Signing:\n- *   Inputs: 32-byte message m, 32-byte scalar key x (!=0), 32-byte scalar nonce k (!=0)\n- *\n- *   Compute point R = k * G. Reject nonce if R's y coordinate is odd (or negate nonce).\n- *   Compute 32-byte r, the serialization of R's x coordinate.\n- *   Compute scalar h = Hash(r || m). Reject nonce if h == 0 or h >= order.\n- *   Compute scalar s = k - h * x.\n- *   The signature is (r, s).\n- *\n- *\n- * Verification:\n- *   Inputs: 32-byte message m, public key point Q, signature: (32-byte r, scalar s)\n- *\n- *   Signature is invalid if s >= order.\n- *   Signature is invalid if r >= p.\n- *   Compute scalar h = Hash(r || m). Signature is invalid if h == 0 or h >= order.\n- *   Option 1 (faster for single verification):\n- *     Compute point R = h * Q + s * G. Signature is invalid if R is infinity or R's y coordinate is odd.\n- *     Signature is valid if the serialization of R's x coordinate equals r.\n- *   Option 2 (allows batch validation and pubkey recovery):\n- *     Decompress x coordinate r into point R, with odd y coordinate. Fail if R is not on the curve.\n- *     Signature is valid if R + h * Q + s * G == 0.\n- */\n-\n-static int secp256k1_schnorr_sig_sign(const secp256k1_ecmult_gen_context* ctx, unsigned char *sig64, const secp256k1_scalar *key, const secp256k1_scalar *nonce, const secp256k1_ge *pubnonce, secp256k1_schnorr_msghash hash, const unsigned char *msg32) {\n-    secp256k1_gej Rj;\n-    secp256k1_ge Ra;\n+static void secp256k1_schnorr_ge_get_b32(unsigned char *b32, secp256k1_ge* p) {\n+    secp256k1_fe_normalize(&p->x);\n+    secp256k1_fe_get_b32(b32, &p->x);\n+}\n+\n+static int secp256k1_schnorr_ge_set_b32(secp256k1_ge* p, const unsigned char *b32) {\n+    secp256k1_fe x;\n+    if (!secp256k1_fe_set_b32(&x, b32)) {\n+        return 0;\n+    }\n+    return secp256k1_ge_set_xo_var(p, &x, 0);\n+}\n+\n+/** Computes {priv = +/- (scalar)b32; pub = priv * G } with pub.y even. */",
      "path": "src/modules/schnorr/schnorr_impl.h",
      "position": null,
      "original_position": 63,
      "commit_id": "968e2f415a5e764d159ee03e95815ea11460854e",
      "original_commit_id": "7fd00c237cb9a8d4c20d573a3ffbef8973e1bcf4",
      "in_reply_to_id": null,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`pub = priv * G + pubothers`\n",
      "created_at": "2015-11-28T23:40:33Z",
      "updated_at": "2015-12-15T22:47:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#discussion_r46085750",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/46085750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/46085784",
      "pull_request_review_id": null,
      "id": 46085784,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1Nzg0",
      "diff_hunk": "@@ -16,89 +16,84 @@\n #include \"ecmult.h\"\n #include \"ecmult_gen.h\"\n \n-/**\n- * Custom Schnorr-based signature scheme. They support multiparty signing, public key\n- * recovery and batch validation.\n- *\n- * Rationale for verifying R's y coordinate:\n- * In order to support batch validation and public key recovery, the full R point must\n- * be known to verifiers, rather than just its x coordinate. In order to not risk\n- * being more strict in batch validation than normal validation, validators must be\n- * required to reject signatures with incorrect y coordinate. This is only possible\n- * by including a (relatively slow) field inverse, or a field square root. However,\n- * batch validation offers potentially much higher benefits than this cost.\n- *\n- * Rationale for having an implicit y coordinate oddness:\n- * If we commit to having the full R point known to verifiers, there are two mechanism.\n- * Either include its oddness in the signature, or give it an implicit fixed value.\n- * As the R y coordinate can be flipped by a simple negation of the nonce, we choose the\n- * latter, as it comes with nearly zero impact on signing or validation performance, and\n- * saves a byte in the signature.\n- *\n- * Signing:\n- *   Inputs: 32-byte message m, 32-byte scalar key x (!=0), 32-byte scalar nonce k (!=0)\n- *\n- *   Compute point R = k * G. Reject nonce if R's y coordinate is odd (or negate nonce).\n- *   Compute 32-byte r, the serialization of R's x coordinate.\n- *   Compute scalar h = Hash(r || m). Reject nonce if h == 0 or h >= order.\n- *   Compute scalar s = k - h * x.\n- *   The signature is (r, s).\n- *\n- *\n- * Verification:\n- *   Inputs: 32-byte message m, public key point Q, signature: (32-byte r, scalar s)\n- *\n- *   Signature is invalid if s >= order.\n- *   Signature is invalid if r >= p.\n- *   Compute scalar h = Hash(r || m). Signature is invalid if h == 0 or h >= order.\n- *   Option 1 (faster for single verification):\n- *     Compute point R = h * Q + s * G. Signature is invalid if R is infinity or R's y coordinate is odd.\n- *     Signature is valid if the serialization of R's x coordinate equals r.\n- *   Option 2 (allows batch validation and pubkey recovery):\n- *     Decompress x coordinate r into point R, with odd y coordinate. Fail if R is not on the curve.\n- *     Signature is valid if R + h * Q + s * G == 0.\n- */\n-\n-static int secp256k1_schnorr_sig_sign(const secp256k1_ecmult_gen_context* ctx, unsigned char *sig64, const secp256k1_scalar *key, const secp256k1_scalar *nonce, const secp256k1_ge *pubnonce, secp256k1_schnorr_msghash hash, const unsigned char *msg32) {\n-    secp256k1_gej Rj;\n-    secp256k1_ge Ra;\n+static void secp256k1_schnorr_ge_get_b32(unsigned char *b32, secp256k1_ge* p) {\n+    secp256k1_fe_normalize(&p->x);\n+    secp256k1_fe_get_b32(b32, &p->x);\n+}\n+\n+static int secp256k1_schnorr_ge_set_b32(secp256k1_ge* p, const unsigned char *b32) {\n+    secp256k1_fe x;\n+    if (!secp256k1_fe_set_b32(&x, b32)) {\n+        return 0;\n+    }\n+    return secp256k1_ge_set_xo_var(p, &x, 0);\n+}\n+\n+/** Computes {priv = +/- (scalar)b32; pub = priv * G } with pub.y even. */\n+static int secp256k1_schnorr_nonces_set_b32(const secp256k1_ecmult_gen_context* ctx, secp256k1_scalar* priv, secp256k1_ge* pub, const unsigned char *b32, const secp256k1_ge* pub_others) {\n+    int overflow = 0;\n+    int flip = 0;\n+    secp256k1_gej gej;\n+\n+    secp256k1_scalar_set_b32(priv, b32, &overflow);\n+    if (overflow || secp256k1_scalar_is_zero(priv)) {\n+        secp256k1_scalar_clear(priv);\n+        return 0;\n+    }\n+    secp256k1_ecmult_gen(ctx, &gej, priv);\n+    if (secp256k1_gej_is_infinity(&gej)) {\n+        return 0;",
      "path": "src/modules/schnorr/schnorr_impl.h",
      "position": null,
      "original_position": 76,
      "commit_id": "968e2f415a5e764d159ee03e95815ea11460854e",
      "original_commit_id": "7fd00c237cb9a8d4c20d573a3ffbef8973e1bcf4",
      "in_reply_to_id": null,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can this branch be hit? If `priv` is zero the above check gets it; if `priv` is n (or higher) then `overflow` should be set and the above check gets it.\n",
      "created_at": "2015-11-28T23:43:58Z",
      "updated_at": "2015-12-15T22:47:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#discussion_r46085784",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/46085784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/47436494",
      "pull_request_review_id": null,
      "id": 47436494,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NDk0",
      "diff_hunk": "@@ -16,89 +16,84 @@\n #include \"ecmult.h\"\n #include \"ecmult_gen.h\"\n \n-/**\n- * Custom Schnorr-based signature scheme. They support multiparty signing, public key\n- * recovery and batch validation.\n- *\n- * Rationale for verifying R's y coordinate:\n- * In order to support batch validation and public key recovery, the full R point must\n- * be known to verifiers, rather than just its x coordinate. In order to not risk\n- * being more strict in batch validation than normal validation, validators must be\n- * required to reject signatures with incorrect y coordinate. This is only possible\n- * by including a (relatively slow) field inverse, or a field square root. However,\n- * batch validation offers potentially much higher benefits than this cost.\n- *\n- * Rationale for having an implicit y coordinate oddness:\n- * If we commit to having the full R point known to verifiers, there are two mechanism.\n- * Either include its oddness in the signature, or give it an implicit fixed value.\n- * As the R y coordinate can be flipped by a simple negation of the nonce, we choose the\n- * latter, as it comes with nearly zero impact on signing or validation performance, and\n- * saves a byte in the signature.\n- *\n- * Signing:\n- *   Inputs: 32-byte message m, 32-byte scalar key x (!=0), 32-byte scalar nonce k (!=0)\n- *\n- *   Compute point R = k * G. Reject nonce if R's y coordinate is odd (or negate nonce).\n- *   Compute 32-byte r, the serialization of R's x coordinate.\n- *   Compute scalar h = Hash(r || m). Reject nonce if h == 0 or h >= order.\n- *   Compute scalar s = k - h * x.\n- *   The signature is (r, s).\n- *\n- *\n- * Verification:\n- *   Inputs: 32-byte message m, public key point Q, signature: (32-byte r, scalar s)\n- *\n- *   Signature is invalid if s >= order.\n- *   Signature is invalid if r >= p.\n- *   Compute scalar h = Hash(r || m). Signature is invalid if h == 0 or h >= order.\n- *   Option 1 (faster for single verification):\n- *     Compute point R = h * Q + s * G. Signature is invalid if R is infinity or R's y coordinate is odd.\n- *     Signature is valid if the serialization of R's x coordinate equals r.\n- *   Option 2 (allows batch validation and pubkey recovery):\n- *     Decompress x coordinate r into point R, with odd y coordinate. Fail if R is not on the curve.\n- *     Signature is valid if R + h * Q + s * G == 0.\n- */\n-\n-static int secp256k1_schnorr_sig_sign(const secp256k1_ecmult_gen_context* ctx, unsigned char *sig64, const secp256k1_scalar *key, const secp256k1_scalar *nonce, const secp256k1_ge *pubnonce, secp256k1_schnorr_msghash hash, const unsigned char *msg32) {\n-    secp256k1_gej Rj;\n-    secp256k1_ge Ra;\n+static void secp256k1_schnorr_ge_get_b32(unsigned char *b32, secp256k1_ge* p) {\n+    secp256k1_fe_normalize(&p->x);\n+    secp256k1_fe_get_b32(b32, &p->x);\n+}\n+\n+static int secp256k1_schnorr_ge_set_b32(secp256k1_ge* p, const unsigned char *b32) {\n+    secp256k1_fe x;\n+    if (!secp256k1_fe_set_b32(&x, b32)) {\n+        return 0;\n+    }\n+    return secp256k1_ge_set_xo_var(p, &x, 0);\n+}\n+\n+/** Computes {priv = +/- (scalar)b32; pub = priv * G } with pub.y even. */\n+static int secp256k1_schnorr_nonces_set_b32(const secp256k1_ecmult_gen_context* ctx, secp256k1_scalar* priv, secp256k1_ge* pub, const unsigned char *b32, const secp256k1_ge* pub_others) {\n+    int overflow = 0;\n+    int flip = 0;\n+    secp256k1_gej gej;\n+\n+    secp256k1_scalar_set_b32(priv, b32, &overflow);\n+    if (overflow || secp256k1_scalar_is_zero(priv)) {\n+        secp256k1_scalar_clear(priv);\n+        return 0;\n+    }\n+    secp256k1_ecmult_gen(ctx, &gej, priv);\n+    if (secp256k1_gej_is_infinity(&gej)) {\n+        return 0;",
      "path": "src/modules/schnorr/schnorr_impl.h",
      "position": null,
      "original_position": 76,
      "commit_id": "968e2f415a5e764d159ee03e95815ea11460854e",
      "original_commit_id": "7fd00c237cb9a8d4c20d573a3ffbef8973e1bcf4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Replaced with VERIFY_CHECK.\n",
      "created_at": "2015-12-12T20:40:25Z",
      "updated_at": "2015-12-15T22:47:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#discussion_r47436494",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/47436494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/47436495",
      "pull_request_review_id": null,
      "id": 47436495,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NDk1",
      "diff_hunk": "@@ -16,89 +16,84 @@\n #include \"ecmult.h\"\n #include \"ecmult_gen.h\"\n \n-/**\n- * Custom Schnorr-based signature scheme. They support multiparty signing, public key\n- * recovery and batch validation.\n- *\n- * Rationale for verifying R's y coordinate:\n- * In order to support batch validation and public key recovery, the full R point must\n- * be known to verifiers, rather than just its x coordinate. In order to not risk\n- * being more strict in batch validation than normal validation, validators must be\n- * required to reject signatures with incorrect y coordinate. This is only possible\n- * by including a (relatively slow) field inverse, or a field square root. However,\n- * batch validation offers potentially much higher benefits than this cost.\n- *\n- * Rationale for having an implicit y coordinate oddness:\n- * If we commit to having the full R point known to verifiers, there are two mechanism.\n- * Either include its oddness in the signature, or give it an implicit fixed value.\n- * As the R y coordinate can be flipped by a simple negation of the nonce, we choose the\n- * latter, as it comes with nearly zero impact on signing or validation performance, and\n- * saves a byte in the signature.\n- *\n- * Signing:\n- *   Inputs: 32-byte message m, 32-byte scalar key x (!=0), 32-byte scalar nonce k (!=0)\n- *\n- *   Compute point R = k * G. Reject nonce if R's y coordinate is odd (or negate nonce).\n- *   Compute 32-byte r, the serialization of R's x coordinate.\n- *   Compute scalar h = Hash(r || m). Reject nonce if h == 0 or h >= order.\n- *   Compute scalar s = k - h * x.\n- *   The signature is (r, s).\n- *\n- *\n- * Verification:\n- *   Inputs: 32-byte message m, public key point Q, signature: (32-byte r, scalar s)\n- *\n- *   Signature is invalid if s >= order.\n- *   Signature is invalid if r >= p.\n- *   Compute scalar h = Hash(r || m). Signature is invalid if h == 0 or h >= order.\n- *   Option 1 (faster for single verification):\n- *     Compute point R = h * Q + s * G. Signature is invalid if R is infinity or R's y coordinate is odd.\n- *     Signature is valid if the serialization of R's x coordinate equals r.\n- *   Option 2 (allows batch validation and pubkey recovery):\n- *     Decompress x coordinate r into point R, with odd y coordinate. Fail if R is not on the curve.\n- *     Signature is valid if R + h * Q + s * G == 0.\n- */\n-\n-static int secp256k1_schnorr_sig_sign(const secp256k1_ecmult_gen_context* ctx, unsigned char *sig64, const secp256k1_scalar *key, const secp256k1_scalar *nonce, const secp256k1_ge *pubnonce, secp256k1_schnorr_msghash hash, const unsigned char *msg32) {\n-    secp256k1_gej Rj;\n-    secp256k1_ge Ra;\n+static void secp256k1_schnorr_ge_get_b32(unsigned char *b32, secp256k1_ge* p) {\n+    secp256k1_fe_normalize(&p->x);\n+    secp256k1_fe_get_b32(b32, &p->x);\n+}\n+\n+static int secp256k1_schnorr_ge_set_b32(secp256k1_ge* p, const unsigned char *b32) {\n+    secp256k1_fe x;\n+    if (!secp256k1_fe_set_b32(&x, b32)) {\n+        return 0;\n+    }\n+    return secp256k1_ge_set_xo_var(p, &x, 0);\n+}\n+\n+/** Computes {priv = +/- (scalar)b32; pub = priv * G } with pub.y even. */",
      "path": "src/modules/schnorr/schnorr_impl.h",
      "position": null,
      "original_position": 63,
      "commit_id": "968e2f415a5e764d159ee03e95815ea11460854e",
      "original_commit_id": "7fd00c237cb9a8d4c20d573a3ffbef8973e1bcf4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's more complicated even. Fixed.\n",
      "created_at": "2015-12-12T20:40:37Z",
      "updated_at": "2015-12-15T22:47:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#discussion_r47436495",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/47436495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/47436501",
      "pull_request_review_id": null,
      "id": 47436501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NTAx",
      "diff_hunk": "@@ -68,104 +77,123 @@ SECP256K1_API int secp256k1_schnorr_recover(\n   const unsigned char *msg32\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n \n-/** Generate a nonce pair deterministically for use with\n- *  secp256k1_schnorr_partial_sign.\n- *  Returns: 1: valid nonce pair was generated.\n- *           0: otherwise (nonce generation function failed)\n- *  Args:    ctx:         pointer to a context object, initialized for signing\n- *                        (cannot be NULL)\n- *  Out:     pubnonce:    public side of the nonce (cannot be NULL)\n- *           privnonce32: private side of the nonce (32 byte) (cannot be NULL)\n- *  In:      msg32:       the 32-byte message hash assumed to be signed (cannot\n- *                        be NULL)\n- *           sec32:       the 32-byte private key (cannot be NULL)\n- *           noncefp:     pointer to a nonce generation function. If NULL,\n- *                        secp256k1_nonce_function_default is used\n- *           noncedata:   pointer to arbitrary data used by the nonce generation\n- *                        function (can be NULL)\n+/** Produce a 32-byte first stage partial multisignature.\n+ *  Returns: 1: a first stage partial signature was created\n+ *           0: otherwise (nonce generation failed, invalid private key, or\n+ *              a very unlikely unsignable combination)\n+ *  Args:    ctx:       pointer to a context object, initialized for signing\n+ *                      (cannot be NULL)\n+ *  Out:     stage1sig32: pointer to a 32-byte array to store the signature\n+ *  In:      msg32:  the 32-byte message hash being signed (cannot be NULL)\n+ *           seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *           noncefp:pointer to a nonce generation function. If NULL,\n+ *                   secp256k1_nonce_function_default is used\n+ *           ndata:  pointer to arbitrary data used by the nonce generation\n+ *                   function (can be NULL)\n+ *\n+ *  All cosigners must use the same msg32, but may use different nonce\n+ *  generation parameters.\n  *\n- *  Do not use the output as a private/public key pair for signing/validation.\n+ *  The purpose of the stage 1 round is establishing a shared public nonce that\n+ *  all cosigners agree on (without revealing their secret nonces), and proving\n+ *  access to their private keys.\n  */\n-SECP256K1_API int secp256k1_schnorr_generate_nonce_pair(\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_multischnorr_stage1(\n   const secp256k1_context* ctx,\n-  secp256k1_pubkey *pubnonce,\n-  unsigned char *privnonce32,\n+  unsigned char *stage1sig32,\n   const unsigned char *msg32,\n   const unsigned char *sec32,\n   secp256k1_nonce_function noncefp,\n   const void* noncedata\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n-/** Produce a partial Schnorr signature, which can be combined using\n- *  secp256k1_schnorr_partial_combine, to end up with a full signature that is\n- *  verifiable using secp256k1_schnorr_verify.\n- *  Returns: 1: signature created successfully.\n- *           0: no valid signature exists with this combination of keys, nonces\n- *              and message (chance around 1 in 2^128)\n- *          -1: invalid private key, nonce, or public nonces.\n- *  Args: ctx:             pointer to context object, initialized for signing (cannot\n- *                         be NULL)\n- *  Out:  sig64:           pointer to 64-byte array to put partial signature in\n- *  In:   msg32:           pointer to 32-byte message to sign\n- *        sec32:           pointer to 32-byte private key\n- *        pubnonce_others: pointer to pubkey containing the sum of the other's\n- *                         nonces (see secp256k1_ec_pubkey_combine)\n- *        secnonce32:      pointer to 32-byte array containing our nonce\n+/** Produce a 64-byte second stage partial multisignature.\n+ *  Returns: 1: a second stage partial signature was created.\n+ *           0: otherwise (nonce generation failed, invalid private key,\n+ *              invalid stage 1 signatures, or a very unlikely unsignable\n+ *              combination)\n+ *  Args: ctx:               pointer to a context object, initialized for\n+ *                           signing and verification (cannot be NULL)\n+ *  Out: stage2sig64:        pointer to a 64-byte array to store the signature\n+ *  In:  other_stage1sig32s: pointer to an array of num_others pointers to\n+ *                           32-byte stage 1 partial multisignatures from all\n+ *                           other cosigners (can only be NULL if num_others is\n+ *                           0)\n+ *       num_others:         the number of cosigners (excluding yourself)\n+ *       msg32:              the 32-byte message hash being signed (cannot be\n+ *                           NULL)\n+ *       sec32:              pointer to a 32-byte secret key (cannot be NULL)\n+ *       noncefp:            pointer to a nonce generation function. If NULL,\n+ *                           secp256k1_nonce_function_default is used\n+ *       ndata:              pointer to arbitrary data used by the nonce\n+ *                           generation function (can be NULL)\n  *\n- * The intended procedure for creating a multiparty signature is:\n- * - Each signer S[i] with private key x[i] and public key Q[i] runs\n- *   secp256k1_schnorr_generate_nonce_pair to produce a pair (k[i],R[i]) of\n- *   private/public nonces.\n- * - All signers communicate their public nonces to each other (revealing your\n- *   private nonce can lead to discovery of your private key, so it should be\n- *   considered secret).\n- * - All signers combine all the public nonces they received (excluding their\n- *   own) using secp256k1_ec_pubkey_combine to obtain an\n- *   Rall[i] = sum(R[0..i-1,i+1..n]).\n- * - All signers produce a partial signature using\n- *   secp256k1_schnorr_partial_sign, passing in their own private key x[i],\n- *   their own private nonce k[i], and the sum of the others' public nonces\n- *   Rall[i].\n- * - All signers communicate their partial signatures to each other.\n- * - Someone combines all partial signatures using\n- *   secp256k1_schnorr_partial_combine, to obtain a full signature.\n- * - The resulting signature is validatable using secp256k1_schnorr_verify, with\n- *   public key equal to the result of secp256k1_ec_pubkey_combine of the\n- *   signers' public keys (sum(Q[0..n])).\n+ *  The second stage uses the stage 1 partial signatures from all other\n+ *  cosigners and computes a stage 2 partial signature. If num_others is 0, the\n+ *  result is a full signature (though different than the one produced by\n+ *  secp256k1_schnorr_sign, given the same msg32, sec32, noncefp, ndata).\n  *\n- *  Note that secp256k1_schnorr_partial_combine and secp256k1_ec_pubkey_combine\n- *  function take their arguments in any order, and it is possible to\n- *  pre-combine several inputs already with one call, and add more inputs later\n- *  by calling the function again (they are commutative and associative).\n+ *  All cosigners must use the same msg32, and the same as in stage1. You must\n+ *  also use the same noncefp/ndata for your own stage1 and stage2. Other\n+ *  participants may use different nonce generation, though.",
      "path": "include/secp256k1_schnorr.h",
      "position": null,
      "original_position": 175,
      "commit_id": "968e2f415a5e764d159ee03e95815ea11460854e",
      "original_commit_id": "7fd00c237cb9a8d4c20d573a3ffbef8973e1bcf4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed. Used your language.\n",
      "created_at": "2015-12-12T20:40:56Z",
      "updated_at": "2015-12-15T22:47:13Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#discussion_r47436501",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/47436501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/60435597",
      "pull_request_review_id": null,
      "id": 60435597,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDM1NTk3",
      "diff_hunk": "@@ -0,0 +1,195 @@\n+Schnorr-SHA256 module\n+=====================\n+\n+This module implements a custom Schnorr-based signature scheme.\n+\n+Features:\n+* Fixed size 64-byte signatures\n+* Public key recovery without additional information\n+* Batch validation (not yet implemented)\n+* Multiparty signing with 2 rounds of communication but no setup\n+\n+### Signature format\n+\n+Signatures and stage 2 partial multisignatures:\n+* 32-byte big endian unsigned integer `R.x` in the range `[0..p-1]`\n+* 32-byte big endian unsigned integer `s` in the range `[0..order-1]`\n+\n+Stage 1 partial multisignatures:\n+* 32-byte big endian unsigned integer `R.x` in the range `[0..p-1]`\n+\n+For a valid signature for message `m` with public key `Q` the following\n+It is computed as:\n+\n+##### Signing\n+\n+Inputs:\n+* 32-byte message `m`\n+* 32-byte scalar private key `x` (`!=0`)\n+* 32-byte scalar private nonce `k` (`!=0`)\n+\n+Steps:\n+* Compute public nonce `R = k * G`.\n+* If R.y is odd, negate `k` and `R`.\n+* Compute scalar `e = SHA256(R.x || m)`. If `e == 0` or `e >= order`, fail.\n+* Compute scalar `s = k - e * x`.\n+* The signature is `(R.x, s)`.\n+\n+##### Verification (method 1)\n+\n+Inputs:\n+* 32-byte message `m`\n+* public key point `Q`\n+* signature pair (field element `R.x`, scalar `s`)\n+\n+Steps:\n+* Signature is invalid if `s >= order`.\n+* Signature is invalid if `R.x >= p`.\n+* Compute scalar `e = SHA256(R.x || m)`. Signature is invalid if `e == 0` or\n+  `e >= order`\n+* Compute point `R' = e * Q + s * G`. Signature is invalid if `R'` is infinity\n+  or `R'.y` is odd.\n+* Signature is valid if `R'.x == R.x`.\n+\n+This method is faster for single signature verification.\n+\n+##### Verification (method 2)\n+\n+Inputs:\n+* 32-byte message `m`\n+* public key point `Q`\n+* signature pair (field element `R.x`, scalar `s`)\n+\n+Steps:\n+* Signature is invalid if `s >= order`.\n+* Signature is invalid if `R.x >= p`.\n+* Compute scalar `e = SHA256(R.x || m)`. Signature is invalid if `e == 0` or\n+  `e >= order`.\n+* Decompress `R.x` into point `R'`, with odd `y` coordinate. Fail if `R'` is\n+  not on the curve.\n+* Signature is valid if `R' + e * Q + s * G == 0`.\n+\n+As this results in a verification equation that is entirely in the point domain,\n+it can be adapted easily for batch verification or public key recovery.\n+\n+##### Multisigning combined public key\n+\n+Inputs:\n+* Public keys `Q(j) = x(j) * G` from all cosigners, for all `j`\n+\n+Steps:\n+* Multiply each of the `Q(j)` values by their hash `SHA256(Q(j))`.\n+* Compute the sum `Q_all` of all `Q(j)` values.\n+* The full combined public key is `Q_all`.\n+\n+##### Multisigning stage 1\n+\n+Inputs:\n+* 32-byte message `m`\n+* 32-byte scalar private nonce `k(i)` (`!=0`)\n+\n+Steps:\n+* Compute public nonce `R(i) = k(i) * G`.\n+* The partial signature is `R(i).x`.\n+\n+##### Multisigning stage 2\n+\n+Inputs:\n+* 32-byte message `m`\n+* 32-byte scalar private key `x(i)` (`!=0`)\n+* 32-byte scalar private nonce `k(i)` (`!=0`)\n+* Partial stage 1 signatures `R(j).x` from all other cosigners, for all `j != i`\n+\n+Steps:\n+* Tweak the private key: multiply `x(i)` by `SHA256(x(i) * G)`.\n+* Compute (or reuse from stage 1) public nonce `R(i) = k(i) * G`.\n+* If `R(i).y` is odd, negate `k(i)` and `R(i)`.\n+* Convert each `R(j).x` coordinate into an `R(j)` point, with even `y`\n+  coordinate.\n+* Compute the sum `R_all(i)` of all the `R(j)` points, including your own\n+  `R(i)`.\n+* If `R_all.y` is odd, negate `k(i)` and `R_all(i)`.\n+* Compute scalar `e = SHA256(R_all(i).x || m)`. If `e == 0` or `e >= order`,\n+  fail.\n+* Compute scalar `s(i) = k(i) - e * x`.\n+* The partial stage 2 signature is `(R_all(i).x, s(i))`.\n+\n+##### Multisigning combine stage 2 signatures into a full signature\n+\n+Inputs:\n+* Partial stage 2 signatures `(R_all(j).x, s(j))` from all cosigners, for all\n+  `j`\n+\n+Steps:\n+* Check whether all `R_all(j).x` values in each of the stage 2 signature are\n+  identical. If not, fail.\n+* Compute the sum `s_all` of all `s(j)` values.\n+* The full combined signature is `(R_all.x, s(i))`.",
      "path": "src/modules/schnorr/schnorr.md",
      "position": 127,
      "original_position": 127,
      "commit_id": "968e2f415a5e764d159ee03e95815ea11460854e",
      "original_commit_id": "968e2f415a5e764d159ee03e95815ea11460854e",
      "in_reply_to_id": null,
      "user": {
        "login": "fanatid",
        "id": 2633065,
        "node_id": "MDQ6VXNlcjI2MzMwNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2633065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanatid",
        "html_url": "https://github.com/fanatid",
        "followers_url": "https://api.github.com/users/fanatid/followers",
        "following_url": "https://api.github.com/users/fanatid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanatid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanatid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
        "organizations_url": "https://api.github.com/users/fanatid/orgs",
        "repos_url": "https://api.github.com/users/fanatid/repos",
        "events_url": "https://api.github.com/users/fanatid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanatid/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`(R_all.x, s_all)` ?\n",
      "created_at": "2016-04-20T15:52:37Z",
      "updated_at": "2016-04-20T15:52:37Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#discussion_r60435597",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/60435597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 127,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/60435659",
      "pull_request_review_id": null,
      "id": 60435659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDM1NjU5",
      "diff_hunk": "@@ -0,0 +1,195 @@\n+Schnorr-SHA256 module\n+=====================\n+\n+This module implements a custom Schnorr-based signature scheme.\n+\n+Features:\n+* Fixed size 64-byte signatures\n+* Public key recovery without additional information\n+* Batch validation (not yet implemented)\n+* Multiparty signing with 2 rounds of communication but no setup\n+\n+### Signature format\n+\n+Signatures and stage 2 partial multisignatures:\n+* 32-byte big endian unsigned integer `R.x` in the range `[0..p-1]`\n+* 32-byte big endian unsigned integer `s` in the range `[0..order-1]`\n+\n+Stage 1 partial multisignatures:\n+* 32-byte big endian unsigned integer `R.x` in the range `[0..p-1]`\n+\n+For a valid signature for message `m` with public key `Q` the following\n+It is computed as:\n+\n+##### Signing\n+\n+Inputs:\n+* 32-byte message `m`\n+* 32-byte scalar private key `x` (`!=0`)\n+* 32-byte scalar private nonce `k` (`!=0`)\n+\n+Steps:\n+* Compute public nonce `R = k * G`.\n+* If R.y is odd, negate `k` and `R`.\n+* Compute scalar `e = SHA256(R.x || m)`. If `e == 0` or `e >= order`, fail.\n+* Compute scalar `s = k - e * x`.\n+* The signature is `(R.x, s)`.\n+\n+##### Verification (method 1)\n+\n+Inputs:\n+* 32-byte message `m`\n+* public key point `Q`\n+* signature pair (field element `R.x`, scalar `s`)\n+\n+Steps:\n+* Signature is invalid if `s >= order`.\n+* Signature is invalid if `R.x >= p`.\n+* Compute scalar `e = SHA256(R.x || m)`. Signature is invalid if `e == 0` or\n+  `e >= order`\n+* Compute point `R' = e * Q + s * G`. Signature is invalid if `R'` is infinity\n+  or `R'.y` is odd.\n+* Signature is valid if `R'.x == R.x`.\n+\n+This method is faster for single signature verification.\n+\n+##### Verification (method 2)\n+\n+Inputs:\n+* 32-byte message `m`\n+* public key point `Q`\n+* signature pair (field element `R.x`, scalar `s`)\n+\n+Steps:\n+* Signature is invalid if `s >= order`.\n+* Signature is invalid if `R.x >= p`.\n+* Compute scalar `e = SHA256(R.x || m)`. Signature is invalid if `e == 0` or\n+  `e >= order`.\n+* Decompress `R.x` into point `R'`, with odd `y` coordinate. Fail if `R'` is\n+  not on the curve.\n+* Signature is valid if `R' + e * Q + s * G == 0`.\n+\n+As this results in a verification equation that is entirely in the point domain,\n+it can be adapted easily for batch verification or public key recovery.\n+\n+##### Multisigning combined public key\n+\n+Inputs:\n+* Public keys `Q(j) = x(j) * G` from all cosigners, for all `j`\n+\n+Steps:\n+* Multiply each of the `Q(j)` values by their hash `SHA256(Q(j))`.\n+* Compute the sum `Q_all` of all `Q(j)` values.\n+* The full combined public key is `Q_all`.\n+\n+##### Multisigning stage 1\n+\n+Inputs:\n+* 32-byte message `m`\n+* 32-byte scalar private nonce `k(i)` (`!=0`)\n+\n+Steps:\n+* Compute public nonce `R(i) = k(i) * G`.\n+* The partial signature is `R(i).x`.\n+\n+##### Multisigning stage 2\n+\n+Inputs:\n+* 32-byte message `m`\n+* 32-byte scalar private key `x(i)` (`!=0`)\n+* 32-byte scalar private nonce `k(i)` (`!=0`)\n+* Partial stage 1 signatures `R(j).x` from all other cosigners, for all `j != i`\n+\n+Steps:\n+* Tweak the private key: multiply `x(i)` by `SHA256(x(i) * G)`.\n+* Compute (or reuse from stage 1) public nonce `R(i) = k(i) * G`.\n+* If `R(i).y` is odd, negate `k(i)` and `R(i)`.\n+* Convert each `R(j).x` coordinate into an `R(j)` point, with even `y`\n+  coordinate.\n+* Compute the sum `R_all(i)` of all the `R(j)` points, including your own\n+  `R(i)`.\n+* If `R_all.y` is odd, negate `k(i)` and `R_all(i)`.\n+* Compute scalar `e = SHA256(R_all(i).x || m)`. If `e == 0` or `e >= order`,\n+  fail.\n+* Compute scalar `s(i) = k(i) - e * x`.",
      "path": "src/modules/schnorr/schnorr.md",
      "position": 114,
      "original_position": 114,
      "commit_id": "968e2f415a5e764d159ee03e95815ea11460854e",
      "original_commit_id": "968e2f415a5e764d159ee03e95815ea11460854e",
      "in_reply_to_id": null,
      "user": {
        "login": "fanatid",
        "id": 2633065,
        "node_id": "MDQ6VXNlcjI2MzMwNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2633065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanatid",
        "html_url": "https://github.com/fanatid",
        "followers_url": "https://api.github.com/users/fanatid/followers",
        "following_url": "https://api.github.com/users/fanatid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanatid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanatid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
        "organizations_url": "https://api.github.com/users/fanatid/orgs",
        "repos_url": "https://api.github.com/users/fanatid/repos",
        "events_url": "https://api.github.com/users/fanatid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanatid/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`s(i) = k(i) - e * x(i)` ?\n",
      "created_at": "2016-04-20T15:52:58Z",
      "updated_at": "2016-04-20T15:52:58Z",
      "html_url": "https://github.com/bitcoin-core/secp256k1/pull/322#discussion_r60435659",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/comments/60435659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/322"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 114,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}