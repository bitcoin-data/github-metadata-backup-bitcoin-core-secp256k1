{
  "type": "issue",
  "issue": {
    "id": 520365351,
    "node_id": "MDU6SXNzdWU1MjAzNjUzNTE=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691",
    "number": 691,
    "state": "open",
    "state_reason": null,
    "title": "cross-testing",
    "body": "In #635 I was convinced that cross-testing is a good thing. It would be nice to have  cross tests for\r\n - https://github.com/elichai/ecc-secp256k1 as inspired by the discussion in #635, or another \"simple\" library \r\n - gnupg. If I understand https://gist.github.com/markblundeberg/af59d7cd234cbdb14dcf9e00f0ea2c17 correctly, it should produce compatible signatures (ignoring the encoding).\r\n",
    "user": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 15,
    "created_at": "2019-11-09T09:18:40Z",
    "updated_at": "2022-02-21T15:41:24Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 552092211,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjA5MjIxMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/552092211",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-09T11:42:53Z",
      "updated_at": "2019-11-09T11:42:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "Just linking to https://github.com/bitcoin-core/secp256k1/pull/641 (which I stopped because there was no more discussion around if it's wanted and how to vendor the code)",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-552092211",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T14:53:30Z",
      "updated_at": "2020-02-14T14:53:30Z",
      "source": {
        "issue": {
          "id": 563725303,
          "node_id": "MDU6SXNzdWU1NjM3MjUzMDM=",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/716",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/716/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/716/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/716/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/716",
          "number": 716,
          "state": "closed",
          "state_reason": "completed",
          "title": "Embed stripped down copy of micro-ecc for comparison tests?",
          "body": "I think tests that compare multiple implementations using a mixture of constructed static vectors and random test cases are obviously a best practice everyone should engage with,  even if the other implementation isn't something that you'd expect anyone to use in production.\r\n\r\nCurrently the the tests have comparison tests w/ openssl. It used to be particularly important to test against openssl because it was important to Bitcoin consensus. An analogous test today would be embedding an old version of libsecp256k1 (yo dawg) but I don't think the library has changed enough to justify that today.  If ever someone writes whole new field or scalar implementations that might be a good idea, however.\r\n\r\nOpenSSL has been at least a minor burden: Its API changes from time to time which breaks the builds, and users can't be counted on to have the development headers (and making them install them for a comparison test seems silly)-- so these important tests have to be optional.\r\n\r\nInstead,  the library source could include a stripped down copy of micro-ecc ( https://github.com/kmackay/micro-ecc ), which is a small, essentially single file library that supports several curves, ecdh and ecdsa. It is at least as portable as libsecp256k1 itself, and under a compatible license. I don't have a particularly high opinion of micro-ecc (on review I found some serious constant-timness bugs and didn't find any evidence of particularly good testing practices, though it does have some testing, which --sadly-- is much better than most crypto code found on the net, including stuff widely promoted as high quality)... but its implementation is pretty distinct from libsecp256k1 so there is a chance that many flaws would be uncorrelated.\r\n\r\nIt would also be fairly easy to add BIP340 schnorr support to micro-ecc and doing so would likely be of value to the public because while I wouldn't recommend micro-ecc to people generally, it does support 8-bit microcontrollers which this library has no intention of supporting. For similar reasons the additional testing of micro-ecc as a side-effect of being harnessed to libsecp would likely be a public good.  Ideally if someone did write schnorr support for it it should be someone who didn't work on this library or bip-340 to reduce correlation.\r\n",
          "user": {
            "login": "gmaxwell",
            "id": 858454,
            "node_id": "MDQ6VXNlcjg1ODQ1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmaxwell",
            "html_url": "https://github.com/gmaxwell",
            "followers_url": "https://api.github.com/users/gmaxwell/followers",
            "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
            "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
            "repos_url": "https://api.github.com/users/gmaxwell/repos",
            "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "closed_at": "2020-02-14T14:53:30Z",
          "created_at": "2020-02-12T03:28:50Z",
          "updated_at": "2020-02-14T14:53:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 586322716,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjMyMjcxNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/586322716",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T14:56:04Z",
      "updated_at": "2020-02-14T14:56:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "@gmaxwell suggests micro-ecc in #716. I think that's by far the simplest alternative (simple, mostly portable C), see #716 for a detailed discussion. I'd prefer this over the other mentioned projects. What do people think?",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-586322716",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "mentioned",
      "id": 3039020179,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzAzOTAyMDE3OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3039020179",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T14:56:04Z"
    },
    {
      "event": "subscribed",
      "id": 3039020182,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwMzkwMjAxODI=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3039020182",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T14:56:04Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-12T14:36:25Z",
      "updated_at": "2020-04-12T14:36:25Z",
      "source": {
        "issue": {
          "id": 598498983,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDAyMzQ3Nzk5",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/738",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/738/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/738/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/738/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/738",
          "number": 738,
          "state": "open",
          "state_reason": null,
          "title": "Replace OpenSSL in cross-testing with micro-ecc(uECC)",
          "body": "Adding cross testing against non-openssl implementation was suggested multiple times\r\nhttps://github.com/bitcoin-core/secp256k1/issues/691\r\nI attempted to do it in https://github.com/bitcoin-core/secp256k1/pull/641 but there wasn't good consensus to add rust even to the testing suite.\r\n\r\n@gmaxwell suggested in https://github.com/bitcoin-core/secp256k1/issues/716 that we can use https://github.com/kmackay/micro-ecc for that.\r\n\r\nSo I integrated uECC into our tests build system and replaced the current openssl cross testing with uECC tests.\r\n\r\nThis is IMHO better for a couple of reasons:\r\n1. uECC is a simpler implementation, so this allows us to test that the different approaches don't produce anything wrong.\r\n2. uECC has a deterministic ECDSA implementation so we also test signatures equivalence(there was a small bug there I had to fix).\r\n3. We replace an external dependency(OpenSSL) with a small vendored one,  which makes things simpler.\r\n4. We could also add BIP-Schnorr impl into uECC when they get merged.\r\n\r\ncc https://github.com/bitcoin-core/secp256k1/issues/736 https://github.com/bitcoin-core/secp256k1/issues/734",
          "user": {
            "login": "elichai",
            "id": 2167860,
            "node_id": "MDQ6VXNlcjIxNjc4NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elichai",
            "html_url": "https://github.com/elichai",
            "followers_url": "https://api.github.com/users/elichai/followers",
            "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
            "organizations_url": "https://api.github.com/users/elichai/orgs",
            "repos_url": "https://api.github.com/users/elichai/repos",
            "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/elichai/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 165017692,
              "node_id": "MDU6TGFiZWwxNjUwMTc2OTI=",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/assurance",
              "name": "assurance",
              "description": "",
              "color": "A6DF3D",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/738",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/738",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/738.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/738.patch"
          },
          "created_at": "2020-04-12T14:36:24Z",
          "updated_at": "2023-05-08T14:49:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T23:32:14Z",
      "updated_at": "2021-09-28T23:32:14Z",
      "source": {
        "issue": {
          "id": 1010191811,
          "node_id": "PR_kwDOAP4Jqs4sajQ9",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/983",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/983/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/983/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/983/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/983",
          "number": 983,
          "state": "closed",
          "state_reason": null,
          "title": "[RFC] Remove OpenSSL testing support",
          "body": "This removes the ability to test against OpenSSL, as well as the OpenSSL verification benchmark.\r\n\r\nThe motivation is that OpenSSL 3 is deprecating part of the API used here (see #869), and I'm not sure it's worth maintaining. We do lose the fact that this is the only test that verifies randomly-generated cases against an independent implementation. On the other hand, there are tons of existing fixed tests now that test all kinds of edge cases already.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/983",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/983",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/983.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/983.patch"
          },
          "closed_at": "2021-10-16T22:36:46Z",
          "created_at": "2021-09-28T20:45:53Z",
          "updated_at": "2022-03-05T20:03:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 945091179,
      "node_id": "IC_kwDOAP4Jqs44VPJr",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/945091179",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-17T10:52:36Z",
      "updated_at": "2021-10-17T10:52:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Now after the OpenSSL tests are gone, we should make this a priority.\r\n\r\nHere are some possibilities:\r\n - [kmackay/micro-ecc](https://github.com/kmackay/micro-ecc) in pure C: See PR #738.\r\n - [elichai/ecc-secp256k1](https://github.com/elichai/ecc-secp256k1) in Rust. That one is nice because @elichai says he wrote it without really looking at our code here. See PR #641.\r\n - [LLFourn/secp256kfun](https://github.com/LLFourn/secp256kfun) in Rust\r\n - [randombit/botan](https://github.com/randombit/botan) in C++  \r\n\r\nI think micro-ecc is a nice option and a good first choice. @elichai would you still interested in getting this in?  \r\n\r\n#641 got stuck because there was no clear commitment to using Rust. I wouldn't opposed to other languages than C in the test but here's a suggestion that I find very  attractive: We could compile the Rust down to (ugly) C using [mrustc](https://github.com/thepowersgang/mrustc) and vendor this C code. This would mean that we get the best of both worlds: One can compare to an independent simple implementation with the same API and one does not need a Rust compiler to run the tests. The same is true for secp256kfun but I don't know how independent that implementation is. (cc @LLFourn)\r\n\r\nBut before we decide on the way forward, here's another very interesting direction: A much more sophisticated approach to this kind of testing is [cryptofuzz](https://github.com/guidovranken/cryptofuzz) by @guidovranken, which does [differential testings of all kinds of algorithms and libraries](https://guidovranken.com/2019/05/14/differential-fuzzing-of-cryptographic-libraries/). For example, it's used to test libsecp256k1 against Botan on oss-fuzz (https://github.com/google/oss-fuzz/pull/5717).\r\n\r\n@guidovranken Were you aware of our OpenSSL cross tests (removed in https://github.com/bitcoin-core/secp256k1/pull/983)? I really wonder how crytofuzz compares against these. I can imagine it would be superior to simply use cryptofuzz and maybe integrate more libraries such as some of the ones mentioned above.\r\n\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-945091179",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "mentioned",
      "id": 5474081676,
      "node_id": "MEE_lADOAP4Jqs4fBCUnzwAAAAFGR9uM",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5474081676",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-17T10:52:36Z"
    },
    {
      "event": "subscribed",
      "id": 5474081677,
      "node_id": "SE_lADOAP4Jqs4fBCUnzwAAAAFGR9uN",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5474081677",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-17T10:52:36Z"
    },
    {
      "event": "mentioned",
      "id": 5474081679,
      "node_id": "MEE_lADOAP4Jqs4fBCUnzwAAAAFGR9uP",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5474081679",
      "actor": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-17T10:52:36Z"
    },
    {
      "event": "subscribed",
      "id": 5474081680,
      "node_id": "SE_lADOAP4Jqs4fBCUnzwAAAAFGR9uQ",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5474081680",
      "actor": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-17T10:52:36Z"
    },
    {
      "event": "mentioned",
      "id": 5474081681,
      "node_id": "MEE_lADOAP4Jqs4fBCUnzwAAAAFGR9uR",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5474081681",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-17T10:52:36Z"
    },
    {
      "event": "subscribed",
      "id": 5474081682,
      "node_id": "SE_lADOAP4Jqs4fBCUnzwAAAAFGR9uS",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5474081682",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-17T10:52:36Z"
    },
    {
      "event": "commented",
      "id": 945218760,
      "node_id": "IC_kwDOAP4Jqs44VuTI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/945218760",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-17T23:43:26Z",
      "updated_at": "2021-10-17T23:43:26Z",
      "author_association": "NONE",
      "body": "- micro-ecc: There were issues with last time I tried and I abandoned testing it: https://github.com/kmackay/micro-ecc/issues/179\r\n- [libecc](https://github.com/ANSSI-FR/libecc) Very good library albeit slow due to timing channel resistance. It is also being fuzzed on OSS-Fuzz against Botan by me.\r\n- Botan is supreme, I use it for testing in almost every crypto project\r\n- I don't know if you're running Wycheproof tests on libsec256k1, but if not, you definitely should. I recently found bugs in another secp256k1 library (https://github.com/paulmillr/noble-secp256k1) *after it was audited* by simply running Wycheproof tests on it.\r\n- [Trezor firmware](https://github.com/trezor/trezor-firmware) is very good and is in fact used in the Cryptofuzz fuzzer for libsecp256k1 https://github.com/google/oss-fuzz/blob/0c1d5231de61b4166281b4d5685aa66e9f4948a8/projects/bitcoin-core/build_cryptofuzz.sh#L73\r\n\r\nApart from testing sign/verify/recover, it is also a good idea to test point validation, addition and multiplication.",
      "user": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-945218760",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "commented",
      "id": 945586382,
      "node_id": "IC_kwDOAP4Jqs44XIDO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/945586382",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-18T09:35:09Z",
      "updated_at": "2021-10-18T09:35:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, that's a helpful overview! Unfortunately the Wycheproof tests do not match our semantics entirely, see https://github.com/google/wycheproof/issues/70 .\r\n\r\n@guidovranken Can you also comment on the high-level ideas here? For example, when it comes to functionatily, do you think cryptofuzz is superior in every aspect, or do you think it would still make sense for us to maintain our own cross tests?\r\n\r\nOf course there are also other considerations besides functionality, e.g., build integration etc. For example, if we think we stick to maintain own tests because it's easier to ship them to the user, I imagine we could still have a short run of cryptofuzz on CI.  ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-945586382",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "mentioned",
      "id": 5477023541,
      "node_id": "MEE_lADOAP4Jqs4fBCUnzwAAAAFGdL81",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5477023541",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-18T09:35:10Z"
    },
    {
      "event": "subscribed",
      "id": 5477023546,
      "node_id": "SE_lADOAP4Jqs4fBCUnzwAAAAFGdL86",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5477023546",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-18T09:35:10Z"
    },
    {
      "event": "commented",
      "id": 946251003,
      "node_id": "IC_kwDOAP4Jqs44ZqT7",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/946251003",
      "actor": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-18T23:43:35Z",
      "updated_at": "2021-10-18T23:43:35Z",
      "author_association": "NONE",
      "body": "> The same is true for secp256kfun but I don't know how independent that implementation is. (cc @LLFourn)\r\n\r\nThe best rust impl to try this approach for would be [k256](https://docs.rs/k256) since it is a completely independent code base and even uses different algorithms for ECC (it uses  projective addition formula from https://eprint.iacr.org/2015/1060.pdf). I was going to move secp256kfun over to using it as a backend eventually anyway.\r\n",
      "user": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-946251003",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "mentioned",
      "id": 5481806075,
      "node_id": "MEE_lADOAP4Jqs4fBCUnzwAAAAFGvbj7",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5481806075",
      "actor": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-18T23:43:36Z"
    },
    {
      "event": "subscribed",
      "id": 5481806077,
      "node_id": "SE_lADOAP4Jqs4fBCUnzwAAAAFGvbj9",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5481806077",
      "actor": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-18T23:43:36Z"
    },
    {
      "event": "commented",
      "id": 946382566,
      "node_id": "IC_kwDOAP4Jqs44aKbm",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/946382566",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T05:37:48Z",
      "updated_at": "2021-10-19T05:37:48Z",
      "author_association": "NONE",
      "body": "> @guidovranken Can you also comment on the high-level ideas here? For example, when it comes to functionatily, do you think cryptofuzz is superior in every aspect, or do you think it would still make sense for us to maintain our own cross tests?\r\n\r\nA notable shortcoming of CF is that it only compares the results produced by various crypto libraries, but not the absence of results. For example it doesn't confirm the absence of a result in these cases:\r\n\r\n- Point multiplication by 0 is an illegal operation and should not produce a result.\r\n- Point addition/multiplication involving invalid points should not produce a result.\r\n- ECDSA recovery that yields a point at infinity pubkey should not produce a result.\r\n- ECDSA verification involving a pubkey or signature which are not valid points may result `false` or it may not produce a result at all.\r\n\r\nTechnically, each operation run in a crypto library returns a `std::optional<Result>`. It returns `std::nullopt` if it cannot compute a result for any reason, and it returns a `Result` if it can. Once the operation has been run in every crypto library, CF filters out all results which are `std::nullopt`. The remaining set is then compared for differences.\r\n\r\nSo in Python-pseudocode:\r\n\r\n```python\r\nresults = []\r\n\r\n# Run operation in each crypto library\r\nfor module in modules:\r\n    results += [ module.Run(operation) ]\r\n\r\n# Filter out nullopt results\r\nresults = filter(lambda r: r != None, results)\r\n\r\n# Detect discrepancies\r\nif len(set(results)) != 1:\r\n    crash()\r\n```\r\n\r\nThis logic exists for a good reason in CF but the corollary is that it can miss certain types of bugs. I do want to address this at some point in the future but for now having a separate test suite is still valuable.",
      "user": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-946382566",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "mentioned",
      "id": 5482771025,
      "node_id": "MEE_lADOAP4Jqs4fBCUnzwAAAAFGzHJR",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5482771025",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T05:37:49Z"
    },
    {
      "event": "subscribed",
      "id": 5482771028,
      "node_id": "SE_lADOAP4Jqs4fBCUnzwAAAAFGzHJU",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5482771028",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T05:37:49Z"
    },
    {
      "event": "commented",
      "id": 946687493,
      "node_id": "IC_kwDOAP4Jqs44bU4F",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/946687493",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T12:48:46Z",
      "updated_at": "2021-10-19T12:48:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "\r\n> The best rust impl to try this approach for would be [k256](https://docs.rs/k256) since it is a completely independent code base and even uses different algorithms for ECC (it uses projective addition formula from https://eprint.iacr.org/2015/1060.pdf). \r\n\r\nI'm not sure how true this is, See for example: https://github.com/RustCrypto/elliptic-curves/pull/59, https://github.com/RustCrypto/elliptic-curves/pull/82",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-946687493",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "commented",
      "id": 947151148,
      "node_id": "IC_kwDOAP4Jqs44dGEs",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/947151148",
      "actor": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T22:24:34Z",
      "updated_at": "2021-10-19T22:24:34Z",
      "author_association": "NONE",
      "body": "> > The best rust impl to try this approach for would be [k256](https://docs.rs/k256) since it is a completely independent code base and even uses different algorithms for ECC (it uses projective addition formula from https://eprint.iacr.org/2015/1060.pdf).\r\n> \r\n> I'm not sure how true this is, See for example: [RustCrypto/elliptic-curves#59](https://github.com/RustCrypto/elliptic-curves/pull/59), [RustCrypto/elliptic-curves#82](https://github.com/RustCrypto/elliptic-curves/pull/82)\r\n\r\nRight. To be clear I think they use different ECC addition/doubling formula -- I guess field/scalar arithmetic could be pretty similar. I wouldn't be the best judge of that. Still I think it's the best candidate if you want to try cross testing against a rust codebase. ",
      "user": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-947151148",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "commented",
      "id": 1036404747,
      "node_id": "IC_kwDOAP4Jqs49xkgL",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1036404747",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T16:46:06Z",
      "updated_at": "2022-02-11T20:25:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> This logic exists for a good reason in CF but the corollary is that it can miss certain types of bugs. I do want to address this at some point in the future but for now having a separate test suite is still valuable.\r\n\r\nCan you elaborate what these good reasons are? Maybe we could help.\r\n\r\nedit: Let me clarify that even if cryptofuzz would be perfect, I still believe it's useful to have simple cross tests in our test suite. cryptofuzz is nothing we will integrate in `make check` (naturally a lot of dependencies, etc). I think it's good to have something which is easy enough to be run by not only by us but also by our users, packagers, etc. It should ideally just work out of the box without any dependencies.   ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-1036404747",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "commented",
      "id": 1036596727,
      "node_id": "IC_kwDOAP4Jqs49yTX3",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1036596727",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T20:30:42Z",
      "updated_at": "2022-02-11T20:30:42Z",
      "author_association": "NONE",
      "body": "The \"good reason\" is that I allow every library to fail executing an operation for any or no reason. Reasons include:\r\n\r\n- In some libraries I induce random allocation failures, to test its resiliency. If a malloc() fails, then the operation should be allowed to fail.\r\n- In some libraries I hook the PRNG that a library is using (for example for ECDSA signing). For particular outputs of the PRNG, it should be allowed to fail.\r\n- Some libraries have fixed constraints, such as a predefined bignum size. Therefore it is normal that some operations, like multiplication, will fail.\r\n- A library might be implementing only a subset of a primitive in a way that is adequate for its intended usage domain.\r\n\r\nIn some cases it is dubious whether a certain function failing is signalling some specific information.\r\nFor example, if a function which computes a modular inverse fails, is it due to an internal error (e.g. malloc failure) or is it signalling that the inverse does not exist?\r\nI need to review these on a case-by-case basis, so I cannot simply interpret failure as a bug by default.\r\n\r\nCurrently, the ECC point operations all return a `std::optional<component::ECC_Point>`. The `component::ECC_Point` struct is something like this:\r\n\r\n```\r\nstruct {\r\n\tstd::string X;\r\n\tstd::string Y;\r\n};\r\n```\r\n\r\nIn hindsight it would have been better if this struct also included a field `bool is_infinity`. I could change this, but I would have to do it for all modules, otherwise the whole thing won't compile anymore, so that will take some time.\r\n\r\nAs a workaround I've started to add asserts to various libraries to ensure certain operations conform to certain expectations.\r\n\r\nFor example, in secp256k1, I now have:\r\n\r\n- Multiplication of valid point must succeed except if scalar is 0 (or multiple of order): https://github.com/guidovranken/cryptofuzz/blob/1cacacc30c43ef5ff9d726eeede90831d55a40e0/modules/secp256k1/module.cpp#L1121-L1127\r\n\r\n- Negation of valid point must yield valid point: https://github.com/guidovranken/cryptofuzz/blob/1cacacc30c43ef5ff9d726eeede90831d55a40e0/modules/secp256k1/module.cpp#L1191-L1194\r\n\r\nI want to add similar asserts for point addition and point doubling, where the logic will be:\r\n\r\n- Addition of two valid points must produce a valid point UNLESS both points are negations of eachother, in which case it must produce point at infinity\r\n- Point doubling of a valid point must always succeed\r\n\r\nFeel free to specify additional invariants for any secp256k1 function/operation and I will implement it in the fuzzer.",
      "user": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-1036596727",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "commented",
      "id": 1044261451,
      "node_id": "IC_kwDOAP4Jqs4-PipL",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1044261451",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-18T10:04:07Z",
      "updated_at": "2022-02-18T10:04:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "@guidovranken Makes sense. Here's another random thought (that may be stupid): Did you ever consider adding an old version of libsecp256k1? We have done so many changes that this may be interesting. On the other hand, I don't know if this adds much to the diversity of implementations. (Maybe it's useful to cross-test new libsecp256k1 against old libsecp256k1 but not if you're anyway testing in parallel against all the other libraries?)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-1044261451",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "mentioned",
      "id": 6097587758,
      "node_id": "MEE_lADOAP4Jqs4fBCUnzwAAAAFrcc4u",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6097587758",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-18T10:04:08Z"
    },
    {
      "event": "subscribed",
      "id": 6097587766,
      "node_id": "SE_lADOAP4Jqs4fBCUnzwAAAAFrcc42",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6097587766",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-18T10:04:08Z"
    },
    {
      "event": "commented",
      "id": 1046375275,
      "node_id": "IC_kwDOAP4Jqs4-Xmtr",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1046375275",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T01:09:30Z",
      "updated_at": "2022-02-21T01:09:30Z",
      "author_association": "NONE",
      "body": "@real-or-random \r\n\r\nTesting two versions of the same library in the same fuzzer binary is difficult due to symbol collisions, though it is possible by launching an external process.\r\n\r\nAfter your suggestion I made some changes to the harness to allow compiling it with older versions of libsecp256k1 (specifically at the last commit of 2019 and the last commit of 2018 -- these were arbitrary choices): https://github.com/guidovranken/cryptofuzz/blob/master/modules/secp256k1/README.md\r\n\r\nI ran the fuzzer on those and did not find anything amiss.\r\n\r\nAre there any specific older versions that you think are worthwhile to test? Maybe specific releases of the library that are still in widespread use (for example by Ethereum)? I suppose it would be valuable to discover bugs in older versions even if they are fixed in the current version. Sometimes software projects fix bugs while addressing something else, without ever knowing there was a bug, so this can be meaningful. I can even add an additional fuzzer for an older libsecp256k1 version to the OSS-Fuzz project.",
      "user": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-1046375275",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "mentioned",
      "id": 6108132480,
      "node_id": "MEE_lADOAP4Jqs4fBCUnzwAAAAFsErSA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6108132480",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T01:09:31Z"
    },
    {
      "event": "subscribed",
      "id": 6108132486,
      "node_id": "SE_lADOAP4Jqs4fBCUnzwAAAAFsErSG",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6108132486",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T01:09:31Z"
    },
    {
      "event": "commented",
      "id": 1046850833,
      "node_id": "IC_kwDOAP4Jqs4-Za0R",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1046850833",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T12:58:27Z",
      "updated_at": "2022-02-21T12:58:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "@guidovranken one potential source of old versions might be the bundled copies of `libsecp256k1` in [rust-secp256k1](https://github.com/rust-bitcoin/rust-secp256k1/). These are in the directory `secp256k1-sys/depend/secp256k1`; the revision used is recorded in the file `secp256k1-sys/depend/secp256k1-HEAD-revision.txt`; and all of the externally linked symbols have been conveniently renamed to include version numbers.\r\n\r\nNot commenting on whether this is a useful direction to go in or not, but if you *did* want to do it, here is a corpus.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-1046850833",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "mentioned",
      "id": 6111413983,
      "node_id": "MEE_lADOAP4Jqs4fBCUnzwAAAAFsRMbf",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6111413983",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T12:58:27Z"
    },
    {
      "event": "subscribed",
      "id": 6111413991,
      "node_id": "SE_lADOAP4Jqs4fBCUnzwAAAAFsRMbn",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6111413991",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T12:58:27Z"
    },
    {
      "event": "commented",
      "id": 1047009129,
      "node_id": "IC_kwDOAP4Jqs4-aBdp",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1047009129",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T15:41:24Z",
      "updated_at": "2022-02-21T15:41:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Are there any specific older versions that you think are worthwhile to test?\r\n\r\nI didn't have anything specific in mind. My suggestion was simply based on the observation that a lot of code has been changed during the keys, including replacement of entire internal algorithms (safegcd for modinv, or https://github.com/bitcoin-core/secp256k1/pull/1033/commits/557b31fac36529948709d4bfcc00ad3acb7e83b9 for a very recent example, ...) \r\n\r\n> I suppose it would be valuable to discover bugs in older versions even if they are fixed in the current version. Sometimes software projects fix bugs while addressing something else, without ever knowing there was a bug, so this can be meaningful.\r\n\r\nIndeed, this was my thinking.\r\n\r\n> Maybe specific releases of the library that are still in widespread use (for example by Ethereum)?\r\n\r\nYeah, those are an obvious choice. A lot of projects vendor our code including (old releases of) Bitcoin Core, and lightning implementations, many many altcoins. I think these are good choices for secp256k1, as are the versions bundled by rust-secp256k1 or other bindings as mentioned by Andrew. \r\n\r\nIn the end I think there are so many valid choices that I think I would just pick one or two more or less arbitrary. And covering \"time\" as much as possible is useful and your approach of taking the last commit in a year does the job. I think a mix of old and more recent versions is interesting: A very old version still in use is good as a target to find bugs and more recent versions are good as reference because they tend to have the same API (and support Schnorrsig etc). \r\n\r\nI think if you run cryptofuzz with libsecp256k1 plus 10 other libraries, then I'd suppose adding an old version does not add much if you want to find bugs in the current version. But if you want to find bugs in older versions of libsecp256k1, then of course it makes a lot of sense to run the old version.  \r\n\r\n> I can even add an additional fuzzer for an older libsecp256k1 version to the OSS-Fuzz project.\r\n\r\n(With my limited knowledge of the available resources there etc.,) this sounds interesting at least. \r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/691#issuecomment-1047009129",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/691"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-06T21:35:16Z",
      "updated_at": "2022-04-06T21:35:16Z",
      "source": {
        "issue": {
          "id": 789444107,
          "node_id": "MDU6SXNzdWU3ODk0NDQxMDc=",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/869",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/869/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/869/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/869/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/869",
          "number": 869,
          "state": "closed",
          "state_reason": "completed",
          "title": "OpenSSL 3 will deprecate some of the functions we use in tests",
          "body": "```\r\n/Users/rex/secp256k1 on branch master rex@MacBook-Pro-2018% ./autogen.sh \r\nglibtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.\r\nglibtoolize: copying file 'build-aux/ltmain.sh'\r\nglibtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'build-aux/m4'.\r\nglibtoolize: copying file 'build-aux/m4/libtool.m4'\r\nglibtoolize: copying file 'build-aux/m4/ltoptions.m4'\r\nglibtoolize: copying file 'build-aux/m4/ltsugar.m4'\r\nglibtoolize: copying file 'build-aux/m4/ltversion.m4'\r\nglibtoolize: copying file 'build-aux/m4/lt~obsolete.m4'\r\nconfigure.ac:15: installing 'build-aux/compile'\r\nconfigure.ac:5: installing 'build-aux/config.guess'\r\nconfigure.ac:5: installing 'build-aux/config.sub'\r\nconfigure.ac:9: installing 'build-aux/install-sh'\r\nconfigure.ac:9: installing 'build-aux/missing'\r\nMakefile.am: installing 'build-aux/depcomp'\r\nparallel-tests: installing 'build-aux/test-driver'\r\n/Users/rex/secp256k1 on branch master rex@MacBook-Pro-2018% ./configure \r\nchecking build system type... x86_64-apple-darwin20.3.0\r\nchecking host system type... x86_64-apple-darwin20.3.0\r\nchecking for a BSD-compatible install... /opt/local/bin/ginstall -c\r\nchecking whether build environment is sane... yes\r\nchecking for a thread-safe mkdir -p... /opt/local/bin/gmkdir -p\r\nchecking for gawk... gawk\r\nchecking whether make sets $(MAKE)... yes\r\nchecking whether make supports nested variables... yes\r\nchecking how to print strings... printf\r\nchecking whether make supports the include directive... yes (GNU style)\r\nchecking for gcc... gcc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables... \r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to accept ISO C89... none needed\r\nchecking whether gcc understands -c and -o together... rm: conftest.dSYM: is a directory\r\nyes\r\nchecking dependency style of gcc... gcc3\r\nchecking for a sed that does not truncate output... /opt/local/bin/gsed\r\nchecking for grep that handles long lines and -e... /opt/local/bin/ggrep\r\nchecking for egrep... /opt/local/bin/ggrep -E\r\nchecking for fgrep... /opt/local/bin/ggrep -F\r\nchecking for ld used by gcc... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld\r\nchecking if the linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) is GNU ld... no\r\nchecking for BSD- or MS-compatible name lister (nm)... /opt/local/bin/nm -B\r\nchecking the name lister (/opt/local/bin/nm -B) interface... rm: conftest.dSYM: is a directory\r\nBSD nm\r\nchecking whether ln -s works... yes\r\nchecking the maximum length of command line arguments... 786432\r\nchecking how to convert x86_64-apple-darwin20.3.0 file names to x86_64-apple-darwin20.3.0 format... func_convert_file_noop\r\nchecking how to convert x86_64-apple-darwin20.3.0 file names to toolchain format... func_convert_file_noop\r\nchecking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld option to reload object files... -r\r\nchecking for objdump... objdump\r\nchecking how to recognize dependent libraries... pass_all\r\nchecking for dlltool... no\r\nchecking how to associate runtime and link libraries... printf %s\\n\r\nchecking for ar... ar\r\nchecking for archiver @FILE support... rm: conftest.dSYM: is a directory\r\nno\r\nchecking for strip... strip\r\nchecking for ranlib... ranlib\r\nchecking command to parse /opt/local/bin/nm -B output from gcc object... rm: conftest.dSYM: is a directory\r\nok\r\nchecking for sysroot... no\r\nchecking for a working dd... /bin/dd\r\nchecking how to truncate binary pipes... /bin/dd bs=4096 count=1\r\nchecking for mt... no\r\nchecking if : is a manifest tool... no\r\nchecking for dsymutil... dsymutil\r\nchecking for nmedit... nmedit\r\nchecking for lipo... lipo\r\nchecking for otool... otool\r\nchecking for otool64... no\r\nchecking for -single_module linker flag... yes\r\nchecking for -exported_symbols_list linker flag... yes\r\nchecking for -force_load linker flag... yes\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking for ANSI C header files... yes\r\nchecking for sys/types.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for memory.h... yes\r\nchecking for strings.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for unistd.h... yes\r\nchecking for dlfcn.h... yes\r\nchecking for objdir... .libs\r\nchecking if gcc supports -fno-rtti -fno-exceptions... yes\r\nchecking for gcc option to produce PIC... -fno-common -DPIC\r\nchecking if gcc PIC flag -fno-common -DPIC works... yes\r\nchecking if gcc static flag -static works... no\r\nchecking if gcc supports -c -o file.o... yes\r\nchecking if gcc supports -c -o file.o... (cached) yes\r\nchecking whether the gcc linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes\r\nchecking dynamic linker characteristics... darwin20.3.0 dyld\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking whether stripping libraries is possible... yes\r\nchecking if libtool supports shared libraries... yes\r\nchecking whether to build shared libraries... yes\r\nchecking whether to build static libraries... yes\r\nchecking whether make supports nested variables... (cached) yes\r\nchecking for pkg-config... /opt/local/bin/pkg-config\r\nchecking pkg-config is at least version 0.9.0... yes\r\nchecking for ar... /opt/local/bin/ar\r\nchecking for ranlib... /opt/local/bin/ranlib\r\nchecking for strip... /opt/local/bin/strip\r\nchecking for gcc option to accept ISO C89... (cached) none needed\r\nchecking dependency style of gcc... gcc3\r\nchecking for brew... no\r\nchecking for port... /opt/local/bin/port\r\nchecking if gcc supports -std=c89 -pedantic -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes -Wundef -Wno-unused-function -Wno-long-long -Wno-overlength-strings... yes\r\nchecking if gcc supports -fvisibility=hidden... yes\r\nchecking valgrind/memcheck.h usability... yes\r\nchecking valgrind/memcheck.h presence... yes\r\nchecking for valgrind/memcheck.h... yes\r\nchecking for x86_64 assembly availability... yes\r\nchecking gmp.h usability... yes\r\nchecking gmp.h presence... yes\r\nchecking for gmp.h... yes\r\nchecking for __gmpz_init in -lgmp... yes\r\nchecking for libcrypto... yes\r\nchecking for main in -lcrypto... yes\r\nchecking for EC functions in libcrypto... yes\r\nchecking that generated files are newer than configure... done\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating libsecp256k1.pc\r\nconfig.status: creating src/libsecp256k1-config.h\r\nconfig.status: executing depfiles commands\r\nconfig.status: executing libtool commands\r\n\r\nBuild Options:\r\n  with ecmult precomp     = yes\r\n  with external callbacks = no\r\n  with benchmarks         = yes\r\n  with tests              = yes\r\n  with openssl tests      = yes\r\n  with coverage           = no\r\n  module ecdh             = no\r\n  module recovery         = no\r\n  module extrakeys        = no\r\n  module schnorrsig       = no\r\n\r\n  asm                     = x86_64\r\n  bignum                  = gmp\r\n  ecmult window size      = 15\r\n  ecmult gen prec. bits   = 4\r\n\r\n  valgrind                = yes\r\n  CC                      = gcc\r\n  CFLAGS                  = -O2 -fvisibility=hidden -std=c89 -pedantic -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes -Wundef -Wno-unused-function -Wno-long-long -Wno-overlength-strings -W -g\r\n  CPPFLAGS                =   -isystem /opt/local/include\r\n  LDFLAGS                 =  -L/opt/local/lib\r\n\r\n  CC_FOR_BUILD            = gcc\r\n  CFLAGS_FOR_BUILD        = -O2 -fvisibility=hidden -std=c89 -pedantic -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes -Wundef -Wno-unused-function -Wno-long-long -Wno-overlength-strings -W -g\r\n  CPPFLAGS_FOR_BUILD      =   -isystem /opt/local/include\r\n  LDFLAGS_FOR_BUILD       =  -L/opt/local/lib\r\n/Users/rex/secp256k1 on branch master rex@MacBook-Pro-2018% make -j12\r\ngcc -isystem /opt/local/include -I. -I./src -O2 -fvisibility=hidden -std=c89 -pedantic -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes -Wundef -Wno-unused-function -Wno-long-long -Wno-overlength-strings -W -g -c src/gen_context.c -o gen_context.o\r\n  CC       src/bench_verify-bench_verify.o\r\n  CC       src/bench_sign.o\r\n  CC       src/valgrind_ctime_test.o\r\n  CC       src/exhaustive_tests-tests_exhaustive.o\r\nsrc/bench_verify.c:72:22: warning: 'ECDSA_verify' is deprecated [-Wdeprecated-declarations]\r\n            result = ECDSA_verify(0, &data->msg[0], sizeof(data->msg), &data->sig[0], data->siglen, pkey) == (i == 0);\r\n                     ^\r\n/usr/local/include/openssl/ec.h:1402:1: note: 'ECDSA_verify' has been explicitly marked deprecated here\r\nDEPRECATEDIN_3_0(int ECDSA_verify(int type, const unsigned char *dgst,\r\n^\r\n/usr/local/include/openssl/macros.h:182:49: note: expanded from macro 'DEPRECATEDIN_3_0'\r\n#   define DEPRECATEDIN_3_0(f)                  OSSL_DEPRECATEDIN_3_0 f;\r\n                                                ^\r\n/usr/local/include/openssl/macros.h:180:49: note: expanded from macro 'OSSL_DEPRECATEDIN_3_0'\r\n#   define OSSL_DEPRECATEDIN_3_0                OSSL_DEPRECATED(3.0)\r\n                                                ^\r\n/usr/local/include/openssl/macros.h:60:52: note: expanded from macro 'OSSL_DEPRECATED'\r\n#     define OSSL_DEPRECATED(since) __attribute__((deprecated))\r\n                                                   ^\r\n1 warning generated.\r\n  CCLD     exhaustive_tests\r\ngcc -O2 -fvisibility=hidden -std=c89 -pedantic -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes -Wundef -Wno-unused-function -Wno-long-long -Wno-overlength-strings -W -g -L/opt/local/lib gen_context.o -o gen_context\r\n./gen_context\r\n  CC       src/libsecp256k1_la-secp256k1.lo\r\n  CC       src/bench_internal-bench_internal.o\r\n  CC       src/tests-tests.o\r\n  CC       src/bench_ecmult-bench_ecmult.o\r\nsrc/tests.c:5409:11: warning: 'ECDSA_sign' is deprecated [-Wdeprecated-declarations]\r\n    CHECK(ECDSA_sign(0, message, sizeof(message), signature, &sigsize, ec_key));\r\n          ^\r\n/usr/local/include/openssl/ec.h:1369:1: note: 'ECDSA_sign' has been explicitly marked deprecated here\r\nDEPRECATEDIN_3_0(int ECDSA_sign(int type, const unsigned char *dgst,\r\n^\r\n/usr/local/include/openssl/macros.h:182:49: note: expanded from macro 'DEPRECATEDIN_3_0'\r\n#   define DEPRECATEDIN_3_0(f)                  OSSL_DEPRECATEDIN_3_0 f;\r\n                                                ^\r\n/usr/local/include/openssl/macros.h:180:49: note: expanded from macro 'OSSL_DEPRECATEDIN_3_0'\r\n#   define OSSL_DEPRECATEDIN_3_0                OSSL_DEPRECATED(3.0)\r\n                                                ^\r\n/usr/local/include/openssl/macros.h:60:52: note: expanded from macro 'OSSL_DEPRECATED'\r\n#     define OSSL_DEPRECATED(since) __attribute__((deprecated))\r\n                                                   ^\r\nsrc/tests.c:5418:11: warning: 'ECDSA_verify' is deprecated [-Wdeprecated-declarations]\r\n    CHECK(ECDSA_verify(0, message, sizeof(message), signature, secp_sigsize, ec_key) == 1);\r\n          ^\r\n/usr/local/include/openssl/ec.h:1402:1: note: 'ECDSA_verify' has been explicitly marked deprecated here\r\nDEPRECATEDIN_3_0(int ECDSA_verify(int type, const unsigned char *dgst,\r\n^\r\n/usr/local/include/openssl/macros.h:182:49: note: expanded from macro 'DEPRECATEDIN_3_0'\r\n#   define DEPRECATEDIN_3_0(f)                  OSSL_DEPRECATEDIN_3_0 f;\r\n                                                ^\r\n/usr/local/include/openssl/macros.h:180:49: note: expanded from macro 'OSSL_DEPRECATEDIN_3_0'\r\n#   define OSSL_DEPRECATEDIN_3_0                OSSL_DEPRECATED(3.0)\r\n                                                ^\r\n/usr/local/include/openssl/macros.h:60:52: note: expanded from macro 'OSSL_DEPRECATED'\r\n#     define OSSL_DEPRECATED(since) __attribute__((deprecated))\r\n                                                   ^\r\n  CCLD     bench_ecmult\r\n  CCLD     bench_internal\r\n  CCLD     libsecp256k1.la\r\n  CCLD     bench_verify\r\n  CCLD     bench_sign\r\n  CCLD     valgrind_ctime_test\r\n2 warnings generated.\r\n  CCLD     tests\r\n/Users/rex/secp256k1 on branch master rex@MacBook-Pro-2018% clang --version\r\nApple clang version 12.0.0 (clang-1200.0.32.28)\r\nTarget: x86_64-apple-darwin20.3.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n```",
          "user": {
            "login": "rex4539",
            "id": 227442,
            "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rex4539",
            "html_url": "https://github.com/rex4539",
            "followers_url": "https://api.github.com/users/rex4539/followers",
            "following_url": "https://api.github.com/users/rex4539/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/rex4539/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/rex4539/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
            "organizations_url": "https://api.github.com/users/rex4539/orgs",
            "repos_url": "https://api.github.com/users/rex4539/repos",
            "events_url": "https://api.github.com/users/rex4539/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/rex4539/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "closed_at": "2022-04-06T21:35:21Z",
          "created_at": "2021-01-19T22:49:45Z",
          "updated_at": "2022-04-06T21:35:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "BerryYoghurt",
        "id": 58439150,
        "node_id": "MDQ6VXNlcjU4NDM5MTUw",
        "avatar_url": "https://avatars.githubusercontent.com/u/58439150?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BerryYoghurt",
        "html_url": "https://github.com/BerryYoghurt",
        "followers_url": "https://api.github.com/users/BerryYoghurt/followers",
        "following_url": "https://api.github.com/users/BerryYoghurt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BerryYoghurt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BerryYoghurt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BerryYoghurt/subscriptions",
        "organizations_url": "https://api.github.com/users/BerryYoghurt/orgs",
        "repos_url": "https://api.github.com/users/BerryYoghurt/repos",
        "events_url": "https://api.github.com/users/BerryYoghurt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BerryYoghurt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T19:49:46Z",
      "updated_at": "2022-05-16T19:49:46Z",
      "source": {
        "issue": {
          "id": 1237636615,
          "node_id": "I_kwDOAP4Jqs5JxNYH",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1108",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1108/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1108/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1108/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1108",
          "number": 1108,
          "state": "open",
          "state_reason": null,
          "title": "Cross testing against a naïve implementation",
          "body": "Hi. I am an SoB intern working with @real-or-random as my mentor.\r\n\r\nAfter reading #691 and going through the links provided there, I thought I could pick up where #641 left off.\r\nIn particular, I am planning to transpile the Rust library to C.\r\n\r\nI know of two approaches to transpile Rust to C:\r\n\r\n1. Emit LLVM using `rustc` then use [llvm-cbe](https://github.com/JuliaComputingOSS/llvm-cbe) to generate C.\r\n2. Use [mrustc](https://github.com/thepowersgang/mrustc) to generate C directly.\r\n\r\nThe LLVM approach seems not to work (neither `clang` nor `gcc` are happy with the generated C). So `mrustc` seems to be the way to go.\r\n\r\nIf anybody knows of a third way, I'd be happy to explore it too, just in case `mrustc` fails midway",
          "user": {
            "login": "BerryYoghurt",
            "id": 58439150,
            "node_id": "MDQ6VXNlcjU4NDM5MTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/58439150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BerryYoghurt",
            "html_url": "https://github.com/BerryYoghurt",
            "followers_url": "https://api.github.com/users/BerryYoghurt/followers",
            "following_url": "https://api.github.com/users/BerryYoghurt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/BerryYoghurt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/BerryYoghurt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/BerryYoghurt/subscriptions",
            "organizations_url": "https://api.github.com/users/BerryYoghurt/orgs",
            "repos_url": "https://api.github.com/users/BerryYoghurt/repos",
            "events_url": "https://api.github.com/users/BerryYoghurt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/BerryYoghurt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 2,
          "created_at": "2022-05-16T19:49:46Z",
          "updated_at": "2022-06-10T15:20:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T16:06:27Z",
      "updated_at": "2023-05-08T16:06:27Z",
      "source": {
        "issue": {
          "id": 1283710567,
          "node_id": "PR_kwDOAP4Jqs46T6NS",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1112",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1112/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1112/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1112/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1112",
          "number": 1112,
          "state": "closed",
          "state_reason": null,
          "title": "Cross tests with libecc",
          "body": "See #1108 \r\n\r\nTODO:\r\n\r\n- [x] Try the test `test_secp256k1_sign_libecc_verify()`. (I still need to figure out how to try it without the whole ci overhead)\r\n- [x] Write a test to sign with `libecc` and verify with `libsecp256k1`\r\n- [x] Perform a byte-by-byte comparison\r\n- [ ] Add to ci properly",
          "user": {
            "login": "BerryYoghurt",
            "id": 58439150,
            "node_id": "MDQ6VXNlcjU4NDM5MTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/58439150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BerryYoghurt",
            "html_url": "https://github.com/BerryYoghurt",
            "followers_url": "https://api.github.com/users/BerryYoghurt/followers",
            "following_url": "https://api.github.com/users/BerryYoghurt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/BerryYoghurt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/BerryYoghurt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/BerryYoghurt/subscriptions",
            "organizations_url": "https://api.github.com/users/BerryYoghurt/orgs",
            "repos_url": "https://api.github.com/users/BerryYoghurt/repos",
            "events_url": "https://api.github.com/users/BerryYoghurt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/BerryYoghurt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1112",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1112",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1112.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1112.patch"
          },
          "closed_at": "2023-05-08T16:06:27Z",
          "created_at": "2022-06-24T12:47:02Z",
          "updated_at": "2023-05-08T16:06:28Z"
        },
        "type": "issue"
      }
    }
  ]
}