{
  "type": "issue",
  "issue": {
    "id": 3252235260,
    "node_id": "I_kwDOAP4Jqs7B2Sv8",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1710",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1710/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1710/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1710/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1710",
    "number": 1710,
    "state": "open",
    "state_reason": null,
    "title": "RFC: Using `unsigned char (*arg)[size]` as a replacement for `unsigned char *argsize` for fixed length array arguments",
    "body": "As part of #1698 (and earlier versions of the PR), it was pointed out that tools like Rust's `bindgen` can correctly infer fixed length array arguments when the function signature uses `(*arg)[size]`. This was discussed, along with possible alternatives, here: https://gnusha.org/secp256k1/2024-11-18.log.\n\n---\n\nI was able to confirm that the only `(*arg)[size]` works with bindgen [here](https://gist.github.com/josibake/4f0ebd29e00de9e5264b245473808711), and decided to see what this would look like for the silent payments module and downstream consumers in https://github.com/josibake/secp256k1/commit/5a1088066b2ce5e2e77b4e4bc190575d1171c374 and https://github.com/josibake/bitcoin/commit/5835d987477fc8eae391e4d1cc5033d921925ea1. The patches are smaller than I expected and I was happy to see everything Just Worked ™️. \n\nI'm  opening this issue for general discussion since this would be a breaking change from the current API. This means we either:\n\n1. Only use this in convention in the silent payments module\n2. Use this convention in the silent payments module and new modules going forward\n3. Convert the rest of the API to use this convention\n\nI do think having compile time errors for incorrectly sized arguments is quite nice and helps eliminate a whole class of errors, e.g., mixing up argument order and passing a secret key 32 byte array instead of a smallest outpoint 36 byte array, which is why I'm inclined to use this convention in the silent payments module. However, I'd like to hear the maintainers thoughts on having modules with different conventions in their respective API's, or the longer term appetite for converting the whole library to use the new convention.",
    "user": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [
      {
        "id": 165017692,
        "node_id": "MDU6TGFiZWwxNjUwMTc2OTI=",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/assurance",
        "name": "assurance",
        "description": "",
        "color": "A6DF3D",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 1,
    "created_at": "2025-07-22T11:09:20Z",
    "updated_at": "2025-07-23T08:16:47Z"
  },
  "events": [
    {
      "event": "subscribed",
      "id": 18750308592,
      "node_id": "SE_lADOAP4Jqs7B2Sv8zwAAAARdmwDw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/18750308592",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-22T11:38:28Z"
    },
    {
      "event": "commented",
      "id": 3106434165,
      "node_id": "IC_kwDOAP4Jqs65KGx1",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/3106434165",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-23T08:16:41Z",
      "updated_at": "2025-07-23T08:16:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "I like this. I help eliminate a whole class of errors, and so this matches the philosophy behind the library. It's uncommon, but we do other uncommon stuff for extra assurance...\n\nI'd love to have this for the entire library, but it will break everything.... I'm a huge fan of consistency, but in this case, I could live with having it in just the silentpayments module.\n\nTo understand the entire space of options: How ugly would it be to have this as an optional `#ifdef`? Could we \"just\" have two variants of all the declarations in the header? Or would we also need to have ifdefs in the implementation?  \n\nInstead of having two variants guarded by an `#ifdef` we could probably also write some really ugly preprocessor code, but I don't think it's better. At least not in the header because then humans won't be able to parse the declaration anymore... ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1710#issuecomment-3106434165",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1710"
    },
    {
      "event": "labeled",
      "id": 18768545958,
      "node_id": "LE_lADOAP4Jqs7B2Sv8zwAAAAResUim",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/18768545958",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-23T08:16:47Z",
      "label": {
        "name": "assurance",
        "color": "A6DF3D"
      }
    }
  ]
}