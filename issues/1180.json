{
  "type": "issue",
  "issue": {
    "id": 1501956733,
    "node_id": "I_kwDOAP4Jqs5Zhgp9",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1180",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1180/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1180/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1180/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1180",
    "number": 1180,
    "state": "closed",
    "state_reason": "completed",
    "title": "Inverse modulo doesn't give the same result as in Java (with BigInteger)",
    "body": "Hello,\r\n\r\nI'm trying to compute the inverse modulo with your function but I don't get the \"correct\" result. There is something I  don't understand.\r\n\r\nTo illustrate, I made a simple example in java to compare: \r\n**inverse of 7 mod prime** \r\nwith prime = **115792089237316195423570985008687907853269984665640564039457584007908834671663**\r\n\r\nJava (with BigInteger.modInverse) :\r\nModInv(7) = 0x **db6db6db6db6db6db6db6db6db6db6db6db6db6db6db6db6db6db6da9249214d**\r\nWith you lib (secp256k1_scalar_inverse):\r\nModInv(7) = 0x **49249249249249249249249249249248c79facd43214c011123c1b03a93412a5**\r\n\r\nIn each case, I test: **a * inva = 1** \r\nand it works in Java and in cpp with your lib but it's weird because the number are not the same (I know that it's %prime).\r\n\r\nI tried to multiply  in java the inverse obtained in cpp by the number:\r\n**7 * 0xdb6db6db6db6db6db6db6db6db6db6db6db6db6db6db6db6db6db6da9249214d** \r\n= **0xfffffffffffffffffffffffffffffffd755db9cd5e9140777fa4bd1aa06c8654**\r\nAnd it's not equal to 1.\r\n\r\nI don't understand... How to get the same result as Java, please? I don't see the trick.\r\n\r\nHere is my code with your lib:\r\n```\r\n    secp256k1_scalar a = SECP256K1_SCALAR_CONST(0, 0, 0, 0, 0, 0, 0, 7);\r\n    secp256k1_scalar inva;\r\n    secp256k1_scalar r;\r\n\r\n    secp256k1_scalar_inverse(&inva, &a);\r\n    secp256k1_scalar_mul(&r, &a, &inva);\r\n\r\n    printfscalar(a);\r\n    printfscalar(inva);\r\n    printfscalar(r); //r=1 ok it works\r\n```\r\n\r\nThank you in advance.",
    "user": {
      "login": "PeterMacGonagan",
      "id": 8655251,
      "node_id": "MDQ6VXNlcjg2NTUyNTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8655251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PeterMacGonagan",
      "html_url": "https://github.com/PeterMacGonagan",
      "followers_url": "https://api.github.com/users/PeterMacGonagan/followers",
      "following_url": "https://api.github.com/users/PeterMacGonagan/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/PeterMacGonagan/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/PeterMacGonagan/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/PeterMacGonagan/subscriptions",
      "organizations_url": "https://api.github.com/users/PeterMacGonagan/orgs",
      "repos_url": "https://api.github.com/users/PeterMacGonagan/repos",
      "events_url": "https://api.github.com/users/PeterMacGonagan/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/PeterMacGonagan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": true,
    "comments": 3,
    "closed_at": "2022-12-22T15:20:15Z",
    "created_at": "2022-12-18T16:16:50Z",
    "updated_at": "2022-12-22T15:20:15Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 1356838820,
      "node_id": "IC_kwDOAP4Jqs5Q37ek",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1356838820",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-18T17:09:44Z",
      "updated_at": "2022-12-18T17:09:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "The prime you've put is the field's order, not the scalar's order.\r\nThe scalar's order is `115792089237316195423570985008687907852837564279074904382605163141518161494337`\r\nAnd you can see with quick python that:\r\n```python\r\n>>> hex(pow(7, -1, 115792089237316195423570985008687907852837564279074904382605163141518161494337))\r\n0x49249249249249249249249249249248c79facd43214c011123c1b03a93412a5\r\n```\r\n\r\nAnd if you use the `secp256k1_fe` type you get:\r\n```c\r\n  static const secp256k1_fe secp256k1_fe_seven = SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 7);\r\n  unsigned char sever_inv_bytes[32];\r\n  secp256k1_fe inv_7;\r\n  secp256k1_fe_inv(&inv_7, &secp256k1_fe_seven);\r\n  secp256k1_fe_get_b32(sever_inv_bytes, &inv_7);\r\n  printf(\"inv_7 = 0x\");\r\n  for (int i = 0; i < 32; i++)\r\n      printf(\"%02x\", sever_inv_bytes[i]);\r\n  printf(\"\\n\");\r\n  return 0;\r\n```\r\nWhich prints the same as this python:\r\n```python\r\n>>> hex(pow(7, -1, 115792089237316195423570985008687907853269984665640564039457584007908834671663))\r\n'0xdb6db6db6db6db6db6db6db6db6db6db6db6db6db6db6db6db6db6da9249214d'\r\n```",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1180#issuecomment-1356838820",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1180"
    },
    {
      "event": "commented",
      "id": 1356856203,
      "node_id": "IC_kwDOAP4Jqs5Q3_uL",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1356856203",
      "actor": {
        "login": "PeterMacGonagan",
        "id": 8655251,
        "node_id": "MDQ6VXNlcjg2NTUyNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8655251?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PeterMacGonagan",
        "html_url": "https://github.com/PeterMacGonagan",
        "followers_url": "https://api.github.com/users/PeterMacGonagan/followers",
        "following_url": "https://api.github.com/users/PeterMacGonagan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PeterMacGonagan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PeterMacGonagan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PeterMacGonagan/subscriptions",
        "organizations_url": "https://api.github.com/users/PeterMacGonagan/orgs",
        "repos_url": "https://api.github.com/users/PeterMacGonagan/repos",
        "events_url": "https://api.github.com/users/PeterMacGonagan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PeterMacGonagan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-18T19:09:45Z",
      "updated_at": "2022-12-18T19:09:45Z",
      "author_association": "NONE",
      "body": "Ok, thank you. I'm not sure I understand completely.\r\n```\r\nscalar order: 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\r\n field order: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\r\n```\r\n\r\nI would like to code an elliptic addition only with add, mul, inverse, etc. But I don't get the correct results.\r\n\r\nMaybe you could help me?\r\n\r\nHere is my code:\r\n\r\n```\r\ninline void AddPoint(\r\n    secp256k1_scalar* Rx, secp256k1_scalar* Ry, //the result: elliptic point: R = P + Q\r\n    secp256k1_scalar* Px, secp256k1_scalar* Py, //elliptic point P\r\n    secp256k1_scalar* Qx, secp256k1_scalar* Qy) //elliptic point Q\r\n{\r\n    //\r\n    secp256k1_scalar a, m, m2;\r\n    secp256k1_scalar tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;\r\n\r\n    //m=(Py-Qy)/(Px-Qx) % P = (Py-Qy) * a   %P\r\n    \r\n    //a = P.X.subtract(Q.X).modInverse(prime);      //a=inv(Px-Qx)  % P\r\n    secp256k1_scalar_subtract(&tmp1, Px, Qx); //tmp1 = Px-Qx\r\n    secp256k1_scalar_inverse(&a, &tmp1); //a = inv(tmp1) % P = inv(Px-Qx) % P\r\n\r\n    printfscalar(*Px);\r\n    printfscalar(*Qx);\r\n\r\n    printfscalar(tmp1);\r\n    printfscalar(a);\r\n\r\n    //m = P.Y.subtract(Q.Y).multiply(a).mod(prime); //m=(Py-Qy)/(Px-Qx)  % P = (Py-Qy) * a  % P\r\n    secp256k1_scalar_subtract(&tmp2, Py, Qy); //tmp2 = Py-Qy\r\n    secp256k1_scalar_mul(&m, &tmp2, &a); // mod P ?\r\n\r\n    printfscalar(m);\r\n    printfscalar(tmp2);\r\n\r\n    ...\r\n```\r\nI don't get the correct answer for a and m (may be the invmod?).\r\n",
      "user": {
        "login": "PeterMacGonagan",
        "id": 8655251,
        "node_id": "MDQ6VXNlcjg2NTUyNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8655251?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PeterMacGonagan",
        "html_url": "https://github.com/PeterMacGonagan",
        "followers_url": "https://api.github.com/users/PeterMacGonagan/followers",
        "following_url": "https://api.github.com/users/PeterMacGonagan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PeterMacGonagan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PeterMacGonagan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PeterMacGonagan/subscriptions",
        "organizations_url": "https://api.github.com/users/PeterMacGonagan/orgs",
        "repos_url": "https://api.github.com/users/PeterMacGonagan/repos",
        "events_url": "https://api.github.com/users/PeterMacGonagan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PeterMacGonagan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1180#issuecomment-1356856203",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1180"
    },
    {
      "event": "commented",
      "id": 1356859346,
      "node_id": "IC_kwDOAP4Jqs5Q4AfS",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1356859346",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-18T19:26:00Z",
      "updated_at": "2022-12-18T19:26:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "The X and Y coordinates on the elliptic curves are numbers modulo p = 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f. There are referred to as field elements in the libsecp256k1 source code, with type `secp256k1_fe`.\r\n\r\nPoints on the curve are referred to as group elements (`secp256k1_ge` and `secp256k1_gej`).\r\n\r\nScalars (`secp256k1_scalar`) are integers modulo the *number of* points on the curve, n = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141. They're used for private keys, nonces, ...\r\n\r\nYou can't use scalars for field operations; the modulus will be wrong.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1180#issuecomment-1356859346",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1180"
    },
    {
      "event": "locked",
      "id": 8096757105,
      "node_id": "LOE_lADOAP4Jqs5Zhgp9zwAAAAHimrVx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8096757105",
      "actor": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-22T15:20:14Z"
    },
    {
      "event": "converted_to_discussion",
      "id": 8096757142,
      "node_id": "CITDE_lADOAP4Jqs5Zhgp9zwAAAAHimrWW",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/8096757142",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-22T15:20:14Z"
    }
  ]
}