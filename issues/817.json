{
  "type": "issue",
  "issue": {
    "id": 702300957,
    "node_id": "MDU6SXNzdWU3MDIzMDA5NTc=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817",
    "number": 817,
    "state": "open",
    "state_reason": null,
    "title": "Experimental features should be deprecated",
    "body": "If a feature is genuinely experimental, keep it in a separate branch.\r\n\r\nOtherwise, it *will* be compiled in, as there may be a user. This becomes inevitable in larger systems: in particular, c-lightning uses both libsecp and libwally. The latter includes libsecp, and you can't have two libraries with the same symbols, so c-lightning needs to use the libwally one. Packaging systems fix this, but they have the same problem: they must configure in everything.\r\n\r\nYou can have boutique builds that omit features for embedded use, sure. But the default will be kitchen sink.\r\n\r\nI know it's hard: labelling something experimental is a good way of avoiding commitment. But it is a mere fig leaf which doesn't work, and mature libraries don't get that luxury.\r\n\r\nIf you're not prepared to commit to an API (ideally an ABI too), you simply cannot include something. In that case, it needs to be a separate library (and if it gets folded in later, all the names have to change!).",
    "user": {
      "login": "rustyrussell",
      "id": 775844,
      "node_id": "MDQ6VXNlcjc3NTg0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rustyrussell",
      "html_url": "https://github.com/rustyrussell",
      "followers_url": "https://api.github.com/users/rustyrussell/followers",
      "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
      "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
      "repos_url": "https://api.github.com/users/rustyrussell/repos",
      "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 14,
    "created_at": "2020-09-15T21:57:51Z",
    "updated_at": "2020-10-18T04:15:43Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 693017420,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzAxNzQyMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/693017420",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-15T22:42:04Z",
      "updated_at": "2020-09-15T22:42:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "> If a feature is genuinely experimental, keep it in a separate branch.\r\n\r\nI think this would make it easier to develop large features, e.g.. Schnorr signatures. Currently our model (and that of Bitcoin Core) is to have large atomic changes in a single PR developed by a single party who addresses review comments over and over. And reviewers keep reviewing the same stuff because people don't want to commit and the PR takes forever to be merged. I believe it's easier to develop large changes in a separate feature branch (or fork), but then create small PRs against this feature branch to avoid that PRs become huge, and later create a single large PR against master. Some things are simply too large to be handled in a single PR. \r\n\r\nThis is what Bitcoin Core is effectively doing with secp256k1.\r\n\r\n(Sorry, this is somewhat off-topic.)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-693017420",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "commented",
      "id": 693033273,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzAzMzI3Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/693033273",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-15T23:28:40Z",
      "updated_at": "2020-09-16T00:20:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think there are a few somewhat related issues here.\r\n\r\n### \"experimental\" used to not mean very much\r\n\r\nThis library wasn't well maintained for a long time, and that led to a few things remaining marked experimental for far longer than they should have been. This has improved lately, and ECDH (which was effectively stable for years) is about to be marked non-experimental (see #809). I think the ARM assembly will in the near future become non-experimental as well, but I'd like to see CI support for it.\r\n\r\nBeyond those two, the only remaining experimental feature is the recently-merged BIP340 support. It is experimental for two reasons:\r\n\r\n* There are a few discussions still ongoing that may impact the API (variable-length message support, batch validation) without changes to the (currently supported) part of the scheme. It's not impossible to just add new functions for these once they're worked out, but given the next point, I think this may not be needed.\r\n* It's very hard to be *sure* what exact semantics of BIP340 will actually activate on Bitcoin (or if it will at all), and if that ends up being different from what is implemented now, eventually this library will want to implement the final scheme. I think changes are very unlikely at this point, but it's also not exactly under our control.\r\n\r\nThis is all to say: I think our recent notion of what \"experimental\" is narrower now than what it has been for a long time, and for what is left, there are specific criteria for letting them graduate - not an open-ended noncommitment.\r\n\r\n### If you can't commit to an API, you can't include it.\r\n\r\nI disagree here. There are certainly packaging/compatibility complexities (see next point), but there shouldn't be a reason why software that uses a pinned version of their dependencies (through subtrees, submodules, commit hashes in dependency systems, ...) cannot use an experimental API. It works, it's tested and reviewed, and it's included in the library so that things can be developed against it - they just have to be prepared to, for now, adapt to API changes when updating.\r\n\r\nAs for leaving things in a branch... perhaps that is an approach, but may make it harder to start developing software that builds on it.\r\n\r\nI think experimental feature just means you can only use it in a controlled environment.\r\n\r\n### Linking issues when dependencies need overlapping features\r\n\r\nThis is a hard problem, though it's not restricted to experimental-ness - any kind of optionality in features can cause this problem. It's even worse when there are downstream projects that add extra functionality (e.g. secp256k1-zkp; what if you need the rangeproofs from there, but also BIP340 support from the current upstream master, while -zkp isn't rebased on top of that?).\r\n\r\nI feel that perhaps at some point it will be needed to support a compile-time option to add some prefix to all exported symbol names.\r\n\r\n### (Non-experimental) features should be default-on when possible\r\n\r\nIgnoring experimental features - whether you agree with them or not - perhaps this is the main point you're trying to convey? When there are stable features in a library that are optional, they will be enabled in generic builds, and even when pinned within projects due to the need to provide for multiple indirect dependencies (e.g. libwally as you point out).\r\n\r\nSo that's an argument to make them default-on, or even non-optional, to minimize the potential configuration combinations that end users may end up with.\r\n\r\nPerhaps ECDH is a good candidate to make default to on now because of that. I'm less certain about recovery, as it's something that (I personally think) should be discouraged from being relied on in new systems (potential patent concerns, and aggregation schemes being more powerful in general).\r\n\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-693033273",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "commented",
      "id": 693180744,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzE4MDc0NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/693180744",
      "actor": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T05:31:56Z",
      "updated_at": "2020-09-16T05:31:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> So that's an argument to make them default-on, or even non-optional, to minimize the potential configuration combinations that end users may end up with.\r\n\r\nYes.  All optional features *will* get turned on for the vast majority of users.  If that's not safe, we need to seriously consider whether the feature should be included at all.  If we simply don't like the feature, then we should state those reasons clearly in documentation to discourage new users.\r\n\r\nAnd of course we can have a multitude of cut-down flags to eliminate parts of the library for specialized envs.\r\n\r\n> I think experimental feature just means you can only use it in a controlled environment.\r\n\r\nIf experimental means \"API unstable\", then I'm afraid it hasn't met the bar for inclusion in a mature library.  Which is *totally fine*: make it a separate library.  When the result has matured sufficiently, include it in libsecp256k1.\r\n\r\nOtherwise you're not a mature library: this is part of the commitment which is reasonably expected from libraries, and it's not arbitrary.  Breaking an API means pain and suffering for downstream projects; please don't call a library version 1.0 and then try to change the API.",
      "user": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-693180744",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "commented",
      "id": 693198323,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzE5ODMyMw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/693198323",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T06:18:23Z",
      "updated_at": "2020-09-16T06:32:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Yes. All optional features will get turned on for the vast majority of users. If that's not safe, we need to seriously consider whether the feature should be included at all. If we simply don't like the feature, then we should state those reasons clearly in documentation to discourage new users.\r\n\r\nThat seems very reasonable.\r\n\r\n> If experimental means \"API unstable\", then I'm afraid it hasn't met the bar for inclusion in a mature library. Which is totally fine: make it a separate library. When the result has matured sufficiently, include it in libsecp256k1.\r\n\r\nWhat do you mean by separate library?\r\n* Something completely independent that only implements BIP340? I think that would be enormous waste of effort in duplication of internals, review, gaining confidence, setting up testing infrastructure, ...\r\n* A separately maintained branch of secp256k1 that adds BIP340? That would be somewhat less duplication, but make things unnecessarily difficult for developing things on top, and when combined with other \"feature branches\" like -zkp in one application, result in the exact same linker issues you were complaining about in the first place.\r\n\r\nIt's far from ideal, but I think having a feature that's just temporarily in an experimental state is a good middle road. It gets the code changes in mainline, lets testing happen on interactions between the feature and other things being developed, signifies the code is reviewed and tested, lets downstream extensions rebase on it, make it easy for projects that pin the version to start developing on top of without conflicts, ... but also means some changes can still happen, and users will be aware of this.\r\n\r\n> please don't call a library version 1.0 and then try to change the API.\r\n\r\nlibsecp256k1 hasn't released a version 1.0.\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-693198323",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "commented",
      "id": 693228260,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzIyODI2MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/693228260",
      "actor": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T07:30:18Z",
      "updated_at": "2020-09-16T07:30:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "We can't have both \"we want people to start using this feature\" and \"sorry, there's no API stability\"; they are opposed in practice.\r\n\r\n> I think having a feature that's just temporarily in an experimental state is a good middle road.\r\n\r\nWell, in the BIP340 case there's a clear path (since it will presumably become non-experimental once BIP340 is merged into bitcoin-core?).  I still prefer it as a separate library, which would not have been as bad if it had started that way (note: we can share non-ABI-stable internals between two dependent libraries, which lets us do most things sanely).  Not worth it now, but I don't know what other changes we'll see in future.\r\n\r\nI'm arguing for weaning off the existing ones, and never adding another.  For example, it seems (from rough reading) recovery could be moved out to a separate library if there are patent concerns which means it should never be a \"core\" thing.\r\n\r\n> libsecp256k1 hasn't released a version 1.0.\r\n\r\nYes.  But I hope to see it one day!",
      "user": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-693228260",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "commented",
      "id": 693267873,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzI2Nzg3Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/693267873",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T08:49:42Z",
      "updated_at": "2020-09-16T08:49:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It's far from ideal, but I think having a feature that's just temporarily in an experimental state is a good middle road. It gets the code changes in mainline, lets testing happen on interactions between the feature and other things being developed, signifies the code is reviewed and tested, lets downstream extensions rebase on it, make it easy for projects that pin the version to start developing on top of without conflicts, ... but also means some changes can still happen, and users will be aware of this.\r\n> \r\n> > please don't call a library version 1.0 and then try to change the API.\r\n> \r\n> libsecp256k1 hasn't released a version 1.0.\r\n\r\n@sipa Having experimental modules is hard, I'm concerned that it becomes even harder after we release a 1.0. We have two kinds of users: 1) projects that pin a commit (primarily Bitcoin Core but also others) and 2) projects that want a general library. \r\n\r\nNow what will happen for the latter? Distributions tend to enable all features because it makes sense to do so, (related: https://github.com/bitcoin-core/secp256k1/pull/675) and I'm not sure if we can convince them from not enabling experimental features. Somebody will need the experimental feature, so distros will enable it.\r\n\r\nAssume we have something like semver. What kind of release is an API break in an experimental module?  Major release?  Then there is no difference to normal modules. Minor release? Then users of experimental modules will need to pin version numbers, which creates all kinds of issues in dependency managers etc.  \r\n\r\nThe only way I see is to exclude experimental features from the versioning, discourage distros from enabling experimental features, and recommend that users who need experimental modules should vendor the library/pin a commit. (And put all the blame on them if they don't stick to the policy.)\r\n\r\n\r\n> It's far from ideal, but I think having a feature that's just temporarily in an experimental state is a good middle road. It gets the code changes in mainline, lets testing happen on interactions between the feature and other things being developed, signifies the code is reviewed and tested, lets downstream extensions rebase on it, make it easy for projects that pin the version to start developing on top of without conflicts, ... but also means some changes can still happen, and users will be aware of this.\r\n\r\nWould a single experimental branch be more difficult to work with? You can test interactions,  downstream extensions can rebase on it, and projects can pin commits of the experimental branch. You sadi that a separate branch will make things unnecessarily difficult for developing things on top. Can you explain how?\r\n\r\n\r\n@rustyrussell \r\n> For example, it seems (from rough reading) recovery could be moved out to a separate library if there are patent concerns which means it should never be a \"core\" thing.\r\n\r\nRecovery is not an experimental module. And it's actually used within Bitcoin Core, so we need this. (But I get what you're saying.)\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-693267873",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "mentioned",
      "id": 3772089530,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc3MjA4OTUzMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3772089530",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T08:49:42Z"
    },
    {
      "event": "subscribed",
      "id": 3772089534,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NzIwODk1MzQ=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3772089534",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T08:49:42Z"
    },
    {
      "event": "mentioned",
      "id": 3772089539,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc3MjA4OTUzOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3772089539",
      "actor": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T08:49:42Z"
    },
    {
      "event": "subscribed",
      "id": 3772089542,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NzIwODk1NDI=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3772089542",
      "actor": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T08:49:42Z"
    },
    {
      "event": "commented",
      "id": 693500800,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzUwMDgwMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/693500800",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T15:56:52Z",
      "updated_at": "2020-09-16T15:56:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Experimental features just don't have any promises.  Breaking the interface for one isn't any kind of API break because no API commitment was made at all. It may not be possible to design a really good and safe API for something without actually also attempting to implement the something in an application and getting feedback from how it integrates. While that is going on there needs to be a mechanism to coordinate with the new application(s).\r\n\r\nThey could, for sure, be in a separately forked copy of the library-- but this software exists as a freestanding library rather than a directory in bitcoin-core in part because it was believed it would be easier maintained this way.\r\n\r\nI think this choice has, for whatever reason, panned out somewhat poorly, resulting in a outright dangerous lack of attention and-- at times-- a near total inability to move things forward (although lately it's been better).  It has also not resulted in a particularly large amount of of adoption by other users (with a few exceptions, e.g. libwally/c-lightning)-- instead obviously provably less secure alternatives are _ubiquitous_ in hardware wallets, as an example.  If the library was further split into more separately maintained things I don't believe an outcome other than abandonment is likely.\r\n\r\nSimilarly, there have been features such as ECDH where holding them to the safety and integrity standard used in the library would have simply precluded their development as before they existed had zero usage to justify the hundreds of man hours of review and testing needed to mature them.  Without the ability to have unsupported/test components the response to attempt to develop such things would be \"don't bother\".  Again, it could be developed somewhere else, but I suspect that would just end up forgotten and abandoned (or else, all development would move to that, leaving this side abandoned and just renaming the library you're taking issue with).\r\n\r\nI don't follow this separate library discussion. This library is a single compilation unit, it would be a single file library except its nicer to maintain split into modules.  The overall design depends pretty heavily on inlining, and none of the internal symbols are exported at all.  Exposing the internals directly would be contrary to the design principle of only providing safe, supported, \"complete cryptosystem\" interfaces as much as possible.\r\n\r\nHaving a configurable prefix-- as is pretty common other crypto libraries that are mostly copied rather than linked-- would probably be pretty useful.  The symbol naming is already pretty well set up for it because everything is already prefixed \"secp256k1_\", so that could just be the default prefix. Some thought would need to be given on how to handle the typedefs.\r\n\r\nAs far as \"supported but you probably shouldn't use it in new things\", perhaps:  Rename the relevant functions something with _deprecated_ in them, keep the original name as a wrapper but with __attribute((deprecated))  set on it.  Existing callers will change the name of their call to silence the warnings, thus getting notified.\r\n\r\n> And it's actually used within Bitcoin Core, so we need this.\r\n\r\nIt's used only by \"signmessage\" -- nowhere by the bitcoin protocol. And signmessage is increasingly useless because it doesn't work with the address types mostly being used by users today, and without using the same addresses there is almost no justification for using signmessage over, say, PGP or signify...  I think it's likely that bitcoin would (eventually) drop signmessage if any of the several efforts to make an alternative that worked more generally were finished.\r\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-693500800",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T11:36:54Z",
      "updated_at": "2020-09-17T11:36:54Z",
      "source": {
        "issue": {
          "id": 703508152,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDg4NjA0MTU2",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/818",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/818/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/818/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/818/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/818",
          "number": 818,
          "state": "closed",
          "state_reason": null,
          "title": "Add static assertion that uint32_t is unsigned int or wider",
          "body": "Solves one item in #792 .",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/818",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/818",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/818.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/818.patch"
          },
          "closed_at": "2020-09-26T08:22:51Z",
          "created_at": "2020-09-17T11:36:54Z",
          "updated_at": "2021-02-01T17:48:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 694311155,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDMxMTE1NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/694311155",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T15:25:40Z",
      "updated_at": "2020-09-17T15:25:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "(oops I mentioned the wrong issue in  my PR, please ignore the mention above this comment.)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-694311155",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "commented",
      "id": 694916338,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDkxNjMzOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/694916338",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T14:54:26Z",
      "updated_at": "2020-09-18T14:54:26Z",
      "author_association": "MEMBER",
      "body": "Maybe libsecp256k1 can/should install a libsecp256k1.so and libsecp256k1_experimental.so, and pkg-config files for each module to autoselect which library to include?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-694916338",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "commented",
      "id": 694935882,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDkzNTg4Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/694935882",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T15:31:03Z",
      "updated_at": "2020-09-18T15:31:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "@luke-jr That's an interesting idea but I wonder if this really helps. I don't think we would want to ship a pkg-config for experimental features. (What's the point in checking for some version of an unstable API?)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-694935882",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "mentioned",
      "id": 3783155995,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc4MzE1NTk5NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3783155995",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T15:31:03Z"
    },
    {
      "event": "subscribed",
      "id": 3783156000,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3ODMxNTYwMDA=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3783156000",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T15:31:03Z"
    },
    {
      "event": "commented",
      "id": 695744508,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTc0NDUwOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/695744508",
      "actor": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-20T04:59:46Z",
      "updated_at": "2020-09-20T04:59:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "@gmaxwell Actually, libsecp is becoming widely used; every lightning implementation uses it, for example.  And the schnorr stuff is likely to complete this dominance, since it's just Damn Nice for any new uses.\r\n\r\n> Similarly, there have been features such as ECDH where holding them to the safety and integrity standard used in the library would have simply precluded their development as before they existed had zero usage to justify the hundreds of man hours of review and testing needed to mature them.\r\n\r\nThat... doesn't help me.  I'm using it.  I do not treat it any differently from the rest of libsecp256k1.  If it had, at least, been a separate library I might have (for example, auditing the code).  You're certainly implying that I should have!\r\n\r\n> This library is a single compilation unit, it would be a single file library except its nicer to maintain split into modules. The overall design depends pretty heavily on inlining, and none of the internal symbols are exported at all. Exposing the internals directly would be contrary to the design principle of only providing safe, supported, \"complete cryptosystem\" interfaces as much as possible.\r\n\r\nBut another library could share most of this inlining, and I disagree that exposing (say) _secp256k1_internal_* symbols would break the design, if it came to that.\r\n\r\nWRT deprecating things, it generally implies a pending removal (and timeline here should probably be >= 24 months).  I wouldn't start a deprecation unless there's a clear, documented path to removal.  Sometimes it's better to simply label \"/*  THIS IS A NASTY FUNCTION, HERE FOR LEGACY USE CASES.  Please use xxx instead and make all of our lives better */\".",
      "user": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-695744508",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "mentioned",
      "id": 3785733415,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc4NTczMzQxNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3785733415",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-20T04:59:46Z"
    },
    {
      "event": "subscribed",
      "id": 3785733417,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3ODU3MzM0MTc=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3785733417",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-20T04:59:46Z"
    },
    {
      "event": "commented",
      "id": 695783560,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTc4MzU2MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/695783560",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-20T12:49:15Z",
      "updated_at": "2020-09-20T12:49:15Z",
      "author_association": "MEMBER",
      "body": ">(What's the point in checking for some version of an unstable API?)\r\n\r\nTo make sure the user has that correct version and get the CFLAGS/etc correct for it... Same as with a stable API.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-695783560",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "commented",
      "id": 710844554,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDg0NDU1NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/710844554",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-17T11:30:55Z",
      "updated_at": "2020-10-17T11:33:31Z",
      "author_association": "MEMBER",
      "body": "> I think the ARM assembly will in the near future become non-experimental as well, but I'd like to see CI support for it.\r\n\r\nSpeaking of which, we need to do some benchmarking of it. At the time of writing GCC was generating quite horrible code for ARM with a plenty of stack spilling. Back then it was an impressive improvement. But it's very possible that in the meantime, GCC has grown \"good enough\" to get close to, or even beat the manually implemented code.\r\n(and now there is #815 too that changes affected functions)\r\n\r\nI do still have ARM32 hardware in use (i.MX6) so might give it at try.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-710844554",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "commented",
      "id": 711114062,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTExNDA2Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/711114062",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-18T04:15:43Z",
      "updated_at": "2020-10-18T04:15:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "I was recently benchmarking gcc 9.2 on i.MX6 and the code you wrote was still a massssiiiivvvveee speedup. :)  (if you dig through the safegcd thread you can see some numbers w/o asm on 32-bit arm)",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-711114062",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/817"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ysangkok",
        "id": 284023,
        "node_id": "MDQ6VXNlcjI4NDAyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/284023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ysangkok",
        "html_url": "https://github.com/ysangkok",
        "followers_url": "https://api.github.com/users/ysangkok/followers",
        "following_url": "https://api.github.com/users/ysangkok/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ysangkok/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ysangkok/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ysangkok/subscriptions",
        "organizations_url": "https://api.github.com/users/ysangkok/orgs",
        "repos_url": "https://api.github.com/users/ysangkok/repos",
        "events_url": "https://api.github.com/users/ysangkok/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ysangkok/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-01T01:37:11Z",
      "updated_at": "2020-11-01T01:37:11Z",
      "source": {
        "issue": {
          "id": 506094833,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzI3Mzk3NjA5",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/675",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/675/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/675/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/675/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/675",
          "number": 675,
          "state": "closed",
          "state_reason": null,
          "title": "Provide pkg-config packages for optional modules",
          "body": "This makes it way easier for dependent projects\r\nto probe whether libsecp256k1 was built with an\r\noptional module they might require.\r\n\r\nFixes #666 ",
          "user": {
            "login": "ysangkok",
            "id": 284023,
            "node_id": "MDQ6VXNlcjI4NDAyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/284023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ysangkok",
            "html_url": "https://github.com/ysangkok",
            "followers_url": "https://api.github.com/users/ysangkok/followers",
            "following_url": "https://api.github.com/users/ysangkok/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ysangkok/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ysangkok/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ysangkok/subscriptions",
            "organizations_url": "https://api.github.com/users/ysangkok/orgs",
            "repos_url": "https://api.github.com/users/ysangkok/repos",
            "events_url": "https://api.github.com/users/ysangkok/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ysangkok/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/675",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/675",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/675.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/675.patch"
          },
          "closed_at": "2023-05-08T15:59:16Z",
          "created_at": "2019-10-11T23:23:56Z",
          "updated_at": "2023-05-08T16:01:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-01T13:31:43Z",
      "updated_at": "2021-02-01T13:31:43Z",
      "source": {
        "issue": {
          "id": 757456691,
          "node_id": "MDU6SXNzdWU3NTc0NTY2OTE=",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/856",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/856/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/856/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/856/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/856",
          "number": 856,
          "state": "closed",
          "state_reason": "completed",
          "title": "Add doc/release-process.md",
          "body": "On our path towards a 1.0 release it would help to start with a 0.1 release soon. Ideally, we'd do this in a systematic way and first discuss how we want the process to look like initially.\r\n\r\nIt would make sense for the process to be similar to Bitcoin Core's. Here are some suggestions, based on my understanding of [bitcoin-maintainer-tools/make-tag.py](https://github.com/bitcoin-core/bitcoin-maintainer-tools/blob/a9eaddb7397f149121a4225b4096b04918d20362/make-tag.py) and [bitcoin/doc/release-process.md](https://github.com/bitcoin/bitcoin/blob/8f7b93047581c67f2133cdb8c7845471de66c30f/doc/release-process.md).\r\n\r\nWe would copy the start of Core's [configure.ac](https://github.com/bitcoin/bitcoin/blob/dca80ffb45fcc8e6eedb6dc481d500dedab4248b/configure.ac#L10) into ours:\r\n```\r\ndefine(_CLIENT_VERSION_MAJOR, 0)\r\ndefine(_CLIENT_VERSION_MINOR, 99)\r\ndefine(_CLIENT_VERSION_BUILD, 0)\r\ndefine(_CLIENT_VERSION_RC, 0)\r\ndefine(_CLIENT_VERSION_IS_RELEASE, false)\r\n```\r\nand replace our `AC_INIT` with\r\n```\r\nAC_INIT([libsecp256k1],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_BUILD)m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC))\r\n```\r\nWe can print the version at the end of the configure script and a warning if `RELEASE` is not true.\r\n\r\n\r\nNow in order to create a release candidate we\r\n\r\n1. Start [writing release notes](https://github.com/bitcoin/bitcoin/blob/master/doc/release-process.md#write-the-release-notes)\r\n2. Create a corresponding release branch\r\n    1. Create a commit to fix the `VERSIONS` in configure.ac (including `RC=1`)\r\n    2. Tag the commit with a version of make-tag.py that's adapted to libsecp\r\n    3. Create github release\r\n3. To create a new release candidate repeat steps 2.i through 2.iii\r\n4. Once we're happy with the release candidate\r\n    1. Archive the release notes for the new version to doc/release-notes/ (branch master and branch of the release)\r\n    2. Create commit to set `IS_RELEASE` to `true` and `VERSION_RC` to `0`\r\n    3. Tag the release\r\n    4. Create a new GitHub release with a link to the archived release notes\r\n\r\nThis doesn't look as simple as I would have hoped, but it's not terrible. What do you think?\r\n\r\n\r\n",
          "user": {
            "login": "jonasnick",
            "id": 2582071,
            "node_id": "MDQ6VXNlcjI1ODIwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasnick",
            "html_url": "https://github.com/jonasnick",
            "followers_url": "https://api.github.com/users/jonasnick/followers",
            "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasnick/orgs",
            "repos_url": "https://api.github.com/users/jonasnick/repos",
            "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasnick/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "closed_at": "2021-12-25T00:03:09Z",
          "created_at": "2020-12-04T22:46:30Z",
          "updated_at": "2021-12-25T00:03:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-07T19:26:20Z",
      "updated_at": "2021-07-07T19:26:20Z",
      "source": {
        "issue": {
          "id": 939193794,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Njg1NDUzNTI3",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/964",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/964/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/964/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/964/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/964",
          "number": 964,
          "state": "closed",
          "state_reason": null,
          "title": "Add release-process.md",
          "body": "This is an attempt at a simple release process. Fixes #856. To keep it simple, there is no concept of release candidates for now.\r\n\r\nThe release version is determined by semantic versioning of the API. Since it does not seem to be a lot of work, it is proper to also version the ABI with the libtool versioning system. This versioning scheme (semver API, libtool versioning ABI) follows the suggestion in the [autotools mythbusters](https://autotools.io/libtool/version.html).\r\n\r\nExperimental modules are a bit of a headache, as expected. This release process suggests to treat any change in experimental modules as backwards compatible. That way, users of stable modules are not bothered by frequent non-backwards compatible releases. But a downside is that one must not use experimental modules in shared libraries (which should be mentioned in the README?). It would be nice if we could make the schnorrsig module stable in the not too distant future (see also #817).\r\n",
          "user": {
            "login": "jonasnick",
            "id": 2582071,
            "node_id": "MDQ6VXNlcjI1ODIwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasnick",
            "html_url": "https://github.com/jonasnick",
            "followers_url": "https://api.github.com/users/jonasnick/followers",
            "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasnick/orgs",
            "repos_url": "https://api.github.com/users/jonasnick/repos",
            "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasnick/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/964",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/964",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/964.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/964.patch"
          },
          "closed_at": "2021-12-25T00:03:10Z",
          "created_at": "2021-07-07T19:26:20Z",
          "updated_at": "2021-12-25T00:03:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T11:58:32Z",
      "updated_at": "2021-10-19T11:58:32Z",
      "source": {
        "issue": {
          "id": 1030216354,
          "node_id": "I_kwDOAP4Jqs49Z9qi",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/992",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/992/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/992/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/992/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/992",
          "number": 992,
          "state": "closed",
          "state_reason": "completed",
          "title": "Stabilization of schnorrsig ",
          "body": "Beyond those two, the only remaining experimental feature is the recently-merged BIP340 support. It is experimental for two reasons:\r\n\r\n* There are a few discussions still ongoing that may impact the API (variable-length message support, batch validation) without changes to the (currently supported) part of the scheme. It's not impossible to just add new functions for these once they're worked out, but given the next point, I think this may not be needed.\r\n* It's very hard to be *sure* what exact semantics of BIP340 will actually activate on Bitcoin (or if it will at all), and if that ends up being different from what is implemented now, eventually this library will want to implement the final scheme. I think changes are very unlikely at this point, but it's also not exactly under our control.\r\n\r\n_Originally posted by @sipa in https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-693033273_",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "closed_at": "2022-03-25T09:57:28Z",
          "created_at": "2021-10-19T11:58:32Z",
          "updated_at": "2022-03-25T09:57:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T12:09:35Z",
      "updated_at": "2021-10-19T12:09:35Z",
      "source": {
        "issue": {
          "id": 1030227491,
          "node_id": "PR_kwDOAP4Jqs4tYYbe",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/993",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/993/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/993/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/993/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/993",
          "number": 993,
          "state": "closed",
          "state_reason": null,
          "title": "Enable non-experimental modules by default",
          "body": "This has been discussed in https://github.com/bitcoin-core/secp256k1/issues/817#issuecomment-693198323 and I agree with the arguments brought up there. \r\n\r\nAlternatively, we could not enable them and add a discussion to the readme why we discourage people from using the modules. I believe enabling ECDH is not very controversial. But what about recovery? Do we want to leave it off and instead give a reason?",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/2",
            "html_url": "https://github.com/bitcoin-core/secp256k1/milestone/2",
            "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/2/labels",
            "id": 8254536,
            "node_id": "MI_kwDOAP4Jqs4AffRI",
            "number": 2,
            "state": "closed",
            "title": "initial release (0.x)",
            "description": "",
            "creator": {
              "login": "jonasnick",
              "id": 2582071,
              "node_id": "MDQ6VXNlcjI1ODIwNzE=",
              "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/jonasnick",
              "html_url": "https://github.com/jonasnick",
              "followers_url": "https://api.github.com/users/jonasnick/followers",
              "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
              "organizations_url": "https://api.github.com/users/jonasnick/orgs",
              "repos_url": "https://api.github.com/users/jonasnick/repos",
              "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/jonasnick/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 3,
            "created_at": "2022-07-31T17:47:04Z",
            "updated_at": "2022-12-12T23:15:39Z",
            "closed_at": "2022-12-12T23:15:39Z"
          },
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/993",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/993",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/993.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/993.patch"
          },
          "closed_at": "2022-11-22T11:54:00Z",
          "created_at": "2021-10-19T12:09:35Z",
          "updated_at": "2022-11-22T11:54:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T19:39:59Z",
      "updated_at": "2021-10-20T19:39:59Z",
      "source": {
        "issue": {
          "id": 1031765966,
          "node_id": "I_kwDOAP4Jqs49f3_O",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/997",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/997/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/997/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/997/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/997",
          "number": 997,
          "state": "open",
          "state_reason": null,
          "title": "Scope of the library",
          "body": "I think we should have a documented policy on the scope of the library. The discussion comes up from time to time [0] and has never really been resolved, I think.  We don't strictly need answers to these questions but I feel a written policy would avoid some discussions and bikeshedding in the future. And of course, a policy won't be written in stone, we can still change it if have a reason to do so.\r\n\r\nOne way to approach this is \"features that are used by Bitcoin Core now or a have a good chance to be used by Bitcoin Core in the future\". ECDH was somewhat of an exception here but maybe it will be used in the future for BIP324 (P2P encryption).\r\n\r\nAnother approach is to add features that are useful to the wider ecosystem. Of course, this does not mean that we need to accept every feature that meets this definition --- including features means that we commit on maintaining them.\r\n\r\nI think with ECDH and Java bindings, the thinking here was more towards the latter approach. Personally I lean more towards the former idea because it avoids the need to take decisions about what to include, and it saves resources. (For example, Java bindings have been removed for a reason.)\r\n\r\nA somewhat related discussion is the one about experimental features (#817). For example, if we view musig2 as something that can be experimented around with in a fork such as secp256k1-zkp but then plan on porting it to here [0], then what's the difference to something which can go in as an experimental module? Is musig2 \"super-experimental\", is it just not clear yet if it has a good chance of ending up in Bitcoin Core or is there just really no difference in the end?\r\n\r\nRight now, I think there's a good chance that #995 will be merged, so if we wanted to deprecate experimental modules (as has been proposed in #817 but couldn't find consensus), now would be a good time.\r\n\r\n[0] https://github.com/bitcoin/bitcoin/issues/23326#issuecomment-947942068  \r\n",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 17,
          "created_at": "2021-10-20T19:39:59Z",
          "updated_at": "2022-10-19T15:32:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 5814422180,
      "node_id": "REFE_lADOAP4Jqs4p3EMdzwAAAAFakQqk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5814422180",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "423b6d19d373f1224fd671a982584d7e7900bc93",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/423b6d19d373f1224fd671a982584d7e7900bc93",
      "created_at": "2021-12-25T00:03:09Z"
    },
    {
      "event": "referenced",
      "id": 7867097445,
      "node_id": "REFE_lADOAP4Jqs4p3EMdzwAAAAHU6mFl",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/7867097445",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2286f8090242098a33f0d85b27c48e58d4235df1",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/2286f8090242098a33f0d85b27c48e58d4235df1",
      "created_at": "2022-11-22T11:53:59Z"
    }
  ]
}