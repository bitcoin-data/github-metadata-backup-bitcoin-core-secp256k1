{
  "type": "issue",
  "issue": {
    "id": 3386737952,
    "node_id": "I_kwDOAP4Jqs7J3YUg",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1736",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1736/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1736/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1736/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1736",
    "number": 1736,
    "state": "open",
    "state_reason": null,
    "title": "Initialization of output args",
    "body": "This came up in #1698.\n\n[`secp256k1_pubkey_load`](https://github.com/bitcoin-core/secp256k1/blob/master/src/secp256k1.c#L240-L244) will only return 0 when it triggers the `illegal_callback`. The docs of the callback say that if an API call triggers it, then the return value and the output arguments of the API call are \"undefined\". \n\nNow, what does this mean? In the case of the return value, this probably means something like \"it's a proper value, but it could be any\". The C standard calls this an \"unspecified value\" and it cannot have a trap representation. This at least guarantees that there won't be any UB when using this value.\n\nIt's more complicated when it comes to output arguments, as these are stored in memory, and C has a concept of an \"indeterminate representation\", e.g., used for uninitialized stack variables. Reading one of these beasts [might be UB](https://cacm.acm.org/practice/uninitialized-reads/), depending on which version of the standard you're looking at, the compiler (writers) interpretation of it, and whether it's static memory or not (whether is has \"automatic storage duration\"), and whether the memory has its address been taken (wtf!). I don't think we'll want to enter that territory, so we better read the API docs again as \"unspecified value\"...\n\nProviding this guarantee that output args are \"initialized\" may be a good idea, and that means we should overwrite any output args when an `ARG_CHECK` fires, e.g., with all zeros. This is done, for instance, by the [tweak functions](https://github.com/bitcoin-core/secp256k1/commit/bb5aa4df557c5abfabf25c72144a1a071c69aa83). But the here is that this rule is difficult to follow for contributors if we have internal helper functions like `secp256k1_ec_pubkey_load()` that have `ARG_CHECK`s in it (or if one API functions calls another one) You can't tell from its name that `secp256k1_pubkey_load` may call the illegal callback but you'll need to know as a caller because you may need to guarantee that all API output args have been initialized before the call.\n\nWhat could we do to improve this?\n\n1. *Add a rule that says that `ARG_CHECK` may only appear in the body of API functions, and that API functions may not call each other.* It appears to be the case that most instances of `ARG_CHECK` are at the top of API functions, so perhaps this rule could be implemented. But it will make the code harder to read in a number of places, e.g., we'll have to create some \"internal\" versions of API functions. That's annoying, at least. \n2. *Drop the guarantee.* If production code is supposed to crash anyway in the callback, I tend to think that this is acceptable. @sipa I wonder what the initial thinking behind the guarantee was (if you remember... this is 10 years ago).",
    "user": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 0,
    "created_at": "2025-09-05T08:33:50Z",
    "updated_at": "2025-09-05T08:33:50Z"
  },
  "events": [
    {
      "event": "mentioned",
      "id": 19524437611,
      "node_id": "MEE_lADOAP4Jqs7J3YUgzwAAAASLv0Zr",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19524437611",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-05T08:33:51Z"
    },
    {
      "event": "subscribed",
      "id": 19524437632,
      "node_id": "SE_lADOAP4Jqs7J3YUgzwAAAASLv0aA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19524437632",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-05T08:33:51Z"
    },
    {
      "event": "subscribed",
      "id": 19524502794,
      "node_id": "SE_lADOAP4Jqs7J3YUgzwAAAASLwEUK",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/19524502794",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-05T08:37:25Z"
    }
  ]
}