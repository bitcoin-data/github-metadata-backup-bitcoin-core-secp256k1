{
  "type": "issue",
  "issue": {
    "id": 636327498,
    "node_id": "MDU6SXNzdWU2MzYzMjc0OTg=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/757",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/757/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/757/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/757/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/757",
    "number": 757,
    "state": "open",
    "state_reason": null,
    "title": "Nonce functions",
    "body": "At the moment you can call `secp256k1_ecdsa_sign` with parameters `noncefp == NULL` and `noncedata != NULL`. This basically says \"give me whatever function you think you should be the default but feed it this data\", which is not really meaningful. This will be relevant if we want to change the default in the future, which is not too unlikely I think.\r\n\r\nI see two ways:\r\n * Either we simply disallow this call (`ARG_CHECK`), or\r\n * we provide the guarantee that any default function will accept and use some (fixed-length) string of additional entropy.\r\n\r\nAfter the investigation into synthetic nonces in BIP340, I slightly prefer the second option because I don't want to discourage people from adding entropy while leaving the choice of the function to the library. What do you think?",
    "user": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/1",
      "html_url": "https://github.com/bitcoin-core/secp256k1/milestone/1",
      "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/1/labels",
      "id": 1276306,
      "node_id": "MDk6TWlsZXN0b25lMTI3NjMwNg==",
      "number": 1,
      "state": "open",
      "title": "stable release (1.0.0-rc.1)",
      "description": "Motivation: libsecp is already widely used today, but often in a terribly outdated version. It's likely that a release process would help with that. Moreover, it simplifies using libsecp which may prevent developers from using less well tested alternatives. Lastly, without releases it's difficult to update the library in an organized fashion and communicate these updates.\r\n\r\nRelease Goals:\r\n\r\n- Stabilize API and documentation for functionality that exist today.\r\n- Fix a few known bugs.\r\n- Make ECDH non-experimental.\r\n\r\nThis milestone can be discussed in issue https://github.com/bitcoin-core/secp256k1/issues/286.",
      "creator": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 12,
      "closed_issues": 26,
      "created_at": "2015-08-27T18:21:31Z",
      "updated_at": "2023-04-10T15:36:41Z"
    },
    "locked": false,
    "comments": 5,
    "created_at": "2020-06-10T15:07:13Z",
    "updated_at": "2020-09-23T08:49:57Z"
  },
  "events": [
    {
      "event": "milestoned",
      "id": 3430124216,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDM0MzAxMjQyMTY=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3430124216",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-10T15:07:13Z",
      "milestone": {
        "title": "initial release (1.0.0-rc.1)"
      }
    },
    {
      "event": "commented",
      "id": 643990488,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mzk5MDQ4OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/643990488",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T08:41:52Z",
      "updated_at": "2020-06-15T08:41:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I don't want to discourage people from adding entropy while leaving the choice of the function to the library.\r\n\r\nI'd be surprised if people don't make use of this already and while it's not explicitly documented I don't think we would ever switch the default to a function that doesn't add noncedata entropy.\r\n",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/757#issuecomment-643990488",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/757"
    },
    {
      "event": "commented",
      "id": 643996582,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mzk5NjU4Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/643996582",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T08:53:27Z",
      "updated_at": "2020-06-15T08:53:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I'd be surprised if people don't make use of this already\r\n\r\nIn rust-secp we don't, if this will be documented I'll add a feature that will seed randomness into the ecdsa_sign nonce function,\r\n\r\nbitcoin core actually uses that entropy as counter and does not seed it (https://github.com/bitcoin/bitcoin/blob/195822f1e05e2f36002c906667d4c639663f23b5/src/key.cpp#L215 (I might open a PR to make the counter start at a random point)) ",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/757#issuecomment-643996582",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/757"
    },
    {
      "event": "commented",
      "id": 644001840,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDAwMTg0MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/644001840",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T09:02:58Z",
      "updated_at": "2020-06-15T09:02:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "@elichai but both rust-secp and core specify `secp256k1_nonce_function_rfc6979` instead of `null`.\r\n\r\n> bitcoin core actually uses that entropy as counter and does not seed it (https://github.com/bitcoin/bitcoin/blob/195822f1e05e2f36002c906667d4c639663f23b5/src/key.cpp#L215 (I might open a PR to make the counter start at a random point))\r\n\r\nIf we believe in the results of BIP340, we may even want to have randomness there in every call and not only at the start. https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki#default-signing\r\n\r\nWe should also propose to change the derivation function to the one used in BIP340, but that's a larger thing. @jonasnick Is this something we could change in the Schnorr PR? Maybe introduce the nonce derivation function in a separate PR and make it available for ECDSA already now?  ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/757#issuecomment-644001840",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/757"
    },
    {
      "event": "mentioned",
      "id": 3443367610,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ0MzM2NzYxMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3443367610",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T09:02:58Z"
    },
    {
      "event": "subscribed",
      "id": 3443367612,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NDMzNjc2MTI=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3443367612",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T09:02:58Z"
    },
    {
      "event": "mentioned",
      "id": 3443367620,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ0MzM2NzYyMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3443367620",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T09:02:58Z"
    },
    {
      "event": "subscribed",
      "id": 3443367624,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NDMzNjc2MjQ=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3443367624",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T09:02:58Z"
    },
    {
      "event": "commented",
      "id": 644368120,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDM2ODEyMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/644368120",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T20:26:58Z",
      "updated_at": "2020-06-15T20:26:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "The BIP340 nonce function as implemented in #558 is not a `secp256k1_nonce_function` because it takes the `xonly_pubkey` as an additional argument so we'd need some kind of wrapper. But would be easy to open a PR with a copy of the schnorrsig PR nonce function and rebase the schnorrsig PR on top if that gets merged.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/757#issuecomment-644368120",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/757"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T17:23:26Z",
      "updated_at": "2020-08-07T17:23:26Z",
      "source": {
        "issue": {
          "id": 363639080,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE4MDI1Nzg1",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/558",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/558/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/558/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/558/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/558",
          "number": 558,
          "state": "closed",
          "state_reason": null,
          "title": " Add schnorrsig module which implements BIP-340 compliant signatures",
          "body": "This PR implements signing, verification and batch verification as described in [BIP-340](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki) in an experimental module named `schnorrsig`. It includes the test vectors and a benchmarking tool. \r\nThis PR also adds a module `extrakeys` that allows [BIP-341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)-style key tweaking.\r\n\r\n(Adding ChaCha20 as a CSPRNG and batch verification was moved to PR #760).\r\n\r\nIn order to enable the module run `./configure` with `--enable-experimental --enable-module-schnorrsig`.\r\n\r\nBased on apoelstra's work.\r\n",
          "user": {
            "login": "jonasnick",
            "id": 2582071,
            "node_id": "MDQ6VXNlcjI1ODIwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasnick",
            "html_url": "https://github.com/jonasnick",
            "followers_url": "https://api.github.com/users/jonasnick/followers",
            "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasnick/orgs",
            "repos_url": "https://api.github.com/users/jonasnick/repos",
            "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasnick/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 105,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/558",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/558",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/558.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/558.patch"
          },
          "closed_at": "2020-09-11T19:26:27Z",
          "created_at": "2018-09-25T15:33:00Z",
          "updated_at": "2020-09-19T13:54:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 697225995,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzIyNTk5NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/697225995",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-23T08:47:57Z",
      "updated_at": "2020-09-23T08:49:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "So we he had to introduce a new API for Schnorr nonce functions (\"hardened\") in order to support hashing the public key. Can we works towards unifying the  two types? Maybe with an optional public key argument, and if it's `NULL`, we hash a constant string? \r\nedit: This could help us deprecating the current nonce function and switch the default nonce function for ECDSA to the BIP340 function.  \r\n\r\n\r\nHere's another issue:\r\nOur BIP340 implementation implements an `algo16` argument for the nonce function. I think the API is somewhat unusual and not really ergonomic. We read up to 16 bytes, ignoring trailing zero bytes. So this is neither an ordinary 16 byte array, nor is it an zero-terminated ordinary string. \r\nWe tend to avoid variable-length strings but maybe in this case expecting a byte array and a length will be better?\r\n\r\nSee\r\nhttps://github.com/bitcoin-core/secp256k1/blob/d7838ba6a6ac77cec173080f20efcd0e311ebfaa/src/modules/schnorrsig/main_impl.h#L68-L80 \r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/757#issuecomment-697225995",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/757"
    },
    {
      "event": "renamed",
      "id": 3796980994,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50Mzc5Njk4MDk5NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3796980994",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-23T08:48:49Z",
      "rename": {
        "from": "Passing data to default nonce function",
        "to": "Nonce functions"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-23T09:02:35Z",
      "updated_at": "2020-09-23T09:02:35Z",
      "source": {
        "issue": {
          "id": 707174990,
          "node_id": "MDU6SXNzdWU3MDcxNzQ5OTA=",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/823",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/823/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/823/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/823/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/823",
          "number": 823,
          "state": "open",
          "state_reason": null,
          "title": "memcmp may be miscompiled by GCC",
          "body": "What about the other memcmp's we have in actual production code? (bip340 tag, tweak add check, scratch impl, sha256 selftest) does this bug affect those too?\r\n\r\n_Originally posted by @elichai in https://github.com/bitcoin-core/secp256k1/pull/822#issuecomment-697221468_\r\n\r\ncontext: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=95189",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 27,
          "created_at": "2020-09-23T08:51:57Z",
          "updated_at": "2022-08-04T13:46:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-16T09:25:30Z",
      "updated_at": "2022-01-16T09:25:30Z",
      "source": {
        "issue": {
          "id": 1104248718,
          "node_id": "PR_kwDOAP4Jqs4xERST",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1064",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1064/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1064/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1064/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1064",
          "number": 1064,
          "state": "closed",
          "state_reason": null,
          "title": "Modulo-reduce msg32 inside RFC6979 nonce fn to match spec. Fixes #1063",
          "body": null,
          "user": {
            "login": "paulmillr",
            "id": 574696,
            "node_id": "MDQ6VXNlcjU3NDY5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/574696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulmillr",
            "html_url": "https://github.com/paulmillr",
            "followers_url": "https://api.github.com/users/paulmillr/followers",
            "following_url": "https://api.github.com/users/paulmillr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/paulmillr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/paulmillr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/paulmillr/subscriptions",
            "organizations_url": "https://api.github.com/users/paulmillr/orgs",
            "repos_url": "https://api.github.com/users/paulmillr/repos",
            "events_url": "https://api.github.com/users/paulmillr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/paulmillr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1064",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1064",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1064.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1064.patch"
          },
          "closed_at": "2022-01-22T23:38:35Z",
          "created_at": "2022-01-15T01:00:49Z",
          "updated_at": "2022-01-25T22:59:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-14T15:16:49Z",
      "updated_at": "2022-09-14T15:16:49Z",
      "source": {
        "issue": {
          "id": 1373174671,
          "node_id": "I_kwDOAP4Jqs5R2PuP",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1141",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1141/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1141/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1141/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1141",
          "number": 1141,
          "state": "open",
          "state_reason": null,
          "title": "Protecting ecmult_gen against side-channel attacks: the big picture",
          "body": "We use `ecmult_gen` to compute point multiplications $nG$ with the generator. This is used for computing public keys and for computing public nonces generation in ECDSA and Schnorr signatures. One of our security goals here is to protect against side-channel leakage.\r\n\r\n### Attacker model\r\n\r\nIn the following, I assume an attacker that is able to observe the computation of $nG$ for a fixed $n$ many many times, say $q >> 1$ times. We assume that the observation of a handful of operations does not help the attacker. (If those observations leak too much information, we're lost anyway.) The attacker does not have further capabilities, e.g., it cannot read or write our memory directly.\r\n\r\n### Current situation\r\n\r\nBesides having constant-time code, we currently use these secondary techniques as an additional defense against physical side channel attacks in `ecmult_gen` when computing $nG$.\r\n\r\n - Synthetic nonces: This is only possible when computing nonces because this randomizes $n$ itself.\r\n    Even if all other inputs to signing are the same, we'll get additional fresh randomness (or a counter) from the caller every time, and use a difference secret nonce $n$ in every invocation of a signing function. Here, our attacker won't learn anything.\r\n - Random scalar blinding: We compute $nG$ as $(n-b)G + bG$ for a random scalar $b$, where $b$ and $bG$ are stored in the context upon context randomization (see https://github.com/bitcoin-core/secp256k1/blob/55f8bc99dce8846e0da99b92e52353c8cf893287/src/ecmult_gen_impl.h)\r\n    This means that an attacker that observes the computation $q$ times will observe a single computation of $bG$ and $q$ computations of $(n-b)G$. Since the single observation does not help the attacker, the attacker will at most learn $n-b$, which alone is independent of $n$.\r\n    (Here we need to assume that the attacker can't learn $n$ from observing the scalar addition $n-b$ but again, we're anyway lost if the attacker can learn something meaningful from scalar operations because we'll always need to do scalar operations involving the secret key. We also need to assume that the attacker does not compromise us *at any point* and learns $b$, or that the attacker has chosen the seed to generate $b$.)\r\n     - Projective blinding: To randomize the projection (gej to ge), we also randomize the z-coordinate of $bG$:\r\n     https://github.com/bitcoin-core/secp256k1/blob/55f8bc99dce8846e0da99b92e52353c8cf893287/src/ecmult_gen_impl.h#L114-L116\r\n     But as $bG$ itself, this is only updated upon context randomization.\r\n - (NUMS blinding in the precomputation: This is only defense in depth to avoid exceptional cases in the addition law, and it's not relevant to this discussion.)\r\n\r\nAs a simple conclusion, synthetic nonces are a stronger defense against the kind of attackers considered in this issue. However, we currently use them only for Schnorr signatures but not for ECDSA.\r\n\r\nIn light of the above, I list some ideas in the following that we could look into. I'll first focus techniques that randomize $n$ itself. I'll indicate what I think in the headings.\r\n\r\n### Suggestions (ignoring context rerandomization)\r\n\r\n#### Introduce synthetic nonces for ECDSA signing (I want this) \r\nThis involves a change to the nonce generation function, and it would be a good idea to switch to a function similar to the one used for Schnorr signatures (see also #757). Synthetic nonces will protect the nonce computation sufficiently. This is a rather simple change and it avoids all the issues with writeable contexts. I think this is almost a no-brainer.\r\n\r\n#### Randomizing $n$ even if it's a signing key (I think I want this)\r\nHowever, synthetic nonces only protect the nonce computation. But what if $n$ is a signing key? I wrote above that randomizing $n$ is possible. That's not entirely true. With randomness (or a counter) available, we could derive a \"one-time\" $b$ and still compute $nG$ as $(n-b)G + bG$. The obvious drawback is that this requires two `ecmult_gen` calls. This sounds bad but I tend to think some of our users may want to pay that additional computation for additional security.  Do you think that's reasonable idea?\r\n\r\n### Suggestions for context rerandomization\r\n\r\nMoreover, there have been thoughts and discussions here (https://github.com/bitcoin-core/secp256k1/issues/780) and elsewhere (https://github.com/rust-bitcoin/rust-secp256k1/issues/388) about rerandomizing the context after every signature. \r\n\r\nAgainst attackers as sketched above, rerandomization won't help. (As described above, the `ecmult_gen` is protected even if $b$ stays constant). But if we make the attacker more powerful, and assume it can learn something from observing the scalar addition $n-b$ over and over, then rerandomizing the context (and thus $b$) is a good idea.\r\n\r\n#### Recommend  context rerandomization at least between any two computations that derive public keys from secret keys (I want this)\r\n As outlined above, those computations are harder to protect because we can't cheaply randomize $n$ as in synthetic nonces.\r\n\r\n#### Recommend context rerandomization after every signing operation (Not sure if I want this)\r\nIf my analysis here is correct, then there's no reason to do this. Synthetic nonces provide the same protection and are simpler. (But on the other hand, defense in depth is a thing...)\r\n\r\n#### Automatic rerandomization\r\nOnce we're willing to do larger API changes, we should really implement some form of automatic rerandomization (#780). But I think this further down the road.\r\n\r\n",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 0,
          "created_at": "2022-09-14T15:16:49Z",
          "updated_at": "2022-09-14T15:16:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "paulmillr",
        "id": 574696,
        "node_id": "MDQ6VXNlcjU3NDY5Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/574696?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulmillr",
        "html_url": "https://github.com/paulmillr",
        "followers_url": "https://api.github.com/users/paulmillr/followers",
        "following_url": "https://api.github.com/users/paulmillr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paulmillr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paulmillr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paulmillr/subscriptions",
        "organizations_url": "https://api.github.com/users/paulmillr/orgs",
        "repos_url": "https://api.github.com/users/paulmillr/repos",
        "events_url": "https://api.github.com/users/paulmillr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paulmillr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T13:52:44Z",
      "updated_at": "2023-06-28T13:52:44Z",
      "source": {
        "issue": {
          "id": 1778999346,
          "node_id": "I_kwDOAP4Jqs5qCWAy",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1365",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1365/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1365/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1365/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1365",
          "number": 1365,
          "state": "closed",
          "state_reason": "completed",
          "title": "Schnorr is not compatible with BIP340",
          "body": "I believe this has been mentioned in comment https://github.com/bitcoin-core/secp256k1/issues/757#issuecomment-644001840, but nevertheless decided to open an issue for visibility.\r\n\r\nBIP340 https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki#default-signing clearly says `auxRand` should always be used even if it's all-zero. It also provides exact algorithm to calculate nonce from it.\r\n\r\nRight now, libsecp256k1, when auxRand was not passed, uses its own nonce generation algorithm.\r\n\r\nIt would be good to make the library follow specification.",
          "user": {
            "login": "paulmillr",
            "id": 574696,
            "node_id": "MDQ6VXNlcjU3NDY5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/574696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulmillr",
            "html_url": "https://github.com/paulmillr",
            "followers_url": "https://api.github.com/users/paulmillr/followers",
            "following_url": "https://api.github.com/users/paulmillr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/paulmillr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/paulmillr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/paulmillr/subscriptions",
            "organizations_url": "https://api.github.com/users/paulmillr/orgs",
            "repos_url": "https://api.github.com/users/paulmillr/repos",
            "events_url": "https://api.github.com/users/paulmillr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/paulmillr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "closed_at": "2023-06-28T14:06:38Z",
          "created_at": "2023-06-28T13:52:44Z",
          "updated_at": "2023-06-28T14:22:30Z"
        },
        "type": "issue"
      }
    }
  ]
}