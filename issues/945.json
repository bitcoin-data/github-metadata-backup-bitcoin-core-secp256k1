{
  "type": "issue",
  "issue": {
    "id": 892150115,
    "node_id": "MDU6SXNzdWU4OTIxNTAxMTU=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/945",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/945/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/945/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/945/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/945",
    "number": 945,
    "state": "open",
    "state_reason": null,
    "title": "Constness of pointers in nonce_function, callbacks",
    "body": "The context callbacks and `nonce_function` take non-const data pointers but the functions calling them take const pointers.  \r\n\r\nI think this is somewhat confusing, in particular for the user-exposed `ecsda_sign()` that takes a const pointer but also a `nonce_function` with a non-const pointer.\r\n\r\nThis has been introduced by  https://github.com/bitcoin-core/secp256k1/pull/299/commits/05732c5a5f781d49972659d8f59e5262ff026ce8  but I don't really understand the benefits of this method. \r\n\r\ncc @luke-jr ",
    "user": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 2,
    "created_at": "2021-05-14T18:39:21Z",
    "updated_at": "2021-05-15T16:45:35Z"
  },
  "events": [
    {
      "event": "mentioned",
      "id": 4748406397,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc0ODQwNjM5Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4748406397",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-14T18:39:21Z"
    },
    {
      "event": "subscribed",
      "id": 4748406401,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NDg0MDY0MDE=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4748406401",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-14T18:39:21Z"
    },
    {
      "event": "commented",
      "id": 841515265,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTUxNTI2NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/841515265",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-14T21:35:18Z",
      "updated_at": "2021-05-14T21:35:18Z",
      "author_association": "MEMBER",
      "body": "You can pass any pointer into `const void*`, but you can't pass const pointers into `void*`\r\n\r\nThe callback uses `void*` so the API user doesn't need to cast away the constness itself",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/945#issuecomment-841515265",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/945"
    },
    {
      "event": "commented",
      "id": 841689964,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTY4OTk2NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/841689964",
      "actor": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-15T16:40:12Z",
      "updated_at": "2021-05-15T16:45:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "A const void pointer is a subtype of a void pointer, meaning that a void pointer can be converted to a cont void pointer as needed.\r\n\r\nFunction parameters are contravariant, so that means a function signature taking a void pointer is morally an subtype of the same function signature but taking a const void pointer, meaning that a function taking a const void pointer argument can be morally be \"converted\" to a the same function taking a void pointer (though this conversion of function doesn't actually happen; rather the effect of it happens when the caller can converts their void pointer to a const void pointer during the call).\r\n\r\nBecause function arguments are contravariant, the variance of the arguments to a function pointer are also reversed.  That means that a function signature `f` with an argument that is a function pointer with a signature `g`, the variance of the parameters of `g` are flipped to being covariant.  So a function signature `f` taking a function pointer signature `g` taking a const void pointer is a subtype of the same function signature `f` taking the same function pointer signature `g` but taking a void pointer.  Thus a function `f` taking a function pointer `g` taking a void pointer can be morally \"converted\" to the same function taking a function pointer taking a const void pointer.\r\n\r\nThe implication is that arguments to function pointer arguments in the libsecp256k1 will be more general if they are void pointers rather than const void pointers.  And indeed https://github.com/bitcoin-core/secp256k1/commit/05732c5a5f781d49972659d8f59e5262ff026ce8 is a change that made the libsecp256k1 API more general in this way.\r\n\r\nWith that said, just because the API is as general as it can be, doesn't mean the API is correct, because having a more general API doesn't make it const-correct, and the current API doesn't appear to me to be const-correct (for some definition of const-correctness).  In particular, if the users allocates a const `nonce_data` argument and calls `ecdsa_sign` with it along with a `nonce_function` that modifies the `nonce_data`, then UB will happen.\r\n\r\nI suspect the problem is that the two possible API's for `ecdsa_sign`, one taking const `nonce_data` and a `nonce_function` operating on const `nonce_data`, versus the other API for `ecdsa_sign`, taking non-const `nonce_data` and a `nonce_function` operating on non-const `nonce_data` are invariant with respect to each other, meaning neither one is a subtype of each other.\r\nIf this is true, the above line of reasoning suggests that you need to provide both the const and non-const version of the `ecdsa_sign` function to be const-correct (thank you lack-of-polymorphism-in-C).\r\n\r\nHowever, another line of argument says, \"look, we already have to use void pointers to get around the lack-of-polymorphism-in-C, so users already have to be careful to cast to appropriate data types in their `nonce_function`s.  It is not really worse for them to be careful regarding the constness of their casting while they are at it.\"  That is to say, in their `nonce_function`, while casting from their void pointer, they had better not only only cast to the correct datatype but also cast to the correct const qualifier too.\r\n\r\nThat line of argument makes sense to me, so long as there is no UB caused by C during the intermediate use of non-const void pointers that may actually be pointing to const data.  AFAIU, there are no such problems in C, as long as the const qualifiers (and datatypes) are properly cast back in the `nonce_function`.\r\n\r\nMy judgement is that the API is good as is, given the lack-of-polymorphism-in-C.  If their `nonce_data` is const, their `nonce_function` needs to restore the `const` qualifier.  If their `nonce_data` is non-const, then AFAIU, it is safe and legal in C for that const qualifier to be cast away and not be restored in their `nonce_function`.",
      "user": {
        "login": "roconnor-blockstream",
        "id": 21371712,
        "node_id": "MDQ6VXNlcjIxMzcxNzEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roconnor-blockstream",
        "html_url": "https://github.com/roconnor-blockstream",
        "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
        "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
        "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
        "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
        "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/945#issuecomment-841689964",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/945"
    }
  ]
}