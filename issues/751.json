{
  "type": "issue",
  "issue": {
    "id": 611961295,
    "node_id": "MDU6SXNzdWU2MTE5NjEyOTU=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/751",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/751/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/751/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/751/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/751",
    "number": 751,
    "state": "open",
    "state_reason": null,
    "title": "Should passing invalid recid to sig parsing call the callback?",
    "body": "Hi, \r\nCurrently if you pass a recid that is `recid < 0 || recid > 3` into `secp256k1_ecdsa_recoverable_signature_parse_compact` it will fail on `ARG_CHECK` which will call `secp256k1_callback_call` which will by default abort the program.\r\nhttps://github.com/bitcoin-core/secp256k1/blob/master/src/modules/recovery/main_impl.h#L46\r\n\r\nIs this the right thing to do? AFAIK this is the only place in our API where a *parsing* function can abort your program on invalid input.\r\nThis means that whoever uses the API must check the recid before passing it to the parsing function.\r\n\r\nI think this makes sense on opaque structs which we require to go through the parsing functions first and not manually initialize them because that will be \"library UB\"(sometimes abort, others unexpected results, see #668 #701) but I think it makes less sense on an int used as the input to a parsing function.",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/1",
      "html_url": "https://github.com/bitcoin-core/secp256k1/milestone/1",
      "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/1/labels",
      "id": 1276306,
      "node_id": "MDk6TWlsZXN0b25lMTI3NjMwNg==",
      "number": 1,
      "state": "open",
      "title": "stable release (1.0.0-rc.1)",
      "description": "Motivation: libsecp is already widely used today, but often in a terribly outdated version. It's likely that a release process would help with that. Moreover, it simplifies using libsecp which may prevent developers from using less well tested alternatives. Lastly, without releases it's difficult to update the library in an organized fashion and communicate these updates.\r\n\r\nRelease Goals:\r\n\r\n- Stabilize API and documentation for functionality that exist today.\r\n- Fix a few known bugs.\r\n- Make ECDH non-experimental.\r\n\r\nThis milestone can be discussed in issue https://github.com/bitcoin-core/secp256k1/issues/286.",
      "creator": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 12,
      "closed_issues": 26,
      "created_at": "2015-08-27T18:21:31Z",
      "updated_at": "2023-04-10T15:36:41Z"
    },
    "locked": false,
    "comments": 1,
    "created_at": "2020-05-04T15:24:52Z",
    "updated_at": "2020-05-04T17:23:52Z"
  },
  "events": [
    {
      "event": "milestoned",
      "id": 3300648608,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDMzMDA2NDg2MDg=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3300648608",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T16:19:19Z",
      "milestone": {
        "title": "initial release (1.0.0-rc.1)"
      }
    },
    {
      "event": "commented",
      "id": 623596065,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzU5NjA2NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/623596065",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T17:23:52Z",
      "updated_at": "2020-05-04T17:23:52Z",
      "author_association": "MEMBER",
      "body": "Yeah, this somehow depends on what \"parsing\" is. The `parse` function is supposed to parse the signature (as in \"read a byte array\"), whereas it assumes that `recid` is an int already. But that's weird because the normal usage of recovery is that the `recid` is transferred along with the `signature`. You may even consider it part of the signature, and if you look at the caller in Core, that's pretty much what it's doing: https://github.com/bitcoin/bitcoin/blob/99813a9745fe10a58bedd7a4cb721faf14f907a4/src/pubkey.cpp#L187\r\n\r\nI'm not sure to be honest. I think the ideal API would define a serialized recoverable signature to be a 65-byte string and simply take care of parsing the first byte. Maybe we can simply add a function that does this but also the keep the current function as it is? \r\n\r\nIf people don't think that's a good idea, I think you're right. Then the pragmatic thing is to return 0. (And we could do this change without breaking the API, we're just defining undefined cases.)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/751#issuecomment-623596065",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/751"
    }
  ]
}