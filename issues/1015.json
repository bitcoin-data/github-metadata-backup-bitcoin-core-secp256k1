{
  "type": "issue",
  "issue": {
    "id": 1053091057,
    "node_id": "I_kwDOAP4Jqs4-xOTx",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015",
    "number": 1015,
    "state": "open",
    "state_reason": null,
    "title": "Schnorrsig sign with tweak",
    "body": "Currently BIP341 recommends:\r\n\r\n> If the spending conditions do not require a script path, the output key should commit to an unspendable script path instead of having no script path. This can be achieved by computing the output key point as Q = P + int(hashTapTweak(bytes(P)))G.\r\n\r\nThis would require tweaking the private key before signing.\r\n\r\nCurrently, the only way I can work around this with my downstream library is:\r\n- calculate the pubkey\r\n- see if it's even or odd\r\n- negate the privkey if odd\r\n- tweak the privkey\r\n\r\nThen when I pass it to this library, it does steps 1-3 again before signing (to negate it)\r\n\r\nIf there was a variation of secp256k1_schnorrsig_sign that accepted a tweak, and would tweak the privkey after any negation, and before the signature calculation, that would be extremely helpful.\r\n\r\nThen we could just pass the tweak (`int(hashTapTweak(bytes(P)))`) in and everything would be more efficient.\r\n\r\nI would like to hear what everyone thinks about adding a `secp256k1_schnorrsig_sign_with_tweak` function.\r\n\r\n---\r\n\r\nAlso, taking this one step further, we could also add `secp256k1_schnorrsig_sign_keyspend_only` which will generate the tweak for us based on `Q = P + int(hashTapTweak(bytes(P)))G` and then pass it into `secp256k1_schnorrsig_sign_with_tweak`\r\n\r\n---\r\n\r\nAny and all feedback appreciated.",
    "user": {
      "login": "junderw",
      "id": 11246316,
      "node_id": "MDQ6VXNlcjExMjQ2MzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/junderw",
      "html_url": "https://github.com/junderw",
      "followers_url": "https://api.github.com/users/junderw/followers",
      "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
      "organizations_url": "https://api.github.com/users/junderw/orgs",
      "repos_url": "https://api.github.com/users/junderw/repos",
      "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/junderw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 16,
    "created_at": "2021-11-15T00:36:55Z",
    "updated_at": "2022-08-19T08:40:03Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 968406598,
      "node_id": "IC_kwDOAP4Jqs45uLZG",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/968406598",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T00:42:46Z",
      "updated_at": "2021-11-15T00:42:46Z",
      "author_association": "NONE",
      "body": "(Also note that while BIP341 recommends it, BIP86 (bip32 derivation scheme) requires it... so it looks like wallets that don't use this trick will run into compatibility issues down the road.)",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-968406598",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 968658903,
      "node_id": "IC_kwDOAP4Jqs45vI_X",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/968658903",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T08:44:10Z",
      "updated_at": "2021-11-15T08:44:30Z",
      "author_association": "MEMBER",
      "body": "> Currently, the only way I can work around this with my downstream library is:\r\n> \r\n>     * calculate the pubkey\r\n>     * see if it's even or odd\r\n>     * negate the privkey if odd\r\n>     * tweak the privkey\r\n> \r\n> \r\n> Then when I pass it to this library, it does steps 1-3 again before signing (to negate it)\r\n\r\nChecking evenness and negating the privkey/seckey is very cheap, it's about 5 ns on my machine.  So the only expensive step is step 1, which involves an EC multiplication. For the entire computation, you necessarily need two EC multiplications, because you want to compute two pubkeys: P and Q.\r\n\r\nNow with our keypair type, which you're required to use with `secp256k1_schnorrsig_sign`, you would\r\n- create a keypair from your seckey with `secp256k1_keypair_create` (EC multiplication that results in P)\r\n- tweak the keypair with `secp256k1_keypair_xonly_tweak_add` (one EC multiplication that results in Q)\r\n- sign with `secp256k1_schnorrsign_sign` (no EC multiplication because Q is stored in the keypair given to the function)\r\n\r\nSo we need two EC multiplications, which is optimal, no? ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-968658903",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 968707296,
      "node_id": "IC_kwDOAP4Jqs45vUzg",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/968707296",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T09:40:38Z",
      "updated_at": "2021-11-15T09:56:54Z",
      "author_association": "NONE",
      "body": "Yes. This is optimal if you are always in the C(/C++/Rust/WASM) space.\r\n\r\nThe major problem I have is that I am using this library through WASM, so data being managed by JS is not persisted in WASM between calls.\r\n\r\n---\r\n\r\nPerhaps a better idea would be to compute the mid-state of taptweak taggedhash as a const, and have a `secp256k1_schnorrsig_sign_with_taptweak_preimage` which would take in the data you want to pass to the TapTweak taggedhash (beside the pubkey).\r\n\r\nSo `Q = P + int(hashTapTweak(bytes(P) + merkle_root_bytes))G` we would pass in merkle_root_bytes. If it's empty, then it will just use P.\r\n\r\nThis has the advantage of also speeding up these operations for C/C++/Rust users as well instead of needing to initialize sha256 every time.\r\n\r\nPlease tell me if I'm wrong.",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-968707296",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 968750447,
      "node_id": "IC_kwDOAP4Jqs45vfVv",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/968750447",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T10:30:00Z",
      "updated_at": "2021-11-15T10:30:00Z",
      "author_association": "NONE",
      "body": "This is the mid-state for `\"TapTweak\"`\r\n```\r\n    sha->s[0] = 0xd129a2f3ul;\r\n    sha->s[1] = 0x701c655dul;\r\n    sha->s[2] = 0x6583b6c3ul;\r\n    sha->s[3] = 0xb9419727ul;\r\n    sha->s[4] = 0x95f4e232ul;\r\n    sha->s[5] = 0x94fd54f4ul;\r\n    sha->s[6] = 0xa2ae8d85ul;\r\n    sha->s[7] = 0x47ca590bul;\r\n```",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-968750447",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 968828933,
      "node_id": "IC_kwDOAP4Jqs45vygF",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/968828933",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T11:45:45Z",
      "updated_at": "2021-11-15T12:06:25Z",
      "author_association": "NONE",
      "body": "This is a very rough implementation, but something like this maybe?\r\n\r\nhttps://github.com/bitcoin-core/secp256k1/compare/ea5e8a9...junderw:feature/secp256k1_schnorrsig_sign_with_taptweak_preimage",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-968828933",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 969020032,
      "node_id": "IC_kwDOAP4Jqs45whKA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/969020032",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T15:24:18Z",
      "updated_at": "2021-11-15T15:24:18Z",
      "author_association": "MEMBER",
      "body": "> Yes. This is optimal if you are always in the C(/C++/Rust/WASM) space.\r\n> \r\n> The major problem I have is that I am using this library through WASM, so data being managed by JS is not persisted in WASM between calls.\r\n> \r\n\r\nHm, can you elaborate? How do you call into the secp library then? It's hard for me to imagine how you sign without keeping some state and moving it from `keypair_create` to `schnorrsig_sign`. (Or I tend to think that then it's not our responsibility to fix this).\r\n\r\n\r\n---\r\n\r\nFor the other parts, I think we need to separate the discussion:\r\n * Even if you ignore efficiency, it may still make sense to add a `schnorrsig_sign_with_tweak` for convenience reasons. I'm not too convinced though but I guess it wouldn't hurt. \r\n * In general, our tweaking functions are very raw (and thus unsafe to use), i.e., they don't even do the hashing. Originally the goal of the library was to do only the EC stuff, and leave the hashing to the user. Now with Schnorr sigs, this has changed anyway. So I agree we should have better/safer tweaking functions, e.g., tweaking functions that tweak pubkeys and do the hashing just right, for example `tweak(P, m) -> P+H(P,m)` for some H (SHA256 or even taptweak-midstate). We could even have a BIP32 module. But all of this requires more thought and more work.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-969020032",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 969026446,
      "node_id": "IC_kwDOAP4Jqs45wiuO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/969026446",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T15:30:32Z",
      "updated_at": "2021-11-15T19:12:46Z",
      "author_association": "MEMBER",
      "body": "I think we've had a vague longer-term plan to include more higher-level functions, e.g. for BIP32 derivation, so I agree having BIP341-specific tweaking functions in the library wouldn't be out of place. That said, like @real-or-random, I don't really see what the issue is with having this logic in the calling code (for reference, this is the Bitcoin Core code that invokes it: https://github.com/bitcoin/bitcoin/blob/v22.0/src/key.cpp#L264L280).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-969026446",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "mentioned",
      "id": 5619068123,
      "node_id": "MEE_lADOAP4Jqs4-xOTxzwAAAAFO7Czb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5619068123",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T15:30:32Z"
    },
    {
      "event": "subscribed",
      "id": 5619068136,
      "node_id": "SE_lADOAP4Jqs4-xOTxzwAAAAFO7Czo",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5619068136",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T15:30:32Z"
    },
    {
      "event": "commented",
      "id": 969394169,
      "node_id": "IC_kwDOAP4Jqs45x8f5",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/969394169",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T22:47:20Z",
      "updated_at": "2021-11-15T22:47:20Z",
      "author_association": "NONE",
      "body": "> Hm, can you elaborate?\r\n\r\n> I don't really see what the issue is with having this logic in the calling code\r\n\r\nSure thing. (collapsing because it's long and slightly off topic, explaining motivations)\r\n\r\n<details><summary>Open long explanation by clicking here</summary>\r\n<p>\r\nCurrently, we (a JS library) are using WASM for crypto operations by calling into this C library via FFI in Rust, then compiling that Rust into WASM.\r\n\r\nSince WASM is a sandboxed environment, any reference to keypair must live within the WASM memory during the lifetime of the WASM call. (We wouldn't want to leave private key data persistent in WASM memory until JS calls some clean method for example, for obvious reasons.)\r\n\r\nHowever, our taggedHash portion of the API lives within the JS portion.\r\n\r\nSo we have this awkward dance of \"ok, we want to use WASM for its speed, and secp256k1 C library.\" but every time a taggedhash is required we need to do that in the JS space.\r\n\r\nFor the nonce function taggedHashes, luckily, the hash is done with this library, so we were spared an awkward dance... but then we noticed the \"should use `Q = P + int(hashTapTweak(bytes(P)))G`\" clause of BIP341 and the implicit requirement of using `Q = P + int(hashTapTweak(bytes(P)))G` in BIP86 (which our library basically revolves around HD keys.\r\n\r\nSo originally, I thought that script path spends would be a minority, so as long as key spends don't need to do the weird back and forth dance between taggedHash and the C code, it shouldn't matter much... but then I realized that the most common signing operation is not `secp256k1_schnorrsign_sign` but rather, the flow that I have represented in my rough implementation of `secp256k1_schnorrsig_sign_with_taptweak_preimage` (since all BIP32 keys that follow BIP86 will use it, and we highly discourage single-key usage, and even if single key, BIP341 says you \"should\" use the taptweak for key spend.\r\n\r\nThis could be solved by adding the taggedHash logic to the Rust code, and having it live within the WASM sandbox. That way I could create my own helper function that essentially does what my rough implementation of `secp256k1_schnorrsig_sign_with_taptweak_preimage` does while holding onto references.\r\n\r\nBut I think you and I are running into the same dilemma (\"I don't want to mix concerns between taggedHash and crypto operations\") while at the same time realizing that SchnorrSig is pretty tightly coupled with taggedHash, and it's already used in `secp256k1_schnorrsign_sign`.\r\n</p>\r\n</details>\r\n\r\n---\r\n\r\n> Even if you ignore efficiency, it may still make sense to add a schnorrsig_sign_with_tweak for convenience reasons. I'm not too convinced though but I guess it wouldn't hurt.\r\n\r\nIf each key spend \"should\" tweak itself with the taggedHash of its pubkey, and each script spend must tweak itself with its pubkey and the merkle root concatenated taggedHashed together, then this convenience function would get a lot of usage and benefit from the simplicity of use (and a little bit from the performance gains of hashing from the mid-state).\r\n\r\n(The upside for WASM users is also a nice \"two birds with one stone\" perk.)\r\n\r\n> In general, our tweaking functions are very raw (and thus unsafe to use), i.e., they don't even do the hashing.\r\n\r\nConsidering all script path spends require use of tweaking, I would like to learn more about why they are unsafe to use? Is it just more foot-cannon prone? Or is there something inherently unsafe about these functions specifically? Would it be better to use the non-xonly versions after converting to even pubkeys and convert to xonly after the tweak?\r\n\r\n> So I agree we should have better/safer tweaking functions, e.g., ...\r\n\r\nThis is exactly what would be best in the long run imo. Including a helper function that utilizes that tweak function before signing would be a nice extra, since 99% of schnorrsign usage in the context of Bitcoin will be signing for the point `P+H(P,m)G`.\r\n\r\n---\r\n\r\n> for reference, this is the Bitcoin Core code that invokes it: ...\r\n\r\nI am curious if I'm reading this wrong, but does Bitcoin Core use `P+H(P)G` point for keyspend-only p2tr addresses / signing? Upon quick glance it looks like the absence of a merkle root will sign with just `P`.",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-969394169",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 969404458,
      "node_id": "IC_kwDOAP4Jqs45x_Aq",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/969404458",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T22:59:14Z",
      "updated_at": "2021-11-15T23:10:32Z",
      "author_association": "MEMBER",
      "body": "@junderw Only key path spends are tweaked. For script paths you use the key directly. That's what the merkleroot==null case corresponds to in the Bitcoin Core. The merkleroot something else corresponds to a key path spend for cases where scripts do exist.\n\nThe issue with WASM state sounds to me like we just need a serialize/deserialize function for keypair (and other objects), so it can be persisted as bytes across calls.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-969404458",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "mentioned",
      "id": 5621347533,
      "node_id": "MEE_lADOAP4Jqs4-xOTxzwAAAAFPDvTN",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5621347533",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T22:59:14Z"
    },
    {
      "event": "subscribed",
      "id": 5621347537,
      "node_id": "SE_lADOAP4Jqs4-xOTxzwAAAAFPDvTR",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5621347537",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T22:59:14Z"
    },
    {
      "event": "commented",
      "id": 969431621,
      "node_id": "IC_kwDOAP4Jqs45yFpF",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/969431621",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T23:22:44Z",
      "updated_at": "2021-11-16T11:14:29Z",
      "author_association": "NONE",
      "body": "@sipa I see the `ComputeTapTweakHash` call now... (coming from higher level languages, `if (merkle_root)` looks like it will not go into the if scope, but then I just saw `merkle_root->IsNull() ? nullptr : merkle_root` and remembered I'm reading C++ (lol))\r\n\r\n> The issue with WASM state sounds to me like we just need a serialize/deserialize function for keypair (and other objects), so it can be persisted as bytes across calls.\r\n\r\nThis could also be one solution, perhaps it's as simple as a 96 length byte array with `d || P.x || P.y` (32 bytes each)",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-969431621",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "mentioned",
      "id": 5621434259,
      "node_id": "MEE_lADOAP4Jqs4-xOTxzwAAAAFPEEeT",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5621434259",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T23:22:44Z"
    },
    {
      "event": "subscribed",
      "id": 5621434263,
      "node_id": "SE_lADOAP4Jqs4-xOTxzwAAAAFPEEeX",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5621434263",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T23:22:44Z"
    },
    {
      "event": "commented",
      "id": 969452924,
      "node_id": "IC_kwDOAP4Jqs45yK18",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/969452924",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-15T23:51:23Z",
      "updated_at": "2021-11-15T23:51:23Z",
      "author_association": "NONE",
      "body": "(Though I still do believe the helper function would be useful, and would take a burden off the caller when signing for a tweaked key)",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-969452924",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 970051308,
      "node_id": "IC_kwDOAP4Jqs450c7s",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/970051308",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-16T08:49:00Z",
      "updated_at": "2021-11-16T08:49:00Z",
      "author_association": "MEMBER",
      "body": "> Considering all script path spends require use of tweaking, I would like to learn more about why they are unsafe to use? Is it just more foot-cannon prone\r\n\r\nRight, that's what I meant. There's nothing inherently unsafe about tweaking.\r\n\r\n> The issue with WASM state sounds to me like we just need a serialize/deserialize function for keypair (and other objects), so it can be persisted as bytes across calls.\r\n\r\nThat would do it. Alternatively we could expose the SHA256 functions. But you could also have the SHA256 functions in Rust, see https://github.com/rust-bitcoin/rust-secp256k1/issues/339#issuecomment-969965352 . \r\n\r\n---\r\n\r\n@junderw I understand the keypair issue but you should really think about whether the midstate optimization is worth the hassle (on your side) We do it here in a few places because it's cheap to implement but the gains are rather tiny. In particular if you want this for singing: Signing is usually not a bottleneck. (Bitcoin can do around ~10 tx/s so usually you don't need to sign quicker than that. ;)) And latency: Ok that's a thing. But as I said, the gains are tiny.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-970051308",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "mentioned",
      "id": 5623332603,
      "node_id": "MEE_lADOAP4Jqs4-xOTxzwAAAAFPLT77",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5623332603",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-16T08:49:01Z"
    },
    {
      "event": "subscribed",
      "id": 5623332609,
      "node_id": "SE_lADOAP4Jqs4-xOTxzwAAAAFPLT8B",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5623332609",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-16T08:49:01Z"
    },
    {
      "event": "commented",
      "id": 970158317,
      "node_id": "IC_kwDOAP4Jqs4503Dt",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/970158317",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-16T11:02:30Z",
      "updated_at": "2021-11-16T11:02:30Z",
      "author_association": "NONE",
      "body": "> Right, that's what I meant. (re: It being more foot-cannon prone)\r\n\r\nI think this is all the more reason to include the tweak helper function for signing (sign_with_tweak). Because it requires one less call to the tweak function for the callers to potentially mess up during signing. And seeing as the \"I want to sign for my tweaked seckey\" is going to be a highly used paradigm in taproot, and it requires tweak calls (foot cannons) it would make sense to offer a sign method including it (tweak_add_check can be used to verify your pubkey is used in the tweaked output key... maybe for symmetric-sake adding a verify_with_tweak could just combine the tweak_add_check and verify schnorr as a convenience thing).\r\n\r\n---\r\n\r\nI think things are getting a little all over the place right now. I made a request, and every time I meet resistance I try to come up with another \"angle\" as to why the request has merit to everyone and not just my own needs.\r\n\r\nI've sort of got myself lost in the weeds a bit here.\r\n\r\nI might just implement the function in Rust using bitcoin_hashes, but then I'd have tagged hash code in the JS level, Rust level(WASM), and the C level(ffi through Rust)\r\n\r\nOr maybe I'll just make a helper function in the Rust layer which just takes the final TapTweak hash itself so JS would do the TapTweak hash, pass it into WASM.",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-970158317",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 970160010,
      "node_id": "IC_kwDOAP4Jqs4503eK",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/970160010",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-16T11:04:34Z",
      "updated_at": "2021-11-16T11:04:34Z",
      "author_association": "NONE",
      "body": "I will make a separate issue for keypair serialization though.",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-970160010",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 970180912,
      "node_id": "IC_kwDOAP4Jqs4508kw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/970180912",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-16T11:30:38Z",
      "updated_at": "2021-11-16T11:30:38Z",
      "author_association": "MEMBER",
      "body": "> I think things are getting a little all over the place right now. I made a request, and every time I meet resistance I try to come up with another \"angle\" as to why the request has merit to everyone and not just my own needs.\r\n> \r\n> I've sort of got myself lost in the weeds a bit here.\r\n\r\nAll good, I have the same feeling and these things are all very intertwined.\r\n\r\nThe reason I'm hesitating to like a `schnorrsig_sign_with_tweak` is that it either would be another \"unsafe\" tweak function (without hashing), or it would be a safe one but then I think this needs more thoughts because then we should provide the same safe basic tweaking functions (without simultaneous signing). I think we should really add safer tweak functions. I'll create an issue for this.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-970180912",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    },
    {
      "event": "commented",
      "id": 1220408356,
      "node_id": "IC_kwDOAP4Jqs5IvfQk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1220408356",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T08:40:03Z",
      "updated_at": "2022-08-19T08:40:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "In case it helps anybody in the meantime, here is the code the BitBox02 currently uses to compute the tweaked keypair:\r\n\r\nhttps://github.com/digitalbitbox/bitbox02-firmware/blob/2453fefc428cb67ea376349af145655c17f6f434/src/keystore.c#L803-L874\r\n\r\n",
      "user": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-1220408356",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1015"
    }
  ]
}