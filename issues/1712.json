{
  "type": "issue",
  "issue": {
    "id": 3267105762,
    "node_id": "I_kwDOAP4Jqs7CvBPi",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1712",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1712/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1712/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1712/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1712",
    "number": 1712,
    "state": "open",
    "state_reason": null,
    "title": "Installation check instructions in \"Release process\"",
    "body": "When building with CMake, only one type of the library, either shared or static, is built and optionally installed.\n\nIn the \"Release process\" document, the \"Check installation with CMake\" [step](https://github.com/bitcoin-core/secp256k1/blob/b9313c6e1a6082a66b4c75777e18ca4b176fcf9d/doc/release-process.md?plain=1#L30) implies testing the shared library, and specifies the `-L` and `-l` compiler flags manually (despite the fact that CMake also generates and installs the `libsecp256k1.pc` file).\n\nThis approach may be fragile, as it depends on the environment. For example, if the shared library isn’t built or the `-L` path is incorrect, the toolchain may silently fall back to a static library from a default location, e.g., `/usr/local/lib/libsecp256k1.a`. This could cause the test to pass even when the shared library wasn’t installed correctly.\n\nOne possible solution is to link explicitly against the shared library using its absolute path:\n```\ngcc -o ecdsa examples/ecdsa.c -I $dir/include $dir/lib*/libsecp256k1.so -Wl,-rpath,\"$dir/lib\",-rpath,\"$dir/lib64\" && ./ecdsa\n```\n",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 0,
    "created_at": "2025-07-27T13:29:51Z",
    "updated_at": "2025-07-27T13:29:51Z"
  },
  "events": []
}