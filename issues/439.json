{
  "type": "issue",
  "issue": {
    "id": 203465101,
    "node_id": "MDU6SXNzdWUyMDM0NjUxMDE=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/439",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/439/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/439/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/439/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/439",
    "number": 439,
    "state": "closed",
    "state_reason": "completed",
    "title": "Design flaws in recent API changes",
    "body": "I merged secp256k1 into our open source code base back in July 2015. Since then, I notice that there has been considerable work and activity, most of it for the better - great job! However, there are some choices that I think might have overlooked some things. In particular a parsed public key must be stored in this type:\r\n```\r\ntypedef struct {\r\n    unsigned char data[64];\r\n} secp256k1_pubkey;\r\n```\r\n\r\nI think this was a mistake. It forces callers into one of 3 unpalatable choices:\r\n\r\n1. Limit the containers used to hold public keys\r\n2. Perform a buffer copy from an arbitrary container to a temporary `secp256k1_pubkey`\r\n3. Write code which could cause undefined behavior (e.g. `reinterpret_cast` or a C-style cast)\r\n\r\nConsider a simple case where a `std::vector` is used to store a single application defined byte, followed by a public key:\r\n```\r\nstd::vector<unsigned char> v;\r\nv.resize(65);\r\nv[0] = 42; // application defined value\r\nunsigned char const* pubkey = &v[1]; // 64 byte public key\r\n...\r\n```\r\n\r\nHow do we pass the public key to `secp256k1_ec_pubkey_serialize`? There are two ways:\r\n\r\n```\r\nsecp256k1_pubkey temp;\r\nstd::memcpy(&temp.data[0], pubkey, sizeof(temp.data));\r\nsecp256k1_ec_pubkey_serialize(..., &temp, ...);\r\n```\r\nor\r\n```\r\nsecp256k1_ec_pubkey_serialize(...,\r\n    reinterpret_cast<secp256k1_pubkey const*>(pubkey), ...);\r\n```\r\nIn the first case we have an unnecessary buffer copy. In the second case, we have the potential for undefined behavior due to misalignment. Furthermore, use of `reinterpret_cast` is a code smell (this could just have easily been a C-style cast).\r\n\r\nThe third option is not to use `std::vector` in that fashion, but this means the API choices of secp256k1 functions constrain callers' choice of containers used to hold cryptographic primitives.\r\n\r\nI think it would have been better simply to use `void const* pubkey` as the parameter type in functions that currently accept `secp256k1_pubkey*`.\r\n\r\n",
    "user": {
      "login": "vinniefalco",
      "id": 1503976,
      "node_id": "MDQ6VXNlcjE1MDM5NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vinniefalco",
      "html_url": "https://github.com/vinniefalco",
      "followers_url": "https://api.github.com/users/vinniefalco/followers",
      "following_url": "https://api.github.com/users/vinniefalco/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vinniefalco/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vinniefalco/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
      "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
      "repos_url": "https://api.github.com/users/vinniefalco/repos",
      "events_url": "https://api.github.com/users/vinniefalco/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 3,
    "closed_at": "2017-01-26T20:03:14Z",
    "created_at": "2017-01-26T19:27:24Z",
    "updated_at": "2017-01-26T20:03:14Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 275488859,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQ4ODg1OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/275488859",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-26T19:33:42Z",
      "updated_at": "2017-01-26T19:33:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "If you have your own representation of keys, I would expect that your application makes assumptions about its contents. In that case, my suggestion would be to use a vector (or any container you like), with a serialized key in it. Whenever you need the key, deserialize it into a secp256k1_pubkey. That has well-defined stable properties that don't change over time, and has no risk in breaking assumptions with future versions.\r\n\r\nIf for performance reasons you want to keep deserialized keys around, then I believe there is no problem in being restricted to using secp256k1_pubkey as data type. It makes it clear to contributors of the application code base that the contents is defined by the secp256k1 library, and can change.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/439#issuecomment-275488859",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/439"
    },
    {
      "event": "commented",
      "id": 275490087,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQ5MDA4Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/275490087",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-26T19:37:43Z",
      "updated_at": "2017-01-26T19:37:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think it would have been better simply to use void const* pubkey as the parameter type in functions that currently accept secp256k1_pubkey*.\r\n\r\nYes, that was the alternative we considered. However, for good abstraction, allocation of such objects would also need to be left to the library (i.e. have a secp256k1_pubkey_create and secp256k1_pubkey_free function), which would unnecessarily require heap allocation for objects that fit on the stack (a performance issue for some use cases). So the choice was made to expose the size of type, but not its representation.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/439#issuecomment-275490087",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/439"
    },
    {
      "event": "commented",
      "id": 275497463,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQ5NzQ2Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/275497463",
      "actor": {
        "login": "vinniefalco",
        "id": 1503976,
        "node_id": "MDQ6VXNlcjE1MDM5NzY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vinniefalco",
        "html_url": "https://github.com/vinniefalco",
        "followers_url": "https://api.github.com/users/vinniefalco/followers",
        "following_url": "https://api.github.com/users/vinniefalco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vinniefalco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vinniefalco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
        "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
        "repos_url": "https://api.github.com/users/vinniefalco/repos",
        "events_url": "https://api.github.com/users/vinniefalco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-26T20:03:14Z",
      "updated_at": "2017-01-26T20:03:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sounds good to me then - I'll close this.",
      "user": {
        "login": "vinniefalco",
        "id": 1503976,
        "node_id": "MDQ6VXNlcjE1MDM5NzY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vinniefalco",
        "html_url": "https://github.com/vinniefalco",
        "followers_url": "https://api.github.com/users/vinniefalco/followers",
        "following_url": "https://api.github.com/users/vinniefalco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vinniefalco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vinniefalco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
        "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
        "repos_url": "https://api.github.com/users/vinniefalco/repos",
        "events_url": "https://api.github.com/users/vinniefalco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/439#issuecomment-275497463",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/439"
    },
    {
      "event": "closed",
      "id": 938358574,
      "node_id": "MDExOkNsb3NlZEV2ZW50OTM4MzU4NTc0",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/938358574",
      "actor": {
        "login": "vinniefalco",
        "id": 1503976,
        "node_id": "MDQ6VXNlcjE1MDM5NzY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vinniefalco",
        "html_url": "https://github.com/vinniefalco",
        "followers_url": "https://api.github.com/users/vinniefalco/followers",
        "following_url": "https://api.github.com/users/vinniefalco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vinniefalco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vinniefalco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
        "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
        "repos_url": "https://api.github.com/users/vinniefalco/repos",
        "events_url": "https://api.github.com/users/vinniefalco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-26T20:03:14Z"
    }
  ]
}