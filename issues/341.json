{
  "type": "issue",
  "issue": {
    "id": 113167198,
    "node_id": "MDU6SXNzdWUxMTMxNjcxOTg=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341",
    "number": 341,
    "state": "closed",
    "state_reason": "completed",
    "title": "Insuffient padding canonical?",
    "body": "In the Haskoin code, I have two test vectors for non-canonical signatures that are being parsed as if they were canonical:\n- `0x304402208990e0584b2b238e1dfaad8d6ed69ecc1a4a13ac85fc0b31d0df395eb1ba610502202d5876262c288beb511d061691bf26777344b702b00f8fe28621fe4e566695ed`\n- `0x304402205990e0584b2b238e1dfaad8d6ed69ecc1a4a13ac85fc0b31d0df395eb1ba61050220fd5876262c288beb511d061691bf26777344b702b00f8fe28621fe4e566695ed`\n\nThe first one has insufficient padding in `r` and the second one has insufficient padding in `s`, meaning they are negative numbers in ASN.1 `IntVar` format. These test vectors are detected as non-canonical signatures by Haskoin's canonical DER parser, but since I moved to this secp256k1 library, the vectors are considered valid by the default strict parser.\n",
    "user": {
      "login": "jprupp",
      "id": 904557,
      "node_id": "MDQ6VXNlcjkwNDU1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprupp",
      "html_url": "https://github.com/jprupp",
      "followers_url": "https://api.github.com/users/jprupp/followers",
      "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
      "organizations_url": "https://api.github.com/users/jprupp/orgs",
      "repos_url": "https://api.github.com/users/jprupp/repos",
      "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jprupp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 12,
    "closed_at": "2015-10-27T10:24:24Z",
    "created_at": "2015-10-24T15:28:43Z",
    "updated_at": "2015-10-28T04:08:23Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 150847553,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDg0NzU1Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/150847553",
      "actor": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-24T20:20:27Z",
      "updated_at": "2015-10-24T20:20:27Z",
      "author_association": "NONE",
      "body": "I did further testing, and I found that signatures above parse incorrectly, albeit successfully.\n\nWhen I import both signatures above, and I re-export them as DER I get:\n- `0x302502010002202d5876262c288beb511d061691bf26777344b702b00f8fe28621fe4e566695ed`\n- `0x302502205990e0584b2b238e1dfaad8d6ed69ecc1a4a13ac85fc0b31d0df395eb1ba6105020100`\n\nNotice how the negative numbers are just zero:\n- r: `0x00`, s: `0x2d5876262c288beb511d061691bf26777344b702b00f8fe28621fe4e566695ed`\n- r: `0x5990e0584b2b238e1dfaad8d6ed69ecc1a4a13ac85fc0b31d0df395eb1ba6105`, s: `0x00`\n",
      "user": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-150847553",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "commented",
      "id": 150848785,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDg0ODc4NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/150848785",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-24T20:38:49Z",
      "updated_at": "2015-10-24T20:47:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "See the documentation for secp256k1_ecdsa_signature_parse_der:\n\n```\n *  This function will accept any valid DER encoded signature, even if the   \n *  encoded numbers are out of range.\n *\n *  After the call, sig will always be initialized. If parsing failed or the\n *  encoded numbers are out of range, signature validation with it is\n *  guaranteed to fail for every message and public key.\n```\n\nSo I believe what you're observing is the intended behavior; it's the behavior I tested against. That it caught you by surprise is a cause for concern, however.\n\nI could have sworn serialize would fail on forced-invalid signature objects (just as verify does), but it appears not, and that should probably be fixed.\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-150848785",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "commented",
      "id": 150852183,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDg1MjE4Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/150852183",
      "actor": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-24T21:21:09Z",
      "updated_at": "2015-10-24T21:21:09Z",
      "author_association": "NONE",
      "body": "Yeah, I expect the parser to return false, so that I know that the parsed signature contains out-of-range numbers.\n",
      "user": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-150852183",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "commented",
      "id": 150876701,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDg3NjcwMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/150876701",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-25T00:49:42Z",
      "updated_at": "2015-10-25T00:49:42Z",
      "author_association": "MEMBER",
      "body": "I tried to completely separate the \"valid encoding\" from \"valid signature\".\nIf you're going to mix the two, you get very hard to get\nconsensus-compatible behaviour. Checking for out of range values is not\nsomething you expect a DER parser to do.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-150876701",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "commented",
      "id": 150887778,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDg4Nzc3OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/150887778",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-25T03:02:18Z",
      "updated_at": "2015-10-25T03:05:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "I presume this expectation was due to BIP66.\n\nBIP66 is stricter than canonical DER and needed to be because most underlying ECDSA implementations used in Bitcoin land will not just parse but also _pass_  signatures which are validly encoded invalid signatures (e.g. OpenSSL decodes like an unsigned value always).  So if BIP66 had limited itself to only restricting things to canonical DER the network consensus would still depend on crazy implementation specific behavior in underlying signature libraries.\n\nBased on your comments we'll go review BIP66 to make it clear that the BIP66 test is stricter in this manner.\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-150887778",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "commented",
      "id": 150902835,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDkwMjgzNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/150902835",
      "actor": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-25T09:01:55Z",
      "updated_at": "2015-10-25T09:01:55Z",
      "author_association": "NONE",
      "body": "I would expect the DER parser to produce negative numbers if that is what the DER-encoded data contains. But the function I am interacting with is not only a DER parser, but it should also interpret the data within as a signature, and that is where my expectations aren't met.\n\nI expect that if the DER data encodes out-of-range numbers for secp256k1, the decoder should fail. Although the signature might be valid DER, the data encoded therein makes no sense in a secp256k1 ECDSA signature. Stating that the signature was decoded correctly, and then putting in a single zero byte in _r_ or _s_ because the number was negative does not seem correct. It breaks the expected equality between identity and composition of decoding and encoding functions.\n\nFor the time being I will make my wrapper function in Haskoin detect if _r_ or _s_ is zero and fail, but it would be great if the failure condition came from the underlying C code.\n",
      "user": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-150902835",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "commented",
      "id": 150905012,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDkwNTAxMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/150905012",
      "actor": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-25T09:30:27Z",
      "updated_at": "2015-10-25T09:30:27Z",
      "author_association": "NONE",
      "body": "By the way, reviewing the [SEC specification for ECDSA](http://www.secg.org/sec1-v2.pdf), it says this in section 4.1.4 as step 1 in signature verification:\n\n> If _r_ and _s_ are not both integers in the interval [1, _n_ - 1], output “invalid” and stop.\n\nGranted, this is done at the verification stage, and not during decoding, but if the signature is so obviously invalid with a zero-byte in any _r_ or _s_, why not fail at decoding?\n",
      "user": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-150905012",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "commented",
      "id": 150931166,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDkzMTE2Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/150931166",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-25T14:44:48Z",
      "updated_at": "2015-10-25T21:50:00Z",
      "author_association": "MEMBER",
      "body": "But exactly what tests should be done?\n- BIP66 specifies max 32 bytes for R and S, because that's much simpler to implement than an accurate range check, and has no additional DoS risk.\n- You seem to suggest that values 0 or >= order should be rejected because the implementation-specific representation if numbers inside libsecp256k1 can't deal with them, so they are \"obviously\" invalid.\n- What about values of r that are not equal to a valid x coordinate mod order? Those are also guaranteed to be invalid signatures, and a different implementation that decompresses the r value into one or two points ahead of time would equally \"obviously\" detect such failure.\n\nAll of these additional constraints are arbitrary, so which one do you pick? For some applications the distinction between incorrect parse and invalid signature matters, and we shouldn't be introducing any extra\nstandards just because our signature parser is smart enough to detect some cases already.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-150931166",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "commented",
      "id": 151445459,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTQ0NTQ1OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/151445459",
      "actor": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-27T10:24:24Z",
      "updated_at": "2015-10-27T10:24:24Z",
      "author_association": "NONE",
      "body": "Yeah, I guess the rabbit hole can go quite deep. I think it is cool if these problems with signatures could be detected at decode instead of verification time, but I understand it is a design decision not to. I have added code in Haskoin that considers signatures where _r_ or _s_ is zero to be invalid. My test suite is happy. I'll close this issue.\n",
      "user": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-151445459",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "closed",
      "id": 446596161,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDQ2NTk2MTYx",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/446596161",
      "actor": {
        "login": "jprupp",
        "id": 904557,
        "node_id": "MDQ6VXNlcjkwNDU1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/904557?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jprupp",
        "html_url": "https://github.com/jprupp",
        "followers_url": "https://api.github.com/users/jprupp/followers",
        "following_url": "https://api.github.com/users/jprupp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jprupp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jprupp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jprupp/subscriptions",
        "organizations_url": "https://api.github.com/users/jprupp/orgs",
        "repos_url": "https://api.github.com/users/jprupp/repos",
        "events_url": "https://api.github.com/users/jprupp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jprupp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-27T10:24:24Z"
    },
    {
      "event": "commented",
      "id": 151519832,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTUxOTgzMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/151519832",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-27T14:35:59Z",
      "updated_at": "2015-10-27T14:35:59Z",
      "author_association": "MEMBER",
      "body": "One suggestion that @gmaxwell came up with is to make the serialize\nfunction fail on such signatures.\n\nAdvantage: there is no \"DER parse succeeds, but reserialize results in\nsomething else\" behaviour.\n\nDisadvantage: there is a \" DER parse succeeds but cannot serialize\"\nbehaviour.\n\nI don't know whether it makes much of a difference, but I'd like to know\nwhat others think. I believe it's unfortunate that either is necessary, but\nthe alternative is arbitrary-sized secp256k1_ecdsa_signature data types,\nwhich I think is way worse.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-151519832",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "mentioned",
      "id": 446844915,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQ2ODQ0OTE1",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/446844915",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-27T14:35:59Z"
    },
    {
      "event": "subscribed",
      "id": 446844916,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0Njg0NDkxNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/446844916",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-27T14:35:59Z"
    },
    {
      "event": "commented",
      "id": 151579039,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTU3OTAzOQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/151579039",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-27T17:29:08Z",
      "updated_at": "2015-10-27T17:29:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "This still, of course, leaves us with a parse-is-successful-serialize-is-successful when r nor n-r is a quadratic residue in Fp. \n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-151579039",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "commented",
      "id": 151716687,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTcxNjY4Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/151716687",
      "actor": {
        "login": "peterdettman",
        "id": 3423981,
        "node_id": "MDQ6VXNlcjM0MjM5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3423981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/peterdettman",
        "html_url": "https://github.com/peterdettman",
        "followers_url": "https://api.github.com/users/peterdettman/followers",
        "following_url": "https://api.github.com/users/peterdettman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/peterdettman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/peterdettman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/peterdettman/subscriptions",
        "organizations_url": "https://api.github.com/users/peterdettman/orgs",
        "repos_url": "https://api.github.com/users/peterdettman/repos",
        "events_url": "https://api.github.com/users/peterdettman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/peterdettman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-28T04:08:23Z",
      "updated_at": "2015-10-28T04:08:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa Not sure of the best place to mention this, but it strikes me that BIP 66's IsValidSignatureEncoding (as I read it here: https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki) does not prevent one of R or S being longer than 33 bytes. The sig.size() > 73 check implies that is invalid. Also, at 33 bytes, the first octet MUST be zero?\n\nI would like to see clearer comments on which checks are DER strictness checks per se, and which are signature strictness checks (i.e. the negative values check, the overall size check, the prospective checks I mention above). Probably it would benefit from actually factoring the DER checks into a separate \"method\".\n",
      "user": {
        "login": "peterdettman",
        "id": 3423981,
        "node_id": "MDQ6VXNlcjM0MjM5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3423981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/peterdettman",
        "html_url": "https://github.com/peterdettman",
        "followers_url": "https://api.github.com/users/peterdettman/followers",
        "following_url": "https://api.github.com/users/peterdettman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/peterdettman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/peterdettman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/peterdettman/subscriptions",
        "organizations_url": "https://api.github.com/users/peterdettman/orgs",
        "repos_url": "https://api.github.com/users/peterdettman/repos",
        "events_url": "https://api.github.com/users/peterdettman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/peterdettman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/341#issuecomment-151716687",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/341"
    },
    {
      "event": "mentioned",
      "id": 447582655,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQ3NTgyNjU1",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/447582655",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-28T04:08:23Z"
    },
    {
      "event": "subscribed",
      "id": 447582656,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0NzU4MjY1Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/447582656",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-28T04:08:23Z"
    }
  ]
}