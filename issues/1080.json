{
  "type": "issue",
  "issue": {
    "id": 1150528364,
    "node_id": "I_kwDOAP4Jqs5Ek6ts",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1080",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1080/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1080/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1080/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1080",
    "number": 1080,
    "state": "closed",
    "state_reason": "completed",
    "title": "[SOLARIS 11, SPARC] compilation failed",
    "body": "```\r\n$ nice ./configure \r\nchecking build system type... sparc-sun-solaris2.11\r\nchecking host system type... sparc-sun-solaris2.11\r\nchecking for a BSD-compatible install... /usr/bin/ginstall -c\r\nchecking whether build environment is sane... yes\r\nchecking for a thread-safe mkdir -p... /usr/bin/gmkdir -p\r\nchecking for gawk... gawk\r\nchecking whether make sets $(MAKE)... yes\r\nchecking whether make supports nested variables... yes\r\nchecking how to print strings... print -r\r\nchecking whether make supports the include directive... yes (GNU style)\r\nchecking for gcc... gcc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables... \r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to accept ISO C89... none needed\r\nchecking whether gcc understands -c and -o together... yes\r\nchecking dependency style of gcc... gcc3\r\nchecking for a sed that does not truncate output... /usr/bin/gsed\r\nchecking for grep that handles long lines and -e... /usr/bin/ggrep\r\nchecking for egrep... /usr/bin/ggrep -E\r\nchecking for fgrep... /usr/bin/ggrep -F\r\nchecking for ld used by gcc... /usr/bin/ld\r\nchecking if the linker (/usr/bin/ld) is GNU ld... no\r\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -p\r\nchecking the name lister (/usr/bin/nm -p) interface... BSD nm\r\nchecking whether ln -s works... yes\r\nchecking the maximum length of command line arguments... 1572480\r\nchecking how to convert sparc-sun-solaris2.11 file names to sparc-sun-solaris2.11 format... func_convert_file_noop\r\nchecking how to convert sparc-sun-solaris2.11 file names to toolchain format... func_convert_file_noop\r\nchecking for /usr/bin/ld option to reload object files... -r\r\nchecking for objdump... no\r\nchecking how to recognize dependent libraries... pass_all\r\nchecking for dlltool... no\r\nchecking how to associate runtime and link libraries... print -r --\r\nchecking for ar... ar\r\nchecking for archiver @FILE support... no\r\nchecking for strip... strip\r\nchecking for ranlib... ranlib\r\nchecking command to parse /usr/bin/nm -p output from gcc object... ok\r\nchecking for sysroot... no\r\nchecking for a working dd... /usr/bin/dd\r\nchecking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\r\nchecking for mt... mt\r\nchecking if mt is a manifest tool... no\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking for ANSI C header files... yes\r\nchecking for sys/types.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for memory.h... yes\r\nchecking for strings.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for unistd.h... yes\r\nchecking for dlfcn.h... yes\r\nchecking for objdir... .libs\r\nchecking if gcc supports -fno-rtti -fno-exceptions... no\r\nchecking for gcc option to produce PIC... -fPIC -DPIC\r\nchecking if gcc PIC flag -fPIC -DPIC works... yes\r\nchecking if gcc static flag -static works... no\r\nchecking if gcc supports -c -o file.o... yes\r\nchecking if gcc supports -c -o file.o... (cached) yes\r\nchecking whether the gcc linker (/usr/bin/ld -64) supports shared libraries... yes\r\nchecking whether -lc should be explicitly linked in... no\r\nchecking dynamic linker characteristics... solaris2.11 ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking whether stripping libraries is possible... no\r\nchecking if libtool supports shared libraries... yes\r\nchecking whether to build shared libraries... yes\r\nchecking whether to build static libraries... yes\r\nchecking whether make supports nested variables... (cached) yes\r\nchecking for pkg-config... /usr/bin/pkg-config\r\nchecking pkg-config is at least version 0.9.0... yes\r\nchecking for ar... /usr/bin/ar\r\nchecking for ranlib... /usr/bin/ranlib\r\nchecking for strip... /usr/bin/strip\r\nchecking for gcc... (cached) gcc\r\nchecking whether we are using the GNU C compiler... (cached) yes\r\nchecking whether gcc accepts -g... (cached) yes\r\nchecking for gcc option to accept ISO C89... (cached) none needed\r\nchecking whether gcc understands -c and -o together... (cached) yes\r\nchecking dependency style of gcc... (cached) gcc3\r\nchecking dependency style of gcc... gcc3\r\nchecking if gcc supports -Werror=unknown-warning-option... no\r\nchecking if gcc supports -std=c89 -pedantic -Wno-long-long -Wnested-externs -Wshadow -Wstrict-prototypes -Wundef... yes\r\nchecking if gcc supports -Wno-overlength-strings... yes\r\nchecking if gcc supports -Wall... yes\r\nchecking if gcc supports -Wno-unused-function... yes\r\nchecking if gcc supports -Wextra... yes\r\nchecking if gcc supports -Wcast-align... yes\r\nchecking if gcc supports -Wcast-align=strict... yes\r\nchecking if gcc supports -Wconditional-uninitialized... no\r\nchecking if gcc supports -fvisibility=hidden... yes\r\nchecking for x86_64 assembly availability... no\r\nchecking that generated files are newer than configure... done\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating libsecp256k1.pc\r\nconfig.status: creating src/libsecp256k1-config.h\r\nconfig.status: executing depfiles commands\r\nconfig.status: executing libtool commands\r\n\r\nBuild Options:\r\n  with external callbacks = no\r\n  with benchmarks         = yes\r\n  with tests              = yes\r\n  with coverage           = no\r\n  with examples           = no\r\n  module ecdh             = no\r\n  module recovery         = no\r\n  module extrakeys        = no\r\n  module schnorrsig       = no\r\n\r\n  asm                     = no\r\n  ecmult window size      = 15\r\n  ecmult gen prec. bits   = 4\r\n\r\n  valgrind                = no\r\n  CC                      = gcc\r\n  CPPFLAGS                =  \r\n  SECP_CFLAGS             = -O2  -std=c89 -pedantic -Wno-long-long -Wnested-externs -Wshadow -Wstrict-prototypes -Wundef -Wno-overlength-strings -Wall -Wno-unused-function -Wextra -Wcast-align -Wcast-align=strict -fvisibility=hidden \r\n  CFLAGS                  = -g -O2\r\n  LDFLAGS                 = \r\n\r\n$ nice gmake\r\ngmake  all-am\r\ngmake[1]: Entering directory '/export/home/mihailp/secp256k1-master'\r\n  CC       src/bench.o\r\nIn file included from src/bench.c:11:\r\nsrc/util.h:193:43: error: operator '&&' has no right operand\r\n  193 |      (defined(_BIG_ENDIAN) && _BIG_ENDIAN == 1)\r\n      |                                           ^~\r\nsrc/util.h:198:3: error: #error Please make sure that either SECP256K1_LITTLE_ENDIAN or SECP256K1_BIG_ENDIAN is set, see src/util.h.\r\n  198 | # error Please make sure that either SECP256K1_LITTLE_ENDIAN or SECP256K1_BIG_ENDIAN is set, see src/util.h.\r\n      |   ^~~~~\r\ngmake[1]: *** [Makefile:1130: src/bench.o] Error 1\r\ngmake[1]: Leaving directory '/export/home/mihailp/secp256k1-master'\r\ngmake: *** [Makefile:886: all] Error 2\r\n\r\n```",
    "user": {
      "login": "tankf33der",
      "id": 45243121,
      "node_id": "MDQ6VXNlcjQ1MjQzMTIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/45243121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tankf33der",
      "html_url": "https://github.com/tankf33der",
      "followers_url": "https://api.github.com/users/tankf33der/followers",
      "following_url": "https://api.github.com/users/tankf33der/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/tankf33der/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/tankf33der/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/tankf33der/subscriptions",
      "organizations_url": "https://api.github.com/users/tankf33der/orgs",
      "repos_url": "https://api.github.com/users/tankf33der/repos",
      "events_url": "https://api.github.com/users/tankf33der/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/tankf33der/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 5,
    "closed_at": "2022-03-28T19:30:36Z",
    "created_at": "2022-02-25T14:45:10Z",
    "updated_at": "2022-03-28T19:30:36Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 1051148636,
      "node_id": "IC_kwDOAP4Jqs4-p0Fc",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1051148636",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-25T19:43:40Z",
      "updated_at": "2022-02-25T19:43:40Z",
      "author_association": "MEMBER",
      "body": "Can you try compiling with `-DSECP256K1_BIG_ENDIAN`, since apparently the autodetection based on macros doesn't work?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1080#issuecomment-1051148636",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1080"
    },
    {
      "event": "commented",
      "id": 1051349192,
      "node_id": "IC_kwDOAP4Jqs4-qlDI",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1051349192",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-25T23:14:58Z",
      "updated_at": "2022-02-25T23:15:05Z",
      "author_association": "MEMBER",
      "body": "@tankf33der Can you post the output of this command?  \r\n\r\n```\r\necho | gcc -dM -E -\r\n``` \r\n\r\nThis will help us to improve the autodetection, see https://stackoverflow.com/a/2224357.\r\n\r\n(Judging from the error message, I assume `_BIG_ENDIAN` is defined but as the empty string instead of `1`...)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1080#issuecomment-1051349192",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1080"
    },
    {
      "event": "mentioned",
      "id": 6142398324,
      "node_id": "MEE_lADOAP4Jqs5Ek6tszwAAAAFuHY90",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6142398324",
      "actor": {
        "login": "tankf33der",
        "id": 45243121,
        "node_id": "MDQ6VXNlcjQ1MjQzMTIx",
        "avatar_url": "https://avatars.githubusercontent.com/u/45243121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tankf33der",
        "html_url": "https://github.com/tankf33der",
        "followers_url": "https://api.github.com/users/tankf33der/followers",
        "following_url": "https://api.github.com/users/tankf33der/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tankf33der/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tankf33der/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tankf33der/subscriptions",
        "organizations_url": "https://api.github.com/users/tankf33der/orgs",
        "repos_url": "https://api.github.com/users/tankf33der/repos",
        "events_url": "https://api.github.com/users/tankf33der/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tankf33der/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-25T23:14:58Z"
    },
    {
      "event": "subscribed",
      "id": 6142398328,
      "node_id": "SE_lADOAP4Jqs5Ek6tszwAAAAFuHY94",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6142398328",
      "actor": {
        "login": "tankf33der",
        "id": 45243121,
        "node_id": "MDQ6VXNlcjQ1MjQzMTIx",
        "avatar_url": "https://avatars.githubusercontent.com/u/45243121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tankf33der",
        "html_url": "https://github.com/tankf33der",
        "followers_url": "https://api.github.com/users/tankf33der/followers",
        "following_url": "https://api.github.com/users/tankf33der/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tankf33der/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tankf33der/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tankf33der/subscriptions",
        "organizations_url": "https://api.github.com/users/tankf33der/orgs",
        "repos_url": "https://api.github.com/users/tankf33der/repos",
        "events_url": "https://api.github.com/users/tankf33der/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tankf33der/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-25T23:14:58Z"
    },
    {
      "event": "commented",
      "id": 1051612935,
      "node_id": "IC_kwDOAP4Jqs4-rlcH",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1051612935",
      "actor": {
        "login": "tankf33der",
        "id": 45243121,
        "node_id": "MDQ6VXNlcjQ1MjQzMTIx",
        "avatar_url": "https://avatars.githubusercontent.com/u/45243121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tankf33der",
        "html_url": "https://github.com/tankf33der",
        "followers_url": "https://api.github.com/users/tankf33der/followers",
        "following_url": "https://api.github.com/users/tankf33der/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tankf33der/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tankf33der/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tankf33der/subscriptions",
        "organizations_url": "https://api.github.com/users/tankf33der/orgs",
        "repos_url": "https://api.github.com/users/tankf33der/repos",
        "events_url": "https://api.github.com/users/tankf33der/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tankf33der/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-26T05:33:20Z",
      "updated_at": "2022-02-26T05:33:20Z",
      "author_association": "NONE",
      "body": "> echo | gcc -dM -E -\r\n\r\n```\r\n$ echo | gcc -dM -E -\r\n#define __DBL_MIN_EXP__ (-1021)\r\n#define __UINT_LEAST16_MAX__ 0xffff\r\n#define __ATOMIC_ACQUIRE 2\r\n#define __FLT128_MAX_10_EXP__ 4932\r\n#define __FLT_MIN__ 1.17549435082228750796873653722224568e-38F\r\n#define __GCC_IEC_559_COMPLEX 2\r\n#define __UINT_LEAST8_TYPE__ unsigned char\r\n#define __INTMAX_C(c) c ## L\r\n#define __CHAR_BIT__ 8\r\n#define __UINT8_MAX__ 0xff\r\n#define __WINT_MAX__ 0x7fffffff\r\n#define __FLT32_MIN_EXP__ (-125)\r\n#define __ORDER_LITTLE_ENDIAN__ 1234\r\n#define __SIZE_MAX__ 0xffffffffffffffffUL\r\n#define __WCHAR_MAX__ 0x7fffffff\r\n#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1\r\n#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1\r\n#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\r\n#define __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)\r\n#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1\r\n#define __GCC_ATOMIC_CHAR_LOCK_FREE 2\r\n#define __GCC_IEC_559 2\r\n#define __FLT32X_DECIMAL_DIG__ 17\r\n#define __FLT_EVAL_METHOD__ 0\r\n#define __FLT64_DECIMAL_DIG__ 17\r\n#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\r\n#define __UINT_FAST64_MAX__ 0xffffffffffffffffUL\r\n#define __SIG_ATOMIC_TYPE__ int\r\n#define __DBL_MIN_10_EXP__ (-307)\r\n#define __FINITE_MATH_ONLY__ 0\r\n#define __FLT32X_MAX_EXP__ 1024\r\n#define __GNUC_PATCHLEVEL__ 0\r\n#define __FLT32_HAS_DENORM__ 1\r\n#define __UINT_FAST8_MAX__ 0xff\r\n#define __FLT32_MAX_10_EXP__ 38\r\n#define __INT8_C(c) c\r\n#define __INT_LEAST8_WIDTH__ 8\r\n#define sparc 1\r\n#define __UINT_LEAST64_MAX__ 0xffffffffffffffffUL\r\n#define __SHRT_MAX__ 0x7fff\r\n#define __LDBL_MAX__ 1.18973149535723176508575932662800702e+4932L\r\n#define __FLT64X_MAX_10_EXP__ 4932\r\n#define __FLT64X_HAS_QUIET_NAN__ 1\r\n#define __UINT_LEAST8_MAX__ 0xff\r\n#define __GCC_ATOMIC_BOOL_LOCK_FREE 2\r\n#define __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128\r\n#define __UINTMAX_TYPE__ long unsigned int\r\n#define __FLT_EVAL_METHOD_TS_18661_3__ 0\r\n#define __unix 1\r\n#define __UINT32_MAX__ 0xffffffffU\r\n#define __LDBL_MAX_EXP__ 16384\r\n#define __FLT128_MIN_EXP__ (-16381)\r\n#define __WINT_MIN__ (-__WINT_MAX__ - 1)\r\n#define __sun 1\r\n#define __FLT128_MIN_10_EXP__ (-4931)\r\n#define __INT_LEAST16_WIDTH__ 16\r\n#define __SCHAR_MAX__ 0x7f\r\n#define __FLT128_MANT_DIG__ 113\r\n#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)\r\n#define __INT64_C(c) c ## L\r\n#define __GCC_ATOMIC_POINTER_LOCK_FREE 2\r\n#define __SIZEOF_INT__ 4\r\n#define __FLT32X_MANT_DIG__ 53\r\n#define __USER_LABEL_PREFIX__ \r\n#define __FLT64X_EPSILON__ 1.92592994438723585305597794258492732e-34F64x\r\n#define __STDC_HOSTED__ 1\r\n#define __DBL_DIG__ 15\r\n#define __FLT32_DIG__ 6\r\n#define __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F\r\n#define __SHRT_WIDTH__ 16\r\n#define __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L\r\n#define __STDC_UTF_16__ 1\r\n#define __FLT64X_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F64x\r\n#define __FLT32X_HAS_INFINITY__ 1\r\n#define __INT32_MAX__ 0x7fffffff\r\n#define __unix__ 1\r\n#define __INT_WIDTH__ 32\r\n#define __SIZEOF_LONG__ 8\r\n#define __UINT16_C(c) c\r\n#define __DECIMAL_DIG__ 36\r\n#define __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64\r\n#define __FLT64X_MIN_10_EXP__ (-4931)\r\n#define __LDBL_HAS_QUIET_NAN__ 1\r\n#define __FLT64_MANT_DIG__ 53\r\n#define __FLT64X_MANT_DIG__ 113\r\n#define __GNUC__ 10\r\n#define __FLT_HAS_DENORM__ 1\r\n#define __SIZEOF_LONG_DOUBLE__ 16\r\n#define __BIGGEST_ALIGNMENT__ 16\r\n#define __FLT64_MAX_10_EXP__ 308\r\n#define __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)\r\n#define __INT_FAST32_MAX__ 0x7fffffff\r\n#define __DBL_HAS_INFINITY__ 1\r\n#define __HAVE_SPECULATION_SAFE_VALUE 1\r\n#define __SVR4 1\r\n#define __INTPTR_WIDTH__ 64\r\n#define __FLT64X_HAS_INFINITY__ 1\r\n#define __UINT_LEAST32_MAX__ 0xffffffffU\r\n#define __FLT32X_HAS_DENORM__ 1\r\n#define __INT_FAST16_TYPE__ int\r\n#define __LDBL_HAS_DENORM__ 1\r\n#define __FLT128_HAS_INFINITY__ 1\r\n#define __DBL_MAX_EXP__ 1024\r\n#define __WCHAR_WIDTH__ 32\r\n#define __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32\r\n#define __GCC_ATOMIC_LONG_LOCK_FREE 2\r\n#define __PTRDIFF_MAX__ 0x7fffffffffffffffL\r\n#define __FLT32_HAS_QUIET_NAN__ 1\r\n#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL\r\n#define __SIZEOF_SIZE_T__ 8\r\n#define __sparc__ 1\r\n#define __FLT64X_MIN_EXP__ (-16381)\r\n#define __SIZEOF_WINT_T__ 4\r\n#define __LONG_LONG_WIDTH__ 64\r\n#define __FLT32_MAX_EXP__ 128\r\n#define __GXX_ABI_VERSION 1014\r\n#define __FLT_MIN_EXP__ (-125)\r\n#define __INT16_MAX__ 0x7fff\r\n#define __INT_FAST64_TYPE__ long int\r\n#define __FLT128_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F128\r\n#define __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64\r\n#define __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)\r\n#define __FLT64X_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F64x\r\n#define __SIZEOF_POINTER__ 8\r\n#define __LP64__ 1\r\n#define __DBL_HAS_QUIET_NAN__ 1\r\n#define __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x\r\n#define __FLT64_MIN_EXP__ (-1021)\r\n#define __FLT64_MIN_10_EXP__ (-307)\r\n#define __FLT64X_DECIMAL_DIG__ 36\r\n#define __REGISTER_PREFIX__ \r\n#define __UINT16_MAX__ 0xffff\r\n#define __DBL_HAS_DENORM__ 1\r\n#define __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32\r\n#define __UINT8_TYPE__ unsigned char\r\n#define __FLT_DIG__ 6\r\n#define __NO_INLINE__ 1\r\n#define __sparcv9 1\r\n#define __DEC_EVAL_METHOD__ 2\r\n#define __FLT_MANT_DIG__ 24\r\n#define __LDBL_DECIMAL_DIG__ 36\r\n#define __VERSION__ \"10.2.0\"\r\n#define __UINT64_C(c) c ## UL\r\n#define __INT_LEAST32_MAX__ 0x7fffffff\r\n#define __GCC_ATOMIC_INT_LOCK_FREE 2\r\n#define __FLT128_MAX_EXP__ 16384\r\n#define __FLT32_MANT_DIG__ 24\r\n#define __FLOAT_WORD_ORDER__ __ORDER_BIG_ENDIAN__\r\n#define __FLT128_HAS_DENORM__ 1\r\n#define __sparc 1\r\n#define __FLT128_DIG__ 33\r\n#define __SCHAR_WIDTH__ 8\r\n#define __INT32_C(c) c\r\n#define __ORDER_PDP_ENDIAN__ 3412\r\n#define sun 1\r\n#define __INT_FAST32_TYPE__ int\r\n#define __UINT_LEAST16_TYPE__ short unsigned int\r\n#define unix 1\r\n#define __SIZE_TYPE__ long unsigned int\r\n#define __UINT64_MAX__ 0xffffffffffffffffUL\r\n#define __FLT64X_DIG__ 33\r\n#define __INT8_TYPE__ char\r\n#define __ELF__ 1\r\n#define __FLT_RADIX__ 2\r\n#define __INT_LEAST16_TYPE__ short int\r\n#define __LDBL_EPSILON__ 1.92592994438723585305597794258492732e-34L\r\n#define __UINTMAX_C(c) c ## UL\r\n#define __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x\r\n#define __SIG_ATOMIC_MAX__ 0x7fffffff\r\n#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\r\n#define __SIZEOF_PTRDIFF_T__ 8\r\n#define __LDBL_DIG__ 33\r\n#define __FLT32X_MIN_EXP__ (-1021)\r\n#define __INT_FAST16_MAX__ 0x7fffffff\r\n#define __FLT64_DIG__ 15\r\n#define __UINT_FAST32_MAX__ 0xffffffffU\r\n#define __UINT_LEAST64_TYPE__ long unsigned int\r\n#define __FLT_HAS_QUIET_NAN__ 1\r\n#define __FLT_MAX_10_EXP__ 38\r\n#define __LONG_MAX__ 0x7fffffffffffffffL\r\n#define __FLT64X_HAS_DENORM__ 1\r\n#define __FLT_HAS_INFINITY__ 1\r\n#define __UINT_FAST16_TYPE__ unsigned int\r\n#define __INT_FAST32_WIDTH__ 32\r\n#define __CHAR16_TYPE__ short unsigned int\r\n#define __PRAGMA_REDEFINE_EXTNAME 1\r\n#define __SIZE_WIDTH__ 64\r\n#define __INT_LEAST16_MAX__ 0x7fff\r\n#define __INT64_MAX__ 0x7fffffffffffffffL\r\n#define __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32\r\n#define __SIG_ATOMIC_WIDTH__ 32\r\n#define __INT_LEAST64_TYPE__ long int\r\n#define __INT16_TYPE__ short int\r\n#define __INT_LEAST8_TYPE__ char\r\n#define __STDC_VERSION__ 201710L\r\n#define __INT_FAST8_MAX__ 0x7f\r\n#define __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128\r\n#define __INTPTR_MAX__ 0x7fffffffffffffffL\r\n#define __FLT64_HAS_QUIET_NAN__ 1\r\n#define __FLT32_MIN_10_EXP__ (-37)\r\n#define __FLT32X_DIG__ 15\r\n#define __PTRDIFF_WIDTH__ 64\r\n#define __LDBL_MANT_DIG__ 113\r\n#define __svr4__ 1\r\n#define __FLT64_HAS_INFINITY__ 1\r\n#define __FLT64X_MAX__ 1.18973149535723176508575932662800702e+4932F64x\r\n#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)\r\n#define __INTPTR_TYPE__ long int\r\n#define __UINT16_TYPE__ short unsigned int\r\n#define __WCHAR_TYPE__ int\r\n#define __SIZEOF_FLOAT__ 4\r\n#define __UINTPTR_MAX__ 0xffffffffffffffffUL\r\n#define __INT_FAST64_WIDTH__ 64\r\n#define __FLT32_DECIMAL_DIG__ 9\r\n#define __INT_FAST64_MAX__ 0x7fffffffffffffffL\r\n#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 255\r\n#define __FLT_NORM_MAX__ 3.40282346638528859811704183484516925e+38F\r\n#define __FLT32_HAS_INFINITY__ 1\r\n#define __FLT64X_MAX_EXP__ 16384\r\n#define __UINT_FAST64_TYPE__ long unsigned int\r\n#define __INT_MAX__ 0x7fffffff\r\n#define __INT64_TYPE__ long int\r\n#define __FLT_MAX_EXP__ 128\r\n#define __ORDER_BIG_ENDIAN__ 4321\r\n#define __DBL_MANT_DIG__ 53\r\n#define __INT_LEAST64_MAX__ 0x7fffffffffffffffL\r\n#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\r\n#define __WINT_TYPE__ int\r\n#define __UINT_LEAST32_TYPE__ unsigned int\r\n#define __SIZEOF_SHORT__ 2\r\n#define __FLT32_NORM_MAX__ 3.40282346638528859811704183484516925e+38F32\r\n#define __LDBL_MIN_EXP__ (-16381)\r\n#define __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64\r\n#define __WINT_WIDTH__ 32\r\n#define __INT_LEAST8_MAX__ 0x7f\r\n#define __INT_LEAST64_WIDTH__ 64\r\n#define __FLT32X_MAX_10_EXP__ 308\r\n#define __SIZEOF_INT128__ 16\r\n#define __LDBL_MAX_10_EXP__ 4932\r\n#define __ATOMIC_RELAXED 0\r\n#define __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)\r\n#define __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128\r\n#define _LP64 1\r\n#define __UINT8_C(c) c\r\n#define __FLT64_MAX_EXP__ 1024\r\n#define __INT_LEAST32_TYPE__ int\r\n#define __sun__ 1\r\n#define __SIZEOF_WCHAR_T__ 4\r\n#define __UINT64_TYPE__ long unsigned int\r\n#define __FLT64_NORM_MAX__ 1.79769313486231570814527423731704357e+308F64\r\n#define __FLT128_HAS_QUIET_NAN__ 1\r\n#define __INTMAX_MAX__ 0x7fffffffffffffffL\r\n#define __INT_FAST8_TYPE__ char\r\n#define __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x\r\n#define __LDBL_HAS_INFINITY__ 1\r\n#define __GNUC_STDC_INLINE__ 1\r\n#define __FLT64_HAS_DENORM__ 1\r\n#define __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32\r\n#define __DBL_DECIMAL_DIG__ 17\r\n#define __STDC_UTF_32__ 1\r\n#define __INT_FAST8_WIDTH__ 8\r\n#define __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x\r\n#define __DBL_NORM_MAX__ ((double)1.79769313486231570814527423731704357e+308L)\r\n#define __BYTE_ORDER__ __ORDER_BIG_ENDIAN__\r\n#define __INTMAX_WIDTH__ 64\r\n#define __UINT32_C(c) c ## U\r\n#define __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F\r\n#define __INT8_MAX__ 0x7f\r\n#define __LONG_WIDTH__ 64\r\n#define __UINT_FAST32_TYPE__ unsigned int\r\n#define __FLT32X_NORM_MAX__ 1.79769313486231570814527423731704357e+308F32x\r\n#define __CHAR32_TYPE__ unsigned int\r\n#define __FLT_MAX__ 3.40282346638528859811704183484516925e+38F\r\n#define __INT32_TYPE__ int\r\n#define __SIZEOF_DOUBLE__ 8\r\n#define __FLT_MIN_10_EXP__ (-37)\r\n#define __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64\r\n#define __INT_LEAST32_WIDTH__ 32\r\n#define __INTMAX_TYPE__ long int\r\n#define __FLT32X_HAS_QUIET_NAN__ 1\r\n#define __ATOMIC_CONSUME 1\r\n#define __GNUC_MINOR__ 2\r\n#define __INT_FAST16_WIDTH__ 32\r\n#define __UINTMAX_MAX__ 0xffffffffffffffffUL\r\n#define __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x\r\n#define __DBL_MAX_10_EXP__ 308\r\n#define __LDBL_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966L\r\n#define __INT16_C(c) c\r\n#define __PTRDIFF_TYPE__ long int\r\n#define __ATOMIC_SEQ_CST 5\r\n#define __arch64__ 1\r\n#define __UINT32_TYPE__ unsigned int\r\n#define __FLT32X_MIN_10_EXP__ (-307)\r\n#define __UINTPTR_TYPE__ long unsigned int\r\n#define __LDBL_MIN_10_EXP__ (-4931)\r\n#define __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128\r\n#define __SIZEOF_LONG_LONG__ 8\r\n#define __FLT128_DECIMAL_DIG__ 36\r\n#define __GCC_ATOMIC_LLONG_LOCK_FREE 2\r\n#define __FLT_DECIMAL_DIG__ 9\r\n#define __UINT_FAST16_MAX__ 0xffffffffU\r\n#define __LDBL_NORM_MAX__ 1.18973149535723176508575932662800702e+4932L\r\n#define __GCC_ATOMIC_SHORT_LOCK_FREE 2\r\n#define __UINT_FAST8_TYPE__ unsigned char\r\n#define __ATOMIC_ACQ_REL 4\r\n#define __ATOMIC_RELEASE 3\r\n```\r\n",
      "user": {
        "login": "tankf33der",
        "id": 45243121,
        "node_id": "MDQ6VXNlcjQ1MjQzMTIx",
        "avatar_url": "https://avatars.githubusercontent.com/u/45243121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tankf33der",
        "html_url": "https://github.com/tankf33der",
        "followers_url": "https://api.github.com/users/tankf33der/followers",
        "following_url": "https://api.github.com/users/tankf33der/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tankf33der/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tankf33der/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tankf33der/subscriptions",
        "organizations_url": "https://api.github.com/users/tankf33der/orgs",
        "repos_url": "https://api.github.com/users/tankf33der/repos",
        "events_url": "https://api.github.com/users/tankf33der/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tankf33der/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1080#issuecomment-1051612935",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1080"
    },
    {
      "event": "commented",
      "id": 1051626371,
      "node_id": "IC_kwDOAP4Jqs4-rouD",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1051626371",
      "actor": {
        "login": "tankf33der",
        "id": 45243121,
        "node_id": "MDQ6VXNlcjQ1MjQzMTIx",
        "avatar_url": "https://avatars.githubusercontent.com/u/45243121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tankf33der",
        "html_url": "https://github.com/tankf33der",
        "followers_url": "https://api.github.com/users/tankf33der/followers",
        "following_url": "https://api.github.com/users/tankf33der/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tankf33der/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tankf33der/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tankf33der/subscriptions",
        "organizations_url": "https://api.github.com/users/tankf33der/orgs",
        "repos_url": "https://api.github.com/users/tankf33der/repos",
        "events_url": "https://api.github.com/users/tankf33der/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tankf33der/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-26T05:44:35Z",
      "updated_at": "2022-02-26T05:44:35Z",
      "author_association": "NONE",
      "body": "> Can you try compiling with `-DSECP256K1_BIG_ENDIAN`, since apparently the autodetection based on macros doesn't work?\r\n\r\nHelped to compile, tests passed.\r\n```\r\n$ gmake check\r\ngmake  check-am\r\ngmake[1]: Entering directory '/export/home/mihailp/secp256k1-master'\r\ngmake  check-TESTS\r\ngmake[2]: Entering directory '/export/home/mihailp/secp256k1-master'\r\ngmake[3]: Entering directory '/export/home/mihailp/secp256k1-master'\r\nPASS: tests\r\nPASS: exhaustive_tests\r\n============================================================================\r\nTestsuite summary for libsecp256k1 0.1.0-pre\r\n============================================================================\r\n# TOTAL: 2\r\n# PASS:  2\r\n# SKIP:  0\r\n# XFAIL: 0\r\n# FAIL:  0\r\n# XPASS: 0\r\n# ERROR: 0\r\n============================================================================\r\ngmake[3]: Leaving directory '/export/home/mihailp/secp256k1-master'\r\ngmake[2]: Leaving directory '/export/home/mihailp/secp256k1-master'\r\ngmake[1]: Leaving directory '/export/home/mihailp/secp256k1-master'\r\n```\r\n",
      "user": {
        "login": "tankf33der",
        "id": 45243121,
        "node_id": "MDQ6VXNlcjQ1MjQzMTIx",
        "avatar_url": "https://avatars.githubusercontent.com/u/45243121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tankf33der",
        "html_url": "https://github.com/tankf33der",
        "followers_url": "https://api.github.com/users/tankf33der/followers",
        "following_url": "https://api.github.com/users/tankf33der/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tankf33der/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tankf33der/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tankf33der/subscriptions",
        "organizations_url": "https://api.github.com/users/tankf33der/orgs",
        "repos_url": "https://api.github.com/users/tankf33der/repos",
        "events_url": "https://api.github.com/users/tankf33der/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tankf33der/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1080#issuecomment-1051626371",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1080"
    },
    {
      "event": "commented",
      "id": 1051966372,
      "node_id": "IC_kwDOAP4Jqs4-s7uk",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1051966372",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-26T10:24:38Z",
      "updated_at": "2022-02-26T12:01:17Z",
      "author_association": "MEMBER",
      "body": "Thanks for the quick reply. The output does not include `_BIG_ENDIAN`, so this is probably defined somewhere else.\r\n\r\n\r\n---\r\n\r\nSo the following two are not equivalent if `FOO` is defined but empty:\r\n\r\n```\r\n#if defined(FOO)\r\n#if FOO = 1\r\n...\r\n#endif\r\n#endif \r\n```\r\n\r\n\r\n```\r\n#if defined(FOO) && FOO == 1\r\n...\r\n#endif \r\n```\r\n\r\nWe took the code partly from https://github.com/rofl0r/endianness.h/blob/9853923246b065a3b52d2c43835f3819a62c7199/endianness.h#L52L73 and changed it slightly. The original code \r\nchecks the most commonly used macro  ` __BYTE_ORDER__` separately and then skips all the other checks, so that would have worked here. But still, maybe the entire thing is somewhat fragile. [1] agrees with this observation and favors run-time detection, which then is again turned into compile-time detection by a clever compiler. \r\n\r\nThe only place where we have endianness-dependant code is when reading input data for SHA256: https://github.com/bitcoin-core/secp256k1/blob/master/src/hash_impl.h#L54\r\n\r\nSo we could: \r\n1. Stick to the precompiler macros and improve them. This will at least fix this issue here.\r\n2. Switch to runtime detection, e.g., as with a inlineable and compile-time-evalulatable function as suggested in [1]\r\n3. Make the code endianness-independent, preferably in a way that has in the end no overhead for LE.\r\n\r\nI think we should try 3 and benchmark if it really has an effect on performance. If not, we should favor that approach. It's by far the least brittle. Otherwise 2 could be a solid option, too.\r\n\r\nFor 1, I'm a little bit concerned by the observation in [1] that the macro approach really led to misdetection cases. We have the self-tests but they're not always run (static context). Unfortunately there seems to be no portable C89 expression that we could use in `assumptions.h` (Even if compile-time constantness is not a requirement, there's `(*(uint16_t *)\"\\0\\xff\" < 0x0100)` in C89 but it relies on the assumption that string literals are aligned. The other expressions I found all use C99 compound literals, e.g., see https://stackoverflow.com/a/2100549)\r\n\r\n[1] https://fastcompression.blogspot.com/2014/11/portability-woes-endianess-and_24.html",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1080#issuecomment-1051966372",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1080"
    },
    {
      "event": "referenced",
      "id": 6305922472,
      "node_id": "REFE_lADOAP4Jqs5Ek6tszwAAAAF33L2o",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6305922472",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1f43294e533f6797b63c7f67913b0f3b62b68595",
      "commit_url": "https://api.github.com/repos/real-or-random/secp256k1/commits/1f43294e533f6797b63c7f67913b0f3b62b68595",
      "created_at": "2022-03-25T09:37:22Z"
    },
    {
      "event": "referenced",
      "id": 6306275958,
      "node_id": "REFE_lADOAP4Jqs5Ek6tszwAAAAF34iJ2",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6306275958",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8d89b9e6e562000cdb91a70a85fae5e4817cec8a",
      "commit_url": "https://api.github.com/repos/real-or-random/secp256k1/commits/8d89b9e6e562000cdb91a70a85fae5e4817cec8a",
      "created_at": "2022-03-25T10:32:36Z"
    },
    {
      "event": "closed",
      "id": 6321183743,
      "node_id": "CE_lADOAP4Jqs5Ek6tszwAAAAF4xZv_",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6321183743",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8d89b9e6e562000cdb91a70a85fae5e4817cec8a",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/8d89b9e6e562000cdb91a70a85fae5e4817cec8a",
      "created_at": "2022-03-28T19:30:36Z"
    },
    {
      "event": "referenced",
      "id": 6321183758,
      "node_id": "REFE_lADOAP4Jqs5Ek6tszwAAAAF4xZwO",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/6321183758",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8746600eec5e7fcd35dabd480839a3a4bdfee87b",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/8746600eec5e7fcd35dabd480839a3a4bdfee87b",
      "created_at": "2022-03-28T19:30:36Z"
    },
    {
      "event": "referenced",
      "id": 9309532759,
      "node_id": "REFE_lADOAP4Jqs5Ek6tszwAAAAIq5DJX",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/9309532759",
      "actor": {
        "login": "dderjoel",
        "id": 13455345,
        "node_id": "MDQ6VXNlcjEzNDU1MzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13455345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dderjoel",
        "html_url": "https://github.com/dderjoel",
        "followers_url": "https://api.github.com/users/dderjoel/followers",
        "following_url": "https://api.github.com/users/dderjoel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dderjoel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dderjoel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dderjoel/subscriptions",
        "organizations_url": "https://api.github.com/users/dderjoel/orgs",
        "repos_url": "https://api.github.com/users/dderjoel/repos",
        "events_url": "https://api.github.com/users/dderjoel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dderjoel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b9138ab266b5b27a8b784b68a1ef4ae49063a7ee",
      "commit_url": "https://api.github.com/repos/dderjoel/secp256k1/commits/b9138ab266b5b27a8b784b68a1ef4ae49063a7ee",
      "created_at": "2023-05-23T01:15:37Z"
    }
  ]
}