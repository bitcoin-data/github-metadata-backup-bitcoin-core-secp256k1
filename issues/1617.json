{
  "type": "issue",
  "issue": {
    "id": 2588458344,
    "node_id": "I_kwDOAP4Jqs6aSL1o",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1617",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1617/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1617/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1617/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1617",
    "number": 1617,
    "state": "open",
    "state_reason": null,
    "title": "\"implicit conversion loses integer precision\" warnings",
    "body": "When building with clang and the `-Wshorten-64-to-32` flag, there are some warnings:\r\n```\r\nIn file included from /home/hebasto/git/secp256k1/secp256k1/src/secp256k1.c:27:\r\nIn file included from /home/hebasto/git/secp256k1/secp256k1/src/field_impl.h:14:\r\nIn file included from /home/hebasto/git/secp256k1/secp256k1/src/field_5x52_impl.h:13:\r\n/home/hebasto/git/secp256k1/secp256k1/src/modinv64_impl.h:279:39: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Wshorten-64-to-32]\r\n  279 |             w = (f * g * (f * f - 2)) & m;\r\n      |               ~ ~~~~~~~~~~~~~~~~~~~~~~^~~\r\n/home/hebasto/git/secp256k1/secp256k1/src/modinv64_impl.h:289:19: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Wshorten-64-to-32]\r\n  289 |             w = f + (((f + 1) & 4) << 1);\r\n      |               ~ ~~^~~~~~~~~~~~~~~~~~~~~~\r\n/home/hebasto/git/secp256k1/secp256k1/src/modinv64_impl.h:290:26: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Wshorten-64-to-32]\r\n  290 |             w = (-w * g) & m;\r\n      |               ~ ~~~~~~~~~^~~\r\n/home/hebasto/git/secp256k1/secp256k1/src/modinv64_impl.h:370:39: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Wshorten-64-to-32]\r\n  370 |             w = (f * g * (f * f - 2)) & m;\r\n      |               ~ ~~~~~~~~~~~~~~~~~~~~~~^~~\r\n/home/hebasto/git/secp256k1/secp256k1/src/modinv64_impl.h:380:19: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Wshorten-64-to-32]\r\n  380 |             w = f + (((f + 1) & 4) << 1);\r\n      |               ~ ~~^~~~~~~~~~~~~~~~~~~~~~\r\n/home/hebasto/git/secp256k1/secp256k1/src/modinv64_impl.h:381:26: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Wshorten-64-to-32]\r\n  381 |             w = (-w * g) & m;\r\n      |               ~ ~~~~~~~~~^~~\r\nIn file included from /home/hebasto/git/secp256k1/secp256k1/src/secp256k1.c:28:\r\nIn file included from /home/hebasto/git/secp256k1/secp256k1/src/scalar_impl.h:20:\r\n/home/hebasto/git/secp256k1/secp256k1/src/scalar_4x64_impl.h:119:42: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]\r\n  119 |     overflow = secp256k1_u128_to_u64(&t) + secp256k1_scalar_check_overflow(r);\r\n      |              ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/hebasto/git/secp256k1/secp256k1/src/scalar_4x64_impl.h:682:34: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]\r\n  682 |     secp256k1_scalar_reduce(r, c + secp256k1_scalar_check_overflow(r));\r\n      |     ~~~~~~~~~~~~~~~~~~~~~~~    ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /home/hebasto/git/secp256k1/secp256k1/src/secp256k1.c:30:\r\n/home/hebasto/git/secp256k1/secp256k1/src/ecmult_impl.h:518:21: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]\r\n  518 |     for (i = n_wnaf - 1; i >= 0; i--) {\r\n      |            ~ ~~~~~~~^~~\r\n/home/hebasto/git/secp256k1/secp256k1/src/ecmult_impl.h:562:52: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]\r\n  562 |         for(j = ECMULT_TABLE_SIZE(bucket_window+2) - 1; j > 0; j--) {\r\n      |               ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\r\nIn file included from /home/hebasto/git/secp256k1/secp256k1/src/secp256k1.c:32:\r\nIn file included from /home/hebasto/git/secp256k1/secp256k1/src/ecmult_gen_impl.h:14:\r\n/home/hebasto/git/secp256k1/secp256k1/src/hash_impl.h:151:52: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Wshorten-64-to-32]\r\n  151 |     secp256k1_write_be32(&sizedesc[0], hash->bytes >> 29);\r\n      |     ~~~~~~~~~~~~~~~~~~~~               ~~~~~~~~~~~~^~~~~\r\n/home/hebasto/git/secp256k1/secp256k1/src/hash_impl.h:152:52: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Wshorten-64-to-32]\r\n  152 |     secp256k1_write_be32(&sizedesc[4], hash->bytes << 3);\r\n      |     ~~~~~~~~~~~~~~~~~~~~               ~~~~~~~~~~~~^~~~\r\n/home/hebasto/git/secp256k1/secp256k1/src/hash_impl.h:261:19: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]\r\n  261 |         int now = outlen;\r\n      |             ~~~   ^~~~~~\r\n13 warnings generated.\r\n```",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 5492448291,
        "node_id": "LA_kwDOAP4Jqs8AAAABR2AcIw",
        "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/refactor/smell",
        "name": "refactor/smell",
        "description": "",
        "color": "FBCA04",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 2,
    "created_at": "2024-10-15T11:21:16Z",
    "updated_at": "2024-10-15T14:02:00Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 2413642913,
      "node_id": "IC_kwDOAP4Jqs6P3USh",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2413642913",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T11:35:02Z",
      "updated_at": "2024-10-15T11:35:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "> When building with clang and the `-Wshorten-64-to-32` flag, there are some warnings:\r\n\r\nWell, then don't use this flag. :P Or do you think this is a problem? Is it a default flag?",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1617#issuecomment-2413642913",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1617"
    },
    {
      "event": "commented",
      "id": 2413741595,
      "node_id": "IC_kwDOAP4Jqs6P3sYb",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/2413741595",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T12:11:15Z",
      "updated_at": "2024-10-15T12:11:15Z",
      "author_association": "MEMBER",
      "body": "> Or do you think this is a problem?\r\n\r\nEach case has to be investigated to answer this question.\r\n\r\n> Is it a default flag?\r\n\r\nmacOS Xcode set it by default.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1617#issuecomment-2413741595",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1617"
    },
    {
      "event": "unsubscribed",
      "id": 14657186131,
      "node_id": "UE_lADOAP4Jqs6aSL1ozwAAAANpoulT",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/14657186131",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T13:00:31Z"
    },
    {
      "event": "labeled",
      "id": 14658262711,
      "node_id": "LE_lADOAP4Jqs6aSL1ozwAAAANps1a3",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/14658262711",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T14:02:00Z",
      "label": {
        "name": "refactor/smell",
        "color": "FBCA04"
      }
    }
  ]
}