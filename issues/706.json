{
  "type": "issue",
  "issue": {
    "id": 545370806,
    "node_id": "MDU6SXNzdWU1NDUzNzA4MDY=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/706",
    "number": 706,
    "state": "closed",
    "state_reason": "completed",
    "title": "Verifiable Random Function (VRF)",
    "body": "Congrats for the great repo!\r\n\r\nHere is a suggestion:\r\n\r\nWhat about an implementation of a Verifiable Random Function using the secp256k1 curve?\r\n\r\nHaving a secure VRF in this library, or as a separate code that uses this library, would be a really useful piece of code.\r\n\r\nThe Algorand team created one using the ed25519 curve and sha512 in a forked `libsodium` repo. You can check it out [here](https://github.com/algorand/libsodium/tree/draft-irtf-cfrg-vrf-03/src/libsodium/crypto_vrf)\r\n\r\nI found implementations using secp256k1 and sha256 in other languages:\r\n\r\n* Rust: [vrf-rs](https://github.com/witnet/vrf-rs)\r\n* Go: [chain33](https://github.com/33cn/chain33/tree/master/common/vrf/secp256k1)\r\n* Solidity: [vrf-solidity](https://github.com/witnet/vrf-solidity)\r\n\r\nBut none in C\r\n\r\nThe last version of IETF draft for VRFs (at this date) is [draft-irtf-cfrg-vrf-05](https://tools.ietf.org/id/draft-irtf-cfrg-vrf-05.html)",
    "user": {
      "login": "kroggen",
      "id": 7624275,
      "node_id": "MDQ6VXNlcjc2MjQyNzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7624275?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kroggen",
      "html_url": "https://github.com/kroggen",
      "followers_url": "https://api.github.com/users/kroggen/followers",
      "following_url": "https://api.github.com/users/kroggen/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/kroggen/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/kroggen/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/kroggen/subscriptions",
      "organizations_url": "https://api.github.com/users/kroggen/orgs",
      "repos_url": "https://api.github.com/users/kroggen/repos",
      "events_url": "https://api.github.com/users/kroggen/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/kroggen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 8,
    "closed_at": "2020-01-06T11:16:23Z",
    "created_at": "2020-01-05T05:02:02Z",
    "updated_at": "2020-01-19T06:47:57Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 570868655,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDg2ODY1NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/570868655",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-05T05:53:09Z",
      "updated_at": "2020-01-06T13:11:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "Without an extremely clear understanding of at least some relevant applications its unlikely that this library could provide an acceptable safe interface-- e.g. does the hash_to_curve need to be constant time-- it's much slower, but necessary when the message/hash is secret from some parties.  Otherwise this is a pretty low level primitive.\r\n\r\nI'm not aware of any particular reason this function would be of interest to any of the regular contributors to the library.\r\n\r\nIt's very similar in structure/aim to the P(o)odle from JM since 2016: https://joinmarket.me/blog/blog/poodle/ -- JM's poodle has a small number of fixed messages an uses the resulting random value as a commitment to an unrevealed public key that no one else could compute, while the IETF VRF just leaves the 'message' as an input.\r\n\r\nTo save other contributors time in understanding what this even is, using conventional variable names:\r\n\r\n* There is a prover with a keypair (x, xG) and a verifier which knows the public key (xG).\r\n* The prover takes a message and emits a proof. Anyone with the proof and message and the pubkey can extract a consistent hash.\r\n* The proof is proof of discrete log equivalence between the pubkey and a point (H) created by hashing the pubkey and the message. The challenge hash in the DLEQ is {H,xH,message,kG,kH} -- it does not commit to the pubkey except indirectly through H, the proof is xH,s,e -- (it's in e,s form).\r\n\r\nUse of the e,s form probably was chosen because it saves 32 bytes (otherwise you'd have to send both nonces)... but it breaks batch validation which would otherwise work. Verifying requires a hash-to-curve and two independent multiexps.\r\n\r\nIf the message and pubkey were generated randomly the resulting hash is close to uniform (given kind of handwavy assumptions about the hash functions being used being uniform enough). The 'random value' is not close to uniform if the attacker can choose the message with knowledge of the pubkey, or the pubkey with knowledge of the message.\r\n\r\nFunctionally it's similar to just using a BLS signature as a hash, though bigger but faster to verify if you wouldn't otherwise be able to batch the BLS validation, probably slower if batching would be possible for BLS.\r\n\r\nUnlike a BLS hash, this construction is not designated verifier sidechannel free.  You can store a message in the nonce (you can either store a message in the secret key that can be decoded by someone who can derrive the nonce, or just grind sidechannel data into the nonce itself)... so I don't think it couldn't be used for the p2sh^2 anti-data-embedding trick.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/706#issuecomment-570868655",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706"
    },
    {
      "event": "commented",
      "id": 570890736,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDg5MDczNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/570890736",
      "actor": {
        "login": "kroggen",
        "id": 7624275,
        "node_id": "MDQ6VXNlcjc2MjQyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7624275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kroggen",
        "html_url": "https://github.com/kroggen",
        "followers_url": "https://api.github.com/users/kroggen/followers",
        "following_url": "https://api.github.com/users/kroggen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kroggen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kroggen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kroggen/subscriptions",
        "organizations_url": "https://api.github.com/users/kroggen/orgs",
        "repos_url": "https://api.github.com/users/kroggen/repos",
        "events_url": "https://api.github.com/users/kroggen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kroggen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-05T08:55:00Z",
      "updated_at": "2020-01-05T08:55:00Z",
      "author_association": "NONE",
      "body": "In blockchains, VRFs can be used to prove that a generated random number is correct.\r\n\r\nExample: selecting a node to be the next block producer without using proof-of-work.\r\n\r\nEach node has its private/secret key and shares its public key with other nodes, so they can verify that the generated random number from a specific node is correct and it was not modified. Nodes calculate this random number using their private key and a publicly known seed, different at each round.\r\n\r\nUsing VRFs makes the process non-interactive: they do not need to exchange many messages to reach a consensus on some global random number.",
      "user": {
        "login": "kroggen",
        "id": 7624275,
        "node_id": "MDQ6VXNlcjc2MjQyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7624275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kroggen",
        "html_url": "https://github.com/kroggen",
        "followers_url": "https://api.github.com/users/kroggen/followers",
        "following_url": "https://api.github.com/users/kroggen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kroggen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kroggen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kroggen/subscriptions",
        "organizations_url": "https://api.github.com/users/kroggen/orgs",
        "repos_url": "https://api.github.com/users/kroggen/repos",
        "events_url": "https://api.github.com/users/kroggen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kroggen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/706#issuecomment-570890736",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706"
    },
    {
      "event": "commented",
      "id": 570892455,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDg5MjQ1NQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/570892455",
      "actor": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-05T09:22:20Z",
      "updated_at": "2020-01-05T09:22:20Z",
      "author_association": "MEMBER",
      "body": "> In blockchains\r\n\r\nIt's not obvious from the name of this library but \"the primary focus of its development has been for usage in the *Bitcoin* system\" (from the README, emphasis added). I'm not aware of an application in Bitcoin-land that uses a VRF. There's the somewhat less focused [secp256k1-zkp](https://github.com/ElementsProject/secp256k1-zkp) fork where a VRF may get merged if it's behind a sane API with a clear protocol description.",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/706#issuecomment-570892455",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706"
    },
    {
      "event": "commented",
      "id": 570928306,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDkyODMwNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/570928306",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-05T16:48:42Z",
      "updated_at": "2020-01-06T12:57:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "It's unclear to me why a 'blockchain application' wouldn't prefer to use:\r\n\r\n(1) The hash of a BLS signature as it would be smaller, batch verifiable, simpler to implement from existing primitives and much easier to create a threshold random beacon (non-interactive multiparty, too). The BLS 'proof' also has no sidechannel which can be used to carry hidden data, which is important when the purpose of the verifyable hash is side-channel elimination.\r\n\r\nOr (2) an alternative construction for this DLEQ which is batch verifyable but slightly larger.\r\n\r\nOr, if proof sizes and speeds aren't much of an issue, (3) something like purify where the 'random value' is a EC point with a prover known discrete log-- which allows using it as a nonce in a single show signature (\"leak your private key if you sign more than T times for a given VRF context\").\r\n\r\nI can totally believe that this construct would be the best fit for _some_ application... but I would have to to have at least one full application in mind to make a good interface.  And when I think of applications (or, rather, consider similar application's we've discussed in the past)-- other known/obvious constructions sound obviously better to me.\r\n\r\nIs it obvious to anyone why the public key is included in the hash-to-curve instead of just the ordinary generator?  Use of the public key in that hash prevents an optimization where many VRFs of the same message can share the same hash to curve and multiexp precomputation.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/706#issuecomment-570928306",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706"
    },
    {
      "event": "commented",
      "id": 570945918,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDk0NTkxOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/570945918",
      "actor": {
        "login": "kroggen",
        "id": 7624275,
        "node_id": "MDQ6VXNlcjc2MjQyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7624275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kroggen",
        "html_url": "https://github.com/kroggen",
        "followers_url": "https://api.github.com/users/kroggen/followers",
        "following_url": "https://api.github.com/users/kroggen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kroggen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kroggen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kroggen/subscriptions",
        "organizations_url": "https://api.github.com/users/kroggen/orgs",
        "repos_url": "https://api.github.com/users/kroggen/repos",
        "events_url": "https://api.github.com/users/kroggen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kroggen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-05T20:44:24Z",
      "updated_at": "2020-01-05T20:44:24Z",
      "author_association": "NONE",
      "body": "As far as I understand, batch verification is not of use in a case where there is no signature aggregation. Each selected node sends the generated random number + the proof. The receiver nodes only need to verify the proof from this single or few nodes.\r\n\r\nIt should not be single use too. Generating many random numbers should not reveal bits of the private key.\r\n\r\nAnyway, it was just an idea of implementation of the IETF draft so it could be used in many different applications, not only on a specific use case.",
      "user": {
        "login": "kroggen",
        "id": 7624275,
        "node_id": "MDQ6VXNlcjc2MjQyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7624275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kroggen",
        "html_url": "https://github.com/kroggen",
        "followers_url": "https://api.github.com/users/kroggen/followers",
        "following_url": "https://api.github.com/users/kroggen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kroggen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kroggen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kroggen/subscriptions",
        "organizations_url": "https://api.github.com/users/kroggen/orgs",
        "repos_url": "https://api.github.com/users/kroggen/repos",
        "events_url": "https://api.github.com/users/kroggen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kroggen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/706#issuecomment-570945918",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706"
    },
    {
      "event": "commented",
      "id": 570957183,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDk1NzE4Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/570957183",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-05T23:03:47Z",
      "updated_at": "2020-01-05T23:03:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "For example, say you want to validate a million block history.  With scalar validation you'll be doing two multiexps per block, but with batch validation you could do one big batch with all two million at once (or more realistically groups of a moderate amount at time for engineering reasons). Signature aggregation doesn't come into it. (though this sort of thing could also be batch validated along with signatures if they were constructed using the same curve)",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/706#issuecomment-570957183",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706"
    },
    {
      "event": "commented",
      "id": 571102171,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTEwMjE3MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/571102171",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-06T11:16:23Z",
      "updated_at": "2020-01-06T11:16:23Z",
      "author_association": "MEMBER",
      "body": "> It's not obvious from the name of this library but \"the primary focus of its development has been for usage in the _Bitcoin_ system\" (from the README, emphasis added). I'm not aware of an application in Bitcoin-land that uses a VRF. There's the somewhat less focused [secp256k1-zkp](https://github.com/ElementsProject/secp256k1-zkp) fork where a VRF may get merged if it's behind a sane API with a clear protocol description.\r\n\r\nI agree. I'm closing this because there's no need for a VRF in the Bitcoin ecosystem currently. Let me stress that does not mean that there won't be a use case in the future. But I feel confident enough to speak for the maintainers and regular contributors that there is no interest in an implementation of a VRF currentluy. Feel free to object, of course.\r\n\r\nAnd please feel free to discuss this further. The fact that the issue is closed does not mean that we can't discuss further.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/706#issuecomment-571102171",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706"
    },
    {
      "event": "closed",
      "id": 2923888738,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjkyMzg4ODczOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/2923888738",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-06T11:16:23Z"
    },
    {
      "event": "commented",
      "id": 575973082,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTk3MzA4Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/575973082",
      "actor": {
        "login": "kroggen",
        "id": 7624275,
        "node_id": "MDQ6VXNlcjc2MjQyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7624275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kroggen",
        "html_url": "https://github.com/kroggen",
        "followers_url": "https://api.github.com/users/kroggen/followers",
        "following_url": "https://api.github.com/users/kroggen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kroggen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kroggen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kroggen/subscriptions",
        "organizations_url": "https://api.github.com/users/kroggen/orgs",
        "repos_url": "https://api.github.com/users/kroggen/repos",
        "events_url": "https://api.github.com/users/kroggen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kroggen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-19T06:47:57Z",
      "updated_at": "2020-01-19T06:47:57Z",
      "author_association": "NONE",
      "body": "For those interested, I implemented an elliptic curve based Verifiable Random Function (VRF) using a fork of this library [here](https://github.com/aergoio/secp256k1-vrf)\r\n\r\nIt is in a fork because the required functions are not exported, otherwise it could be just a code dependent of this library.\r\n\r\nThe library is compiled under a different name, so both can be present on the same device.\r\n\r\nIt is based on the [IETF VRF draft 05](https://tools.ietf.org/id/draft-irtf-cfrg-vrf-05.html)\r\n\r\nAny review is welcome.\r\n",
      "user": {
        "login": "kroggen",
        "id": 7624275,
        "node_id": "MDQ6VXNlcjc2MjQyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7624275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kroggen",
        "html_url": "https://github.com/kroggen",
        "followers_url": "https://api.github.com/users/kroggen/followers",
        "following_url": "https://api.github.com/users/kroggen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kroggen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kroggen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kroggen/subscriptions",
        "organizations_url": "https://api.github.com/users/kroggen/orgs",
        "repos_url": "https://api.github.com/users/kroggen/repos",
        "events_url": "https://api.github.com/users/kroggen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kroggen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/706#issuecomment-575973082",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/706"
    }
  ]
}