{
  "type": "issue",
  "issue": {
    "id": 667714727,
    "node_id": "MDU6SXNzdWU2Njc3MTQ3Mjc=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780",
    "number": 780,
    "state": "open",
    "state_reason": null,
    "title": "New context API",
    "body": "**edit: This is now more a meta issue to discuss an improved context API, see the discussion below.**\r\n\r\n\r\nI'm arguably late to the party but I believe we should either talk about this now (before we do a release) or never:\r\n\r\n> Taking a step back, I believe that even given the problems with C, upstream's API is not optimal here. A better API would be to ask the user to provide entropy already in `_context_create`, or pass NULL explicitly to opt out.\r\n\r\n_Originally posted by @real-or-random in https://github.com/rust-bitcoin/rust-secp256k1/issues/225#issuecomment-655998672_\r\n\r\nNote that this does not need to be a breaking change, we could for example add a new function and deprecate `secp256k1_context_create`.",
    "user": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 19,
    "created_at": "2020-07-29T10:00:30Z",
    "updated_at": "2022-07-26T07:02:56Z"
  },
  "events": [
    {
      "event": "milestoned",
      "id": 3598282944,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDM1OTgyODI5NDQ=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3598282944",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-29T10:00:30Z",
      "milestone": {
        "title": "initial release (1.0.0-rc.1)"
      }
    },
    {
      "event": "mentioned",
      "id": 3598282968,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU5ODI4Mjk2OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3598282968",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-29T10:00:30Z"
    },
    {
      "event": "subscribed",
      "id": 3598282970,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1OTgyODI5NzA=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3598282970",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-29T10:00:30Z"
    },
    {
      "event": "commented",
      "id": 666279938,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjI3OTkzOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/666279938",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T10:17:40Z",
      "updated_at": "2020-07-30T10:17:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Do we want something like `secp256k1_context_create_randomized` which can accept either a seed or NULL, or should it enforce NULL? \r\n(the cost I think is that users that don't have access to an rng will pass either an array of zeros or a constant random seed, I don't think either will decrease the security, and a constant seed is probably better than nothing)",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-666279938",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "commented",
      "id": 667570415,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzU3MDQxNQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/667570415",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-01T18:29:10Z",
      "updated_at": "2020-08-01T18:29:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "@real-or-random  Randomization should be ideally be updated for each signature not just once for the context, which is why it doesn't make sense to just have it as a context creation argument.\r\n\r\nIdeally every signature would advance blinding to a new state, but doing that would write to the context, and the existing interface allows you to use the context from multiple threads.\r\n\r\nThis made more sense when the signing context had large and expensive to create precomputed tables in it rather than the tables being static.  Now the signing context is essentially just the randomness.  It would make a lot more sense in my view to now make signing contexts non-shared, and then they could advance their random state on each use,  and it would also be reasonable to generate randomness at creation time.\r\n\r\nThe problem I see with that is that the verify contexts still have huge expensive to create precomputed tables, and one probably doesn't want to have to generate a new one all the time... so it makes sense to share them.  This wouldn't be a big deal, except sign & verify contexts exist. ",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-667570415",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "mentioned",
      "id": 3612292500,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxMjI5MjUwMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3612292500",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-01T18:29:10Z"
    },
    {
      "event": "subscribed",
      "id": 3612292501,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTIyOTI1MDE=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3612292501",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-01T18:29:10Z"
    },
    {
      "event": "commented",
      "id": 667852427,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2Nzg1MjQyNw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/667852427",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T07:18:50Z",
      "updated_at": "2020-08-03T07:19:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @real-or-random Randomization should be ideally be updated for each signature not just once for the context, which is why it doesn't make sense to just have it as a context creation argument.\r\n\r\nWell, agreed but I didn't think about removing  `_randomize`. We should keep this for sure, but it may still make sense to expect the randomness at context creation time.\r\n\r\n> Ideally every signature would advance blinding to a new state, but doing that would write to the context, and the existing interface allows you to use the context from multiple threads.\r\n> \r\n> This made more sense when the signing context had large and expensive to create precomputed tables in it rather than the tables being static. Now the signing context is essentially just the randomness. It would make a lot more sense in my view to now make signing contexts non-shared, and then they could advance their random state on each use, and it would also be reasonable to generate randomness at creation time.\r\n\r\nIndeed. Last time we discussed this, we didn't have a good idea how to do this because of the expensive multiplication. Maybe we could have something like what I mentioned here: http://gnusha.org/secp256k1/2020-07-08.log (I think @sipa mentioned this idea earlier somewhere).\r\n\r\n> \r\n> The problem I see with that is that the verify contexts still have huge expensive to create precomputed tables, and one probably doesn't want to have to generate a new one all the time... so it makes sense to share them. This wouldn't be a big deal, except sign & verify contexts exist.\r\n\r\nI don't think that's a big deal either. You could make combined contexts non-shared too. If the user wants more concurrency, they can just create separate contexts.\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-667852427",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "mentioned",
      "id": 3614591383,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxNDU5MTM4Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3614591383",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T07:18:50Z"
    },
    {
      "event": "subscribed",
      "id": 3614591385,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTQ1OTEzODU=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3614591385",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T07:18:50Z"
    },
    {
      "event": "mentioned",
      "id": 3614591390,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxNDU5MTM5MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3614591390",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T07:18:50Z"
    },
    {
      "event": "subscribed",
      "id": 3614591394,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTQ1OTEzOTQ=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3614591394",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T07:18:50Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T14:41:43Z",
      "updated_at": "2020-08-03T14:41:43Z",
      "source": {
        "issue": {
          "id": 650943514,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ0MzE5NzMw",
          "url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/224",
          "repository_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1",
          "labels_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/224/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/224/comments",
          "events_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/224/events",
          "html_url": "https://github.com/rust-bitcoin/rust-secp256k1/pull/224",
          "number": 224,
          "state": "closed",
          "state_reason": null,
          "title": "Add an optional global, static context",
          "body": "Add an optional global, static context to avoid creating new ones over and over again when there's no option to pass a context. According to my understanding the context is immutable, doesn't do any locking internally and is basically just a bunch of lookup-tables.\r\n\r\nAs this might not be useful for everyone, introduces a dependency and would bump the minimum rust version to 1.27.2 I hid the functionality behind the new `global-context` feature. While these limitations are a bit annoying I still think this crate is the right place for something like that (instead of a bunch of other crates doing the same, leading to a bunch of redundant, static contexts).",
          "user": {
            "login": "sgeisler",
            "id": 1876998,
            "node_id": "MDQ6VXNlcjE4NzY5OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1876998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sgeisler",
            "html_url": "https://github.com/sgeisler",
            "followers_url": "https://api.github.com/users/sgeisler/followers",
            "following_url": "https://api.github.com/users/sgeisler/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sgeisler/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sgeisler/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sgeisler/subscriptions",
            "organizations_url": "https://api.github.com/users/sgeisler/orgs",
            "repos_url": "https://api.github.com/users/sgeisler/repos",
            "events_url": "https://api.github.com/users/sgeisler/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sgeisler/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/pulls/224",
            "html_url": "https://github.com/rust-bitcoin/rust-secp256k1/pull/224",
            "diff_url": "https://github.com/rust-bitcoin/rust-secp256k1/pull/224.diff",
            "patch_url": "https://github.com/rust-bitcoin/rust-secp256k1/pull/224.patch"
          },
          "closed_at": "2020-08-07T18:13:09Z",
          "created_at": "2020-07-04T19:24:43Z",
          "updated_at": "2020-08-08T10:09:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 668176503,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODE3NjUwMw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/668176503",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T18:32:13Z",
      "updated_at": "2020-08-03T18:32:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "For the scalar update even just having two random 256 bit (scalar,point) pairs stored in the context and randomly choosing one to add to the running scalar blinding with each signature would be pretty good (they should be 256 bit so that they tend to change all the words).  I think it would be hard to justify anything more elaborate without measurement.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-668176503",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "commented",
      "id": 668615642,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODYxNTY0Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/668615642",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-04T14:03:23Z",
      "updated_at": "2020-08-04T14:03:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "> For the scalar update even just having two random 256 bit (scalar,point) pairs stored in the context and randomly choosing one to add to the running scalar blinding with each signature would be pretty good (they should be 256 bit so that they tend to change all the words). I think it would be hard to justify anything more elaborate without measurement.\r\n\r\nThat sounds interesting but somewhat ad-hoc. Just to get the idea: You propose to choose one of two (instead of a constant value) to make sure that the scalar is essentially randomized after enough signatures, which is good enough because a side-channel attacker anyway needs a lot of samples and is then forced to generate enough signatures?",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-668615642",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "commented",
      "id": 668695511,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODY5NTUxMQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/668695511",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-04T16:25:50Z",
      "updated_at": "2020-08-04T16:25:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Right.  Even a single attacker unknown random increment should break most attacks, but a choice of two can be done for the runtime cost of a single additional CMOV and will leave the whole scalar totally randomized after a number of uses.\r\n\r\nAny of these power/emi sidechannel defences are inherently adhoc: nothing the library can do can make it strong against a sufficiently powerful sidechannel attacker.\r\n\r\nIf instead we assume the attacker can only manage to extract a few bits, then all the attacks that I'm aware of are extremely fragile and are easily broken. E.g. the quaint old bitcoin  'low-s' rule completely obliterates them-- because they depend on you utterly reliably identifying the most significant bit of the scalar.  They can't brute force the guess because they need hundreds of signatures with the correct guess.\r\n\r\nThe fact that these attacks are so fragile opens the door to disrupting them with fairly minimal means...\r\n\r\nThe main thing that I know to defend against attacker can get learn the power signature of multiplying with specific constants (e.g. which entries of the precomputed table). The random isomorphism makes it so the first multiplication isn't entirely constant at least, but at least two arguments to it are. \r\n\r\nSo the first defence is randomly blinding the scalar so that learning which table entries were accessed isn't that useful. But randomly blinding is expensive if you need an extra ecmult to update the blinding and that ecmult leaks too...  (though that's why the update should increment the blinder, not replace it).  \r\n\r\nI think if you really can tolerate a blinding that doubled the computational cost, you'd be better off just running two ecmults with the first or the second randomly the real one, and the other a dummy random one (or blinding update), and use cmovs in and out to get the real one output.   But that it just extremely expensive and I think hard to justify without measurements that say it helps and that something stupid isn't leaking everything.\r\n\r\nThe next obvious thing to do is to increase the size of the ladder some so that you compute a (say) 320-bit  x * G  and set x randomly so that x%N is the target scalar-- at least that isn't an arbitrary doubling. \r\n\r\nDettman had a patch to use random isomorphisms for the table, but to really make use of it the table needs to be writeable, and on just about any embedded device where power/emi sidechannels are an interesting attack will be pushed by memory pressure and init time to keep the table in flash instead of ram.  Though it would be reasonable to apply it build time at least-- better than nothing and the attacker might not have access to the build (e.g. gen_context picking the random isomorphism).\r\n\r\nGoing back on the theme of limited measures being effective against the known attacks which are less powerful than just reading everything (which we're hopeless against)--  Choice of negation and endomorphism gives 2.58 bits of entropy,  e.g. randomly scale the scalar by  {1, beta, beta^2, -1, -beta, -beta^2} for the low low cost of two scalar multiplies, three scalar cmovs, one scalar conditional negate, two field multiplies, three field cmovs, and one field conditional negate.\r\n\r\nI wish the nonce function it was using naturally gave a somewhat larger output. :-/  even just a couple bits to drive a random scaling factor and/or pick one of two random updates to the blinder.\r\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-668695511",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "commented",
      "id": 670444704,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDQ0NDcwNA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/670444704",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T10:16:43Z",
      "updated_at": "2020-08-07T10:18:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ok, so I still think that having something like `secp256k1_context_create_randomized` would be a small improvement but in the end then the current API is pretty reasonable then and I don't think we should change it now. \r\n\r\nWe should really think about automatic rerandomization but as discussed here this will imply that signing contexts can't be used concurrently. This will be a major change, and so it should not be silent, and we would anyway need to break the API and rename functions etc. This deserves some more thoughts:\r\n - Do we want to split signing/verification contexts entirely?\r\n - Is signing/verification the right terminology now that we have other operations (ECDH, tweaking) that require contexts?\r\n - Are the context creation flags the most ergonomic API?\r\n - ...\r\n\r\nI think that's nothing that we want to do for the initial release then. I'm renaming the issue then. If there's interest, we could still introduce \"cheap\" randomization already with the existing API, e.g., by adding a `context_randomize_cheap` or similar.\r\n\r\nDoes this make sense?",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-670444704",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "demilestoned",
      "id": 3632653957,
      "node_id": "MDE3OkRlbWlsZXN0b25lZEV2ZW50MzYzMjY1Mzk1Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3632653957",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T10:16:51Z",
      "milestone": {
        "title": "initial release (1.0.0-rc.1)"
      }
    },
    {
      "event": "renamed",
      "id": 3632655203,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzYzMjY1NTIwMw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3632655203",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T10:17:16Z",
      "rename": {
        "from": "API for context creation",
        "to": "New API for context creation"
      }
    },
    {
      "event": "renamed",
      "id": 3632658228,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzYzMjY1ODIyOA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3632658228",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T10:18:15Z",
      "rename": {
        "from": "New API for context creation",
        "to": "New context API"
      }
    },
    {
      "event": "commented",
      "id": 670531851,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDUzMTg1MQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/670531851",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T14:01:29Z",
      "updated_at": "2020-08-07T14:01:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Whatever approach is used to get automatic rerandomization upon signing will require an API with mutable objects, and the _sign function(s) currently take an immutable context object, for which it would be pretty surprising to see modifications (and the corresponding need for synchronization).\n\nOne possibility is separating the signing context entirely as suggested above, and then make (all?) interactions with such a signing context rerandomize it.\n\nA bit less invasive may be to just have equivalent _sign_and_rerandomize() functions that take a non-const context object, and does the equivalent of signing + separate randomize calls (but with a possibly much cheaper/merged operation). As new functions would be required to deal with a separate context type anyway, this may be strictly less work.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-670531851",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "commented",
      "id": 670555812,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDU1NTgxMg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/670555812",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T14:51:48Z",
      "updated_at": "2020-08-07T14:51:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "> A bit less invasive may be to just have equivalent _sign_and_rerandomize() functions that take a non-const context object, and does the equivalent of signing + separate randomize calls (but with a possibly much cheaper/merged operation). As new functions would be required to deal with a separate context type anyway, this may be strictly less work.\r\n\r\nThat sounds pretty reasonable.\r\n",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-670555812",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "commented",
      "id": 670632456,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDYzMjQ1Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/670632456",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T17:44:01Z",
      "updated_at": "2020-08-07T17:44:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Do we want to split signing/verification contexts entirely?\r\n\r\nOne problem for that is functions which need both kinds of context (I don't think there are in secp256k1, but IIRC there are in secp256k1-zkp).\r\n\r\nI *think* I'd like to see long term the big tables just becoming static everywhere even if it means making the shared library 1.5MB. And then the contexts could become mutable and non-shared.\r\n\r\n(doing that would even save memory on systems, even though it'll make the SO bigger on disk).\r\n\r\nRandomization and scratch space really have made a case for mutable contexts that didn't exist when these decisions were originally made.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-670632456",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T18:21:47Z",
      "updated_at": "2020-08-07T18:21:47Z",
      "source": {
        "issue": {
          "id": 363639080,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE4MDI1Nzg1",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/558",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/558/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/558/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/558/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/558",
          "number": 558,
          "state": "closed",
          "state_reason": null,
          "title": " Add schnorrsig module which implements BIP-340 compliant signatures",
          "body": "This PR implements signing, verification and batch verification as described in [BIP-340](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki) in an experimental module named `schnorrsig`. It includes the test vectors and a benchmarking tool. \r\nThis PR also adds a module `extrakeys` that allows [BIP-341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)-style key tweaking.\r\n\r\n(Adding ChaCha20 as a CSPRNG and batch verification was moved to PR #760).\r\n\r\nIn order to enable the module run `./configure` with `--enable-experimental --enable-module-schnorrsig`.\r\n\r\nBased on apoelstra's work.\r\n",
          "user": {
            "login": "jonasnick",
            "id": 2582071,
            "node_id": "MDQ6VXNlcjI1ODIwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasnick",
            "html_url": "https://github.com/jonasnick",
            "followers_url": "https://api.github.com/users/jonasnick/followers",
            "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasnick/orgs",
            "repos_url": "https://api.github.com/users/jonasnick/repos",
            "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasnick/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 105,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/558",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/558",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/558.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/558.patch"
          },
          "closed_at": "2020-09-11T19:26:27Z",
          "created_at": "2018-09-25T15:33:00Z",
          "updated_at": "2020-09-19T13:54:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 672387373,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjM4NzM3Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/672387373",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T00:12:27Z",
      "updated_at": "2020-08-12T00:12:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I wish the nonce function it was using naturally gave a somewhat larger output. :-/ even just a couple bits to drive a random scaling factor and/or pick one of two random updates to the blinder.\r\n\r\nWe can use the squareness of the y coordinate of R, we throw that bit away anyway. And @sipa pointed out that any of the tie-breakers (square, even, high) works as a bit of entropy, no matter what we actually use as a tie-breaker in the scheme.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-672387373",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "mentioned",
      "id": 3645467896,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY0NTQ2Nzg5Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3645467896",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T00:12:27Z"
    },
    {
      "event": "subscribed",
      "id": 3645467901,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NDU0Njc5MDE=",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/3645467901",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T00:12:27Z"
    },
    {
      "event": "commented",
      "id": 672448382,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjQ0ODM4Mg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/672448382",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T01:52:49Z",
      "updated_at": "2020-08-12T01:52:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "oh that is super nice! one bit is what I really wanted, and one bit is what you provided.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-672448382",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "commented",
      "id": 672458284,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjQ1ODI4NA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/672458284",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T02:01:59Z",
      "updated_at": "2020-08-12T02:01:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "It's also provably does not impact the security of the signature scheme itself: there is no security risk from leaking the bit to an attacker, as it is at worst equivalent to a variant of the scheme that includes the R sign explicitly.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-672458284",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "commented",
      "id": 672784746,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mjc4NDc0Ng==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/672784746",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T10:15:17Z",
      "updated_at": "2020-08-12T10:15:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "> oh that is super nice! one bit is what I really wanted, and one bit is what you provided.\r\n\r\nI feel a bit relieved that we don't need to change the nonce function.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-672784746",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "commented",
      "id": 673939503,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzkzOTUwMw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/673939503",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-14T07:46:14Z",
      "updated_at": "2020-08-14T07:46:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "I realized that the specifics in the suggestion I gave above are a little broken, it shouldn't just add one constant or another constant, it should add one constant or another constant then double. Otherwise different permutations of the same number of each choice would end up in the same state.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-673939503",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T09:21:58Z",
      "updated_at": "2020-08-18T09:21:58Z",
      "source": {
        "issue": {
          "id": 679342611,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDY4MTM1MjQx",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/799",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/799/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/799/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/799/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/799",
          "number": 799,
          "state": "closed",
          "state_reason": null,
          "title": "Add fallback LE/BE for architectures with known endianness + SHA256 selftest",
          "body": "These are all the architecture macros I could find with known endianness. Use those as a fallback when __BYTE_ORDER__ isn't available.\r\n\r\nSee https://github.com/bitcoin-core/secp256k1/pull/787#issuecomment-673764652\r\n\r\nIt also adds a SHA256 selftest, so that improperly overriding the endianness detection will be detected at runtime.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/799",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/799",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/799.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/799.patch"
          },
          "closed_at": "2020-09-09T13:57:59Z",
          "created_at": "2020-08-14T18:51:51Z",
          "updated_at": "2020-09-19T13:57:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 675372163,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTM3MjE2Mw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/675372163",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T09:32:38Z",
      "updated_at": "2020-08-18T09:32:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "Another issue with the current context API is that we can't have a user-provided error callback when the context is created. Currently we hack around this by calling the default callback instead (https://github.com/bitcoin-core/secp256k1/blob/master/src/secp256k1.c#L149) and we give the user the ability to override the default callback at compile time. \r\n\r\nAll of this is not really nice. The runtime callback setting is not very useful because it does not work everywhere and the compile-time callback setting can be cumbersome.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-675372163",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "comment_deleted",
      "id": 4805901987,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQ0ODA1OTAxOTg3",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4805901987",
      "actor": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-27T13:35:47Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-06T09:27:14Z",
      "updated_at": "2021-07-06T09:27:14Z",
      "source": {
        "issue": {
          "id": 930546714,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Njc4MjE4NzY2",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/956",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/956/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/956/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/956/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/956",
          "number": 956,
          "state": "closed",
          "state_reason": null,
          "title": "Replace ecmult_context with a generated static array.",
          "body": "Replace ecmult_context with a static array.",
          "user": {
            "login": "roconnor-blockstream",
            "id": 21371712,
            "node_id": "MDQ6VXNlcjIxMzcxNzEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/21371712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/roconnor-blockstream",
            "html_url": "https://github.com/roconnor-blockstream",
            "followers_url": "https://api.github.com/users/roconnor-blockstream/followers",
            "following_url": "https://api.github.com/users/roconnor-blockstream/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/roconnor-blockstream/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/roconnor-blockstream/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/roconnor-blockstream/subscriptions",
            "organizations_url": "https://api.github.com/users/roconnor-blockstream/orgs",
            "repos_url": "https://api.github.com/users/roconnor-blockstream/repos",
            "events_url": "https://api.github.com/users/roconnor-blockstream/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/roconnor-blockstream/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/956",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/956",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/956.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/956.patch"
          },
          "closed_at": "2021-08-25T18:58:03Z",
          "created_at": "2021-06-25T22:47:26Z",
          "updated_at": "2021-08-26T10:34:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-08T13:37:43Z",
      "updated_at": "2021-10-08T13:37:43Z",
      "source": {
        "issue": {
          "id": 1021107982,
          "node_id": "PR_kwDOAP4Jqs4s8eHX",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/988",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/988/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/988/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/988/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/988",
          "number": 988,
          "state": "closed",
          "state_reason": null,
          "title": "Make signing table fully static",
          "body": "This resolves #893,  resolves #692 (and also resolves bitcoin/bitcoin#22854).\r\n\r\n- [x] Extract table generation to separate function in separate file (to be used by generation script and exhaustive tests)\r\n- [x] Tidy up \r\n  - [x] Remove code that deals with non-static tables\r\n  - [x] Make functions that need ecmult_gen not depend on signing context\r\n  - [x] Rename stuff to make it fit the new structure and consistent with how we hande verification tables (#956)\r\n- [x] Fix exhaustive tests\r\n  - [x] Make table generation function take generator as input\r\n  - [x] Overwrite the static tables with a table with custom generator in exhaustive tests\r\n- [x] Overhaul script that generates table files\r\n  - [x] Make table generation function take PREC_BITS as input (I have some code already, just not yet in this branch) \r\n  - [x] Change generation script to generate three tables (for all three values of ECMULT_GEN_PREC_BITS) \r\n- [x] Ship pre-built tables\r\n  - [x] Add pregenerated table file to repo\r\n  - [x] Remove generation of table file from build process (like in #956)\r\n  - [x] Remove left-over stuff (e.g., detecting a compiler running on the build machine) from build system\r\n- [x] Final cleanups (copyright headers, commit, messages, etc.)\r\n- [ ] (separate PR:) Make sure link-time optimization remove corresponding static tables (and code) when no signing/verifcation function is called\r\n- [ ] (separate PR:) Compile precomputation as a separate object file and link it (https://github.com/bitcoin-core/secp256k1/pull/988#issuecomment-977813538)\r\n- [ ] (separate PR:) Document the backwards-compatible API changes made in this PR and in #956. \r\n  - [ ] Maybe deprecate the static context\r\n",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/988",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/988",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/988.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/988.patch"
          },
          "closed_at": "2021-12-15T10:07:02Z",
          "created_at": "2021-10-08T13:37:31Z",
          "updated_at": "2021-12-15T10:07:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 959514243,
      "node_id": "IC_kwDOAP4Jqs45MQaD",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/959514243",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T15:48:12Z",
      "updated_at": "2021-11-03T16:00:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "Summarizing a long discussion on this from IRC ([The discussion](https://gist.github.com/elichai/19f23049108b4c66624c032c0e13facb), I edited out anything that wasn't related, I hope I didn't accidentally modified the discussion in any way)\r\nAfter #988 there will be 2 kinds of contexts left, and we might add another one with #967:\r\n1. illegal arguments and error callbacks\r\n2. Randomizing the signing operations for better side-channel resistance\r\n3. Determining CPU features in runtime for #967.\r\n\r\nSome ideas raised on how to handle these so we can remove the `context` argument from most of the public API:\r\n\r\n1. These can probably be removed since we have #595, but this might complicate the tests that check these callbacks.\r\n2. A. Should we make this context mutable (or add a `sign_with_randomize`) so that we can add randomization to it with every sign operation (harvest a single bit of entropy each time).\r\n    B. Should this context be `thread_local`(C11 and can complicate embedded) or implement something using atomics(C11) (We could for example, make a pool of contexts and mark them as currently used/unused and spinlock if they're all used)\r\n    C. Add a flag that says if it can assume thread safety or not, if yes re-randomize it with every operation, if not don't re-randomize it.\r\n3. Note that this will need to be done only once, and also dynamic dispatch might not be proven performant to do at the field operations level (as it will prohibit inlining) so we might need to do it on the EC operations level or even the API level.\r\n    A. We could use a `call_once`(C11).\r\n    B. We could use compiler extensions like `__attribute__((constructor))`([link](https://gcc.gnu.org/onlinedocs/gcc-4.7.0/gcc/Function-Attributes.html))\r\n    C. We could use binary specific extensions like `.init_array` in ELF `.CRT$XIB` in EXE, and `__DATA,__mod_init_func` in MCH-O.\r\n    D. We could use architecture specific operations, for example in x86 movs to/from regular registers are always atomic, so we can call `cpuid` from inline assembly and write the result into a static variable from the assembly, that way we don't violate C data race rules.\r\n    E. Compile the library multiple times with different flags and somehow get the linker to use the right one (@gmaxwell said that's how libspeex works on debian/ubuntu)\r\n    \r\n    \r\nMy own opinions:\r\n2 -  we should probably do A and not B because users of this library can probably implement B more easily as they assume more things on their environment (single threaded, an OS etc.),\r\n3 - we should really try to avoid requiring the user to pass a context everywhere just for the cpuid results.",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-959514243",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "mentioned",
      "id": 5562972137,
      "node_id": "MEE_lADOAP4Jqs4nzISnzwAAAAFLlDfp",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5562972137",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T15:48:13Z"
    },
    {
      "event": "subscribed",
      "id": 5562972144,
      "node_id": "SE_lADOAP4Jqs4nzISnzwAAAAFLlDfw",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5562972144",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T15:48:13Z"
    },
    {
      "event": "commented",
      "id": 964271127,
      "node_id": "IC_kwDOAP4Jqs45eZwX",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/964271127",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T15:40:57Z",
      "updated_at": "2021-11-09T15:40:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Another purpose of the global context is to run the self-tests (which are currently not run for the static `no_precomp` context...)",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-964271127",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-26T08:47:32Z",
      "updated_at": "2021-11-26T08:47:32Z",
      "source": {
        "issue": {
          "id": 1063918098,
          "node_id": "I_kwDOAVzY0c4_ahoS",
          "url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/343",
          "repository_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1",
          "labels_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/343/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/343/comments",
          "events_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/343/events",
          "html_url": "https://github.com/rust-bitcoin/rust-secp256k1/issues/343",
          "number": 343,
          "state": "open",
          "state_reason": null,
          "title": "Reducing context arguments in taproot-related functions",
          "body": "Introduction of Taproot in rust-bitcoin has polluted a lot of existing APIs with a need to provide Secp context objects all around, mostly because of key tweaking. Upstream to rust-bitcoin it becomes even more painful; everything gets contaminated with these context generic parameters.\n\nI am willing to work on a PR here to get rid of these context parameters wherever possible - first for all key tweaking functions and xonlypubley from seckey generation. But I do not understand the logic where we need verify, sign or static context. Where I get get an insight on this matter?",
          "user": {
            "login": "dr-orlovsky",
            "id": 372034,
            "node_id": "MDQ6VXNlcjM3MjAzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/372034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dr-orlovsky",
            "html_url": "https://github.com/dr-orlovsky",
            "followers_url": "https://api.github.com/users/dr-orlovsky/followers",
            "following_url": "https://api.github.com/users/dr-orlovsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dr-orlovsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dr-orlovsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dr-orlovsky/subscriptions",
            "organizations_url": "https://api.github.com/users/dr-orlovsky/orgs",
            "repos_url": "https://api.github.com/users/dr-orlovsky/repos",
            "events_url": "https://api.github.com/users/dr-orlovsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dr-orlovsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 10,
          "created_at": "2021-11-25T21:03:50Z",
          "updated_at": "2022-01-13T18:17:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-11T21:16:29Z",
      "updated_at": "2021-12-11T21:16:29Z",
      "source": {
        "issue": {
          "id": 891273233,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ0MTY1OTkx",
          "url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/131",
          "repository_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp",
          "labels_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/131/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/131/comments",
          "events_url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/issues/131/events",
          "html_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/131",
          "number": 131,
          "state": "closed",
          "state_reason": null,
          "title": "Replace MuSig(1) module with MuSig2",
          "body": "The main commit comprises `905 insertions(+), 1253 deletions(-)`. The diff isn't as small as I had hoped, but that's mostly because it was possible to simplify the API quite substantially which required rewriting large parts. Sorry, almost all of the changes are in one big commit which makes the diff very hard to read. Perhaps best to re-review most parts from scratch.\r\n\r\nA few key changes:\r\n\r\n- Obviously no commitment round. No big session struct and no `verifier` sessions. No `signer` struct.\r\n- There's a new `secnonce` struct that is the output of musig_nonce_gen and derived from a uniformly random session_id32. The derivation can be strengthened by adding whatever session parameters (combined_pk, msg) are available. The nonce function is my ad-hoc construction that allows for these optional inputs. Please have a look at that.\r\n- The secnonce is made invalid after being used in partial_sign.\r\n- Adaptor signatures basically work as before, according to https://github.com/ElementsProject/scriptless-scripts/pull/24 (with the exception that they operate on aggregate instead of partial sigs)\r\n- To avoid making this PR overly complex I did not consider how this implementation interacts with nested-MuSig, sign-to-contract, and antiklepto.\r\n- Testing should be close to complete. There's no reachable line or branch that isn't exercised by the tests.\r\n- [x] ~In the current implementation when a signer sends an invalid nonce (i.e. some garbage that can't be mapped to a group element), it is ignored when combining nonces. Only after receiving the signers partial signature and running `partial_sig_verify` will we notice that the signer misbehaved. The reason for this is that 1) this makes the API simpler and 2) malicious peers don't gain any additional powers because they can always interrupt the protocol by refusing to sign. However, this is up for discussion.~ EDIT: this is not the case anymore since invalid nonces are rejected when they're parsed.\r\n- [x] ~For every partial signature we verify we have to parse the pubnonce (two compressed points), despite having parsed it in `process_nonces` already. This is not great. `process_nonces` could optionally output the array of parsed pubnonces.~ EDIT: fixed by having a dedicated type for nonces.\r\n- [x] ~I left `src/modules/musig/musig.md` unchanged for now. Perhaps we should merge it with the `musig-spec`~ EDIT: musig.md is updated\r\n- [x] partial verification should use multiexp to compute `R1 + b*R2 + c*P`, but this can be done in a separate PR\r\n- [x] renaming wishlist\r\n    - pre_session -> keyagg_cache (because there is no session anymore)\r\n    - pubkey_combine, nonce_combine, partial_sig_combine -> pubkey_agg, nonce_agg, partial_sig_agg (shorter, matches terminology in musig2)\r\n    - musig_session_init -> musig_start (shorter, simpler) or [musig_generate_nonce](https://github.com/ElementsProject/secp256k1-zkp/pull/131#discussion_r654190890) or musig_prepare\r\n    - musig_partial_signature to musig_partial_sig (shorter)\r\n- [x] perhaps remove pubnonces and n_pubnonces argument from process_nonces (and then also add a opaque type for the combined nonce?)\r\n- [x] write the `combined_pubkey` into the `pre_session` struct (as suggested [below](https://github.com/ElementsProject/secp256k1-zkp/pull/131#issuecomment-866904975): then 1) session_init and process_nonces don't need a combined_pk argument (and there can't be mix up between tweaked and untweaked keys) and 2) pubkey_tweak doesn't need an input_pubkey and the output_pubkey can be written directly into the pre_session (reducing frustration such as Replace MuSig(1) module with MuSig2 #131 (comment))\r\n- [x] perhaps allow adapting both partial sigs (`partial_sig` struct) and aggregate partial sigs (64 raw bytes) as suggested [below](https://github.com/ElementsProject/secp256k1-zkp/pull/131#issuecomment-867281531).\r\n\r\n\r\nBased on #120.\r\n\r\n",
          "user": {
            "login": "jonasnick",
            "id": 2582071,
            "node_id": "MDQ6VXNlcjI1ODIwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasnick",
            "html_url": "https://github.com/jonasnick",
            "followers_url": "https://api.github.com/users/jonasnick/followers",
            "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasnick/orgs",
            "repos_url": "https://api.github.com/users/jonasnick/repos",
            "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasnick/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 62,
          "pull_request": {
            "url": "https://api.github.com/repos/BlockstreamResearch/secp256k1-zkp/pulls/131",
            "html_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/131",
            "diff_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/131.diff",
            "patch_url": "https://github.com/BlockstreamResearch/secp256k1-zkp/pull/131.patch"
          },
          "closed_at": "2021-12-20T14:14:58Z",
          "created_at": "2021-05-13T18:34:52Z",
          "updated_at": "2022-02-18T08:18:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-01T09:03:22Z",
      "updated_at": "2022-02-01T09:03:22Z",
      "source": {
        "issue": {
          "id": 1116207801,
          "node_id": "I_kwDOAVzY0c5Ch_q5",
          "url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/388",
          "repository_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1",
          "labels_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/388/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/388/comments",
          "events_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/388/events",
          "html_url": "https://github.com/rust-bitcoin/rust-secp256k1/issues/388",
          "number": 388,
          "state": "open",
          "state_reason": null,
          "title": "Context randomization tracking issue",
          "body": "Consolidating discussion from #385 #386 #387. Tobin is proposing to re-randomize contexts, not just the global one, when they are created -- though naturally only if the `rand` feature is enabled. Our current situation is kinda weird -- for users of global contexts, we require they \"opt out\" of rerandomization by choosing the `global-context-less-secure` feature vs the `global-context` flag, while ordinary users must \"opt in\" by creating a context then explicitly calling `randomize()` on it.\r\n\r\nA bit of context (hah):\r\n* re-randomization is not free: it takes about as long as a signing operation (around 50us on a desktop computer)\r\n* on the other hand, context generation is extremely expensive (multiple milliseconds on a desktop computer) so this is fine during context creation; but on the third hand, now that we are moving toward pre-computing all the tables, context creation will be nearly free, so the re-randomization would then be the bulk of the \"create context\" operation\r\n* re-randomization of verification contexts is a no-op. This discussion is only about signing contexts\r\n\r\nHere is my proposal:\r\n1. We remove the `global-context-less-secure` feature; `global-context` enables the global context, and we rerandomize it on first use if `rand` is also enabled.\r\n2. Similarly we randomize **all** signing contexts on creation, if `rand` is enabled\r\n3. We also change `sign()` and `sign_schnorr` to rerandomize the context after each signing operation. We add a `sign_no_rerandomize` method to opt out of this\r\n   1. This would nearly double signing time, **although** sipa points out that there is a theoretical way, with help from upstream, we could make the rerandomization 99%+ faster, by essentially only doing one bit of re-randomization per signature\r\n   2. This would also force the signing API to take a `&mut` pointer to the context object, which really sucks.\r\n3. We leave the `rerandomize()` methods in place but document that users have basically no reason to call them manually.\r\n\r\nAlternate proposals:\r\n* Leave the `sign` methods alone but add `sign_randomize` ones which also do the re-randomization\r\n* Embed a mutex in our `Context` objects so that re-randomization can be done with normal non-mutable references. (May be OK with \"fast re-randomization\", almost certainly not with full re-randomization, which would basically cause parallel signing operations to be force-serialized.)\r\n\r\ncc @TheBlueMatt @tcharding\r\n\r\nSee also https://github.com/bitcoin-core/secp256k1/issues/881 (which is not the \"one-bit rerandomization\" idea, but is similar and has a similar effect).\r\n\r\nSee also https://github.com/bitcoin-core/secp256k1/pull/1058 which will affect upstream's blinding logic.",
          "user": {
            "login": "apoelstra",
            "id": 1351933,
            "node_id": "MDQ6VXNlcjEzNTE5MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apoelstra",
            "html_url": "https://github.com/apoelstra",
            "followers_url": "https://api.github.com/users/apoelstra/followers",
            "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
            "organizations_url": "https://api.github.com/users/apoelstra/orgs",
            "repos_url": "https://api.github.com/users/apoelstra/repos",
            "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/apoelstra/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 30,
          "created_at": "2022-01-27T13:21:26Z",
          "updated_at": "2022-08-05T07:48:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T12:14:20Z",
      "updated_at": "2022-02-02T12:14:20Z",
      "source": {
        "issue": {
          "id": 1106143605,
          "node_id": "I_kwDOAP4Jqs5B7ml1",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1065",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1065/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1065/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1065/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1065",
          "number": 1065,
          "state": "open",
          "state_reason": null,
          "title": "Further changes after making tables static",
          "body": "More things to improve after #988:\r\n\r\n- [x] Compile precomputation as a separate object file and link it (solved by #1042)\r\n- [x] Speed up `secp256k1_ecmult_gen_context_build` at context creation. It currently computes fixed values which could be made static (open PR: https://github.com/bitcoin-core/secp256k1/pull/1120)\r\n- [ ] Document (or set by default) build options to remove unused static tables (and code) when no signing/verification function is called (something like `--disable-shared CFLAGS=\"-fdata-sections -ffunction-sections -O2 -g\" LDFLAGS=\"-Wl,--gc-sections\"`)\r\n- [x] Document the backwards-compatible API changes made in #988 and in #956: All contexts except the `no_precomp` context are now effectively signing contexts. The `no_precomp` context is effectively a verification context., and name is misleading as no context uses dynamic precompuation now. The reason why `no_precomp` is different is that it's impossible to re-randomize it.\r\n- [x] Decide what to do with the `no_precomp` context: Possibilities include: renaming it, deprecating it (its main user rust-secp256k1 won't like this), and/or promote it a full signing context, maybe with a verbose name such as \"global-context-less-secure\" in the spirit of what rust-secp256k1 is doing.   \r\n   ",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 165020207,
              "node_id": "MDU6TGFiZWwxNjUwMjAyMDc=",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/documentation",
              "name": "documentation",
              "description": "",
              "color": "C5DEF5",
              "default": true
            },
            {
              "id": 4975362431,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI4Bfw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/build",
              "name": "build",
              "description": "",
              "color": "2F66C4",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/1",
            "html_url": "https://github.com/bitcoin-core/secp256k1/milestone/1",
            "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/milestones/1/labels",
            "id": 1276306,
            "node_id": "MDk6TWlsZXN0b25lMTI3NjMwNg==",
            "number": 1,
            "state": "open",
            "title": "stable release (1.0.0-rc.1)",
            "description": "Motivation: libsecp is already widely used today, but often in a terribly outdated version. It's likely that a release process would help with that. Moreover, it simplifies using libsecp which may prevent developers from using less well tested alternatives. Lastly, without releases it's difficult to update the library in an organized fashion and communicate these updates.\r\n\r\nRelease Goals:\r\n\r\n- Stabilize API and documentation for functionality that exist today.\r\n- Fix a few known bugs.\r\n- Make ECDH non-experimental.\r\n\r\nThis milestone can be discussed in issue https://github.com/bitcoin-core/secp256k1/issues/286.",
            "creator": {
              "login": "gmaxwell",
              "id": 858454,
              "node_id": "MDQ6VXNlcjg1ODQ1NA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/gmaxwell",
              "html_url": "https://github.com/gmaxwell",
              "followers_url": "https://api.github.com/users/gmaxwell/followers",
              "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
              "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
              "repos_url": "https://api.github.com/users/gmaxwell/repos",
              "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 12,
            "closed_issues": 26,
            "created_at": "2015-08-27T18:21:31Z",
            "updated_at": "2023-04-10T15:36:41Z"
          },
          "locked": false,
          "comments": 2,
          "created_at": "2022-01-17T18:13:15Z",
          "updated_at": "2023-03-08T22:27:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T15:41:39Z",
      "updated_at": "2022-07-11T15:41:39Z",
      "source": {
        "issue": {
          "id": 1077611377,
          "node_id": "I_kwDOAVzY0c5AOwtx",
          "url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/346",
          "repository_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1",
          "labels_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/346/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/346/comments",
          "events_url": "https://api.github.com/repos/rust-bitcoin/rust-secp256k1/issues/346/events",
          "html_url": "https://github.com/rust-bitcoin/rust-secp256k1/issues/346",
          "number": 346,
          "state": "open",
          "state_reason": null,
          "title": "Wasm, Contexts, and Entropy",
          "body": "> does signing context generate entropy on creation? testing now but this may be a big issue for using verification from a WASM module with no entropy because the get random number methods may panic.\r\n\r\nFor manually generated contexts, this happens only if you randomize them explicitly, see https://github.com/rust-bitcoin/rust-secp256k1/blob/48683d87c85ac28d5f2490c828979e7d8b9b874c/src/lib.rs#L354-L380. \r\n\r\nFor the global context, it depends on the enabled feature: The `global-context` feature randomizes the context automatically and depends on `rand`, and  the `global-context-less-secure` feature gives you a context that is not randomized (and can't be randomized).\r\n\r\n_Originally posted by @real-or-random in https://github.com/rust-bitcoin/rust-secp256k1/pull/342#issuecomment-991615743_\r\n\r\n\r\nWe should probably think through what it means to use any of these contexts in a WASM context! Especially in wasm32-unknown-unknown you have no syscalls or way of getting entropy, so this could be problematic.\r\n\r\nFully isolated WASM is really great to provide first-class support for for a myriad of reasons, but we'd need to think through carefully exactly what we do. Maybe we can detect if we're in wasm and disable some targets if we don't have symbols for getting entropy linked? Not sure :)",
          "user": {
            "login": "JeremyRubin",
            "id": 886523,
            "node_id": "MDQ6VXNlcjg4NjUyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeremyRubin",
            "html_url": "https://github.com/JeremyRubin",
            "followers_url": "https://api.github.com/users/JeremyRubin/followers",
            "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
            "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
            "repos_url": "https://api.github.com/users/JeremyRubin/repos",
            "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 78,
          "created_at": "2021-12-11T18:24:21Z",
          "updated_at": "2022-10-07T08:47:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1195087872,
      "node_id": "IC_kwDOAP4Jqs5HO5gA",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1195087872",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T07:02:56Z",
      "updated_at": "2022-07-26T07:02:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Shower thought that I don't want to lose: If we'll have a more mutable context, then it might make sense to store a callback to a PRG in the context (instead of asking the user for randomness every time). ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/780#issuecomment-1195087872",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/780"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-14T15:16:49Z",
      "updated_at": "2022-09-14T15:16:49Z",
      "source": {
        "issue": {
          "id": 1373174671,
          "node_id": "I_kwDOAP4Jqs5R2PuP",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1141",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1141/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1141/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1141/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1141",
          "number": 1141,
          "state": "open",
          "state_reason": null,
          "title": "Protecting ecmult_gen against side-channel attacks: the big picture",
          "body": "We use `ecmult_gen` to compute point multiplications $nG$ with the generator. This is used for computing public keys and for computing public nonces generation in ECDSA and Schnorr signatures. One of our security goals here is to protect against side-channel leakage.\r\n\r\n### Attacker model\r\n\r\nIn the following, I assume an attacker that is able to observe the computation of $nG$ for a fixed $n$ many many times, say $q >> 1$ times. We assume that the observation of a handful of operations does not help the attacker. (If those observations leak too much information, we're lost anyway.) The attacker does not have further capabilities, e.g., it cannot read or write our memory directly.\r\n\r\n### Current situation\r\n\r\nBesides having constant-time code, we currently use these secondary techniques as an additional defense against physical side channel attacks in `ecmult_gen` when computing $nG$.\r\n\r\n - Synthetic nonces: This is only possible when computing nonces because this randomizes $n$ itself.\r\n    Even if all other inputs to signing are the same, we'll get additional fresh randomness (or a counter) from the caller every time, and use a difference secret nonce $n$ in every invocation of a signing function. Here, our attacker won't learn anything.\r\n - Random scalar blinding: We compute $nG$ as $(n-b)G + bG$ for a random scalar $b$, where $b$ and $bG$ are stored in the context upon context randomization (see https://github.com/bitcoin-core/secp256k1/blob/55f8bc99dce8846e0da99b92e52353c8cf893287/src/ecmult_gen_impl.h)\r\n    This means that an attacker that observes the computation $q$ times will observe a single computation of $bG$ and $q$ computations of $(n-b)G$. Since the single observation does not help the attacker, the attacker will at most learn $n-b$, which alone is independent of $n$.\r\n    (Here we need to assume that the attacker can't learn $n$ from observing the scalar addition $n-b$ but again, we're anyway lost if the attacker can learn something meaningful from scalar operations because we'll always need to do scalar operations involving the secret key. We also need to assume that the attacker does not compromise us *at any point* and learns $b$, or that the attacker has chosen the seed to generate $b$.)\r\n     - Projective blinding: To randomize the projection (gej to ge), we also randomize the z-coordinate of $bG$:\r\n     https://github.com/bitcoin-core/secp256k1/blob/55f8bc99dce8846e0da99b92e52353c8cf893287/src/ecmult_gen_impl.h#L114-L116\r\n     But as $bG$ itself, this is only updated upon context randomization.\r\n - (NUMS blinding in the precomputation: This is only defense in depth to avoid exceptional cases in the addition law, and it's not relevant to this discussion.)\r\n\r\nAs a simple conclusion, synthetic nonces are a stronger defense against the kind of attackers considered in this issue. However, we currently use them only for Schnorr signatures but not for ECDSA.\r\n\r\nIn light of the above, I list some ideas in the following that we could look into. I'll first focus techniques that randomize $n$ itself. I'll indicate what I think in the headings.\r\n\r\n### Suggestions (ignoring context rerandomization)\r\n\r\n#### Introduce synthetic nonces for ECDSA signing (I want this) \r\nThis involves a change to the nonce generation function, and it would be a good idea to switch to a function similar to the one used for Schnorr signatures (see also #757). Synthetic nonces will protect the nonce computation sufficiently. This is a rather simple change and it avoids all the issues with writeable contexts. I think this is almost a no-brainer.\r\n\r\n#### Randomizing $n$ even if it's a signing key (I think I want this)\r\nHowever, synthetic nonces only protect the nonce computation. But what if $n$ is a signing key? I wrote above that randomizing $n$ is possible. That's not entirely true. With randomness (or a counter) available, we could derive a \"one-time\" $b$ and still compute $nG$ as $(n-b)G + bG$. The obvious drawback is that this requires two `ecmult_gen` calls. This sounds bad but I tend to think some of our users may want to pay that additional computation for additional security.  Do you think that's reasonable idea?\r\n\r\n### Suggestions for context rerandomization\r\n\r\nMoreover, there have been thoughts and discussions here (https://github.com/bitcoin-core/secp256k1/issues/780) and elsewhere (https://github.com/rust-bitcoin/rust-secp256k1/issues/388) about rerandomizing the context after every signature. \r\n\r\nAgainst attackers as sketched above, rerandomization won't help. (As described above, the `ecmult_gen` is protected even if $b$ stays constant). But if we make the attacker more powerful, and assume it can learn something from observing the scalar addition $n-b$ over and over, then rerandomizing the context (and thus $b$) is a good idea.\r\n\r\n#### Recommend  context rerandomization at least between any two computations that derive public keys from secret keys (I want this)\r\n As outlined above, those computations are harder to protect because we can't cheaply randomize $n$ as in synthetic nonces.\r\n\r\n#### Recommend context rerandomization after every signing operation (Not sure if I want this)\r\nIf my analysis here is correct, then there's no reason to do this. Synthetic nonces provide the same protection and are simpler. (But on the other hand, defense in depth is a thing...)\r\n\r\n#### Automatic rerandomization\r\nOnce we're willing to do larger API changes, we should really implement some form of automatic rerandomization (#780). But I think this further down the road.\r\n\r\n",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 0,
          "created_at": "2022-09-14T15:16:49Z",
          "updated_at": "2022-09-14T15:16:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T23:01:56Z",
      "updated_at": "2023-01-18T23:01:56Z",
      "source": {
        "issue": {
          "id": 1482243601,
          "node_id": "PR_kwDOAP4Jqs5EqBUD",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1170",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1170/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1170/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1170/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1170",
          "number": 1170,
          "state": "closed",
          "state_reason": null,
          "title": "contexts: Forbid destroying, cloning and randomizing the static context ",
          "body": "As discussed in #1126.\r\n\r\nFor randomization, this has a history. Initially, this threw the illegal callback but then we changed it to be a no-op on non-signing contexts: https://github.com/bitcoin-core/secp256k1/commit/6198375218b8132f016b701ef049fb295ca28c95 But this was with (non-static) none/verification contexts in mind, not with the static context. If we anyway forbid cloning the static context, you should never a way to randomize a copy of the static context. (You need a copy because the static context itself is not writable. But you cannot obtain a copy except when using memcpy etc.)\r\n\r\n",
          "user": {
            "login": "real-or-random",
            "id": 1071625,
            "node_id": "MDQ6VXNlcjEwNzE2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/real-or-random",
            "html_url": "https://github.com/real-or-random",
            "followers_url": "https://api.github.com/users/real-or-random/followers",
            "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
            "organizations_url": "https://api.github.com/users/real-or-random/orgs",
            "repos_url": "https://api.github.com/users/real-or-random/repos",
            "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/real-or-random/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1170",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1170",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1170.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1170.patch"
          },
          "closed_at": "2023-01-19T18:04:26Z",
          "created_at": "2022-12-07T15:52:10Z",
          "updated_at": "2023-01-19T18:04:27Z"
        },
        "type": "issue"
      }
    }
  ]
}