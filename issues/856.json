{
  "type": "issue",
  "issue": {
    "id": 757456691,
    "node_id": "MDU6SXNzdWU3NTc0NTY2OTE=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/856",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/856/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/856/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/856/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/856",
    "number": 856,
    "state": "closed",
    "state_reason": "completed",
    "title": "Add doc/release-process.md",
    "body": "On our path towards a 1.0 release it would help to start with a 0.1 release soon. Ideally, we'd do this in a systematic way and first discuss how we want the process to look like initially.\r\n\r\nIt would make sense for the process to be similar to Bitcoin Core's. Here are some suggestions, based on my understanding of [bitcoin-maintainer-tools/make-tag.py](https://github.com/bitcoin-core/bitcoin-maintainer-tools/blob/a9eaddb7397f149121a4225b4096b04918d20362/make-tag.py) and [bitcoin/doc/release-process.md](https://github.com/bitcoin/bitcoin/blob/8f7b93047581c67f2133cdb8c7845471de66c30f/doc/release-process.md).\r\n\r\nWe would copy the start of Core's [configure.ac](https://github.com/bitcoin/bitcoin/blob/dca80ffb45fcc8e6eedb6dc481d500dedab4248b/configure.ac#L10) into ours:\r\n```\r\ndefine(_CLIENT_VERSION_MAJOR, 0)\r\ndefine(_CLIENT_VERSION_MINOR, 99)\r\ndefine(_CLIENT_VERSION_BUILD, 0)\r\ndefine(_CLIENT_VERSION_RC, 0)\r\ndefine(_CLIENT_VERSION_IS_RELEASE, false)\r\n```\r\nand replace our `AC_INIT` with\r\n```\r\nAC_INIT([libsecp256k1],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_BUILD)m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC))\r\n```\r\nWe can print the version at the end of the configure script and a warning if `RELEASE` is not true.\r\n\r\n\r\nNow in order to create a release candidate we\r\n\r\n1. Start [writing release notes](https://github.com/bitcoin/bitcoin/blob/master/doc/release-process.md#write-the-release-notes)\r\n2. Create a corresponding release branch\r\n    1. Create a commit to fix the `VERSIONS` in configure.ac (including `RC=1`)\r\n    2. Tag the commit with a version of make-tag.py that's adapted to libsecp\r\n    3. Create github release\r\n3. To create a new release candidate repeat steps 2.i through 2.iii\r\n4. Once we're happy with the release candidate\r\n    1. Archive the release notes for the new version to doc/release-notes/ (branch master and branch of the release)\r\n    2. Create commit to set `IS_RELEASE` to `true` and `VERSION_RC` to `0`\r\n    3. Tag the release\r\n    4. Create a new GitHub release with a link to the archived release notes\r\n\r\nThis doesn't look as simple as I would have hoped, but it's not terrible. What do you think?\r\n\r\n\r\n",
    "user": {
      "login": "jonasnick",
      "id": 2582071,
      "node_id": "MDQ6VXNlcjI1ODIwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasnick",
      "html_url": "https://github.com/jonasnick",
      "followers_url": "https://api.github.com/users/jonasnick/followers",
      "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasnick/orgs",
      "repos_url": "https://api.github.com/users/jonasnick/repos",
      "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasnick/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 1,
    "closed_at": "2021-12-25T00:03:09Z",
    "created_at": "2020-12-04T22:46:30Z",
    "updated_at": "2021-12-25T00:03:09Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 770858716,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDg1ODcxNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/770858716",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-01T13:31:43Z",
      "updated_at": "2021-02-01T13:31:43Z",
      "author_association": "MEMBER",
      "body": "> This doesn't look as simple as I would have hoped, but it's not terrible. What do you think?\r\n\r\nI agree with this sentiment. \r\n\r\nI'm not entirely sure about having release candidates. But I think this will help us coordinate testing better. At the moment it's a little bit arbitrary though the quality is good enough that every state that lands on master is a release in a sense.\r\n\r\n\r\n### Relation to Core\r\nWe should then think about when the canonical point should be to update the tree in Core\r\n * Updating the Core tree after a release sounds natural and is certainly a good idea.\r\n * Updating the Core tree after a RC will get us some more testing (and maybe feedback on the API).\r\n\r\n\r\n### Versioning Scheme\r\nAn aspect that we should talk about is the versioning scheme. I don't have a lot of experience in this but libtool can do some rather complex stuff:\r\n * https://stackoverflow.com/a/20355237\r\n * https://autotools.io/libtool/version.html \r\n  \r\nI wonder how this is related to https://github.com/bitcoin-core/secp256k1/issues/817. It's for sure related to #844, which I'm only realizing now. ",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/856#issuecomment-770858716",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/856"
    },
    {
      "event": "closed",
      "id": 5814422179,
      "node_id": "CE_lADOAP4Jqs4tJd8zzwAAAAFakQqj",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/5814422179",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "423b6d19d373f1224fd671a982584d7e7900bc93",
      "commit_url": "https://api.github.com/repos/bitcoin-core/secp256k1/commits/423b6d19d373f1224fd671a982584d7e7900bc93",
      "created_at": "2021-12-25T00:03:09Z"
    }
  ]
}