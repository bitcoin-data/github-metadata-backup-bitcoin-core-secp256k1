{
  "type": "issue",
  "issue": {
    "id": 1054752020,
    "node_id": "I_kwDOAP4Jqs4-3j0U",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1016",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1016/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1016/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1016/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1016",
    "number": 1016,
    "state": "open",
    "state_reason": null,
    "title": "Add keypair serialization/deserialization",
    "body": "As discussed in [#1015](https://github.com/bitcoin-core/secp256k1/issues/1015#issuecomment-969404458)\r\n\r\nAdding a way to serialize/deserialize keypair would help with libraries that call from WASM etc.\r\n\r\nMaybe it's just as simple as committing to the format of the 96 bytes it takes in memory.\r\n\r\n`seckey(32) || P.x (32) || P.y (32)`\r\n\r\nBy committing to this format we could remove the comment: `The exact representation of data inside is implementation defined and not guaranteed to be portable between different platforms or versions.`",
    "user": {
      "login": "junderw",
      "id": 11246316,
      "node_id": "MDQ6VXNlcjExMjQ2MzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/junderw",
      "html_url": "https://github.com/junderw",
      "followers_url": "https://api.github.com/users/junderw/followers",
      "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
      "organizations_url": "https://api.github.com/users/junderw/orgs",
      "repos_url": "https://api.github.com/users/junderw/repos",
      "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/junderw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 5,
    "created_at": "2021-11-16T11:12:30Z",
    "updated_at": "2022-01-02T18:32:07Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 1003063666,
      "node_id": "IC_kwDOAP4Jqs47yYly",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1003063666",
      "actor": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-30T14:55:11Z",
      "updated_at": "2021-12-30T17:43:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "I can think of three possible formats for encoding `secp256k1_keypair`:\r\n\r\n-  `seckey || P.x || P.y` - 96 bytes (as mentioned above)\r\n- `seckey || P.x`           - 64 bytes (assume `P.y` is even)\r\n- `seckey || compressed pubkey` - 65 bytes\r\n\r\n[BIP-340](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki) does not enforce any particular format for encoding the keypair. So, I checked to see if libsecp has a keypair object for ecdsa key to follow a similar serialization format, but it does not have one.\r\n\r\nThe following libraries implementing schnorr keypair follow the 64 bytes serialization format. \r\n1. [rust-secp256k1](https://github.com/rust-bitcoin/rust-secp256k1)\r\n     - I am not familiar with rust but the following code seems like it encodes keypair to 64 bytes.\r\nhttps://github.com/rust-bitcoin/rust-secp256k1/blob/50034ccb18fdd84904ab3aa6c84a12fcced33209/src/key.rs#L690-L694\r\n    - Related issue - https://github.com/LNP-BP/client_side_validation/issues/17\r\n\r\n2. schnorrkel (outside bitcoin community)\r\n    - Keypair object [documentation](https://paritytech.github.io/substrate/master/schnorrkel/keys/struct.Keypair.html)\r\n    - `to_bytes` function only uses 32 bytes from the pubkey in keypair serialization\r\n\r\nWhich one is preferred?",
      "user": {
        "login": "siv2r",
        "id": 56887198,
        "node_id": "MDQ6VXNlcjU2ODg3MTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/56887198?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/siv2r",
        "html_url": "https://github.com/siv2r",
        "followers_url": "https://api.github.com/users/siv2r/followers",
        "following_url": "https://api.github.com/users/siv2r/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/siv2r/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/siv2r/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/siv2r/subscriptions",
        "organizations_url": "https://api.github.com/users/siv2r/orgs",
        "repos_url": "https://api.github.com/users/siv2r/repos",
        "events_url": "https://api.github.com/users/siv2r/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/siv2r/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1016#issuecomment-1003063666",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1016"
    },
    {
      "event": "commented",
      "id": 1003181506,
      "node_id": "IC_kwDOAP4Jqs47y1XC",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1003181506",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-30T21:06:28Z",
      "updated_at": "2021-12-30T21:06:28Z",
      "author_association": "NONE",
      "body": "Rust code is encoding the private key into 64 hex characters (32 bytes)\r\n\r\nI still think keypair should be 96 bytes of private, x, y.",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1016#issuecomment-1003181506",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1016"
    },
    {
      "event": "commented",
      "id": 1003687022,
      "node_id": "IC_kwDOAP4Jqs470wxu",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1003687022",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-02T09:26:11Z",
      "updated_at": "2022-01-02T09:26:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "Is there a specific reason why you'd want to serialize the keypair and not just the secret key and reconstruct the keypair from that? (trying to understand the use cases)",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1016#issuecomment-1003687022",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1016"
    },
    {
      "event": "commented",
      "id": 1003752934,
      "node_id": "IC_kwDOAP4Jqs471A3m",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1003752934",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-02T17:59:28Z",
      "updated_at": "2022-01-02T17:59:28Z",
      "author_association": "NONE",
      "body": "Using WASM, requiring a re-calculation of the pubkey every time you cross the JS/WASM boundary is inefficient, it would be better to have and explicit serialization format to allow for passing the info directly across boundaries.\r\n\r\nThere are hacks to get around it. (basically just passing the raw data in the underlying format) but since this is not guaranteed, my suggestion is to offer a serialization from and to keypair and the 96 byte representation.",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1016#issuecomment-1003752934",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1016"
    },
    {
      "event": "commented",
      "id": 1003754769,
      "node_id": "IC_kwDOAP4Jqs471BUR",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/1003754769",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-02T18:14:08Z",
      "updated_at": "2022-01-02T18:32:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "Well you can just copy the bytes of a `secp256k1_keypair`; they're not guaranteed to be portable across releases/platforms, but within a session of code using the library, you can copy the bytes just fine (see comment in the source code \"can be safely copied/movied\"). I know I suggested this feature, but perhaps it isn't needed?\r\n\r\nI'm slightly worried about providing an actual stable serialization for this data though; it's not supposed to be stored longer term (it's essentially a private key with a precomputed public key; keeping it anywhere but in RAM is almost certainly slower than just recomputing it, and recomputing avoids the risk of having inconsistent private/public key data which all users of this code assume).\r\n\r\nThis isn't a NACK, I just want to make sure the expectations/requirements are clear here.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/1016#issuecomment-1003754769",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1016"
    }
  ]
}