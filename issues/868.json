{
  "type": "issue",
  "issue": {
    "id": 787781370,
    "node_id": "MDU6SXNzdWU3ODc3ODEzNzA=",
    "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/868",
    "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
    "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/868/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/868/comments",
    "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/868/events",
    "html_url": "https://github.com/bitcoin-core/secp256k1/issues/868",
    "number": 868,
    "state": "closed",
    "state_reason": "completed",
    "title": "Build error with -fsanitize=address,undefined -O0",
    "body": "Set env:\r\n```\r\nexport CC=clang-11\r\nexport CFLAGS=\"-fsanitize=address,undefined -O0\"\r\n```\r\n\r\n(This is a valid combination of compile flags that works with any other project)\r\n\r\nThen `./configure` and build:\r\n\r\n```\r\n  CC       src/libsecp256k1_la-secp256k1.lo\r\nIn file included from src/secp256k1.c:13:\r\nIn file included from ./src/field_impl.h:18:\r\nIn file included from ./src/field_5x52_impl.h:18:\r\n./src/field_5x52_asm_impl.h:29:5: error: inline assembly requires more registers than available\r\n    \"movq 0(%%rsi),%%r10\\n\"\r\n    ^\r\n./src/field_5x52_asm_impl.h:29:5: error: inline assembly requires more registers than available\r\n./src/field_5x52_asm_impl.h:29:5: error: inline assembly requires more registers than available\r\n./src/field_5x52_asm_impl.h:299:5: error: inline assembly requires more registers than available\r\n    \"movq 0(%%rsi),%%r10\\n\"\r\n    ^\r\n./src/field_5x52_asm_impl.h:299:5: error: inline assembly requires more registers than available\r\n./src/field_5x52_asm_impl.h:299:5: error: inline assembly requires more registers than available\r\nIn file included from src/secp256k1.c:14:\r\nIn file included from ./src/scalar_impl.h:24:\r\n./src/scalar_4x64_impl.h:279:5: error: inline assembly requires more registers than available\r\n    \"movq 32(%%rsi), %%r11\\n\"\r\n    ^\r\n./src/scalar_4x64_impl.h:279:5: error: inline assembly requires more registers than available\r\n./src/scalar_4x64_impl.h:279:5: error: inline assembly requires more registers than available\r\n9 errors generated.\r\nMakefile:1054: recipe for target 'src/libsecp256k1_la-secp256k1.lo' failed\r\n```\r\n\r\nTested with Clang 11 and latest repository checkout on Linux 64 bit.",
    "user": {
      "login": "guidovranken",
      "id": 6846644,
      "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guidovranken",
      "html_url": "https://github.com/guidovranken",
      "followers_url": "https://api.github.com/users/guidovranken/followers",
      "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
      "organizations_url": "https://api.github.com/users/guidovranken/orgs",
      "repos_url": "https://api.github.com/users/guidovranken/repos",
      "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/guidovranken/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 5,
    "closed_at": "2021-01-17T20:45:52Z",
    "created_at": "2021-01-17T19:53:14Z",
    "updated_at": "2021-01-18T10:39:38Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 761875936,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTg3NTkzNg==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/761875936",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-17T20:36:58Z",
      "updated_at": "2021-01-17T20:36:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Looks like a clang bug to me. If it needs more registers for its own usage, its free to save something onto the stack to get enough for the assembly.   Looks like there a number of unresolved reports of similar in their bug tracker:  https://bugs.llvm.org/buglist.cgi?quicksearch=%22inline%20assembly%20requires%20more%20registers%20than%20available%22%20\r\n\r\nYou can disable assembly in this library or presumably use different compiler flags to avoid the issue.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/868#issuecomment-761875936",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/868"
    },
    {
      "event": "commented",
      "id": 761877068,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTg3NzA2OA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/761877068",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-17T20:45:52Z",
      "updated_at": "2021-01-17T20:45:52Z",
      "author_association": "NONE",
      "body": "Got it, thanks.",
      "user": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/868#issuecomment-761877068",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/868"
    },
    {
      "event": "closed",
      "id": 4215521370,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDIxNTUyMTM3MA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/events/4215521370",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-17T20:45:52Z"
    },
    {
      "event": "commented",
      "id": 761877200,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTg3NzIwMA==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/761877200",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-17T20:46:53Z",
      "updated_at": "2021-01-17T20:46:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "I remember when writing this code originally it was hard to not run out of registers, and initially it needed `-fomit-frame-pointer`. That's no longer needed, but we're probably still very close to the limit. If enabling these sanitizers reserves more registers from something else, it's not unreasonable that it causes failure.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/868#issuecomment-761877200",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/868"
    },
    {
      "event": "commented",
      "id": 762139149,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjEzOTE0OQ==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/762139149",
      "actor": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-18T10:08:37Z",
      "updated_at": "2021-01-18T10:09:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fwiw, you see essentially the same error with `./configure CFLAGS=\"-fsanitize=address -O0\"  CC=gcc`  But in the case of gcc, `-fomit-frame-pointer` is enough (which is in `-O1`). For clang, you apparently need some other flags in `-O1`. Just passing `-O1` already works. \r\n\r\nCan I ask why you compile with `-O0`? Is there some evidence that this provides \"better\" results for the sanitizers?\r\n\r\nsee https://github.com/bitcoin-core/secp256k1/pull/846#issue-517906691 where I ran into the same issue.",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/868#issuecomment-762139149",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/868"
    },
    {
      "event": "commented",
      "id": 762158187,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjE1ODE4Nw==",
      "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/comments/762158187",
      "actor": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-18T10:39:38Z",
      "updated_at": "2021-01-18T10:39:38Z",
      "author_association": "NONE",
      "body": "```-O0``` can certainly bring to light bugs which do not manifest in high(er) optimization levels. A simple example is the statement\r\n\r\n```c\r\n(void)strlen(s);\r\n```\r\n\r\nThere's a good chance that will be optimized away with `-O3` because it's essentially a no-op (the result of `strlen` isn't used, nor does `strlen` alter `s`, so removing it results in an equivalent program). But there's an OOB read there if `s` is an invalid pointer (or a string that is not NULL-terminated). Hence you can find this bug with `-O0` but not `-O3`.\r\n\r\nSimilarly other code may be elided too when using optimization (according to any logic the compiler deems appropriate) so I occasionally run things with `-O0` to get the most \"verbatim\" binary representation of the source code to potentially find new bugs.\r\n\r\nAggressive optimizations like `-O3` can sometimes be useful to find undefined behavior (that's not detected by UBSAN, which only detects a small subset of all undefined behavior in C). If you start running into logic bugs or crashes that are not logical in relation to what the source code prescribes with `-O3` that's often a manifestation of UB.\r\n\r\nOSS-Fuzz strikes a balance by compiling everything with `-O1` by default.",
      "user": {
        "login": "guidovranken",
        "id": 6846644,
        "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guidovranken",
        "html_url": "https://github.com/guidovranken",
        "followers_url": "https://api.github.com/users/guidovranken/followers",
        "following_url": "https://api.github.com/users/guidovranken/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guidovranken/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guidovranken/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
        "organizations_url": "https://api.github.com/users/guidovranken/orgs",
        "repos_url": "https://api.github.com/users/guidovranken/repos",
        "events_url": "https://api.github.com/users/guidovranken/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guidovranken/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/secp256k1/issues/868#issuecomment-762158187",
      "issue_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/868"
    }
  ]
}